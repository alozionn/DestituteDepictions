{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_executor","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=0906b5ca83e20f7f","-C","extra-filename=-0906b5ca83e20f7f","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","futures_core=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_core-2bec407269c58a9e.rmeta","--extern","futures_task=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_task-14596d5abd847d00.rmeta","--extern","futures_util=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_util-46b575b0a79e9aa4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_executor-0906b5ca83e20f7f.rmeta"},"prelude":{"crate_id":{"name":"futures_executor","disambiguator":[10203102698498971312,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":16,"id":{"name":"futures_core","disambiguator":[12139790483723220025,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":17,"id":{"name":"futures_task","disambiguator":[3520593003414009035,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":18,"id":{"name":"futures_util","disambiguator":[15639227815544028592,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":19,"id":{"name":"pin_utils","disambiguator":[17990888688279094458,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":20,"id":{"name":"futures_sink","disambiguator":[6512510575534107740,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[7239681539816183622,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","num":22,"id":{"name":"slab","disambiguator":[6041151831591778677,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":0,"byte_end":2827,"line_start":1,"line_end":76,"column_start":1,"column_end":50}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2274,"byte_end":2282,"line_start":59,"line_end":59,"column_start":29,"column_end":37},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2284,"byte_end":2299,"line_start":59,"line_end":59,"column_start":39,"column_end":54},"alias_span":null,"name":"block_on_stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2301,"byte_end":2315,"line_start":59,"line_end":59,"column_start":56,"column_end":70},"alias_span":null,"name":"BlockingStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2317,"byte_end":2326,"line_start":59,"line_end":59,"column_start":72,"column_end":81},"alias_span":null,"name":"LocalPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2328,"byte_end":2340,"line_start":59,"line_end":59,"column_start":83,"column_end":95},"alias_span":null,"name":"LocalSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2801,"byte_end":2806,"line_start":76,"line_end":76,"column_start":24,"column_end":29},"alias_span":null,"name":"enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2808,"byte_end":2813,"line_start":76,"line_end":76,"column_start":31,"column_end":36},"alias_span":null,"name":"Enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":2815,"byte_end":2825,"line_start":76,"line_end":76,"column_start":38,"column_end":48},"alias_span":null,"name":"EnterError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":0,"byte_end":2827,"line_start":1,"line_end":76,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" Built-in executors and related tools.","sig":null,"attributes":[{"value":"/ Built-in executors and related tools.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":0,"byte_end":41,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":42,"byte_end":45,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ All asynchronous computation occurs within an executor, which is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":46,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ capable of spawning futures as tasks. This module provides several","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":115,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ built-in executors, as well as tools for building your own.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":186,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":250,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` feature of this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":254,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":318,"byte_end":375,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":376,"byte_end":379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Using a thread pool (M:N task scheduling)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":380,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":428,"byte_end":431,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Most of the time tasks should be executed on a [thread pool](ThreadPool).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":432,"byte_end":509,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ A small set of worker threads can handle a very large set of spawned tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":510,"byte_end":588,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ (which are much lighter weight than threads). Tasks spawned onto the pool","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":589,"byte_end":666,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ with the [`spawn_ok`](ThreadPool::spawn_ok) function will run ambiently on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":667,"byte_end":745,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the created threads.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":746,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":771,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Spawning additional tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":775,"byte_end":806,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":807,"byte_end":810,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can be spawned onto a spawner by calling its [`spawn_obj`] method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":811,"byte_end":886,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ directly. In the case of `!Send` futures, [`spawn_local_obj`] can be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":887,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":965,"byte_end":977,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":978,"byte_end":981,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Single-threaded execution","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":982,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1014,"byte_end":1017,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In addition to thread pools, it's possible to run a task (and the tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1018,"byte_end":1093,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ it spawns) entirely within a single thread via the [`LocalPool`] executor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1094,"byte_end":1172,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ Aside from cutting down on synchronization costs, this executor also makes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1173,"byte_end":1251,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ it possible to spawn non-`Send` tasks, via [`spawn_local_obj`]. The","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1252,"byte_end":1323,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ [`LocalPool`] is best suited for running I/O-bound tasks that do relatively","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1324,"byte_end":1403,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ little work between I/O operations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1404,"byte_end":1443,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1444,"byte_end":1447,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ There is also a convenience function [`block_on`] for simply running a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1448,"byte_end":1522,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ future to completion on the current thread.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1523,"byte_end":1570,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1571,"byte_end":1574,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`spawn_obj`]: https://docs.rs/futures/0.3/futures/task/trait.Spawn.html#tymethod.spawn_obj","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1575,"byte_end":1670,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ [`spawn_local_obj`]: https://docs.rs/futures/0.3/futures/task/trait.LocalSpawn.html#tymethod.spawn_local_obj","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1671,"byte_end":1783,"line_start":37,"line_end":37,"column_start":1,"column_end":113}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\lib.rs","byte_start":1828,"byte_end":1960,"line_start":40,"line_end":46,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3982,"byte_end":3991,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"LocalPool","qualname":"::local_pool::LocalPool","value":"LocalPool {  }","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"decl_id":null,"docs":" A single-threaded task pool for polling futures to completion.","sig":null,"attributes":[{"value":"/ A single-threaded task pool for polling futures to completion.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3363,"byte_end":3429,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3430,"byte_end":3433,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This executor allows you to multiplex any number of tasks onto a single","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3434,"byte_end":3509,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ thread. It's appropriate to poll strictly I/O-bound futures that do very","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3510,"byte_end":3586,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ little work in between I/O actions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3587,"byte_end":3626,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3627,"byte_end":3630,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ To get a handle to the pool that implements","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3631,"byte_end":3678,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ [`Spawn`](futures_task::Spawn), use the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3679,"byte_end":3722,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"/ [`spawner()`](LocalPool::spawner) method. Because the executor is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3723,"byte_end":3792,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ single-threaded, it supports a special form of task spawning for non-`Send`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3793,"byte_end":3872,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ futures, via [`spawn_local_obj`](futures_task::LocalSpawn::spawn_local_obj).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":3873,"byte_end":3953,"line_start":29,"line_end":29,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":4212,"byte_end":4224,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"LocalSpawner","qualname":"::local_pool::LocalSpawner","value":"LocalSpawner {  }","parent":null,"children":[{"krate":0,"index":196}],"decl_id":null,"docs":" A handle to a [`LocalPool`](LocalPool) that implements\n [`Spawn`](futures_task::Spawn).\n","sig":null,"attributes":[{"value":"/ A handle to a [`LocalPool`](LocalPool) that implements","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":4082,"byte_end":4140,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ [`Spawn`](futures_task::Spawn).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":4141,"byte_end":4176,"line_start":37,"line_end":37,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6773,"byte_end":6776,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalPool>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty pool of tasks.\n","sig":null,"attributes":[{"value":"/ Create a new, empty pool of tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6723,"byte_end":6761,"line_start":111,"line_end":111,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6942,"byte_end":6949,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"spawner","qualname":"<LocalPool>::spawner","value":"fn spawner(&Self) -> LocalSpawner","parent":null,"children":[],"decl_id":null,"docs":" Get a clonable handle to the pool as a [`Spawn`].\n","sig":null,"attributes":[{"value":"/ Get a clonable handle to the pool as a [`Spawn`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6877,"byte_end":6930,"line_start":116,"line_end":116,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7604,"byte_end":7607,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"run","qualname":"<LocalPool>::run","value":"fn run(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Run all tasks in the pool to completion.","sig":null,"attributes":[{"value":"/ Run all tasks in the pool to completion.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7051,"byte_end":7095,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7100,"byte_end":7103,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7108,"byte_end":7115,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7120,"byte_end":7157,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7162,"byte_end":7165,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7170,"byte_end":7206,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7211,"byte_end":7214,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ // ... spawn some initial tasks using `spawn.spawn()` or `spawn.spawn_local()`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7219,"byte_end":7301,"line_start":128,"line_end":128,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7306,"byte_end":7309,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ // run *all* tasks in the pool to completion, including any newly-spawned ones.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7314,"byte_end":7397,"line_start":130,"line_end":130,"column_start":5,"column_end":88}},{"value":"/ pool.run();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7402,"byte_end":7417,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7422,"byte_end":7429,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7434,"byte_end":7437,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The function will block the calling thread until *all* tasks in the pool","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7442,"byte_end":7518,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ are complete, including any spawned while running existing tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7523,"byte_end":7592,"line_start":135,"line_end":135,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8403,"byte_end":8412,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"run_until","qualname":"<LocalPool>::run_until","value":"fn run_until<F>(&mut Self, F) -> F::Output where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs all the tasks in the pool until the given future completes.","sig":null,"attributes":[{"value":"/ Runs all the tasks in the pool until the given future completes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7678,"byte_end":7746,"line_start":140,"line_end":140,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7751,"byte_end":7754,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7759,"byte_end":7766,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7771,"byte_end":7808,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7813,"byte_end":7816,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7821,"byte_end":7857,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/ # let my_app  = async {};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7862,"byte_end":7891,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7896,"byte_end":7899,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ // run tasks in the pool until `my_app` completes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7904,"byte_end":7957,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/ pool.run_until(my_app);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7962,"byte_end":7989,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":7994,"byte_end":8001,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8006,"byte_end":8009,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The function will block the calling thread *only* until the future `f`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8014,"byte_end":8088,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ completes; there may still be incomplete tasks in the pool, which will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8093,"byte_end":8167,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ be inert after the call completes, but can continue with further use of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8172,"byte_end":8247,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ one of the pool's run or poll methods. While the function is running,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8252,"byte_end":8325,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ however, all tasks in the pool will try to make progress.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8330,"byte_end":8391,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":10216,"byte_end":10227,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"try_run_one","qualname":"<LocalPool>::try_run_one","value":"fn try_run_one(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Runs all tasks and returns after completing one future or until no more progress\n can be made. Returns `true` if one future was completed, `false` otherwise.","sig":null,"attributes":[{"value":"/ Runs all tasks and returns after completing one future or until no more progress","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8863,"byte_end":8947,"line_start":174,"line_end":174,"column_start":5,"column_end":89}},{"value":"/ can be made. Returns `true` if one future was completed, `false` otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":8952,"byte_end":9031,"line_start":175,"line_end":175,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9036,"byte_end":9039,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9044,"byte_end":9051,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9056,"byte_end":9093,"line_start":178,"line_end":178,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9098,"byte_end":9135,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ use futures::future::{ready, pending};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9140,"byte_end":9182,"line_start":180,"line_end":180,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9187,"byte_end":9190,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9195,"byte_end":9231,"line_start":182,"line_end":182,"column_start":5,"column_end":41}},{"value":"/ let spawner = pool.spawner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9236,"byte_end":9269,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9274,"byte_end":9277,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9282,"byte_end":9326,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9331,"byte_end":9375,"line_start":186,"line_end":186,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(pending()).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9380,"byte_end":9424,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9429,"byte_end":9432,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ // Run the two ready tasks and return true for them.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9437,"byte_end":9493,"line_start":189,"line_end":189,"column_start":5,"column_end":61}},{"value":"/ pool.try_run_one(); // returns true after completing one of the ready futures","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9498,"byte_end":9579,"line_start":190,"line_end":190,"column_start":5,"column_end":86}},{"value":"/ pool.try_run_one(); // returns true after completing the other ready future","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9584,"byte_end":9663,"line_start":191,"line_end":191,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9668,"byte_end":9671,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // the remaining task can not be completed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9676,"byte_end":9722,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/ assert!(!pool.try_run_one()); // returns false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9727,"byte_end":9777,"line_start":194,"line_end":194,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9782,"byte_end":9789,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9794,"byte_end":9797,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will return the moment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9802,"byte_end":9880,"line_start":197,"line_end":197,"column_start":5,"column_end":83}},{"value":"/ that there are no tasks left for which progress can be made or after exactly one","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9885,"byte_end":9969,"line_start":198,"line_end":198,"column_start":5,"column_end":89}},{"value":"/ task was completed; Remaining incomplete tasks in the pool can continue with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":9974,"byte_end":10054,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ further use of one of the pool's run or poll methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":10059,"byte_end":10116,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/ Though only one task will be completed, progress may be made on multiple tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":10121,"byte_end":10204,"line_start":201,"line_end":201,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":12121,"byte_end":12138,"line_start":253,"line_end":253,"column_start":12,"column_end":29},"name":"run_until_stalled","qualname":"<LocalPool>::run_until_stalled","value":"fn run_until_stalled(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Runs all tasks in the pool and returns if no more progress can be made\n on any task.","sig":null,"attributes":[{"value":"/ Runs all tasks in the pool and returns if no more progress can be made","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11097,"byte_end":11171,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ on any task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11176,"byte_end":11192,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11197,"byte_end":11200,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11205,"byte_end":11212,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11217,"byte_end":11254,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11259,"byte_end":11296,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/ use futures::future::{ready, pending};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11301,"byte_end":11343,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11348,"byte_end":11351,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut pool = LocalPool::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11356,"byte_end":11392,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/ let spawner = pool.spawner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11397,"byte_end":11430,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11435,"byte_end":11438,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11443,"byte_end":11487,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(ready(())).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11492,"byte_end":11536,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/ spawner.spawn_local(pending()).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11541,"byte_end":11585,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11590,"byte_end":11593,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ // Runs the two ready task and returns.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11598,"byte_end":11641,"line_start":243,"line_end":243,"column_start":5,"column_end":48}},{"value":"/ // The empty task remains in the pool.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11646,"byte_end":11688,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/ pool.run_until_stalled();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11693,"byte_end":11722,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11727,"byte_end":11734,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11739,"byte_end":11742,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will return the moment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11747,"byte_end":11825,"line_start":248,"line_end":248,"column_start":5,"column_end":83}},{"value":"/ that there are no tasks left for which progress can be made;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11830,"byte_end":11894,"line_start":249,"line_end":249,"column_start":5,"column_end":69}},{"value":"/ remaining incomplete tasks in the pool can continue with further use of one","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11899,"byte_end":11978,"line_start":250,"line_end":250,"column_start":5,"column_end":84}},{"value":"/ of the pool's run or poll methods. While the function is running, all tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":11983,"byte_end":12062,"line_start":251,"line_end":251,"column_start":5,"column_end":84}},{"value":"/ in the pool will try to make progress.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":12067,"byte_end":12109,"line_start":252,"line_end":252,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13729,"byte_end":13736,"line_start":304,"line_end":304,"column_start":8,"column_end":15},"name":"default","qualname":"<LocalPool as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14018,"byte_end":14026,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"block_on","qualname":"::local_pool::block_on","value":"fn block_on<F>(F) -> F::Output where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the current thread.","sig":null,"attributes":[{"value":"/ Run a future to completion on the current thread.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13778,"byte_end":13831,"line_start":309,"line_end":309,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13832,"byte_end":13835,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ This function will block the caller until the given future has completed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13836,"byte_end":13913,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13914,"byte_end":13917,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Use a [`LocalPool`](LocalPool) if you need finer-grained control over","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13918,"byte_end":13991,"line_start":313,"line_end":313,"column_start":1,"column_end":74}},{"value":"/ spawned tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13992,"byte_end":14010,"line_start":314,"line_end":314,"column_start":1,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14327,"byte_end":14342,"line_start":324,"line_end":324,"column_start":8,"column_end":23},"name":"block_on_stream","qualname":"::local_pool::block_on_stream","value":"fn block_on_stream<S>(S) -> BlockingStream<S> where S: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Turn a stream into a blocking iterator.","sig":null,"attributes":[{"value":"/ Turn a stream into a blocking iterator.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14122,"byte_end":14165,"line_start":320,"line_end":320,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14166,"byte_end":14169,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ When `next` is called on the resulting `BlockingStream`, the caller","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14170,"byte_end":14241,"line_start":322,"line_end":322,"column_start":1,"column_end":72}},{"value":"/ will be blocked until the next element of the `Stream` becomes available.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14242,"byte_end":14319,"line_start":323,"line_end":323,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14539,"byte_end":14553,"line_start":330,"line_end":330,"column_start":12,"column_end":26},"name":"BlockingStream","qualname":"::local_pool::BlockingStream","value":"BlockingStream {  }","parent":null,"children":[{"krate":0,"index":208}],"decl_id":null,"docs":" An iterator which blocks on values from a stream until they become available.\n","sig":null,"attributes":[{"value":"/ An iterator which blocks on values from a stream until they become available.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14429,"byte_end":14510,"line_start":328,"line_end":328,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14675,"byte_end":14680,"line_start":336,"line_end":336,"column_start":8,"column_end":13},"name":"deref","qualname":"<BlockingStream<S> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14801,"byte_end":14810,"line_start":342,"line_end":342,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<BlockingStream<S> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut Self::Target","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15002,"byte_end":15012,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BlockingStream<S>>::into_inner","value":"fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Convert this `BlockingStream` into the inner `Stream` type.\n","sig":null,"attributes":[{"value":"/ Convert this `BlockingStream` into the inner `Stream` type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14927,"byte_end":14990,"line_start":348,"line_end":348,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15145,"byte_end":15149,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"next","qualname":"<BlockingStream<S> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15254,"byte_end":15263,"line_start":361,"line_end":361,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BlockingStream<S> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15377,"byte_end":15386,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<LocalSpawner as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":17,"index":15},"children":[],"decl_id":{"krate":17,"index":16},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15667,"byte_end":15673,"line_start":376,"line_end":376,"column_start":8,"column_end":14},"name":"status","qualname":"<LocalSpawner as futures_task::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":17,"index":15},"children":[],"decl_id":{"krate":17,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15893,"byte_end":15908,"line_start":386,"line_end":386,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<LocalSpawner as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":17,"index":18},"children":[],"decl_id":{"krate":17,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":16187,"byte_end":16199,"line_start":395,"line_end":395,"column_start":8,"column_end":20},"name":"status_local","qualname":"<LocalSpawner as futures_task::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":17,"index":18},"children":[],"decl_id":{"krate":17,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16587,"byte_end":16592,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Enter","qualname":"::enter::Enter","value":"Enter {  }","parent":null,"children":[{"krate":0,"index":165}],"decl_id":null,"docs":" Represents an executor context.","sig":null,"attributes":[{"value":"/ Represents an executor context.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16476,"byte_end":16511,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16512,"byte_end":16515,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ For more details, see [`enter` documentation](enter()).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16516,"byte_end":16575,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16709,"byte_end":16719,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"EnterError","qualname":"::enter::EnterError","value":"EnterError {  }","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" An error returned by `enter` if an execution scope has already been\n entered.\n","sig":null,"attributes":[{"value":"/ An error returned by `enter` if an execution scope has already been","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16613,"byte_end":16684,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16685,"byte_end":16697,"line_start":14,"line_end":14,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16780,"byte_end":16783,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnterError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16933,"byte_end":16936,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnterError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17758,"byte_end":17763,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"enter","qualname":"::enter::enter","value":"fn enter() -> Result<Enter, EnterError>","parent":null,"children":[],"decl_id":null,"docs":" Marks the current thread as being within the dynamic extent of an\n executor.","sig":null,"attributes":[{"value":"/ Marks the current thread as being within the dynamic extent of an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17105,"byte_end":17174,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ executor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17175,"byte_end":17188,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17189,"byte_end":17192,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Executor implementations should call this function before beginning to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17193,"byte_end":17267,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ execute a task, and drop the returned [`Enter`](Enter) value after","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17268,"byte_end":17338,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ completing task execution:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17339,"byte_end":17369,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17370,"byte_end":17373,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17374,"byte_end":17381,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use futures::executor::enter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17382,"byte_end":17415,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17416,"byte_end":17419,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let enter = enter().expect(\"...\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17420,"byte_end":17458,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ /* run task */","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17459,"byte_end":17477,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ drop(enter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17478,"byte_end":17494,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17495,"byte_end":17502,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17503,"byte_end":17506,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Doing so ensures that executors aren't","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17507,"byte_end":17549,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ accidentally invoked in a nested fashion.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17550,"byte_end":17595,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17596,"byte_end":17599,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Error","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17600,"byte_end":17611,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17612,"byte_end":17615,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the current thread is already marked, in which case the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17616,"byte_end":17695,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ caller should panic with a tailored error message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17696,"byte_end":17750,"line_start":54,"line_end":54,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18017,"byte_end":18020,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Enter as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18152,"byte_end":18156,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"drop","qualname":"<Enter as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":4992,"byte_end":5004,"line_start":63,"line_end":63,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6707,"byte_end":6716,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13710,"byte_end":13719,"line_start":303,"line_end":303,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14627,"byte_end":14641,"line_start":334,"line_end":334,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14774,"byte_end":14788,"line_start":341,"line_end":341,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14903,"byte_end":14917,"line_start":347,"line_end":347,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15092,"byte_end":15106,"line_start":354,"line_end":354,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15355,"byte_end":15367,"line_start":366,"line_end":366,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15871,"byte_end":15883,"line_start":385,"line_end":385,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16760,"byte_end":16770,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16913,"byte_end":16923,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17090,"byte_end":17100,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18002,"byte_end":18007,"line_start":67,"line_end":67,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18137,"byte_end":18142,"line_start":73,"line_end":73,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":4992,"byte_end":5004,"line_start":63,"line_end":63,"column_start":18,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":88},"to":{"krate":17,"index":94}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":6707,"byte_end":6716,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":13710,"byte_end":13719,"line_start":303,"line_end":303,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14627,"byte_end":14641,"line_start":334,"line_end":334,"column_start":35,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14774,"byte_end":14788,"line_start":341,"line_end":341,"column_start":38,"column_end":52},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":3382}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":14903,"byte_end":14917,"line_start":347,"line_end":347,"column_start":25,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15092,"byte_end":15106,"line_start":354,"line_end":354,"column_start":38,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15355,"byte_end":15367,"line_start":366,"line_end":366,"column_start":16,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":195},"to":{"krate":17,"index":15}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\local_pool.rs","byte_start":15871,"byte_end":15883,"line_start":385,"line_end":385,"column_start":21,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":195},"to":{"krate":17,"index":18}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16760,"byte_end":16770,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":16913,"byte_end":16923,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":17090,"byte_end":17100,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18002,"byte_end":18007,"line_start":67,"line_end":67,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-executor-0.3.24\\src\\enter.rs","byte_start":18137,"byte_end":18142,"line_start":73,"line_end":73,"column_start":15,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":3393}}]}