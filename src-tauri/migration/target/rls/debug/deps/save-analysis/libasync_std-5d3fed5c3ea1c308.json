{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_std","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-attributes\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"attributes\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"tokio1\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=5d3fed5c3ea1c308","-C","extra-filename=-5d3fed5c3ea1c308","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","async_attributes=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\async_attributes-976befd3df65a203.dll","--extern","async_channel=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_channel-b1c9d40ae1bad7f0.rmeta","--extern","async_global_executor=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_global_executor-6bf48215c0cda861.rmeta","--extern","async_io=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_io-143ae4af089f83c4.rmeta","--extern","async_lock=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_lock-13b729ba516e1d35.rmeta","--extern","crossbeam_utils=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libcrossbeam_utils-fbc0bf621df781b0.rmeta","--extern","futures_core=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_core-a4de0f13e4c5bd89.rmeta","--extern","futures_io=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_io-de3ec0267973c124.rmeta","--extern","futures_lite=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_lite-ec71dc6ba284b982.rmeta","--extern","kv_log_macro=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libkv_log_macro-e0d3b1bdfe68cdc7.rmeta","--extern","log=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\liblog-1dd3e90b8058f4be.rmeta","--extern","memchr=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libmemchr-d7e17dc70676336e.rmeta","--extern","once_cell=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libonce_cell-819ed08e05e0f985.rmeta","--extern","pin_project_lite=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libpin_project_lite-258f74972fbacea0.rmeta","--extern","pin_utils=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libpin_utils-982567380978bba8.rmeta","--extern","slab=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libslab-e60e2139a106c566.rmeta","--cap-lints","allow","-L","native=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\build\\wepoll-ffi-c969ef1a281d2b7e\\out","-L","native=C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_std-5d3fed5c3ea1c308.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[12062601327285948778,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","num":16,"id":{"name":"async_attributes","disambiguator":[13899555565251806376,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":17,"id":{"name":"kv_log_macro","disambiguator":[16751241038800816457,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":18,"id":{"name":"log","disambiguator":[2643609071996618890,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":19,"id":{"name":"cfg_if","disambiguator":[9011972299413683491,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":20,"id":{"name":"value_bag","disambiguator":[4509803819817264786,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":21,"id":{"name":"ctor","disambiguator":[5086943377281928300,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","num":22,"id":{"name":"futures_core","disambiguator":[2748732991061193384,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[1441963753095972349,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":24,"id":{"name":"async_lock","disambiguator":[2466887989793880132,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","num":25,"id":{"name":"event_listener","disambiguator":[217965115064713488,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":26,"id":{"name":"async_channel","disambiguator":[14681050470317218993,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":27,"id":{"name":"concurrent_queue","disambiguator":[4202749932227842576,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","num":28,"id":{"name":"cache_padded","disambiguator":[352611526439087220,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","num":29,"id":{"name":"futures_io","disambiguator":[4903404691194748518,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":30,"id":{"name":"async_io","disambiguator":[10815744989608091282,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":31,"id":{"name":"futures_lite","disambiguator":[4085200745368450539,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":32,"id":{"name":"parking","disambiguator":[5946867893921293462,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":33,"id":{"name":"waker_fn","disambiguator":[11825350276565424202,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":34,"id":{"name":"fastrand","disambiguator":[67840404346320079,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","num":35,"id":{"name":"memchr","disambiguator":[3764855290657491244,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":36,"id":{"name":"socket2","disambiguator":[4122808461488802705,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":37,"id":{"name":"winapi","disambiguator":[12804740736339557305,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\rt\\mod.rs","num":38,"id":{"name":"once_cell","disambiguator":[10678987216154076725,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":39,"id":{"name":"polling","disambiguator":[15980128312241325737,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":40,"id":{"name":"wepoll_ffi","disambiguator":[2648474857639074693,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","num":41,"id":{"name":"slab","disambiguator":[12612427118917540995,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":42,"id":{"name":"async_global_executor","disambiguator":[1217924795317504910,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":43,"id":{"name":"async_executor","disambiguator":[9353159882554065478,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":44,"id":{"name":"async_task","disambiguator":[11218766990636803132,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":45,"id":{"name":"tokio","disambiguator":[10018817158830087236,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":46,"id":{"name":"mio","disambiguator":[9750906281412983312,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":47,"id":{"name":"windows_sys","disambiguator":[8960793999370584754,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":48,"id":{"name":"bytes","disambiguator":[13356860447859685114,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":49,"id":{"name":"num_cpus","disambiguator":[2485012945563858127,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":50,"id":{"name":"blocking","disambiguator":[15167549588286751018,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","num":51,"id":{"name":"atomic_waker","disambiguator":[7536369888198528663,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":11549,"line_start":1,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":16},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10854,"byte_end":10858,"line_start":295,"line_end":295,"column_start":28,"column_end":32},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":17},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10860,"byte_end":10864,"line_start":295,"line_end":295,"column_start":34,"column_end":38},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13637},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608090,"byte_end":13608097,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":2,"index":49785},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608099,"byte_end":13608103,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":2,"index":13647},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608105,"byte_end":13608110,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":22,"index":169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608132,"byte_end":13608137,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":22,"index":169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\ready.rs","byte_start":13748087,"byte_end":13748092,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1918}},{"kind":"Use","ref_id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608192,"byte_end":13608201,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608262,"byte_end":13608270,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608293,"byte_end":13608300,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608324,"byte_end":13608331,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608333,"byte_end":13608344,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608365,"byte_end":13608369,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608392,"byte_end":13608398,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608392,"byte_end":13608398,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608425,"byte_end":13608435,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608456,"byte_end":13608461,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608521,"byte_end":13608526,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608553,"byte_end":13608564,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13608566,"byte_end":13608574,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13609033,"byte_end":13609047,"line_start":163,"line_end":163,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":2,"index":13335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611719,"byte_end":13611725,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":2,"index":13335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":13902078,"byte_end":13902084,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2339}},{"kind":"Use","ref_id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611789,"byte_end":13611796,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611819,"byte_end":13611826,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611847,"byte_end":13611852,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611980,"byte_end":13611987,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611989,"byte_end":13612001,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624648,"byte_end":13624653,"line_start":304,"line_end":304,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624655,"byte_end":13624660,"line_start":304,"line_end":304,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624681,"byte_end":13624688,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624690,"byte_end":13624696,"line_start":305,"line_end":305,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624719,"byte_end":13624728,"line_start":306,"line_end":306,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":6600},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624730,"byte_end":13624738,"line_start":306,"line_end":306,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624756,"byte_end":13624760,"line_start":307,"line_end":307,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624762,"byte_end":13624766,"line_start":307,"line_end":307,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624786,"byte_end":13624792,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624794,"byte_end":13624800,"line_start":308,"line_end":308,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624825,"byte_end":13624836,"line_start":309,"line_end":309,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624838,"byte_end":13624848,"line_start":309,"line_end":309,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":98}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624867,"byte_end":13624868,"line_start":310,"line_end":310,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":8192},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627318,"byte_end":13627323,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":8156},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627341,"byte_end":13627347,"line_start":99,"line_end":99,"column_start":17,"column_end":23},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":8067},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627365,"byte_end":13627371,"line_start":100,"line_end":100,"column_start":17,"column_end":23},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":7893},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627389,"byte_end":13627395,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":7694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627411,"byte_end":13627415,"line_start":102,"line_end":102,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":7563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627434,"byte_end":13627441,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":7387},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627456,"byte_end":13627459,"line_start":104,"line_end":104,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627475,"byte_end":13627479,"line_start":105,"line_end":105,"column_start":15,"column_end":19},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6873},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627495,"byte_end":13627499,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627521,"byte_end":13627530,"line_start":107,"line_end":107,"column_start":21,"column_end":30},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627549,"byte_end":13627555,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"alias_span":null,"name":"StepBy","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627571,"byte_end":13627575,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627597,"byte_end":13627606,"line_start":110,"line_end":110,"column_start":21,"column_end":30},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13627621,"byte_end":13627624,"line_start":111,"line_end":111,"column_start":14,"column_end":17},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":22,"index":96},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13628352,"byte_end":13628358,"line_start":146,"line_end":146,"column_start":31,"column_end":37},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":142}},{"kind":"Use","ref_id":{"krate":1,"index":3940},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949979,"byte_end":13949984,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":9976},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949986,"byte_end":13949995,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":10100},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949997,"byte_end":13950004,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":4527},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950006,"byte_end":13950016,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":3938},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950018,"byte_end":13950024,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":10112},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950026,"byte_end":13950034,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950061,"byte_end":13950068,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950070,"byte_end":13950075,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950077,"byte_end":13950082,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950109,"byte_end":13950118,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":6290},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950145,"byte_end":13950154,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950156,"byte_end":13950170,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950191,"byte_end":13950195,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950217,"byte_end":13950223,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950245,"byte_end":13950250,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950252,"byte_end":13950257,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2464}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950278,"byte_end":13950279,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"_, Read","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950302,"byte_end":13950308,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950310,"byte_end":13950316,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950337,"byte_end":13950341,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950362,"byte_end":13950366,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950368,"byte_end":13950372,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2464}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950394,"byte_end":13950395,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Write, _","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960259,"byte_end":13960266,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960305,"byte_end":13960309,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960348,"byte_end":13960352,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960391,"byte_end":13960396,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960443,"byte_end":13960453,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960495,"byte_end":13960502,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960544,"byte_end":13960551,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960594,"byte_end":13960602,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":2572}},{"kind":"Use","ref_id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13960674,"byte_end":13960679,"line_start":6,"line_end":6,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13960696,"byte_end":13960701,"line_start":7,"line_end":7,"column_start":16,"column_end":21},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13960873,"byte_end":13960885,"line_start":18,"line_end":18,"column_start":21,"column_end":33},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2597}},{"kind":"Use","ref_id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974538,"byte_end":13974543,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":2791}},{"kind":"Use","ref_id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974560,"byte_end":13974565,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2791}},{"kind":"Use","ref_id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974581,"byte_end":13974585,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2791}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974608,"byte_end":13974617,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2791}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14005838,"byte_end":14005847,"line_start":7,"line_end":7,"column_start":21,"column_end":30},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3144}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14007648,"byte_end":14007658,"line_start":15,"line_end":15,"column_start":21,"column_end":31},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3191}},{"kind":"Use","ref_id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950799,"byte_end":13950806,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950808,"byte_end":13950814,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950878,"byte_end":13950884,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950886,"byte_end":13950892,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950954,"byte_end":13950959,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950961,"byte_end":13950966,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13951029,"byte_end":13951035,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13951037,"byte_end":13951043,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":0,"index":3851},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13951067,"byte_end":13951074,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":2464}},{"kind":"Use","ref_id":{"krate":1,"index":5794},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079695,"byte_end":14079706,"line_start":5,"line_end":5,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawHandle","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5796},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079708,"byte_end":14079721,"line_start":5,"line_end":5,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawHandle","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5798},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079723,"byte_end":14079736,"line_start":5,"line_end":5,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawHandle","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079738,"byte_end":14079747,"line_start":5,"line_end":5,"column_start":52,"column_end":61},"alias_span":null,"name":"RawHandle","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5822},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079757,"byte_end":14079768,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawSocket","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079770,"byte_end":14079783,"line_start":6,"line_end":6,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawSocket","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5826},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079785,"byte_end":14079798,"line_start":6,"line_end":6,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawSocket","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":1,"index":5793},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079800,"byte_end":14079809,"line_start":6,"line_end":6,"column_start":52,"column_end":61},"alias_span":null,"name":"RawSocket","value":"","parent":{"krate":0,"index":4116}},{"kind":"Use","ref_id":{"krate":2,"index":13335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951717,"byte_end":13951723,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":22,"index":96},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951774,"byte_end":13951780,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951837,"byte_end":13951846,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951902,"byte_end":13951911,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":29,"index":49},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951958,"byte_end":13951965,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":29,"index":39},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952017,"byte_end":13952021,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":29,"index":47},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952073,"byte_end":13952077,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":29,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952129,"byte_end":13952134,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952196,"byte_end":13952206,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952267,"byte_end":13952274,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952335,"byte_end":13952342,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952403,"byte_end":13952411,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13952477,"byte_end":13952487,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":2467}},{"kind":"Use","ref_id":{"krate":5,"index":6312},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959329,"byte_end":13959332,"line_start":175,"line_end":175,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":5,"index":6332},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959334,"byte_end":13959338,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":60},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959378,"byte_end":13959383,"line_start":178,"line_end":178,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":108},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959385,"byte_end":13959395,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959397,"byte_end":13959410,"line_start":178,"line_end":178,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":210},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959450,"byte_end":13959456,"line_start":181,"line_end":181,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":253},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959458,"byte_end":13959473,"line_start":181,"line_end":181,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959475,"byte_end":13959500,"line_start":181,"line_end":181,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":2468}},{"kind":"Use","ref_id":{"krate":24,"index":311},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959502,"byte_end":13959518,"line_start":181,"line_end":181,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2468}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959957,"byte_end":13959958,"line_start":8,"line_end":8,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2499}},{"kind":"Use","ref_id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083542,"byte_end":14083552,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083573,"byte_end":14083581,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083597,"byte_end":14083601,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":1,"index":9854},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083622,"byte_end":14083630,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":1,"index":9823},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083650,"byte_end":14083658,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083682,"byte_end":14083693,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":1,"index":9840},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083716,"byte_end":14083727,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083747,"byte_end":14083754,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083779,"byte_end":14083791,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083807,"byte_end":14083811,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083833,"byte_end":14083843,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083869,"byte_end":14083883,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083904,"byte_end":14083913,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083933,"byte_end":14083941,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083957,"byte_end":14083961,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4744},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083981,"byte_end":14083989,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4774},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084010,"byte_end":14084019,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084045,"byte_end":14084059,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084081,"byte_end":14084091,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4831},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084117,"byte_end":14084131,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084154,"byte_end":14084165,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084183,"byte_end":14084189,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084216,"byte_end":14084231,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084259,"byte_end":14084275,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14084292,"byte_end":14084297,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":4181}},{"kind":"Use","ref_id":{"krate":1,"index":9854},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file_type.rs","byte_start":14127900,"byte_end":14127908,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4622}},{"kind":"Use","ref_id":{"krate":1,"index":9823},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14133140,"byte_end":14133148,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4643}},{"kind":"Use","ref_id":{"krate":1,"index":9840},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\permissions.rs","byte_start":14147873,"byte_end":14147884,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4689}},{"kind":"Use","ref_id":{"krate":1,"index":6300},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167573,"byte_end":14167585,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":10525},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167587,"byte_end":14167596,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":6593},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167598,"byte_end":14167605,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":10434},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167607,"byte_end":14167613,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":10508},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167615,"byte_end":14167630,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":10595},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167632,"byte_end":14167648,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":6301},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167650,"byte_end":14167664,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167689,"byte_end":14167698,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167720,"byte_end":14167730,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167746,"byte_end":14167750,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167766,"byte_end":14167770,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167789,"byte_end":14167796,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":4932}},{"kind":"Use","ref_id":{"krate":1,"index":10302},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216588,"byte_end":14216602,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10327},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216622,"byte_end":14216630,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10200},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216651,"byte_end":14216657,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10224},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216659,"byte_end":14216667,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10227},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216669,"byte_end":14216677,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10170},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216699,"byte_end":14216709,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10194},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216711,"byte_end":14216723,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":1,"index":10197},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216725,"byte_end":14216737,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216790,"byte_end":14216803,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216854,"byte_end":14216862,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216864,"byte_end":14216875,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216877,"byte_end":14216886,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":6169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216937,"byte_end":14216946,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":5318}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14224998,"byte_end":14225006,"line_start":1,"line_end":1,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5474}},{"kind":"Use","ref_id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14225008,"byte_end":14225019,"line_start":1,"line_end":1,"column_start":30,"column_end":41},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5474}},{"kind":"Use","ref_id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\mod.rs","byte_start":14225038,"byte_end":14225047,"line_start":2,"line_end":2,"column_start":17,"column_end":26},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5474}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":11549,"line_start":1,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":98},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2499},{"krate":0,"index":4181},{"krate":0,"index":4932},{"krate":0,"index":5318},{"krate":0,"index":5709}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/HEAD/examples)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2851,"byte_end":2938,"line_start":59,"line_end":59,"column_start":1,"column_end":88}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2939,"byte_end":2987,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2988,"byte_end":2991,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":2992,"byte_end":3039,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3040,"byte_end":3043,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3044,"byte_end":3102,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3103,"byte_end":3180,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3181,"byte_end":3256,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3257,"byte_end":3331,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3332,"byte_end":3409,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3410,"byte_end":3477,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3478,"byte_end":3481,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3482,"byte_end":3553,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3554,"byte_end":3629,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3630,"byte_end":3704,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3705,"byte_end":3780,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3781,"byte_end":3784,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3785,"byte_end":3828,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3829,"byte_end":3865,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3866,"byte_end":3906,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3907,"byte_end":3910,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3911,"byte_end":3977,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":3978,"byte_end":4017,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4018,"byte_end":4021,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4022,"byte_end":4069,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4070,"byte_end":4073,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4074,"byte_end":4162,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4163,"byte_end":4255,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4256,"byte_end":4335,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4336,"byte_end":4381,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4382,"byte_end":4385,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4386,"byte_end":4462,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4463,"byte_end":4514,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4515,"byte_end":4557,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4558,"byte_end":4561,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4562,"byte_end":4589,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4590,"byte_end":4593,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4594,"byte_end":4671,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4672,"byte_end":4700,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4701,"byte_end":4704,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4705,"byte_end":4741,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4742,"byte_end":4745,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4746,"byte_end":4813,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4814,"byte_end":4892,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4893,"byte_end":4914,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4915,"byte_end":4918,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4919,"byte_end":4995,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":4996,"byte_end":5036,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5037,"byte_end":5040,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5041,"byte_end":5115,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5116,"byte_end":5228,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5229,"byte_end":5232,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5233,"byte_end":5265,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5266,"byte_end":5302,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5303,"byte_end":5339,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5340,"byte_end":5365,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5366,"byte_end":5395,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5396,"byte_end":5431,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5432,"byte_end":5435,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5436,"byte_end":5474,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5475,"byte_end":5478,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5479,"byte_end":5539,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5540,"byte_end":5543,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5544,"byte_end":5614,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5615,"byte_end":5682,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5683,"byte_end":5759,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5760,"byte_end":5779,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5780,"byte_end":5783,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5784,"byte_end":5823,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5824,"byte_end":5873,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5874,"byte_end":5921,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5922,"byte_end":5925,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5926,"byte_end":5940,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5941,"byte_end":5944,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":5945,"byte_end":6024,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6025,"byte_end":6100,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6101,"byte_end":6174,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6175,"byte_end":6195,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6196,"byte_end":6199,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6200,"byte_end":6250,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6251,"byte_end":6254,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6366,"byte_end":6392,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6393,"byte_end":6427,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6428,"byte_end":6433,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6434,"byte_end":6437,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6438,"byte_end":6460,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6461,"byte_end":6482,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6483,"byte_end":6509,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6510,"byte_end":6515,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6516,"byte_end":6523,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6524,"byte_end":6527,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6528,"byte_end":6599,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6600,"byte_end":6603,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6715,"byte_end":6745,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6746,"byte_end":6749,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6750,"byte_end":6772,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6773,"byte_end":6794,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6795,"byte_end":6825,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6826,"byte_end":6856,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6857,"byte_end":6904,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6905,"byte_end":6910,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6911,"byte_end":6918,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6919,"byte_end":6922,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":6923,"byte_end":7000,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7001,"byte_end":7004,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7122,"byte_end":7156,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7157,"byte_end":7160,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7161,"byte_end":7183,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7184,"byte_end":7228,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7229,"byte_end":7291,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7292,"byte_end":7350,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7351,"byte_end":7354,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7355,"byte_end":7393,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7394,"byte_end":7397,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7398,"byte_end":7412,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7413,"byte_end":7478,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7479,"byte_end":7545,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7546,"byte_end":7618,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7619,"byte_end":7628,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7629,"byte_end":7634,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7635,"byte_end":7642,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7643,"byte_end":7688,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7689,"byte_end":7692,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7693,"byte_end":7707,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7708,"byte_end":7711,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7712,"byte_end":7733,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7734,"byte_end":7743,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7744,"byte_end":7786,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7787,"byte_end":7885,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7886,"byte_end":7919,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7920,"byte_end":7988,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7989,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8005,"byte_end":8033,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8034,"byte_end":8055,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8056,"byte_end":8083,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8084,"byte_end":8091,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8092,"byte_end":8095,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8096,"byte_end":8117,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8118,"byte_end":8127,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8128,"byte_end":8170,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8171,"byte_end":8269,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8270,"byte_end":8305,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8306,"byte_end":8376,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8377,"byte_end":8380,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8381,"byte_end":8392,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8393,"byte_end":8421,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8422,"byte_end":8443,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8444,"byte_end":8473,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8474,"byte_end":8481,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8482,"byte_end":8485,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8486,"byte_end":8564,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8565,"byte_end":8602,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8603,"byte_end":8606,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8607,"byte_end":8618,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8619,"byte_end":8647,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8648,"byte_end":8669,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8670,"byte_end":8695,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8696,"byte_end":8703,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8704,"byte_end":8707,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8708,"byte_end":8786,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8787,"byte_end":8805,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8806,"byte_end":8809,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8810,"byte_end":8821,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8822,"byte_end":8850,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8851,"byte_end":8872,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8873,"byte_end":8899,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8900,"byte_end":8907,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8908,"byte_end":8911,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8912,"byte_end":8990,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":8991,"byte_end":9029,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9030,"byte_end":9033,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9034,"byte_end":9045,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9046,"byte_end":9074,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9075,"byte_end":9096,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9097,"byte_end":9123,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9124,"byte_end":9131,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9132,"byte_end":9135,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9136,"byte_end":9213,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9214,"byte_end":9256,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9257,"byte_end":9260,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9261,"byte_end":9272,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9273,"byte_end":9301,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9302,"byte_end":9323,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9324,"byte_end":9352,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9353,"byte_end":9375,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9376,"byte_end":9383,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9384,"byte_end":9387,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9388,"byte_end":9463,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9464,"byte_end":9501,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9502,"byte_end":9505,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9506,"byte_end":9517,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9518,"byte_end":9546,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9547,"byte_end":9568,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9569,"byte_end":9597,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9598,"byte_end":9622,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9623,"byte_end":9630,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9631,"byte_end":9634,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9635,"byte_end":9662,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9663,"byte_end":9666,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9667,"byte_end":9736,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9737,"byte_end":9749,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9750,"byte_end":9753,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9754,"byte_end":9816,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9817,"byte_end":9886,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as determined by [async-global-executor](async_global_executor),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9887,"byte_end":9959,"line_start":270,"line_end":270,"column_start":1,"column_end":73}},{"value":"/ which may be different than the number of physical cpus. Async-std","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":9960,"byte_end":10030,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ _will panic_ if this is set to any value other than a positive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10031,"byte_end":10097,"line_start":272,"line_end":272,"column_start":1,"column_end":67}},{"value":"/ integer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10098,"byte_end":10110,"line_start":273,"line_end":273,"column_start":1,"column_end":13}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10111,"byte_end":10175,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10176,"byte_end":10240,"line_start":275,"line_end":275,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10241,"byte_end":10267,"line_start":276,"line_end":276,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10268,"byte_end":10271,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10365,"byte_end":10436,"line_start":281,"line_end":281,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10437,"byte_end":10494,"line_start":282,"line_end":282,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1999},{"krate":0,"index":2054},{"krate":0,"index":2065},{"krate":0,"index":2098},{"krate":0,"index":2111},{"krate":0,"index":2125},{"krate":0,"index":2136},{"krate":0,"index":2153},{"krate":0,"index":2169},{"krate":0,"index":2218},{"krate":0,"index":2257}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603352,"byte_end":13603409,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603410,"byte_end":13603413,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603414,"byte_end":13603506,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603507,"byte_end":13603519,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603520,"byte_end":13603523,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603524,"byte_end":13603581,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603582,"byte_end":13603585,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603586,"byte_end":13603607,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603608,"byte_end":13603611,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603612,"byte_end":13603711,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603712,"byte_end":13603809,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603810,"byte_end":13603878,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603879,"byte_end":13603882,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603883,"byte_end":13603980,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13603981,"byte_end":13604071,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604072,"byte_end":13604171,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604172,"byte_end":13604240,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604241,"byte_end":13604244,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604245,"byte_end":13604342,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604343,"byte_end":13604440,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604441,"byte_end":13604540,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604541,"byte_end":13604613,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604614,"byte_end":13604617,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604618,"byte_end":13604640,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604641,"byte_end":13604644,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604645,"byte_end":13604719,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604720,"byte_end":13604723,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604724,"byte_end":13604737,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604738,"byte_end":13604762,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604763,"byte_end":13604766,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604767,"byte_end":13604790,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604791,"byte_end":13604816,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604817,"byte_end":13604824,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604825,"byte_end":13604832,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604833,"byte_end":13604836,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604837,"byte_end":13604934,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13604935,"byte_end":13605022,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605023,"byte_end":13605026,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605027,"byte_end":13605126,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605127,"byte_end":13605194,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605195,"byte_end":13605198,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605199,"byte_end":13605206,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605207,"byte_end":13605231,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605232,"byte_end":13605235,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605236,"byte_end":13605275,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605276,"byte_end":13605281,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605282,"byte_end":13605317,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605318,"byte_end":13605343,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605344,"byte_end":13605351,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605352,"byte_end":13605373,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605374,"byte_end":13605400,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605401,"byte_end":13605406,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605407,"byte_end":13605415,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605416,"byte_end":13605423,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605424,"byte_end":13605427,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605428,"byte_end":13605504,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605505,"byte_end":13605508,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605509,"byte_end":13605533,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605534,"byte_end":13605537,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605538,"byte_end":13605617,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605618,"byte_end":13605684,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605685,"byte_end":13605688,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605689,"byte_end":13605696,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605697,"byte_end":13605729,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605730,"byte_end":13605754,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605755,"byte_end":13605758,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605759,"byte_end":13605798,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605799,"byte_end":13605804,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605805,"byte_end":13605870,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605871,"byte_end":13605905,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605906,"byte_end":13605913,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605914,"byte_end":13605919,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605920,"byte_end":13605928,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605929,"byte_end":13605936,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605937,"byte_end":13605940,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605941,"byte_end":13605963,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605964,"byte_end":13605967,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13605968,"byte_end":13606044,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606045,"byte_end":13606058,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606059,"byte_end":13606062,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606063,"byte_end":13606133,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606134,"byte_end":13606213,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606214,"byte_end":13606289,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606290,"byte_end":13606293,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606294,"byte_end":13606319,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606320,"byte_end":13606323,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606324,"byte_end":13606402,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606403,"byte_end":13606477,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606478,"byte_end":13606547,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606548,"byte_end":13606625,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606626,"byte_end":13606629,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606630,"byte_end":13606713,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606714,"byte_end":13606794,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606795,"byte_end":13606880,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606881,"byte_end":13606955,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13606956,"byte_end":13607041,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607042,"byte_end":13607106,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607107,"byte_end":13607110,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607111,"byte_end":13607130,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607131,"byte_end":13607134,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607135,"byte_end":13607227,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607228,"byte_end":13607321,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607322,"byte_end":13607411,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607412,"byte_end":13607441,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607442,"byte_end":13607445,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607446,"byte_end":13607482,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607483,"byte_end":13607511,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607512,"byte_end":13607554,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607555,"byte_end":13607615,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607616,"byte_end":13607664,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607665,"byte_end":13607727,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607728,"byte_end":13607764,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607765,"byte_end":13607819,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607820,"byte_end":13607858,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607859,"byte_end":13607889,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607890,"byte_end":13607938,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607939,"byte_end":13607984,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\mod.rs","byte_start":13607985,"byte_end":13608031,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748778,"byte_end":13748787,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748175,"byte_end":13748236,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748237,"byte_end":13748240,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748241,"byte_end":13748319,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748320,"byte_end":13748397,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748398,"byte_end":13748475,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748476,"byte_end":13748479,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748480,"byte_end":13748518,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748519,"byte_end":13748522,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748523,"byte_end":13748575,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748576,"byte_end":13748579,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748580,"byte_end":13748594,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748595,"byte_end":13748598,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748599,"byte_end":13748615,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748616,"byte_end":13748619,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748620,"byte_end":13748627,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748628,"byte_end":13748667,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748668,"byte_end":13748673,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748674,"byte_end":13748698,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748699,"byte_end":13748702,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748703,"byte_end":13748731,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748732,"byte_end":13748737,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748738,"byte_end":13748746,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748747,"byte_end":13748754,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748755,"byte_end":13748764,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13750089,"byte_end":13750097,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749405,"byte_end":13749467,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749468,"byte_end":13749471,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749472,"byte_end":13749571,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749572,"byte_end":13749610,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749611,"byte_end":13749614,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749615,"byte_end":13749654,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749655,"byte_end":13749658,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749659,"byte_end":13749711,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749712,"byte_end":13749715,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749716,"byte_end":13749782,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749783,"byte_end":13749869,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749870,"byte_end":13749873,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749874,"byte_end":13749888,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749889,"byte_end":13749892,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749893,"byte_end":13749906,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749907,"byte_end":13749931,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749932,"byte_end":13749935,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749936,"byte_end":13749951,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749952,"byte_end":13749982,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13749983,"byte_end":13750021,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13750022,"byte_end":13750032,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13750033,"byte_end":13750038,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13750039,"byte_end":13750046,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\block_on.rs","byte_start":13750047,"byte_end":13750081,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750713,"byte_end":13750720,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2261}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750615,"byte_end":13750675,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750834,"byte_end":13750837,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750782,"byte_end":13750808,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750813,"byte_end":13750822,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750957,"byte_end":13750961,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750895,"byte_end":13750931,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750936,"byte_end":13750945,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13751580,"byte_end":13751585,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where F: Future<Output =\nT> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13751482,"byte_end":13751529,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13751534,"byte_end":13751568,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13754577,"byte_end":13754585,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13754452,"byte_end":13754526,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13754531,"byte_end":13754565,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757030,"byte_end":13757037,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756500,"byte_end":13756541,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756542,"byte_end":13756545,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756546,"byte_end":13756558,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756559,"byte_end":13756562,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756563,"byte_end":13756659,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756660,"byte_end":13756697,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756698,"byte_end":13756701,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756702,"byte_end":13756736,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756737,"byte_end":13756765,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756766,"byte_end":13756822,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756823,"byte_end":13756826,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756827,"byte_end":13756841,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756842,"byte_end":13756845,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756846,"byte_end":13756853,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756854,"byte_end":13756893,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756894,"byte_end":13756899,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756900,"byte_end":13756924,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756925,"byte_end":13756928,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13756929,"byte_end":13756999,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757000,"byte_end":13757005,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757006,"byte_end":13757014,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757015,"byte_end":13757022,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757666,"byte_end":13757677,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757136,"byte_end":13757240,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757241,"byte_end":13757304,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757305,"byte_end":13757308,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757309,"byte_end":13757343,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757344,"byte_end":13757372,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757373,"byte_end":13757429,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757430,"byte_end":13757433,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757434,"byte_end":13757448,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757449,"byte_end":13757452,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757453,"byte_end":13757460,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757461,"byte_end":13757485,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757486,"byte_end":13757489,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757490,"byte_end":13757521,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757522,"byte_end":13757593,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757594,"byte_end":13757644,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757645,"byte_end":13757650,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\current.rs","byte_start":13757651,"byte_end":13757658,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758134,"byte_end":13758144,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13757843,"byte_end":13757889,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13757890,"byte_end":13757893,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13757894,"byte_end":13757977,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13757978,"byte_end":13758030,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758031,"byte_end":13758034,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758035,"byte_end":13758072,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758073,"byte_end":13758076,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758077,"byte_end":13758105,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758953,"byte_end":13758957,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758616,"byte_end":13758660,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758665,"byte_end":13758668,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758673,"byte_end":13758687,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758692,"byte_end":13758695,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758700,"byte_end":13758707,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758712,"byte_end":13758751,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758756,"byte_end":13758761,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758766,"byte_end":13758790,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758795,"byte_end":13758798,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758803,"byte_end":13758839,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758844,"byte_end":13758857,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758862,"byte_end":13758869,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758874,"byte_end":13758918,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758923,"byte_end":13758928,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758933,"byte_end":13758941,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759084,"byte_end":13759090,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759006,"byte_end":13759027,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759032,"byte_end":13759066,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759501,"byte_end":13759505,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"drop","qualname":"<JoinHandle<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759721,"byte_end":13759725,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinHandle<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759679,"byte_end":13759713,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760925,"byte_end":13760930,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760311,"byte_end":13760355,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760356,"byte_end":13760359,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760360,"byte_end":13760453,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760454,"byte_end":13760457,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760458,"byte_end":13760522,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760523,"byte_end":13760526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760527,"byte_end":13760605,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760606,"byte_end":13760609,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760610,"byte_end":13760645,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760646,"byte_end":13760649,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760650,"byte_end":13760702,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760703,"byte_end":13760706,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760707,"byte_end":13760721,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760722,"byte_end":13760725,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760726,"byte_end":13760733,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760734,"byte_end":13760773,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760774,"byte_end":13760779,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760780,"byte_end":13760808,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760809,"byte_end":13760812,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760813,"byte_end":13760837,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760838,"byte_end":13760841,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760842,"byte_end":13760888,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760889,"byte_end":13760894,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760895,"byte_end":13760903,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\sleep.rs","byte_start":13760904,"byte_end":13760911,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761515,"byte_end":13761520,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761089,"byte_end":13761107,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761108,"byte_end":13761111,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761112,"byte_end":13761206,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761207,"byte_end":13761210,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761211,"byte_end":13761282,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761283,"byte_end":13761286,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761287,"byte_end":13761301,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761302,"byte_end":13761305,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761306,"byte_end":13761313,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761314,"byte_end":13761353,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761354,"byte_end":13761359,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761360,"byte_end":13761384,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761385,"byte_end":13761388,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761389,"byte_end":13761425,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761426,"byte_end":13761439,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761440,"byte_end":13761447,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761448,"byte_end":13761451,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761452,"byte_end":13761484,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761485,"byte_end":13761490,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761491,"byte_end":13761499,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn.rs","byte_start":13761500,"byte_end":13761507,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762360,"byte_end":13762374,"line_start":31,"line_end":31,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761732,"byte_end":13761759,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761760,"byte_end":13761763,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761764,"byte_end":13761858,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761859,"byte_end":13761950,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761951,"byte_end":13761964,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761965,"byte_end":13761968,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13761969,"byte_end":13762019,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762020,"byte_end":13762023,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762024,"byte_end":13762064,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762065,"byte_end":13762099,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762100,"byte_end":13762103,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762104,"byte_end":13762118,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762119,"byte_end":13762122,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762123,"byte_end":13762139,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762140,"byte_end":13762143,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762144,"byte_end":13762151,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762152,"byte_end":13762191,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762192,"byte_end":13762197,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762198,"byte_end":13762222,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762223,"byte_end":13762226,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762227,"byte_end":13762256,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762257,"byte_end":13762300,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762301,"byte_end":13762307,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762308,"byte_end":13762319,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762320,"byte_end":13762325,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762326,"byte_end":13762334,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762335,"byte_end":13762342,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\spawn_blocking.rs","byte_start":13762343,"byte_end":13762352,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13762648,"byte_end":13762652,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13762596,"byte_end":13762619,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763033,"byte_end":13763035,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13762969,"byte_end":13763007,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763012,"byte_end":13763021,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763272,"byte_end":13763276,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763082,"byte_end":13763116,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763121,"byte_end":13763124,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763129,"byte_end":13763193,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763198,"byte_end":13763201,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763206,"byte_end":13763260,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763392,"byte_end":13763395,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Task as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763904,"byte_end":13763910,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763651,"byte_end":13763686,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763687,"byte_end":13763690,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763691,"byte_end":13763705,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763706,"byte_end":13763709,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763710,"byte_end":13763717,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763718,"byte_end":13763742,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763743,"byte_end":13763746,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763747,"byte_end":13763773,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763774,"byte_end":13763826,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763827,"byte_end":13763833,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763834,"byte_end":13763841,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13764369,"byte_end":13764372,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TaskId as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764800,"byte_end":13764808,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764614,"byte_end":13764659,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764660,"byte_end":13764663,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764664,"byte_end":13764756,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764757,"byte_end":13764771,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764857,"byte_end":13764863,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764904,"byte_end":13764909,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765931,"byte_end":13765935,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764967,"byte_end":13765026,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765031,"byte_end":13765034,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765039,"byte_end":13765107,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765112,"byte_end":13765115,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765120,"byte_end":13765212,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765217,"byte_end":13765220,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765225,"byte_end":13765237,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765242,"byte_end":13765245,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765250,"byte_end":13765332,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765337,"byte_end":13765388,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765393,"byte_end":13765396,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765401,"byte_end":13765435,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765440,"byte_end":13765468,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765473,"byte_end":13765529,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765534,"byte_end":13765537,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765542,"byte_end":13765556,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765561,"byte_end":13765564,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765569,"byte_end":13765576,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765581,"byte_end":13765586,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765591,"byte_end":13765615,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765620,"byte_end":13765623,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765628,"byte_end":13765652,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765657,"byte_end":13765687,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765692,"byte_end":13765695,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765700,"byte_end":13765717,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765722,"byte_end":13765770,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765775,"byte_end":13765780,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765785,"byte_end":13765788,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765793,"byte_end":13765819,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765824,"byte_end":13765865,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765870,"byte_end":13765895,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765900,"byte_end":13765907,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13765912,"byte_end":13765919,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767221,"byte_end":13767229,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766125,"byte_end":13766195,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766200,"byte_end":13766203,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766208,"byte_end":13766276,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766281,"byte_end":13766284,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766289,"byte_end":13766381,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766386,"byte_end":13766389,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766394,"byte_end":13766482,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766487,"byte_end":13766538,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766543,"byte_end":13766546,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766551,"byte_end":13766585,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766590,"byte_end":13766618,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766623,"byte_end":13766679,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766684,"byte_end":13766687,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766692,"byte_end":13766706,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766711,"byte_end":13766714,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766719,"byte_end":13766726,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766731,"byte_end":13766736,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766741,"byte_end":13766765,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766770,"byte_end":13766773,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766778,"byte_end":13766802,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766807,"byte_end":13766837,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766842,"byte_end":13766845,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766850,"byte_end":13766867,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766872,"byte_end":13766917,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766922,"byte_end":13766927,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766932,"byte_end":13766935,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766940,"byte_end":13766966,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13766971,"byte_end":13767013,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767018,"byte_end":13767047,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767052,"byte_end":13767059,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767064,"byte_end":13767067,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767072,"byte_end":13767144,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767149,"byte_end":13767197,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13767202,"byte_end":13767209,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768782,"byte_end":13768793,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2311}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768615,"byte_end":13768663,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768664,"byte_end":13768667,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768668,"byte_end":13768732,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768858,"byte_end":13768861,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AccessError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13769013,"byte_end":13769016,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AccessError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2346},{"krate":0,"index":2349},{"krate":0,"index":2352},{"krate":0,"index":2355},{"krate":0,"index":2383},{"krate":0,"index":2412},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609195,"byte_end":13609219,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609220,"byte_end":13609223,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609224,"byte_end":13609255,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609256,"byte_end":13609259,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desirable to await multiple futures as if it was a single","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609260,"byte_end":13609332,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609333,"byte_end":13609409,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609410,"byte_end":13609483,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609484,"byte_end":13609561,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609562,"byte_end":13609579,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609580,"byte_end":13609583,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609584,"byte_end":13609649,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609650,"byte_end":13609653,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609654,"byte_end":13609726,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609727,"byte_end":13609799,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609800,"byte_end":13609870,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609871,"byte_end":13609938,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609939,"byte_end":13609942,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609943,"byte_end":13609978,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609979,"byte_end":13609982,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13609983,"byte_end":13610062,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610063,"byte_end":13610149,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610150,"byte_end":13610216,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610217,"byte_end":13610220,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610221,"byte_end":13610291,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610292,"byte_end":13610364,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610365,"byte_end":13610388,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610389,"byte_end":13610392,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610393,"byte_end":13610466,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610467,"byte_end":13610544,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610545,"byte_end":13610618,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610619,"byte_end":13610666,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610667,"byte_end":13610670,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610671,"byte_end":13610751,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610752,"byte_end":13610832,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610833,"byte_end":13610886,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610887,"byte_end":13610890,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610891,"byte_end":13610977,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13610978,"byte_end":13611064,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611065,"byte_end":13611153,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611154,"byte_end":13611265,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611266,"byte_end":13611351,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611352,"byte_end":13611456,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611457,"byte_end":13611460,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611461,"byte_end":13611512,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611513,"byte_end":13611572,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611573,"byte_end":13611624,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\mod.rs","byte_start":13611625,"byte_end":13611684,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":13902206,"byte_end":13902215,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[],"decl_id":null,"docs":"    Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909949,"byte_end":13909956,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909557,"byte_end":13909587,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909588,"byte_end":13909591,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909592,"byte_end":13909606,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909607,"byte_end":13909610,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909611,"byte_end":13909618,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909619,"byte_end":13909658,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909659,"byte_end":13909664,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909665,"byte_end":13909693,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909694,"byte_end":13909697,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909698,"byte_end":13909724,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909725,"byte_end":13909747,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909748,"byte_end":13909751,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909752,"byte_end":13909789,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909790,"byte_end":13909822,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909823,"byte_end":13909826,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909827,"byte_end":13909885,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909886,"byte_end":13909912,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909913,"byte_end":13909918,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909919,"byte_end":13909927,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13909928,"byte_end":13909935,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910847,"byte_end":13910854,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context) ->\nPoll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910332,"byte_end":13910403,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910404,"byte_end":13910407,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910408,"byte_end":13910474,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910475,"byte_end":13910478,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910479,"byte_end":13910493,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910494,"byte_end":13910497,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910498,"byte_end":13910505,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910506,"byte_end":13910545,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910546,"byte_end":13910551,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910552,"byte_end":13910578,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910579,"byte_end":13910620,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910621,"byte_end":13910624,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910625,"byte_end":13910684,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910685,"byte_end":13910731,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910732,"byte_end":13910737,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910738,"byte_end":13910741,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910742,"byte_end":13910810,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910811,"byte_end":13910816,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910817,"byte_end":13910825,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13910826,"byte_end":13910833,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911634,"byte_end":13911639,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911245,"byte_end":13911280,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911281,"byte_end":13911284,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911285,"byte_end":13911353,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911354,"byte_end":13911357,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911358,"byte_end":13911444,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911445,"byte_end":13911448,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911449,"byte_end":13911463,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911464,"byte_end":13911467,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911468,"byte_end":13911475,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911476,"byte_end":13911515,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911516,"byte_end":13911521,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911522,"byte_end":13911548,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911549,"byte_end":13911552,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911553,"byte_end":13911597,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911598,"byte_end":13911603,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911604,"byte_end":13911612,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\ready.rs","byte_start":13911613,"byte_end":13911620,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612958,"byte_end":13612965,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where F: Future<Output =\nT>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612430,"byte_end":13612488,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612489,"byte_end":13612492,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612493,"byte_end":13612546,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612547,"byte_end":13612598,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612599,"byte_end":13612602,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612603,"byte_end":13612617,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612618,"byte_end":13612621,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612622,"byte_end":13612629,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612630,"byte_end":13612704,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612705,"byte_end":13612710,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612711,"byte_end":13612739,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612740,"byte_end":13612743,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612744,"byte_end":13612770,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612771,"byte_end":13612774,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612775,"byte_end":13612815,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612816,"byte_end":13612855,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612856,"byte_end":13612912,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612913,"byte_end":13612918,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612919,"byte_end":13612936,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13612937,"byte_end":13612944,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614128,"byte_end":13614140,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2418}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614025,"byte_end":13614071,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614240,"byte_end":13614243,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TimeoutError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":1768},{"krate":0,"index":1791},{"krate":0,"index":1815},{"krate":0,"index":1838},{"krate":0,"index":1861},{"krate":0,"index":1881}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16640,"byte_end":16665,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614343,"byte_end":13614381,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614382,"byte_end":13614385,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614386,"byte_end":13614439,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614440,"byte_end":13614443,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614444,"byte_end":13614518,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614519,"byte_end":13614593,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614594,"byte_end":13614670,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614671,"byte_end":13614741,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614742,"byte_end":13614745,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614746,"byte_end":13614821,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614822,"byte_end":13614825,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614826,"byte_end":13614844,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614845,"byte_end":13614848,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614849,"byte_end":13614894,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614895,"byte_end":13614898,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614899,"byte_end":13614976,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13614977,"byte_end":13615057,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615058,"byte_end":13615099,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615100,"byte_end":13615173,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615174,"byte_end":13615247,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615248,"byte_end":13615325,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615326,"byte_end":13615405,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615406,"byte_end":13615462,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615463,"byte_end":13615466,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615467,"byte_end":13615488,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615489,"byte_end":13615516,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615517,"byte_end":13615540,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615541,"byte_end":13615544,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615545,"byte_end":13615583,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615584,"byte_end":13615587,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615588,"byte_end":13615600,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615601,"byte_end":13615604,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615605,"byte_end":13615679,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615680,"byte_end":13615711,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615712,"byte_end":13615715,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615716,"byte_end":13615723,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615724,"byte_end":13615767,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615768,"byte_end":13615792,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615793,"byte_end":13615811,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615812,"byte_end":13615830,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615831,"byte_end":13615924,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615925,"byte_end":13615930,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615931,"byte_end":13615938,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615939,"byte_end":13615942,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13615943,"byte_end":13616009,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616010,"byte_end":13616084,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616085,"byte_end":13616161,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616162,"byte_end":13616239,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616240,"byte_end":13616300,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616301,"byte_end":13616304,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616305,"byte_end":13616374,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616375,"byte_end":13616455,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616456,"byte_end":13616480,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616481,"byte_end":13616484,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616485,"byte_end":13616561,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616562,"byte_end":13616636,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616637,"byte_end":13616655,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616656,"byte_end":13616659,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616660,"byte_end":13616737,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616738,"byte_end":13616813,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616814,"byte_end":13616841,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616842,"byte_end":13616845,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616846,"byte_end":13616882,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616883,"byte_end":13616916,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616917,"byte_end":13616962,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13616963,"byte_end":13617012,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617013,"byte_end":13617016,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617017,"byte_end":13617051,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617052,"byte_end":13617055,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617056,"byte_end":13617134,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617135,"byte_end":13617138,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617139,"byte_end":13617182,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617183,"byte_end":13617234,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617235,"byte_end":13617282,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617283,"byte_end":13617286,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617287,"byte_end":13617351,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617352,"byte_end":13617381,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617382,"byte_end":13617385,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617386,"byte_end":13617411,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617412,"byte_end":13617415,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617416,"byte_end":13617492,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617493,"byte_end":13617565,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617566,"byte_end":13617644,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617645,"byte_end":13617690,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617691,"byte_end":13617694,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617695,"byte_end":13617764,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617765,"byte_end":13617768,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617769,"byte_end":13617776,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617777,"byte_end":13617809,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617810,"byte_end":13617853,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617854,"byte_end":13617878,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617879,"byte_end":13617904,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617905,"byte_end":13617908,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617909,"byte_end":13617955,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617956,"byte_end":13617976,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617977,"byte_end":13617998,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13617999,"byte_end":13618004,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618005,"byte_end":13618008,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618009,"byte_end":13618087,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618088,"byte_end":13618163,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618164,"byte_end":13618237,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618238,"byte_end":13618256,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618257,"byte_end":13618286,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618287,"byte_end":13618319,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618320,"byte_end":13618329,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618330,"byte_end":13618335,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618336,"byte_end":13618339,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618340,"byte_end":13618393,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618394,"byte_end":13618397,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618398,"byte_end":13618427,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618428,"byte_end":13618469,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618470,"byte_end":13618496,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618497,"byte_end":13618500,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618501,"byte_end":13618551,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618552,"byte_end":13618650,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618651,"byte_end":13618718,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618719,"byte_end":13618747,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618748,"byte_end":13618751,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618752,"byte_end":13618814,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618815,"byte_end":13618846,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618847,"byte_end":13618892,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618893,"byte_end":13618913,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618914,"byte_end":13618947,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618948,"byte_end":13618961,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618962,"byte_end":13618971,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618972,"byte_end":13618977,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618978,"byte_end":13618981,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13618982,"byte_end":13619011,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619012,"byte_end":13619086,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619087,"byte_end":13619092,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619093,"byte_end":13619130,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619131,"byte_end":13619134,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619135,"byte_end":13619177,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619178,"byte_end":13619200,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619201,"byte_end":13619204,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619205,"byte_end":13619247,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619248,"byte_end":13619270,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619271,"byte_end":13619274,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619275,"byte_end":13619317,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619318,"byte_end":13619340,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619341,"byte_end":13619344,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619345,"byte_end":13619387,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619388,"byte_end":13619410,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619411,"byte_end":13619414,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619415,"byte_end":13619457,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619458,"byte_end":13619480,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619481,"byte_end":13619486,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619487,"byte_end":13619504,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619505,"byte_end":13619512,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619513,"byte_end":13619516,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619517,"byte_end":13619577,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619578,"byte_end":13619581,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619582,"byte_end":13619661,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619662,"byte_end":13619738,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619739,"byte_end":13619753,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619754,"byte_end":13619757,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619758,"byte_end":13619794,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619795,"byte_end":13619798,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619799,"byte_end":13619893,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619894,"byte_end":13619921,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619922,"byte_end":13619925,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619926,"byte_end":13619933,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13619934,"byte_end":13620008,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620009,"byte_end":13620014,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620015,"byte_end":13620047,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620048,"byte_end":13620076,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::from_iter(1u8..6);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620077,"byte_end":13620124,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620125,"byte_end":13620128,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620129,"byte_end":13620174,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620175,"byte_end":13620201,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620202,"byte_end":13620207,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620208,"byte_end":13620213,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620214,"byte_end":13620231,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620232,"byte_end":13620239,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620240,"byte_end":13620243,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620244,"byte_end":13620321,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620322,"byte_end":13620397,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620398,"byte_end":13620431,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620432,"byte_end":13620435,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620436,"byte_end":13620512,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620513,"byte_end":13620584,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620585,"byte_end":13620656,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620657,"byte_end":13620660,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620661,"byte_end":13620734,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620735,"byte_end":13620811,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` or `from_iter` as above will always","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620812,"byte_end":13620888,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ have to be called manually.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620889,"byte_end":13620920,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620921,"byte_end":13620924,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620925,"byte_end":13620966,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13620967,"byte_end":13621030,"line_start":190,"line_end":190,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621031,"byte_end":13621034,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621035,"byte_end":13621049,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621050,"byte_end":13621053,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621054,"byte_end":13621126,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621127,"byte_end":13621197,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621198,"byte_end":13621211,"line_start":196,"line_end":196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621212,"byte_end":13621215,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621216,"byte_end":13621285,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621286,"byte_end":13621324,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621325,"byte_end":13621328,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621329,"byte_end":13621370,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621371,"byte_end":13621414,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621415,"byte_end":13621462,"line_start":203,"line_end":203,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621463,"byte_end":13621466,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621467,"byte_end":13621481,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621482,"byte_end":13621485,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621486,"byte_end":13621560,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621561,"byte_end":13621636,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621637,"byte_end":13621710,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621711,"byte_end":13621786,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621787,"byte_end":13621847,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621848,"byte_end":13621851,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621852,"byte_end":13621859,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621860,"byte_end":13621892,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621893,"byte_end":13621967,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621968,"byte_end":13621973,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13621974,"byte_end":13622006,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622007,"byte_end":13622035,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622036,"byte_end":13622076,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622077,"byte_end":13622110,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622111,"byte_end":13622116,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622117,"byte_end":13622134,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622135,"byte_end":13622142,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622143,"byte_end":13622146,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622147,"byte_end":13622223,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622224,"byte_end":13622292,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622293,"byte_end":13622296,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622297,"byte_end":13622308,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622309,"byte_end":13622375,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622376,"byte_end":13622406,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622407,"byte_end":13622414,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622415,"byte_end":13622418,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622419,"byte_end":13622492,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622493,"byte_end":13622522,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622523,"byte_end":13622526,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622527,"byte_end":13622534,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622535,"byte_end":13622609,"line_start":237,"line_end":237,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622610,"byte_end":13622615,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622616,"byte_end":13622648,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622649,"byte_end":13622677,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622678,"byte_end":13622722,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622723,"byte_end":13622726,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622727,"byte_end":13622768,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622769,"byte_end":13622795,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622796,"byte_end":13622801,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622802,"byte_end":13622807,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622808,"byte_end":13622825,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622826,"byte_end":13622833,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622834,"byte_end":13622837,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622838,"byte_end":13622879,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622880,"byte_end":13622883,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622884,"byte_end":13622963,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13622964,"byte_end":13623039,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623040,"byte_end":13623043,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623044,"byte_end":13623093,"line_start":255,"line_end":255,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623094,"byte_end":13623097,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623098,"byte_end":13623112,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623113,"byte_end":13623116,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623117,"byte_end":13623188,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623189,"byte_end":13623212,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623213,"byte_end":13623216,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623217,"byte_end":13623224,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623225,"byte_end":13623253,"line_start":263,"line_end":263,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623254,"byte_end":13623292,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623293,"byte_end":13623300,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623301,"byte_end":13623304,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623305,"byte_end":13623376,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623377,"byte_end":13623406,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623407,"byte_end":13623410,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623411,"byte_end":13623418,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623419,"byte_end":13623493,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623494,"byte_end":13623499,"line_start":272,"line_end":272,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623500,"byte_end":13623532,"line_start":273,"line_end":273,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623533,"byte_end":13623561,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::from_iter(0u8..);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623562,"byte_end":13623605,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623606,"byte_end":13623649,"line_start":276,"line_end":276,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623650,"byte_end":13623653,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623654,"byte_end":13623710,"line_start":278,"line_end":278,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623711,"byte_end":13623742,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623743,"byte_end":13623748,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623749,"byte_end":13623754,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623755,"byte_end":13623772,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623773,"byte_end":13623780,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623781,"byte_end":13623784,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623785,"byte_end":13623857,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623858,"byte_end":13623861,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623862,"byte_end":13623935,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13623936,"byte_end":13624014,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624015,"byte_end":13624091,"line_start":289,"line_end":289,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624092,"byte_end":13624160,"line_start":290,"line_end":290,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624161,"byte_end":13624203,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624204,"byte_end":13624207,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624208,"byte_end":13624221,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624222,"byte_end":13624266,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624267,"byte_end":13624337,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624338,"byte_end":13624412,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624413,"byte_end":13624467,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624468,"byte_end":13624475,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624476,"byte_end":13624479,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624480,"byte_end":13624544,"line_start":300,"line_end":300,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624545,"byte_end":13624588,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\mod.rs","byte_start":13624589,"byte_end":13624630,"line_start":302,"line_end":302,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684457,"byte_end":13684466,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684406,"byte_end":13684445,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684994,"byte_end":13684998,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<AllFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13685812,"byte_end":13685821,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13685761,"byte_end":13685800,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13686349,"byte_end":13686353,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<AnyFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8192},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687468,"byte_end":13687473,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8195},{"krate":0,"index":8196}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687867,"byte_end":13687876,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<S, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8156},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13688800,"byte_end":13688806,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":8158}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13689069,"byte_end":13689078,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cloned<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8103},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13689730,"byte_end":13689739,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8109}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13690316,"byte_end":13690320,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<CmpFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8067},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692422,"byte_end":13692428,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":8069}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692690,"byte_end":13692699,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Copied<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8027},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693187,"byte_end":13693192,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":8029},{"krate":0,"index":8030}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693529,"byte_end":13693538,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7987},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694070,"byte_end":13694079,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7989},{"krate":0,"index":7990}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694348,"byte_end":13694357,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7942},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695156,"byte_end":13695164,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":7945},{"krate":0,"index":7946}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695651,"byte_end":13695655,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<EqFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7893},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13696703,"byte_end":13696709,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7896},{"krate":0,"index":7897}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13697066,"byte_end":13697075,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7844},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697682,"byte_end":13697691,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7847},{"krate":0,"index":7848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697998,"byte_end":13698007,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698670,"byte_end":13698680,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698619,"byte_end":13698658,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13699074,"byte_end":13699078,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<FindFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699666,"byte_end":13699679,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699615,"byte_end":13699654,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13700083,"byte_end":13700087,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<FindMapFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7782},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13700756,"byte_end":13700766,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13701187,"byte_end":13701191,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<FoldFuture<S, F, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13701956,"byte_end":13701969,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":7740},{"krate":0,"index":7741}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13702312,"byte_end":13702316,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachFuture<S, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703149,"byte_end":13703153,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7696},{"krate":0,"index":7697}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703454,"byte_end":13703463,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704309,"byte_end":13704317,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":7656}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704773,"byte_end":13704777,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<GeFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13705542,"byte_end":13705550,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":7615}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13706022,"byte_end":13706026,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<GtFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13706779,"byte_end":13706786,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13707113,"byte_end":13707122,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Inspect<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7518},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707648,"byte_end":13707658,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":7521},{"krate":0,"index":7522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707996,"byte_end":13708000,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"poll","qualname":"<LastFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7477},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13708871,"byte_end":13708879,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":7480}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13709351,"byte_end":13709355,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<LeFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7436},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710114,"byte_end":13710122,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":7439}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710594,"byte_end":13710598,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"poll","qualname":"<LtFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7387},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711120,"byte_end":13711123,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7390},{"krate":0,"index":7391}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711443,"byte_end":13711452,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<S, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7342},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13711947,"byte_end":13711956,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13712273,"byte_end":13712277,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713224,"byte_end":13713235,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713685,"byte_end":13713689,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxByFuture<S, F, S::Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13714648,"byte_end":13714662,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13715127,"byte_end":13715131,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaxByKeyFuture<S, S::Item, K> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7183},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716302,"byte_end":13716311,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":7186},{"krate":0,"index":7187}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716628,"byte_end":13716632,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinFuture<S, S::Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13717576,"byte_end":13717587,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7132}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13718072,"byte_end":13718076,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinByFuture<S, F, S::Item> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719026,"byte_end":13719040,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7075}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719505,"byte_end":13719509,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"poll","qualname":"<MinByKeyFuture<S, S::Item, K> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7024},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13720800,"byte_end":13720808,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":7027},{"krate":0,"index":7028}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13721295,"byte_end":13721299,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<NeFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13722108,"byte_end":13722118,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1154}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13722057,"byte_end":13722096,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13722288,"byte_end":13722292,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722598,"byte_end":13722607,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722547,"byte_end":13722586,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722953,"byte_end":13722957,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<NthFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6971},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13723861,"byte_end":13723877,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6977}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.9\\src\\lib.rs","byte_start":14294481,"byte_end":14294490,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13724476,"byte_end":13724480,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<PartialCmpFuture<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726607,"byte_end":13726621,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726556,"byte_end":13726595,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13727110,"byte_end":13727114,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<PositionFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728093,"byte_end":13728097,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6917},{"krate":0,"index":6918}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728513,"byte_end":13728522,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<S, St, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<B>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6873},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729313,"byte_end":13729317,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6875},{"krate":0,"index":6876}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729574,"byte_end":13729583,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730532,"byte_end":13730541,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6827},{"krate":0,"index":6828}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730929,"byte_end":13730938,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732075,"byte_end":13732081,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732450,"byte_end":13732459,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<StepBy<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6737},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733484,"byte_end":13733488,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6739},{"krate":0,"index":6740}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733811,"byte_end":13733820,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13734723,"byte_end":13734732,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6691},{"krate":0,"index":6692}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13735095,"byte_end":13735104,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<S, P> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735741,"byte_end":13735754,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735690,"byte_end":13735729,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13736268,"byte_end":13736272,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFoldFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737081,"byte_end":13737097,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737030,"byte_end":13737069,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737507,"byte_end":13737511,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738455,"byte_end":13738458,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738665,"byte_end":13738668,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Zip<A, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13739150,"byte_end":13739159,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1676},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13628480,"byte_end":13628489,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764}],"decl_id":null,"docs":"    Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13629222,"byte_end":13629226,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13629770,"byte_end":13629774,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13630411,"byte_end":13630421,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13632418,"byte_end":13632425,"line_start":312,"line_end":312,"column_start":8,"column_end":15},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13633237,"byte_end":13633242,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13634022,"byte_end":13634028,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13634790,"byte_end":13634796,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13635536,"byte_end":13635541,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13636347,"byte_end":13636356,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13638285,"byte_end":13638288,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized, F: FnMut(Self::Item)\n-> B","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13639112,"byte_end":13639119,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        A combinator that does something with each element in the stream, passing the value\n        on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13640028,"byte_end":13640032,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13640840,"byte_end":13640844,"line_start":661,"line_end":661,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13641514,"byte_end":13641520,"line_start":691,"line_end":691,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13644300,"byte_end":13644310,"line_start":806,"line_end":806,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13645195,"byte_end":13645205,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified key function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13646161,"byte_end":13646171,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified key function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13647204,"byte_end":13647210,"line_start":913,"line_end":913,"column_start":8,"column_end":14},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified comparison function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13648066,"byte_end":13648069,"line_start":947,"line_end":947,"column_start":8,"column_end":11},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13648863,"byte_end":13648866,"line_start":980,"line_end":980,"column_start":8,"column_end":11},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13649830,"byte_end":13649836,"line_start":1017,"line_end":1017,"column_start":8,"column_end":14},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified comparison function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13651310,"byte_end":13651313,"line_start":1081,"line_end":1081,"column_start":8,"column_end":11},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13652679,"byte_end":13652682,"line_start":1137,"line_end":1137,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13652662,"byte_end":13652671,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13653773,"byte_end":13653777,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin + Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13654454,"byte_end":13654462,"line_start":1214,"line_end":1214,"column_start":8,"column_end":16},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13655175,"byte_end":13655179,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13656865,"byte_end":13656873,"line_start":1321,"line_end":1321,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13658259,"byte_end":13658262,"line_start":1377,"line_end":1377,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13658242,"byte_end":13658251,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13660948,"byte_end":13660952,"line_start":1473,"line_end":1473,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        A stream adaptor similar to [`fold`] that holds internal state and produces a new\n        stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13660931,"byte_end":13660940,"line_start":1472,"line_end":1472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13661960,"byte_end":13661970,"line_start":1508,"line_end":1508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13662627,"byte_end":13662631,"line_start":1536,"line_end":1536,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13664572,"byte_end":13664580,"line_start":1612,"line_end":1612,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T> where\nSelf: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        A combinator that applies a function as long as it returns successfully, producing a single, final value.\n        Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13665677,"byte_end":13665689,"line_start":1658,"line_end":1658,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13667209,"byte_end":13667212,"line_start":1706,"line_end":1706,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13667192,"byte_end":13667201,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13672567,"byte_end":13672578,"line_start":1878,"line_end":1878,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where Self: Sized +\nStream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13673565,"byte_end":13673573,"line_start":1918,"line_end":1918,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Searches for an element in a Stream that satisfies a predicate, returning\n        its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13674716,"byte_end":13674719,"line_start":1956,"line_end":1956,"column_start":8,"column_end":11},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13676446,"byte_end":13676448,"line_start":2022,"line_end":2022,"column_start":8,"column_end":10},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized + Stream,\n<Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13677515,"byte_end":13677517,"line_start":2059,"line_end":2059,"column_start":8,"column_end":10},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13678576,"byte_end":13678578,"line_start":2096,"line_end":2096,"column_start":8,"column_end":10},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13679635,"byte_end":13679637,"line_start":2133,"line_end":2133,"column_start":8,"column_end":10},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13680690,"byte_end":13680692,"line_start":2170,"line_end":2170,"column_start":8,"column_end":10},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13681739,"byte_end":13681741,"line_start":2207,"line_end":2207,"column_start":8,"column_end":10},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream, S: Stream,\n<Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1676},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less than those of another.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740331,"byte_end":13740336,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13739900,"byte_end":13739950,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13739951,"byte_end":13739954,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13739955,"byte_end":13740018,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740019,"byte_end":13740046,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740047,"byte_end":13740050,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740051,"byte_end":13740079,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740080,"byte_end":13740083,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740084,"byte_end":13740098,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740099,"byte_end":13740102,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740103,"byte_end":13740110,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740111,"byte_end":13740150,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740151,"byte_end":13740156,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740157,"byte_end":13740187,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740188,"byte_end":13740214,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740215,"byte_end":13740218,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740219,"byte_end":13740258,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740259,"byte_end":13740262,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740263,"byte_end":13740300,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740301,"byte_end":13740306,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740307,"byte_end":13740315,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740316,"byte_end":13740323,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740573,"byte_end":13740578,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2433}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740407,"byte_end":13740449,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740450,"byte_end":13740453,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740454,"byte_end":13740511,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740512,"byte_end":13740515,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740516,"byte_end":13740544,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740673,"byte_end":13740682,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741098,"byte_end":13741104,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2439}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13740874,"byte_end":13740929,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13740930,"byte_end":13740933,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13740934,"byte_end":13740997,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13740998,"byte_end":13741025,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741026,"byte_end":13741029,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741030,"byte_end":13741062,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741964,"byte_end":13741971,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741155,"byte_end":13741243,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741244,"byte_end":13741247,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741248,"byte_end":13741338,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741339,"byte_end":13741420,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741421,"byte_end":13741424,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741425,"byte_end":13741439,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741440,"byte_end":13741443,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741444,"byte_end":13741451,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741452,"byte_end":13741491,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741492,"byte_end":13741497,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741498,"byte_end":13741528,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741529,"byte_end":13741555,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741556,"byte_end":13741559,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741560,"byte_end":13741584,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741585,"byte_end":13741617,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741618,"byte_end":13741637,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741638,"byte_end":13741660,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741661,"byte_end":13741677,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741678,"byte_end":13741694,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741695,"byte_end":13741718,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741719,"byte_end":13741728,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741729,"byte_end":13741736,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741737,"byte_end":13741740,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741741,"byte_end":13741768,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741769,"byte_end":13741772,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741773,"byte_end":13741813,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741814,"byte_end":13741854,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741855,"byte_end":13741895,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741896,"byte_end":13741933,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741934,"byte_end":13741939,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741940,"byte_end":13741948,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741949,"byte_end":13741956,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13742150,"byte_end":13742159,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FromFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6600},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742780,"byte_end":13742788,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":6602}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743288,"byte_end":13743297,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"fn from_iter<I>(I) -> FromIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742820,"byte_end":13742859,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742860,"byte_end":13742863,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742864,"byte_end":13742878,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742879,"byte_end":13742882,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742883,"byte_end":13742890,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742891,"byte_end":13742930,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742931,"byte_end":13742936,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742937,"byte_end":13742967,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742968,"byte_end":13742994,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742995,"byte_end":13742998,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13742999,"byte_end":13743051,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743052,"byte_end":13743055,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743056,"byte_end":13743096,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743097,"byte_end":13743137,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743138,"byte_end":13743178,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743179,"byte_end":13743219,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743220,"byte_end":13743257,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743258,"byte_end":13743263,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743264,"byte_end":13743272,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743273,"byte_end":13743280,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743483,"byte_end":13743492,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FromIter<I> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744383,"byte_end":13744387,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744050,"byte_end":13744097,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744098,"byte_end":13744101,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744102,"byte_end":13744116,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744117,"byte_end":13744120,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744121,"byte_end":13744128,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744129,"byte_end":13744168,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744169,"byte_end":13744174,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744175,"byte_end":13744205,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744206,"byte_end":13744232,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744233,"byte_end":13744236,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744237,"byte_end":13744269,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744270,"byte_end":13744273,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744274,"byte_end":13744314,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744315,"byte_end":13744352,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744353,"byte_end":13744358,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744359,"byte_end":13744367,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744368,"byte_end":13744375,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744687,"byte_end":13744691,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6563}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744788,"byte_end":13744797,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745577,"byte_end":13745583,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745228,"byte_end":13745286,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745287,"byte_end":13745290,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745291,"byte_end":13745305,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745306,"byte_end":13745309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745310,"byte_end":13745317,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745318,"byte_end":13745357,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745358,"byte_end":13745363,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745364,"byte_end":13745394,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745395,"byte_end":13745421,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745422,"byte_end":13745425,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745426,"byte_end":13745460,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745461,"byte_end":13745464,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745465,"byte_end":13745505,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745506,"byte_end":13745546,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745547,"byte_end":13745552,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745553,"byte_end":13745561,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745562,"byte_end":13745569,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745870,"byte_end":13745876,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2448}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745654,"byte_end":13745704,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745705,"byte_end":13745708,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745709,"byte_end":13745771,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745772,"byte_end":13745799,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745800,"byte_end":13745803,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745804,"byte_end":13745834,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745963,"byte_end":13745972,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746452,"byte_end":13746462,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2457}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746183,"byte_end":13746271,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746272,"byte_end":13746275,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746276,"byte_end":13746343,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746344,"byte_end":13746371,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746372,"byte_end":13746375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746376,"byte_end":13746416,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747568,"byte_end":13747579,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746517,"byte_end":13746619,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746620,"byte_end":13746623,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746624,"byte_end":13746638,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746639,"byte_end":13746642,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746643,"byte_end":13746659,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746660,"byte_end":13746663,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746664,"byte_end":13746671,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746672,"byte_end":13746711,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746712,"byte_end":13746717,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746718,"byte_end":13746748,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746749,"byte_end":13746775,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746776,"byte_end":13746779,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746780,"byte_end":13746818,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746819,"byte_end":13746822,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746823,"byte_end":13746850,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746851,"byte_end":13746854,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746855,"byte_end":13746895,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746896,"byte_end":13746936,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746937,"byte_end":13746977,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746978,"byte_end":13747018,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747019,"byte_end":13747027,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747028,"byte_end":13747035,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747036,"byte_end":13747039,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747040,"byte_end":13747057,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747058,"byte_end":13747061,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747062,"byte_end":13747069,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747070,"byte_end":13747109,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747110,"byte_end":13747115,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747116,"byte_end":13747146,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747147,"byte_end":13747173,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747174,"byte_end":13747177,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747178,"byte_end":13747196,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747197,"byte_end":13747233,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747234,"byte_end":13747255,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747256,"byte_end":13747271,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747272,"byte_end":13747284,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747285,"byte_end":13747291,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747292,"byte_end":13747305,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747306,"byte_end":13747309,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747310,"byte_end":13747337,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747338,"byte_end":13747341,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747342,"byte_end":13747382,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747383,"byte_end":13747423,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747424,"byte_end":13747464,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747465,"byte_end":13747505,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747506,"byte_end":13747543,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747544,"byte_end":13747552,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747553,"byte_end":13747560,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747771,"byte_end":13747780,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2597},{"krate":0,"index":2791},{"krate":0,"index":3144},{"krate":0,"index":3191},{"krate":0,"index":3388},{"krate":0,"index":3414},{"krate":0,"index":3489},{"krate":0,"index":3551},{"krate":0,"index":3598},{"krate":0,"index":3666},{"krate":0,"index":3701},{"krate":0,"index":3729},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3801},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3861},{"krate":0,"index":3898},{"krate":0,"index":3945},{"krate":0,"index":3963}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941192,"byte_end":13941261,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941262,"byte_end":13941265,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941266,"byte_end":13941343,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941344,"byte_end":13941413,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941414,"byte_end":13941470,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941471,"byte_end":13941539,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941540,"byte_end":13941543,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941544,"byte_end":13941595,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941596,"byte_end":13941599,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941600,"byte_end":13941660,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941661,"byte_end":13941664,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941665,"byte_end":13941685,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941686,"byte_end":13941689,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941690,"byte_end":13941769,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941770,"byte_end":13941845,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941846,"byte_end":13941921,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13941922,"byte_end":13942001,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942002,"byte_end":13942081,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942082,"byte_end":13942096,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942097,"byte_end":13942100,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942101,"byte_end":13942114,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942115,"byte_end":13942143,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942144,"byte_end":13942174,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942175,"byte_end":13942178,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942179,"byte_end":13942253,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942254,"byte_end":13942259,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942260,"byte_end":13942305,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942306,"byte_end":13942335,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942336,"byte_end":13942339,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942340,"byte_end":13942366,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942367,"byte_end":13942406,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942407,"byte_end":13942410,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942411,"byte_end":13942457,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942458,"byte_end":13942463,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942464,"byte_end":13942481,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942482,"byte_end":13942489,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942490,"byte_end":13942493,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942494,"byte_end":13942576,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942577,"byte_end":13942654,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942655,"byte_end":13942719,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942720,"byte_end":13942723,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942724,"byte_end":13942747,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942748,"byte_end":13942751,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942752,"byte_end":13942827,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942828,"byte_end":13942898,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942899,"byte_end":13942976,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942977,"byte_end":13942993,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942994,"byte_end":13942997,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13942998,"byte_end":13943011,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943012,"byte_end":13943040,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943041,"byte_end":13943073,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943074,"byte_end":13943104,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943105,"byte_end":13943108,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943109,"byte_end":13943183,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943184,"byte_end":13943189,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943190,"byte_end":13943235,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943236,"byte_end":13943265,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943266,"byte_end":13943269,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943270,"byte_end":13943314,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943315,"byte_end":13943353,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943354,"byte_end":13943357,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943358,"byte_end":13943384,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943385,"byte_end":13943424,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943425,"byte_end":13943428,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943429,"byte_end":13943475,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943476,"byte_end":13943481,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943482,"byte_end":13943499,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943500,"byte_end":13943507,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943508,"byte_end":13943511,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943512,"byte_end":13943598,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943599,"byte_end":13943677,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943678,"byte_end":13943681,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943682,"byte_end":13943712,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943713,"byte_end":13943716,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943717,"byte_end":13943798,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943799,"byte_end":13943873,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943874,"byte_end":13943955,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13943956,"byte_end":13944030,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944031,"byte_end":13944105,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944106,"byte_end":13944109,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944110,"byte_end":13944186,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944187,"byte_end":13944213,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944214,"byte_end":13944217,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944218,"byte_end":13944231,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944232,"byte_end":13944260,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944261,"byte_end":13944294,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944295,"byte_end":13944325,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944326,"byte_end":13944329,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944330,"byte_end":13944404,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944405,"byte_end":13944410,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944411,"byte_end":13944452,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944453,"byte_end":13944492,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944493,"byte_end":13944528,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944529,"byte_end":13944532,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944533,"byte_end":13944563,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944564,"byte_end":13944605,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944606,"byte_end":13944609,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944610,"byte_end":13944637,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944638,"byte_end":13944643,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944644,"byte_end":13944661,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944662,"byte_end":13944669,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944670,"byte_end":13944673,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944674,"byte_end":13944755,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944756,"byte_end":13944789,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944790,"byte_end":13944793,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944794,"byte_end":13944807,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944808,"byte_end":13944836,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944837,"byte_end":13944871,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944872,"byte_end":13944905,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944906,"byte_end":13944909,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944910,"byte_end":13944984,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944985,"byte_end":13944990,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13944991,"byte_end":13945034,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945035,"byte_end":13945040,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945041,"byte_end":13945084,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945085,"byte_end":13945088,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945089,"byte_end":13945126,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945127,"byte_end":13945162,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945163,"byte_end":13945223,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945224,"byte_end":13945230,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945231,"byte_end":13945236,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945237,"byte_end":13945254,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945255,"byte_end":13945262,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945263,"byte_end":13945266,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945267,"byte_end":13945299,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945300,"byte_end":13945303,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945304,"byte_end":13945356,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945357,"byte_end":13945360,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945361,"byte_end":13945374,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945375,"byte_end":13945397,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945398,"byte_end":13945401,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945402,"byte_end":13945476,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945477,"byte_end":13945482,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945483,"byte_end":13945517,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945518,"byte_end":13945521,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945522,"byte_end":13945567,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945568,"byte_end":13945571,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945572,"byte_end":13945616,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945617,"byte_end":13945622,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945623,"byte_end":13945640,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945641,"byte_end":13945648,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945649,"byte_end":13945652,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945653,"byte_end":13945732,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945733,"byte_end":13945802,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945803,"byte_end":13945867,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945868,"byte_end":13945871,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945872,"byte_end":13945885,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945886,"byte_end":13945908,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945909,"byte_end":13945912,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945913,"byte_end":13945987,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945988,"byte_end":13945993,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13945994,"byte_end":13946028,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946029,"byte_end":13946032,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946033,"byte_end":13946086,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946087,"byte_end":13946092,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946093,"byte_end":13946110,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946111,"byte_end":13946118,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946119,"byte_end":13946122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946123,"byte_end":13946181,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946182,"byte_end":13946185,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946186,"byte_end":13946199,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946200,"byte_end":13946222,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946223,"byte_end":13946257,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946258,"byte_end":13946261,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946262,"byte_end":13946336,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946337,"byte_end":13946342,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946343,"byte_end":13946380,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946381,"byte_end":13946386,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946387,"byte_end":13946404,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946405,"byte_end":13946412,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946413,"byte_end":13946416,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946417,"byte_end":13946496,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946497,"byte_end":13946514,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946515,"byte_end":13946518,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946519,"byte_end":13946540,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946541,"byte_end":13946544,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946545,"byte_end":13946619,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946620,"byte_end":13946696,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946697,"byte_end":13946707,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946708,"byte_end":13946711,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946712,"byte_end":13946725,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946726,"byte_end":13946754,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946755,"byte_end":13946788,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946789,"byte_end":13946819,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946820,"byte_end":13946823,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946824,"byte_end":13946898,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946899,"byte_end":13946904,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946905,"byte_end":13946946,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946947,"byte_end":13946982,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946983,"byte_end":13946986,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13946987,"byte_end":13947022,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947023,"byte_end":13947070,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947071,"byte_end":13947101,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947102,"byte_end":13947107,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947108,"byte_end":13947113,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947114,"byte_end":13947131,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947132,"byte_end":13947139,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947140,"byte_end":13947143,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947144,"byte_end":13947160,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947161,"byte_end":13947164,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947165,"byte_end":13947247,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947248,"byte_end":13947329,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947330,"byte_end":13947373,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947374,"byte_end":13947377,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947378,"byte_end":13947391,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947392,"byte_end":13947414,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947415,"byte_end":13947418,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947419,"byte_end":13947493,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947494,"byte_end":13947499,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947500,"byte_end":13947557,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947558,"byte_end":13947563,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947564,"byte_end":13947581,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947582,"byte_end":13947589,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947590,"byte_end":13947593,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947594,"byte_end":13947628,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947629,"byte_end":13947632,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947633,"byte_end":13947650,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947651,"byte_end":13947654,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947655,"byte_end":13947726,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947727,"byte_end":13947806,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947807,"byte_end":13947888,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947889,"byte_end":13947923,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947924,"byte_end":13947927,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947928,"byte_end":13947935,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947936,"byte_end":13947960,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947961,"byte_end":13947983,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947984,"byte_end":13947987,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13947988,"byte_end":13948033,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948034,"byte_end":13948072,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948073,"byte_end":13948076,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948077,"byte_end":13948126,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948127,"byte_end":13948130,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948131,"byte_end":13948179,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948180,"byte_end":13948183,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948184,"byte_end":13948198,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948199,"byte_end":13948204,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948205,"byte_end":13948212,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948213,"byte_end":13948216,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948217,"byte_end":13948297,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948298,"byte_end":13948382,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948383,"byte_end":13948467,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948468,"byte_end":13948518,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948519,"byte_end":13948522,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948523,"byte_end":13948556,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948557,"byte_end":13948560,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948561,"byte_end":13948642,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948643,"byte_end":13948723,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948724,"byte_end":13948811,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948812,"byte_end":13948902,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948903,"byte_end":13948989,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13948990,"byte_end":13949053,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949054,"byte_end":13949057,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949058,"byte_end":13949087,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949088,"byte_end":13949119,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949120,"byte_end":13949149,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949150,"byte_end":13949185,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949186,"byte_end":13949222,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949223,"byte_end":13949270,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949271,"byte_end":13949309,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949310,"byte_end":13949350,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949351,"byte_end":13949391,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949392,"byte_end":13949445,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949446,"byte_end":13949480,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949481,"byte_end":13949520,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949521,"byte_end":13949553,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949554,"byte_end":13949590,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949591,"byte_end":13949675,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949676,"byte_end":13949725,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949726,"byte_end":13949795,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13949796,"byte_end":13949882,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13959961,"byte_end":13959987,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13959988,"byte_end":13959991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13959992,"byte_end":13960072,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960073,"byte_end":13960133,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960134,"byte_end":13960137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960138,"byte_end":13960145,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960146,"byte_end":13960177,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960178,"byte_end":13960212,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\prelude.rs","byte_start":13960213,"byte_end":13960220,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":13968752,"byte_end":13968757,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":13968999,"byte_end":13969008,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Lines<R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":13970654,"byte_end":13970668,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":13970603,"byte_end":13970642,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":13970940,"byte_end":13970944,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadLineFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":13972131,"byte_end":13972146,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":13972080,"byte_end":13972119,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":13972414,"byte_end":13972418,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadUntilFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":13973371,"byte_end":13973376,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":13973615,"byte_end":13973624,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Split<R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13961004,"byte_end":13961014,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2786}],"decl_id":null,"docs":"    Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13962601,"byte_end":13962611,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture where\nSelf: Unpin","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"        Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13964193,"byte_end":13964202,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"        Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n        reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13965457,"byte_end":13965462,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"        Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13967062,"byte_end":13967067,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"        Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986269,"byte_end":13986274,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":3761}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986011,"byte_end":13986053,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986054,"byte_end":13986057,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986058,"byte_end":13986128,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986129,"byte_end":13986192,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986193,"byte_end":13986196,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986197,"byte_end":13986240,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986392,"byte_end":13986401,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Bytes<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6416},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988001,"byte_end":13988006,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6421}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988730,"byte_end":13988740,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988179,"byte_end":13988235,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988240,"byte_end":13988243,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988248,"byte_end":13988262,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988267,"byte_end":13988270,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988275,"byte_end":13988288,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988293,"byte_end":13988373,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988378,"byte_end":13988383,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988388,"byte_end":13988418,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988423,"byte_end":13988451,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988456,"byte_end":13988459,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988464,"byte_end":13988512,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988517,"byte_end":13988565,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988570,"byte_end":13988573,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988578,"byte_end":13988619,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988624,"byte_end":13988674,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988679,"byte_end":13988684,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988689,"byte_end":13988706,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988711,"byte_end":13988718,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989358,"byte_end":13989365,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988804,"byte_end":13988866,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988871,"byte_end":13988874,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988879,"byte_end":13988893,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988898,"byte_end":13988901,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988906,"byte_end":13988919,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988924,"byte_end":13989004,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989009,"byte_end":13989014,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989019,"byte_end":13989049,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989054,"byte_end":13989082,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989087,"byte_end":13989090,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989095,"byte_end":13989143,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989148,"byte_end":13989196,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989201,"byte_end":13989204,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989209,"byte_end":13989250,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989255,"byte_end":13989302,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989307,"byte_end":13989312,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989317,"byte_end":13989334,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989339,"byte_end":13989346,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990181,"byte_end":13990188,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989434,"byte_end":13989504,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989509,"byte_end":13989512,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989517,"byte_end":13989590,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989595,"byte_end":13989668,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989673,"byte_end":13989685,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989690,"byte_end":13989693,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989698,"byte_end":13989712,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989717,"byte_end":13989720,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989725,"byte_end":13989738,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989743,"byte_end":13989823,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989828,"byte_end":13989833,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989838,"byte_end":13989868,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989873,"byte_end":13989901,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989906,"byte_end":13989909,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989914,"byte_end":13989962,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13989967,"byte_end":13990015,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990020,"byte_end":13990023,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990028,"byte_end":13990073,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990078,"byte_end":13990125,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990130,"byte_end":13990135,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990140,"byte_end":13990157,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990162,"byte_end":13990169,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990346,"byte_end":13990349,"line_start":98,"line_end":98,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Chain<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990593,"byte_end":13990602,"line_start":107,"line_end":107,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13991118,"byte_end":13991136,"line_start":124,"line_end":124,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13991743,"byte_end":13991756,"line_start":143,"line_end":143,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13992268,"byte_end":13992275,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"consume","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":13993279,"byte_end":13993289,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":13993228,"byte_end":13993267,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":13993493,"byte_end":13993497,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":13993859,"byte_end":13993874,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":13993808,"byte_end":13993847,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":13994080,"byte_end":13994084,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExactFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13994760,"byte_end":13994775,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13994709,"byte_end":13994748,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13995020,"byte_end":13995024,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEndFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":13997214,"byte_end":13997232,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":13997163,"byte_end":13997202,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":13997510,"byte_end":13997514,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToStringFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":13998639,"byte_end":13998657,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":13998588,"byte_end":13998627,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":13998882,"byte_end":13998886,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadVectoredFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999545,"byte_end":13999549,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6378},{"krate":0,"index":6379}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000439,"byte_end":14000444,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999661,"byte_end":13999735,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999740,"byte_end":13999755,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999760,"byte_end":13999763,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999768,"byte_end":13999778,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999783,"byte_end":13999786,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999791,"byte_end":13999868,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999873,"byte_end":13999937,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999942,"byte_end":13999945,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999950,"byte_end":13999979,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999984,"byte_end":13999987,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999992,"byte_end":14000006,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000011,"byte_end":14000014,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000019,"byte_end":14000032,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000037,"byte_end":14000117,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000122,"byte_end":14000127,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000132,"byte_end":14000162,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000167,"byte_end":14000195,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000200,"byte_end":14000203,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000208,"byte_end":14000249,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000254,"byte_end":14000257,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000262,"byte_end":14000292,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000297,"byte_end":14000324,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000329,"byte_end":14000332,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000337,"byte_end":14000379,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000384,"byte_end":14000389,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000394,"byte_end":14000415,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000420,"byte_end":14000427,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001233,"byte_end":14001242,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000491,"byte_end":14000562,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000567,"byte_end":14000641,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000646,"byte_end":14000721,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000726,"byte_end":14000750,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000755,"byte_end":14000758,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000763,"byte_end":14000777,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000782,"byte_end":14000785,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000790,"byte_end":14000803,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000808,"byte_end":14000888,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000893,"byte_end":14000898,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000903,"byte_end":14000933,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000938,"byte_end":14000966,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000971,"byte_end":14000974,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14000979,"byte_end":14001020,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001025,"byte_end":14001028,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001033,"byte_end":14001063,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001068,"byte_end":14001099,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001104,"byte_end":14001129,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001134,"byte_end":14001137,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001142,"byte_end":14001177,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001182,"byte_end":14001187,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001192,"byte_end":14001209,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001214,"byte_end":14001221,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001859,"byte_end":14001869,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001307,"byte_end":14001361,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001366,"byte_end":14001369,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001374,"byte_end":14001388,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001393,"byte_end":14001396,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001401,"byte_end":14001414,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001419,"byte_end":14001499,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001504,"byte_end":14001509,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001514,"byte_end":14001544,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001549,"byte_end":14001577,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001582,"byte_end":14001585,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001590,"byte_end":14001634,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001639,"byte_end":14001642,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001647,"byte_end":14001675,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001680,"byte_end":14001714,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001719,"byte_end":14001755,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001760,"byte_end":14001763,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001768,"byte_end":14001803,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001808,"byte_end":14001813,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001818,"byte_end":14001835,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001840,"byte_end":14001847,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002454,"byte_end":14002461,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001913,"byte_end":14001959,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001964,"byte_end":14001967,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001972,"byte_end":14001986,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001991,"byte_end":14001994,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14001999,"byte_end":14002012,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002017,"byte_end":14002097,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002102,"byte_end":14002107,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002112,"byte_end":14002142,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002147,"byte_end":14002175,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002180,"byte_end":14002183,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002188,"byte_end":14002232,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002237,"byte_end":14002240,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002245,"byte_end":14002273,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002278,"byte_end":14002312,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002317,"byte_end":14002353,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002358,"byte_end":14002361,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002366,"byte_end":14002398,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002403,"byte_end":14002408,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002413,"byte_end":14002430,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002435,"byte_end":14002442,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003236,"byte_end":14003243,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002508,"byte_end":14002562,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002567,"byte_end":14002570,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002575,"byte_end":14002648,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002653,"byte_end":14002725,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002730,"byte_end":14002741,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002746,"byte_end":14002749,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002754,"byte_end":14002768,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002773,"byte_end":14002776,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002781,"byte_end":14002794,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002799,"byte_end":14002879,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002884,"byte_end":14002889,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002894,"byte_end":14002924,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002929,"byte_end":14002957,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002962,"byte_end":14002965,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14002970,"byte_end":14003014,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003019,"byte_end":14003022,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003027,"byte_end":14003055,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003060,"byte_end":14003094,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003099,"byte_end":14003135,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003140,"byte_end":14003143,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003148,"byte_end":14003180,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003185,"byte_end":14003190,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003195,"byte_end":14003212,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003217,"byte_end":14003224,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003397,"byte_end":14003406,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Take<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":" Attempt to read from the `AsyncRead` into `buf`.\n","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003337,"byte_end":14003389,"line_start":161,"line_end":161,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14004262,"byte_end":14004275,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Take<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14004761,"byte_end":14004768,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"consume","qualname":"<Take<T> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974724,"byte_end":13974731,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138}],"decl_id":null,"docs":"    Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13975807,"byte_end":13975811,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::ReadExt::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13976484,"byte_end":13976497,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13977491,"byte_end":13977502,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13978465,"byte_end":13978479,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13980337,"byte_end":13980347,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13981521,"byte_end":13981525,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::io::read::ReadExt::take","value":"fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13982612,"byte_end":13982618,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13983524,"byte_end":13983529,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13984556,"byte_end":13984561,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"fn chain<R>(Self, R) -> Chain<Self, R> where R: Read, Self: Sized","parent":{"krate":0,"index":3124},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14006993,"byte_end":14007003,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14006942,"byte_end":14006981,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14007201,"byte_end":14007205,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<SeekFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14005954,"byte_end":14005961,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":3188}],"decl_id":null,"docs":"    Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14006602,"byte_end":14006606,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3187},"children":[],"decl_id":null,"docs":"        Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14012822,"byte_end":14012833,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":3216}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14012771,"byte_end":14012810,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14013002,"byte_end":14013006,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"poll","qualname":"<FlushFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14013315,"byte_end":14013326,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3246}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14013264,"byte_end":14013303,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14013528,"byte_end":14013532,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14013888,"byte_end":14013902,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14013837,"byte_end":14013876,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14014104,"byte_end":14014108,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAllFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14014787,"byte_end":14014801,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14014724,"byte_end":14014763,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14014764,"byte_end":14014775,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14015089,"byte_end":14015093,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteFmtFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14016357,"byte_end":14016376,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14016306,"byte_end":14016345,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14016596,"byte_end":14016600,"line_start":17,"line_end":17,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteVectoredFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14007769,"byte_end":14007777,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3382}],"decl_id":null,"docs":"    Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14008597,"byte_end":14008602,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::io::write::WriteExt::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"        Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14009261,"byte_end":14009266,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"        Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14009885,"byte_end":14009899,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"        Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14010837,"byte_end":14010846,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where Self: Unpin","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"        Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14011891,"byte_end":14011900,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture where\nSelf: Unpin","parent":{"krate":0,"index":3374},"children":[],"decl_id":null,"docs":"        Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019563,"byte_end":14019572,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6336}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020203,"byte_end":14020206,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019721,"byte_end":14019780,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019785,"byte_end":14019788,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019793,"byte_end":14019866,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019871,"byte_end":14019874,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019879,"byte_end":14019893,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019898,"byte_end":14019901,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019906,"byte_end":14019919,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019924,"byte_end":14019998,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020003,"byte_end":14020008,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020013,"byte_end":14020041,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020046,"byte_end":14020079,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020084,"byte_end":14020087,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020092,"byte_end":14020147,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020152,"byte_end":14020157,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020162,"byte_end":14020179,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020184,"byte_end":14020191,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020719,"byte_end":14020732,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020304,"byte_end":14020366,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020371,"byte_end":14020374,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020379,"byte_end":14020393,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020398,"byte_end":14020401,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020406,"byte_end":14020419,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020424,"byte_end":14020498,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020503,"byte_end":14020508,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020513,"byte_end":14020541,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020546,"byte_end":14020579,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020584,"byte_end":14020587,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020592,"byte_end":14020663,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020668,"byte_end":14020673,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020678,"byte_end":14020695,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020700,"byte_end":14020707,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021453,"byte_end":14021460,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020958,"byte_end":14021004,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021009,"byte_end":14021012,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021017,"byte_end":14021083,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021088,"byte_end":14021091,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021096,"byte_end":14021110,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021115,"byte_end":14021118,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021123,"byte_end":14021136,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021141,"byte_end":14021215,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021220,"byte_end":14021225,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021230,"byte_end":14021258,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021263,"byte_end":14021296,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021301,"byte_end":14021304,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021309,"byte_end":14021364,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021369,"byte_end":14021397,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021402,"byte_end":14021407,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021412,"byte_end":14021429,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021434,"byte_end":14021441,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022020,"byte_end":14022027,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021507,"byte_end":14021561,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021566,"byte_end":14021569,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021574,"byte_end":14021640,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021645,"byte_end":14021648,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021653,"byte_end":14021667,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021672,"byte_end":14021675,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021680,"byte_end":14021693,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021698,"byte_end":14021772,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021777,"byte_end":14021782,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021787,"byte_end":14021815,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021820,"byte_end":14021853,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021858,"byte_end":14021861,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021866,"byte_end":14021928,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021933,"byte_end":14021964,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021969,"byte_end":14021974,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14021979,"byte_end":14021996,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022001,"byte_end":14022008,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022824,"byte_end":14022830,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022325,"byte_end":14022372,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022377,"byte_end":14022380,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022385,"byte_end":14022454,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022459,"byte_end":14022462,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022467,"byte_end":14022481,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022486,"byte_end":14022489,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022494,"byte_end":14022507,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022512,"byte_end":14022586,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022591,"byte_end":14022596,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022601,"byte_end":14022629,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022634,"byte_end":14022667,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022672,"byte_end":14022675,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022680,"byte_end":14022735,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022740,"byte_end":14022768,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022773,"byte_end":14022778,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022783,"byte_end":14022800,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022805,"byte_end":14022812,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023412,"byte_end":14023422,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022898,"byte_end":14022963,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022968,"byte_end":14022971,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14022976,"byte_end":14023039,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023044,"byte_end":14023047,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023052,"byte_end":14023066,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023071,"byte_end":14023074,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023079,"byte_end":14023092,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023097,"byte_end":14023171,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023176,"byte_end":14023181,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023186,"byte_end":14023214,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023219,"byte_end":14023252,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023257,"byte_end":14023260,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023265,"byte_end":14023320,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023325,"byte_end":14023356,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023361,"byte_end":14023366,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023371,"byte_end":14023388,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023393,"byte_end":14023400,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023710,"byte_end":14023719,"line_start":202,"line_end":202,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14024442,"byte_end":14024460,"line_start":221,"line_end":221,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14025173,"byte_end":14025186,"line_start":241,"line_end":241,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'a>(Pin<&'a mut Self>, &mut Context)\n-> Poll<io::Result<&'a [u8]>>","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14025890,"byte_end":14025897,"line_start":259,"line_end":259,"column_start":8,"column_end":15},"name":"consume","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026104,"byte_end":14026107,"line_start":266,"line_end":266,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufReader<R> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027408,"byte_end":14027417,"line_start":295,"line_end":295,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufReader<R> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":29,"index":47},"children":[],"decl_id":{"krate":29,"index":48},"docs":" Seeks to an offset, in bytes, in the underlying reader.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in the underlying reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026448,"byte_end":14026507,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026512,"byte_end":14026515,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ The position used for seeking with `SeekFrom::Current(_)` is the position the underlying","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026520,"byte_end":14026612,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/ reader would be at if the `BufReader` had no internal buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026617,"byte_end":14026682,"line_start":281,"line_end":281,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026687,"byte_end":14026690,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Seeking always discards the internal buffer, even if the seek position would otherwise fall","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026695,"byte_end":14026790,"line_start":283,"line_end":283,"column_start":5,"column_end":100}},{"value":"/ within it. This guarantees that calling `.into_inner()` immediately after a seek yields the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026795,"byte_end":14026890,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ underlying reader at the same position.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026895,"byte_end":14026938,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026943,"byte_end":14026946,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ See [`Seek`] for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026951,"byte_end":14026985,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026990,"byte_end":14026993,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note: In the edge case where you're seeking with `SeekFrom::Current(n)` where `n` minus the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026998,"byte_end":14027093,"line_start":289,"line_end":289,"column_start":5,"column_end":100}},{"value":"/ internal buffer length overflows an `i64`, two seeks will be performed instead of one. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027098,"byte_end":14027191,"line_start":290,"line_end":290,"column_start":5,"column_end":98}},{"value":"/ the second seek returns `Err`, the underlying reader will be left at the same position it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027196,"byte_end":14027289,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ would have if you called `seek` with `SeekFrom::Current(0)`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027294,"byte_end":14027358,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027363,"byte_end":14027366,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14027371,"byte_end":14027400,"line_start":294,"line_end":294,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6290},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032338,"byte_end":14032347,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3770},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033212,"byte_end":14033226,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032441,"byte_end":14032507,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032508,"byte_end":14032581,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032582,"byte_end":14032634,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032635,"byte_end":14032638,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032639,"byte_end":14032653,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032654,"byte_end":14032657,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032658,"byte_end":14032671,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032672,"byte_end":14032746,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032747,"byte_end":14032780,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032781,"byte_end":14032815,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032816,"byte_end":14032819,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032820,"byte_end":14032902,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032903,"byte_end":14032906,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032907,"byte_end":14032955,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14032956,"byte_end":14033010,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033011,"byte_end":14033030,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033031,"byte_end":14033050,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033051,"byte_end":14033094,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033095,"byte_end":14033135,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033136,"byte_end":14033145,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033146,"byte_end":14033152,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033153,"byte_end":14033158,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033159,"byte_end":14033176,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033177,"byte_end":14033183,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033809,"byte_end":14033812,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033287,"byte_end":14033379,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033384,"byte_end":14033417,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033422,"byte_end":14033425,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033430,"byte_end":14033444,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033449,"byte_end":14033452,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033457,"byte_end":14033470,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033475,"byte_end":14033502,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033507,"byte_end":14033581,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033586,"byte_end":14033619,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033624,"byte_end":14033658,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033663,"byte_end":14033666,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033671,"byte_end":14033753,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033758,"byte_end":14033763,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033768,"byte_end":14033785,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033790,"byte_end":14033797,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034479,"byte_end":14034492,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033910,"byte_end":14033975,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033980,"byte_end":14033983,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033988,"byte_end":14034002,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034007,"byte_end":14034010,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034015,"byte_end":14034070,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034075,"byte_end":14034078,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034083,"byte_end":14034096,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034101,"byte_end":14034128,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034133,"byte_end":14034207,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034212,"byte_end":14034245,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034250,"byte_end":14034284,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034289,"byte_end":14034292,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034297,"byte_end":14034359,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034364,"byte_end":14034423,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034428,"byte_end":14034433,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034438,"byte_end":14034455,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034460,"byte_end":14034467,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035206,"byte_end":14035213,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034669,"byte_end":14034715,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034720,"byte_end":14034723,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034728,"byte_end":14034742,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034747,"byte_end":14034750,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034755,"byte_end":14034768,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034773,"byte_end":14034800,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034805,"byte_end":14034879,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034884,"byte_end":14034917,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034922,"byte_end":14034956,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034961,"byte_end":14034964,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14034969,"byte_end":14035051,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035056,"byte_end":14035059,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035064,"byte_end":14035108,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035113,"byte_end":14035150,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035155,"byte_end":14035160,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035165,"byte_end":14035182,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035187,"byte_end":14035194,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035851,"byte_end":14035858,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035260,"byte_end":14035314,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035319,"byte_end":14035322,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035327,"byte_end":14035392,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035397,"byte_end":14035400,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035405,"byte_end":14035419,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035424,"byte_end":14035427,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035432,"byte_end":14035445,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035450,"byte_end":14035524,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035529,"byte_end":14035562,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035567,"byte_end":14035601,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035606,"byte_end":14035609,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035614,"byte_end":14035696,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035701,"byte_end":14035704,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035709,"byte_end":14035753,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035758,"byte_end":14035795,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035800,"byte_end":14035805,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035810,"byte_end":14035827,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14035832,"byte_end":14035839,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036924,"byte_end":14036934,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036155,"byte_end":14036210,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036215,"byte_end":14036218,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036223,"byte_end":14036285,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036290,"byte_end":14036383,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036388,"byte_end":14036391,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036396,"byte_end":14036444,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036449,"byte_end":14036463,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036468,"byte_end":14036471,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036476,"byte_end":14036489,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036494,"byte_end":14036568,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036573,"byte_end":14036606,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036611,"byte_end":14036645,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036650,"byte_end":14036653,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036658,"byte_end":14036740,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036745,"byte_end":14036748,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036753,"byte_end":14036801,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036806,"byte_end":14036862,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036867,"byte_end":14036872,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036877,"byte_end":14036894,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14036899,"byte_end":14036906,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037704,"byte_end":14037710,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037171,"byte_end":14037227,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037232,"byte_end":14037235,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037240,"byte_end":14037254,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037259,"byte_end":14037262,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037267,"byte_end":14037280,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037285,"byte_end":14037359,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037364,"byte_end":14037397,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037402,"byte_end":14037436,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037441,"byte_end":14037444,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037449,"byte_end":14037531,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037536,"byte_end":14037539,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037544,"byte_end":14037592,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037597,"byte_end":14037648,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037653,"byte_end":14037658,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037663,"byte_end":14037680,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14037685,"byte_end":14037692,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14039131,"byte_end":14039141,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14039594,"byte_end":14039604,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14039786,"byte_end":14039796,"line_start":324,"line_end":324,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040038,"byte_end":14040041,"line_start":331,"line_end":331,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufWriter<W> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040435,"byte_end":14040444,"line_start":343,"line_end":343,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufWriter<W> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":29,"index":47},"children":[],"decl_id":{"krate":29,"index":48},"docs":" Seek to the offset, in bytes, in the underlying writer.","sig":null,"attributes":[{"value":"/ Seek to the offset, in bytes, in the underlying writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040290,"byte_end":14040349,"line_start":340,"line_end":340,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040354,"byte_end":14040357,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Seeking always writes out the internal buffer before seeking.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040362,"byte_end":14040427,"line_start":342,"line_end":342,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042128,"byte_end":14042132,"line_start":48,"line_end":48,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"async fn copy<R, W, '_, '_>(&'_ mut R, &'_ mut W) -> /*impl Trait*/ where\nR: Read + Unpin + ?Sized, W: Write + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14040876,"byte_end":14040933,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14040934,"byte_end":14040937,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14040938,"byte_end":14041006,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041007,"byte_end":14041071,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041072,"byte_end":14041088,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041089,"byte_end":14041092,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041093,"byte_end":14041156,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041157,"byte_end":14041194,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041195,"byte_end":14041198,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041199,"byte_end":14041279,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041280,"byte_end":14041345,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041346,"byte_end":14041349,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041350,"byte_end":14041409,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041410,"byte_end":14041413,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041414,"byte_end":14041482,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041483,"byte_end":14041519,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041520,"byte_end":14041523,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041524,"byte_end":14041536,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041537,"byte_end":14041540,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041541,"byte_end":14041616,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041617,"byte_end":14041692,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041693,"byte_end":14041762,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041763,"byte_end":14041766,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041767,"byte_end":14041781,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041782,"byte_end":14041785,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041786,"byte_end":14041793,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041794,"byte_end":14041868,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041869,"byte_end":14041874,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041875,"byte_end":14041897,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041898,"byte_end":14041901,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041902,"byte_end":14041939,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041940,"byte_end":14041974,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041975,"byte_end":14041978,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14041979,"byte_end":14042025,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042026,"byte_end":14042031,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042032,"byte_end":14042049,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042050,"byte_end":14042057,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"cfg(any(feature = \"docs\", not(feature = \"unstable\")))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042058,"byte_end":14042114,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3778},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047095,"byte_end":14047101,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046271,"byte_end":14046334,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046335,"byte_end":14046363,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046364,"byte_end":14046367,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046368,"byte_end":14046436,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046437,"byte_end":14046509,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046510,"byte_end":14046589,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046590,"byte_end":14046615,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046616,"byte_end":14046619,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046620,"byte_end":14046694,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046695,"byte_end":14046762,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046763,"byte_end":14046796,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046797,"byte_end":14046800,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046801,"byte_end":14046830,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046831,"byte_end":14046860,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046861,"byte_end":14046892,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046893,"byte_end":14046955,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14046956,"byte_end":14047019,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047020,"byte_end":14047050,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047688,"byte_end":14047691,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047165,"byte_end":14047240,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047245,"byte_end":14047248,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047253,"byte_end":14047327,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047332,"byte_end":14047400,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047405,"byte_end":14047443,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047448,"byte_end":14047451,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047456,"byte_end":14047470,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047475,"byte_end":14047478,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047483,"byte_end":14047490,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047495,"byte_end":14047525,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047530,"byte_end":14047533,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047538,"byte_end":14047577,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047582,"byte_end":14047630,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047635,"byte_end":14047664,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047669,"byte_end":14047676,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048150,"byte_end":14048160,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047803,"byte_end":14047860,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047865,"byte_end":14047868,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047873,"byte_end":14047887,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047892,"byte_end":14047895,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047900,"byte_end":14047907,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047912,"byte_end":14047942,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047947,"byte_end":14047950,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047955,"byte_end":14047994,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047999,"byte_end":14048047,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048052,"byte_end":14048081,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048086,"byte_end":14048089,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048094,"byte_end":14048126,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048131,"byte_end":14048138,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048570,"byte_end":14048577,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048217,"byte_end":14048277,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048282,"byte_end":14048285,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048290,"byte_end":14048304,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048309,"byte_end":14048312,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048317,"byte_end":14048324,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048329,"byte_end":14048359,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048364,"byte_end":14048367,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048372,"byte_end":14048411,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048416,"byte_end":14048464,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048469,"byte_end":14048498,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048503,"byte_end":14048506,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048511,"byte_end":14048546,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048551,"byte_end":14048558,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049151,"byte_end":14049158,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048633,"byte_end":14048701,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048706,"byte_end":14048709,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048714,"byte_end":14048787,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048792,"byte_end":14048854,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048859,"byte_end":14048862,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048867,"byte_end":14048881,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048886,"byte_end":14048889,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048894,"byte_end":14048901,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048906,"byte_end":14048936,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048941,"byte_end":14048944,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048949,"byte_end":14048992,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14048997,"byte_end":14049045,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049050,"byte_end":14049079,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049084,"byte_end":14049087,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049092,"byte_end":14049127,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049132,"byte_end":14049139,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049879,"byte_end":14049887,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049222,"byte_end":14049270,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049275,"byte_end":14049278,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049283,"byte_end":14049297,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049302,"byte_end":14049305,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049310,"byte_end":14049317,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049322,"byte_end":14049396,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049401,"byte_end":14049406,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049411,"byte_end":14049441,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049446,"byte_end":14049480,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049485,"byte_end":14049517,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049522,"byte_end":14049525,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049530,"byte_end":14049582,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049587,"byte_end":14049590,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049595,"byte_end":14049630,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049635,"byte_end":14049638,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049643,"byte_end":14049686,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049691,"byte_end":14049726,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049731,"byte_end":14049734,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049739,"byte_end":14049783,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049788,"byte_end":14049823,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049828,"byte_end":14049833,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049838,"byte_end":14049855,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049860,"byte_end":14049867,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050357,"byte_end":14050369,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049945,"byte_end":14049982,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049987,"byte_end":14049990,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14049995,"byte_end":14050009,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050014,"byte_end":14050017,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050022,"byte_end":14050029,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050034,"byte_end":14050064,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050069,"byte_end":14050072,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050077,"byte_end":14050129,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050134,"byte_end":14050137,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050142,"byte_end":14050177,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050182,"byte_end":14050185,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050190,"byte_end":14050215,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050220,"byte_end":14050255,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050260,"byte_end":14050263,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050268,"byte_end":14050293,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050298,"byte_end":14050333,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050338,"byte_end":14050345,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050509,"byte_end":14050518,"line_start":158,"line_end":158,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<Cursor<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":29,"index":47},"children":[],"decl_id":{"krate":29,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050781,"byte_end":14050790,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050993,"byte_end":14051011,"line_start":179,"line_end":179,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051303,"byte_end":14051316,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051478,"byte_end":14051485,"line_start":196,"line_end":196,"column_start":8,"column_end":15},"name":"consume","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051633,"byte_end":14051643,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<&'_ mut [u8]> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051842,"byte_end":14051861,"line_start":210,"line_end":210,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Cursor<&'_ mut [u8]> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052080,"byte_end":14052090,"line_start":218,"line_end":218,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<&'_ mut [u8]> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052238,"byte_end":14052248,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<&'_ mut [u8]> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052401,"byte_end":14052411,"line_start":228,"line_end":228,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052610,"byte_end":14052620,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052733,"byte_end":14052743,"line_start":240,"line_end":240,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<&'_ mut Vec<u8>> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052926,"byte_end":14052936,"line_start":246,"line_end":246,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Cursor<Vec<u8>> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14053135,"byte_end":14053145,"line_start":254,"line_end":254,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Cursor<Vec<u8>> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14053258,"byte_end":14053268,"line_start":258,"line_end":258,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Cursor<Vec<u8>> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053913,"byte_end":14053918,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053518,"byte_end":14053561,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053562,"byte_end":14053565,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053566,"byte_end":14053580,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053581,"byte_end":14053584,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053585,"byte_end":14053596,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053597,"byte_end":14053671,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053672,"byte_end":14053677,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053678,"byte_end":14053700,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053701,"byte_end":14053731,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053732,"byte_end":14053735,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053736,"byte_end":14053765,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053766,"byte_end":14053799,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053800,"byte_end":14053840,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053841,"byte_end":14053844,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053845,"byte_end":14053873,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053874,"byte_end":14053879,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053880,"byte_end":14053897,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053898,"byte_end":14053905,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054136,"byte_end":14054141,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3692}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053962,"byte_end":14053997,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14053998,"byte_end":14054001,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054002,"byte_end":14054063,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054064,"byte_end":14054091,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054092,"byte_end":14054095,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054096,"byte_end":14054124,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054200,"byte_end":14054203,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Empty as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054338,"byte_end":14054347,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Empty as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054321,"byte_end":14054330,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054547,"byte_end":14054560,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Empty as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'a>(Pin<&'a mut Self>, &mut Context)\n-> Poll<io::Result<&'a [u8]>>","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054530,"byte_end":14054539,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054723,"byte_end":14054730,"line_start":66,"line_end":66,"column_start":8,"column_end":15},"name":"consume","qualname":"<Empty as futures_io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":29,"index":49},"children":[],"decl_id":{"krate":29,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054706,"byte_end":14054715,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055386,"byte_end":14055392,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14054867,"byte_end":14054936,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14054937,"byte_end":14054940,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14054941,"byte_end":14055037,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055038,"byte_end":14055041,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055042,"byte_end":14055057,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055058,"byte_end":14055061,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055062,"byte_end":14055073,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055074,"byte_end":14055148,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055149,"byte_end":14055154,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055155,"byte_end":14055177,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055178,"byte_end":14055208,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055209,"byte_end":14055212,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055213,"byte_end":14055241,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055242,"byte_end":14055295,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055296,"byte_end":14055299,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055300,"byte_end":14055346,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055347,"byte_end":14055352,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055353,"byte_end":14055370,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055371,"byte_end":14055378,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055662,"byte_end":14055668,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3724}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055438,"byte_end":14055520,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055521,"byte_end":14055524,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055525,"byte_end":14055587,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055588,"byte_end":14055615,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055616,"byte_end":14055619,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055620,"byte_end":14055650,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055724,"byte_end":14055727,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Repeat as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055863,"byte_end":14055872,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Repeat as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055846,"byte_end":14055855,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056544,"byte_end":14056548,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056202,"byte_end":14056256,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056257,"byte_end":14056260,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056261,"byte_end":14056275,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056276,"byte_end":14056279,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056280,"byte_end":14056291,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056292,"byte_end":14056366,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056367,"byte_end":14056372,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056373,"byte_end":14056395,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056396,"byte_end":14056426,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056427,"byte_end":14056430,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056431,"byte_end":14056463,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056464,"byte_end":14056504,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056505,"byte_end":14056510,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056511,"byte_end":14056528,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056529,"byte_end":14056536,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056776,"byte_end":14056780,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3752}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056590,"byte_end":14056636,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056637,"byte_end":14056640,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056641,"byte_end":14056719,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056720,"byte_end":14056733,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056734,"byte_end":14056737,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056738,"byte_end":14056764,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056838,"byte_end":14056841,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sink as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056975,"byte_end":14056985,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Sink as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056958,"byte_end":14056967,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14057164,"byte_end":14057174,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Sink as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14057147,"byte_end":14057156,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14057300,"byte_end":14057310,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Sink as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14057283,"byte_end":14057292,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3851},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058224,"byte_end":14058231,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where F: Future<Output =\nio::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057611,"byte_end":14057674,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057675,"byte_end":14057678,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057679,"byte_end":14057735,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057736,"byte_end":14057795,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057796,"byte_end":14057799,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057800,"byte_end":14057814,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057815,"byte_end":14057818,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057819,"byte_end":14057832,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057833,"byte_end":14057907,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057908,"byte_end":14057913,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057914,"byte_end":14057942,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057943,"byte_end":14057946,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057947,"byte_end":14057969,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057970,"byte_end":14057973,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14057974,"byte_end":14058021,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058022,"byte_end":14058054,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058055,"byte_end":14058092,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058093,"byte_end":14058143,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058144,"byte_end":14058158,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058159,"byte_end":14058165,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058166,"byte_end":14058178,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058179,"byte_end":14058184,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058185,"byte_end":14058202,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058203,"byte_end":14058210,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060178,"byte_end":14060184,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059409,"byte_end":14059482,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059483,"byte_end":14059486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059487,"byte_end":14059548,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059549,"byte_end":14059552,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059553,"byte_end":14059625,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059626,"byte_end":14059629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059630,"byte_end":14059677,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059678,"byte_end":14059681,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059682,"byte_end":14059773,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059774,"byte_end":14059866,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059867,"byte_end":14059880,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059881,"byte_end":14059884,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059885,"byte_end":14059899,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059900,"byte_end":14059903,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059904,"byte_end":14059917,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059918,"byte_end":14059992,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059993,"byte_end":14059998,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14059999,"byte_end":14060021,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060022,"byte_end":14060052,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060053,"byte_end":14060056,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060057,"byte_end":14060091,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060092,"byte_end":14060138,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060139,"byte_end":14060144,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060145,"byte_end":14060162,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060163,"byte_end":14060170,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060814,"byte_end":14060820,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060342,"byte_end":14060400,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060401,"byte_end":14060404,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060405,"byte_end":14060485,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060486,"byte_end":14060495,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060496,"byte_end":14060499,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060500,"byte_end":14060547,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060548,"byte_end":14060551,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060552,"byte_end":14060643,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060644,"byte_end":14060736,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060737,"byte_end":14060750,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060751,"byte_end":14060754,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14060755,"byte_end":14060785,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14061713,"byte_end":14061723,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Stderr as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14063768,"byte_end":14063778,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Stderr as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14064985,"byte_end":14064995,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Stderr as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14065412,"byte_end":14065425,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stderr as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle(&Self) -> RawHandle","parent":{"krate":1,"index":5794},"children":[],"decl_id":{"krate":1,"index":5795},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066477,"byte_end":14066482,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065723,"byte_end":14065796,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065797,"byte_end":14065800,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065801,"byte_end":14065861,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065862,"byte_end":14065865,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065866,"byte_end":14065936,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065937,"byte_end":14065940,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065941,"byte_end":14065988,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065989,"byte_end":14065992,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14065993,"byte_end":14066084,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066085,"byte_end":14066176,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066177,"byte_end":14066190,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066191,"byte_end":14066194,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066195,"byte_end":14066209,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066210,"byte_end":14066213,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066214,"byte_end":14066227,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066228,"byte_end":14066302,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066303,"byte_end":14066308,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066309,"byte_end":14066331,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066332,"byte_end":14066335,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066336,"byte_end":14066364,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066365,"byte_end":14066398,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066399,"byte_end":14066437,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066438,"byte_end":14066443,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066444,"byte_end":14066461,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066462,"byte_end":14066469,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14067133,"byte_end":14067138,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066665,"byte_end":14066723,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066724,"byte_end":14066727,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066728,"byte_end":14066807,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066808,"byte_end":14066817,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066818,"byte_end":14066821,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066822,"byte_end":14066869,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066870,"byte_end":14066873,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066874,"byte_end":14066965,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14066966,"byte_end":14067057,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14067058,"byte_end":14067071,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14067072,"byte_end":14067075,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14067076,"byte_end":14067104,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068459,"byte_end":14068468,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068054,"byte_end":14068106,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068111,"byte_end":14068114,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068119,"byte_end":14068133,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068138,"byte_end":14068141,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068146,"byte_end":14068159,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068164,"byte_end":14068238,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068243,"byte_end":14068248,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068253,"byte_end":14068275,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068280,"byte_end":14068283,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068288,"byte_end":14068316,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068321,"byte_end":14068354,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068359,"byte_end":14068397,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068402,"byte_end":14068407,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068412,"byte_end":14068429,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068434,"byte_end":14068441,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14070078,"byte_end":14070087,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Stdin as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14072431,"byte_end":14072444,"line_start":215,"line_end":215,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stdin as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle(&Self) -> RawHandle","parent":{"krate":1,"index":5794},"children":[],"decl_id":{"krate":1,"index":5795},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdio.rs","byte_start":14072765,"byte_end":14072771,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdio.rs","byte_start":14072942,"byte_end":14072949,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074022,"byte_end":14074028,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073252,"byte_end":14073326,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073327,"byte_end":14073330,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073331,"byte_end":14073392,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073393,"byte_end":14073396,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073397,"byte_end":14073469,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073470,"byte_end":14073473,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073474,"byte_end":14073521,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073522,"byte_end":14073525,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073526,"byte_end":14073617,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073618,"byte_end":14073710,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073711,"byte_end":14073724,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073725,"byte_end":14073728,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073729,"byte_end":14073743,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073744,"byte_end":14073747,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073748,"byte_end":14073761,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073762,"byte_end":14073836,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073837,"byte_end":14073842,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073843,"byte_end":14073865,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073866,"byte_end":14073896,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073897,"byte_end":14073900,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073901,"byte_end":14073935,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073936,"byte_end":14073982,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073983,"byte_end":14073988,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14073989,"byte_end":14074006,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074007,"byte_end":14074014,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074659,"byte_end":14074665,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074186,"byte_end":14074245,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074246,"byte_end":14074249,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074250,"byte_end":14074326,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074327,"byte_end":14074340,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074341,"byte_end":14074344,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074345,"byte_end":14074392,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074393,"byte_end":14074396,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074397,"byte_end":14074488,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074489,"byte_end":14074581,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074582,"byte_end":14074595,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074596,"byte_end":14074599,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14074600,"byte_end":14074630,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14075558,"byte_end":14075568,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Stdout as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14077613,"byte_end":14077623,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Stdout as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14078830,"byte_end":14078840,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Stdout as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14079257,"byte_end":14079270,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Stdout as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle(&Self) -> RawHandle","parent":{"krate":1,"index":5794},"children":[],"decl_id":{"krate":1,"index":5795},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":4115}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":13951315,"byte_end":13951342,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":4116}],"decl_id":null,"docs":" Platform-specific extensions for Windows.\n","sig":null,"attributes":[{"value":"cfg(any(windows, feature = \"docs\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":15695,"byte_end":15733,"line_start":170,"line_end":170,"column_start":13,"column_end":51}},{"value":"/ Platform-specific extensions for Windows.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":14079358,"byte_end":14079403,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::windows::io","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4139}],"decl_id":null,"docs":" Windows-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Windows-specific I/O extensions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\io.rs","byte_start":14079597,"byte_end":14079633,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4151},{"krate":0,"index":4154},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951416,"byte_end":13951438,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951439,"byte_end":13951442,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951443,"byte_end":13951523,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951524,"byte_end":13951527,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951528,"byte_end":13951542,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951543,"byte_end":13951546,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951547,"byte_end":13951575,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951576,"byte_end":13951579,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951580,"byte_end":13951587,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951588,"byte_end":13951618,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951619,"byte_end":13951649,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\prelude.rs","byte_start":13951650,"byte_end":13951657,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952645,"byte_end":13952676,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952677,"byte_end":13952680,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952681,"byte_end":13952734,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952735,"byte_end":13952738,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952739,"byte_end":13952803,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952804,"byte_end":13952807,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952808,"byte_end":13952843,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952844,"byte_end":13952847,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952848,"byte_end":13952922,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952923,"byte_end":13952994,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952995,"byte_end":13952998,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13952999,"byte_end":13953068,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953069,"byte_end":13953139,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953140,"byte_end":13953211,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953212,"byte_end":13953215,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953216,"byte_end":13953291,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953292,"byte_end":13953295,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953296,"byte_end":13953303,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953304,"byte_end":13953330,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953331,"byte_end":13953357,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953358,"byte_end":13953384,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953385,"byte_end":13953388,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953389,"byte_end":13953404,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953405,"byte_end":13953421,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953422,"byte_end":13953440,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953441,"byte_end":13953459,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953460,"byte_end":13953482,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953483,"byte_end":13953501,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953502,"byte_end":13953544,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953545,"byte_end":13953563,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953564,"byte_end":13953573,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953574,"byte_end":13953579,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953580,"byte_end":13953587,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953588,"byte_end":13953591,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953592,"byte_end":13953669,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953670,"byte_end":13953735,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953736,"byte_end":13953755,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953756,"byte_end":13953759,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953760,"byte_end":13953831,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953832,"byte_end":13953866,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953867,"byte_end":13953870,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953871,"byte_end":13953948,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13953949,"byte_end":13954022,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954023,"byte_end":13954026,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954027,"byte_end":13954102,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954103,"byte_end":13954154,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954155,"byte_end":13954158,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954159,"byte_end":13954239,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954240,"byte_end":13954317,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954318,"byte_end":13954346,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954347,"byte_end":13954350,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954351,"byte_end":13954421,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954422,"byte_end":13954487,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954488,"byte_end":13954534,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954535,"byte_end":13954538,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954539,"byte_end":13954602,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954603,"byte_end":13954673,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954674,"byte_end":13954737,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954738,"byte_end":13954741,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954742,"byte_end":13954812,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954813,"byte_end":13954879,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954880,"byte_end":13954950,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13954951,"byte_end":13955020,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955021,"byte_end":13955059,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955060,"byte_end":13955063,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955064,"byte_end":13955139,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955140,"byte_end":13955210,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955211,"byte_end":13955257,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955258,"byte_end":13955261,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955262,"byte_end":13955332,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955333,"byte_end":13955412,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955413,"byte_end":13955416,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955417,"byte_end":13955446,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955447,"byte_end":13955450,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955451,"byte_end":13955531,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955532,"byte_end":13955552,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955553,"byte_end":13955556,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955557,"byte_end":13955633,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955634,"byte_end":13955710,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955711,"byte_end":13955789,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955790,"byte_end":13955839,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955840,"byte_end":13955843,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955844,"byte_end":13955914,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955915,"byte_end":13955972,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13955973,"byte_end":13956028,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956029,"byte_end":13956032,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956033,"byte_end":13956100,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956101,"byte_end":13956158,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956159,"byte_end":13956229,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956230,"byte_end":13956296,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956297,"byte_end":13956300,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956301,"byte_end":13956367,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956368,"byte_end":13956371,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956372,"byte_end":13956441,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956442,"byte_end":13956510,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956511,"byte_end":13956566,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956567,"byte_end":13956636,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956637,"byte_end":13956673,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956674,"byte_end":13956743,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956744,"byte_end":13956801,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956802,"byte_end":13956805,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956806,"byte_end":13956872,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956873,"byte_end":13956960,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13956961,"byte_end":13957033,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957034,"byte_end":13957104,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957105,"byte_end":13957181,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957182,"byte_end":13957259,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957260,"byte_end":13957263,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957264,"byte_end":13957307,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957308,"byte_end":13957311,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957312,"byte_end":13957390,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957391,"byte_end":13957456,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957457,"byte_end":13957498,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957499,"byte_end":13957502,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957503,"byte_end":13957569,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957570,"byte_end":13957631,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957632,"byte_end":13957686,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957687,"byte_end":13957755,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957756,"byte_end":13957767,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957768,"byte_end":13957771,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957772,"byte_end":13957837,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957838,"byte_end":13957850,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957851,"byte_end":13957854,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957855,"byte_end":13957925,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957926,"byte_end":13957993,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13957994,"byte_end":13958050,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958051,"byte_end":13958054,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958055,"byte_end":13958123,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958124,"byte_end":13958194,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958195,"byte_end":13958210,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958211,"byte_end":13958214,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958215,"byte_end":13958281,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958282,"byte_end":13958340,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958341,"byte_end":13958344,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958345,"byte_end":13958413,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958414,"byte_end":13958478,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958479,"byte_end":13958549,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958550,"byte_end":13958564,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958565,"byte_end":13958568,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If you're looking for channels, check out","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958569,"byte_end":13958614,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ [`async_std::channel`][crate::channel].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958615,"byte_end":13958658,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958659,"byte_end":13958662,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958663,"byte_end":13958691,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958692,"byte_end":13958728,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958729,"byte_end":13958761,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958762,"byte_end":13958794,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958795,"byte_end":13958829,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958830,"byte_end":13958833,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958834,"byte_end":13958848,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958849,"byte_end":13958852,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958853,"byte_end":13958915,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958916,"byte_end":13958919,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958920,"byte_end":13958927,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958928,"byte_end":13958967,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958968,"byte_end":13958973,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13958974,"byte_end":13959012,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959013,"byte_end":13959037,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959038,"byte_end":13959041,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959042,"byte_end":13959079,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959080,"byte_end":13959104,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959105,"byte_end":13959108,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959109,"byte_end":13959137,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959138,"byte_end":13959167,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959168,"byte_end":13959174,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959175,"byte_end":13959186,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959187,"byte_end":13959190,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959191,"byte_end":13959227,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959228,"byte_end":13959233,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959234,"byte_end":13959242,"line_start":169,"line_end":169,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959243,"byte_end":13959250,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\sync\\mod.rs","byte_start":13959252,"byte_end":13959292,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","parent":null,"children":[{"krate":0,"index":2500}],"decl_id":null,"docs":" Channels","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16438,"byte_end":16461,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959714,"byte_end":13959726,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959727,"byte_end":13959730,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Multi-producer, multi-consumer queues, used for message-based","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959731,"byte_end":13959796,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ communication. Can provide a lightweight inter-task synchronisation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959797,"byte_end":13959868,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ mechanism, at the cost of some extra memory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\channel.rs","byte_start":13959869,"byte_end":13959917,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4185},{"krate":0,"index":4188},{"krate":0,"index":4191},{"krate":0,"index":4194},{"krate":0,"index":4197},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4209},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4218},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4251},{"krate":0,"index":4254},{"krate":0,"index":4257},{"krate":0,"index":4280},{"krate":0,"index":4300},{"krate":0,"index":4319},{"krate":0,"index":4338},{"krate":0,"index":4359},{"krate":0,"index":4404},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4643},{"krate":0,"index":4658},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4709},{"krate":0,"index":4757},{"krate":0,"index":4780},{"krate":0,"index":4799},{"krate":0,"index":4818},{"krate":0,"index":4837},{"krate":0,"index":4856},{"krate":0,"index":4876},{"krate":0,"index":4894},{"krate":0,"index":4912}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11104,"byte_end":11138,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082758,"byte_end":14082797,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082798,"byte_end":14082801,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082802,"byte_end":14082853,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082854,"byte_end":14082857,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082858,"byte_end":14082904,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082905,"byte_end":14082957,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14082958,"byte_end":14083018,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083019,"byte_end":14083022,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083023,"byte_end":14083057,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083058,"byte_end":14083061,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083062,"byte_end":14083106,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083107,"byte_end":14083157,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083158,"byte_end":14083161,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083162,"byte_end":14083176,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083177,"byte_end":14083180,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083181,"byte_end":14083230,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083231,"byte_end":14083234,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083235,"byte_end":14083248,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083249,"byte_end":14083323,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083324,"byte_end":14083329,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083330,"byte_end":14083358,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083359,"byte_end":14083389,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083390,"byte_end":14083393,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083394,"byte_end":14083442,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083443,"byte_end":14083487,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083488,"byte_end":14083493,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083494,"byte_end":14083511,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\mod.rs","byte_start":14083512,"byte_end":14083519,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085581,"byte_end":14085593,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"async fn canonicalize<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084779,"byte_end":14084820,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084821,"byte_end":14084824,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084825,"byte_end":14084923,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084924,"byte_end":14084943,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084944,"byte_end":14084947,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14084948,"byte_end":14085015,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085016,"byte_end":14085019,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085020,"byte_end":14085104,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085105,"byte_end":14085108,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085109,"byte_end":14085121,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085122,"byte_end":14085125,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085126,"byte_end":14085184,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085185,"byte_end":14085188,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085189,"byte_end":14085250,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085251,"byte_end":14085308,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085309,"byte_end":14085345,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085346,"byte_end":14085349,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085350,"byte_end":14085364,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085365,"byte_end":14085368,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085369,"byte_end":14085382,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085383,"byte_end":14085457,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085458,"byte_end":14085463,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085464,"byte_end":14085486,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085487,"byte_end":14085490,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085491,"byte_end":14085535,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085536,"byte_end":14085541,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085542,"byte_end":14085559,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\canonicalize.rs","byte_start":14085560,"byte_end":14085567,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087183,"byte_end":14087187,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"async fn copy<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14085985,"byte_end":14086053,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086054,"byte_end":14086057,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086058,"byte_end":14086157,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086158,"byte_end":14086183,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086184,"byte_end":14086187,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086188,"byte_end":14086285,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086286,"byte_end":14086360,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086361,"byte_end":14086364,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086365,"byte_end":14086461,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086462,"byte_end":14086488,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086489,"byte_end":14086492,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086493,"byte_end":14086552,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086553,"byte_end":14086556,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086557,"byte_end":14086587,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086588,"byte_end":14086624,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086625,"byte_end":14086693,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086694,"byte_end":14086697,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086698,"byte_end":14086710,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086711,"byte_end":14086714,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086715,"byte_end":14086773,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086774,"byte_end":14086777,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086778,"byte_end":14086826,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086827,"byte_end":14086900,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086901,"byte_end":14086937,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086938,"byte_end":14086941,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086942,"byte_end":14086956,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086957,"byte_end":14086960,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086961,"byte_end":14086974,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14086975,"byte_end":14087049,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087050,"byte_end":14087055,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087056,"byte_end":14087078,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087079,"byte_end":14087082,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087083,"byte_end":14087137,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087138,"byte_end":14087143,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087144,"byte_end":14087161,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\copy.rs","byte_start":14087162,"byte_end":14087169,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088582,"byte_end":14088592,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"async fn create_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087617,"byte_end":14087645,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087646,"byte_end":14087649,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087650,"byte_end":14087747,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087748,"byte_end":14087839,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087840,"byte_end":14087843,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087844,"byte_end":14087909,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087910,"byte_end":14087913,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087914,"byte_end":14087960,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14087961,"byte_end":14088041,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088042,"byte_end":14088045,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088046,"byte_end":14088058,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088059,"byte_end":14088062,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088063,"byte_end":14088121,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088122,"byte_end":14088125,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088126,"byte_end":14088187,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088188,"byte_end":14088238,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088239,"byte_end":14088307,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088308,"byte_end":14088344,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088345,"byte_end":14088348,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088349,"byte_end":14088363,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088364,"byte_end":14088367,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088368,"byte_end":14088381,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088382,"byte_end":14088456,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088457,"byte_end":14088462,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088463,"byte_end":14088485,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088486,"byte_end":14088489,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088490,"byte_end":14088536,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088537,"byte_end":14088542,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088543,"byte_end":14088560,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir.rs","byte_start":14088561,"byte_end":14088568,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089707,"byte_end":14089721,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"async fn create_dir_all<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14088952,"byte_end":14089023,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089024,"byte_end":14089027,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089028,"byte_end":14089097,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089098,"byte_end":14089101,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089102,"byte_end":14089190,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089191,"byte_end":14089194,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089195,"byte_end":14089207,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089208,"byte_end":14089211,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089212,"byte_end":14089270,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089271,"byte_end":14089274,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089275,"byte_end":14089336,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089337,"byte_end":14089428,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089429,"byte_end":14089465,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089466,"byte_end":14089469,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089470,"byte_end":14089484,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089485,"byte_end":14089488,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089489,"byte_end":14089502,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089503,"byte_end":14089577,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089578,"byte_end":14089583,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089584,"byte_end":14089606,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089607,"byte_end":14089610,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089611,"byte_end":14089661,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089662,"byte_end":14089667,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089668,"byte_end":14089685,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\create_dir_all.rs","byte_start":14089686,"byte_end":14089693,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090503,"byte_end":14090513,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":5722}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090084,"byte_end":14090149,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090150,"byte_end":14090153,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090154,"byte_end":14090234,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090235,"byte_end":14090238,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090239,"byte_end":14090300,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090301,"byte_end":14090304,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090305,"byte_end":14090380,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090381,"byte_end":14090465,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091041,"byte_end":14091044,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090728,"byte_end":14090763,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090768,"byte_end":14090771,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090776,"byte_end":14090833,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090838,"byte_end":14090841,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090846,"byte_end":14090882,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090887,"byte_end":14090890,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090895,"byte_end":14090909,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090914,"byte_end":14090917,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090922,"byte_end":14090929,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090934,"byte_end":14090968,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090973,"byte_end":14090976,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090981,"byte_end":14091017,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091022,"byte_end":14091029,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091792,"byte_end":14091801,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091294,"byte_end":14091333,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091338,"byte_end":14091341,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091346,"byte_end":14091440,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091445,"byte_end":14091539,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091544,"byte_end":14091547,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091552,"byte_end":14091596,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091601,"byte_end":14091604,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091609,"byte_end":14091623,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091628,"byte_end":14091631,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091636,"byte_end":14091643,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091648,"byte_end":14091682,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091687,"byte_end":14091690,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091695,"byte_end":14091735,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091740,"byte_end":14091768,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091773,"byte_end":14091780,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092733,"byte_end":14092739,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"fn create<P>(&Self, P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091905,"byte_end":14091957,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091962,"byte_end":14091965,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14091970,"byte_end":14092065,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092070,"byte_end":14092073,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092078,"byte_end":14092090,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092095,"byte_end":14092098,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092103,"byte_end":14092161,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092166,"byte_end":14092169,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092174,"byte_end":14092235,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092240,"byte_end":14092331,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092336,"byte_end":14092372,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092377,"byte_end":14092380,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092385,"byte_end":14092399,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092404,"byte_end":14092407,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092412,"byte_end":14092425,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092430,"byte_end":14092504,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092509,"byte_end":14092514,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092519,"byte_end":14092553,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092558,"byte_end":14092561,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092566,"byte_end":14092587,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092592,"byte_end":14092616,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092621,"byte_end":14092656,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092661,"byte_end":14092677,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092682,"byte_end":14092687,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092692,"byte_end":14092709,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14092714,"byte_end":14092721,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093905,"byte_end":14093913,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093609,"byte_end":14093637,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093638,"byte_end":14093641,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093642,"byte_end":14093709,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093710,"byte_end":14093713,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093714,"byte_end":14093773,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093774,"byte_end":14093777,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093778,"byte_end":14093812,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093813,"byte_end":14093893,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094804,"byte_end":14094808,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094130,"byte_end":14094170,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094175,"byte_end":14094178,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094183,"byte_end":14094277,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094282,"byte_end":14094300,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094305,"byte_end":14094308,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094313,"byte_end":14094347,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094352,"byte_end":14094355,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094360,"byte_end":14094374,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094379,"byte_end":14094382,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094387,"byte_end":14094400,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094405,"byte_end":14094479,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094484,"byte_end":14094489,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094494,"byte_end":14094516,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094521,"byte_end":14094551,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094556,"byte_end":14094559,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094564,"byte_end":14094607,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094612,"byte_end":14094615,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094620,"byte_end":14094664,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094669,"byte_end":14094694,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094699,"byte_end":14094738,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094743,"byte_end":14094748,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094753,"byte_end":14094758,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094763,"byte_end":14094780,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094785,"byte_end":14094792,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095939,"byte_end":14095947,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094869,"byte_end":14094907,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094912,"byte_end":14094915,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094920,"byte_end":14094988,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14094993,"byte_end":14094996,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095001,"byte_end":14095092,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095097,"byte_end":14095109,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095114,"byte_end":14095117,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095122,"byte_end":14095172,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095177,"byte_end":14095180,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095185,"byte_end":14095197,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095202,"byte_end":14095205,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095210,"byte_end":14095268,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095273,"byte_end":14095276,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095281,"byte_end":14095354,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095359,"byte_end":14095424,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095429,"byte_end":14095465,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095470,"byte_end":14095473,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095478,"byte_end":14095492,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095497,"byte_end":14095500,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095505,"byte_end":14095518,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095523,"byte_end":14095597,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095602,"byte_end":14095607,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095612,"byte_end":14095634,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095639,"byte_end":14095669,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095674,"byte_end":14095677,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095682,"byte_end":14095725,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095730,"byte_end":14095733,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095738,"byte_end":14095782,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095787,"byte_end":14095812,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095817,"byte_end":14095867,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095872,"byte_end":14095877,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095882,"byte_end":14095887,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095892,"byte_end":14095909,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14095914,"byte_end":14095921,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097140,"byte_end":14097149,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096083,"byte_end":14096122,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096127,"byte_end":14096130,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096135,"byte_end":14096214,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096219,"byte_end":14096222,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096227,"byte_end":14096316,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096321,"byte_end":14096324,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096329,"byte_end":14096363,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096368,"byte_end":14096371,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096376,"byte_end":14096388,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096393,"byte_end":14096396,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096401,"byte_end":14096459,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096464,"byte_end":14096467,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096472,"byte_end":14096545,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096550,"byte_end":14096624,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096629,"byte_end":14096665,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096670,"byte_end":14096673,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096678,"byte_end":14096692,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096697,"byte_end":14096700,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096705,"byte_end":14096718,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096723,"byte_end":14096797,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096802,"byte_end":14096807,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096812,"byte_end":14096834,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096839,"byte_end":14096869,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096874,"byte_end":14096877,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096882,"byte_end":14096925,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096930,"byte_end":14096933,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096938,"byte_end":14096982,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14096987,"byte_end":14097012,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097017,"byte_end":14097068,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097073,"byte_end":14097078,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097083,"byte_end":14097088,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097093,"byte_end":14097110,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097115,"byte_end":14097122,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097829,"byte_end":14097838,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097286,"byte_end":14097351,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097356,"byte_end":14097359,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097364,"byte_end":14097378,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097383,"byte_end":14097386,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097391,"byte_end":14097404,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097409,"byte_end":14097483,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097488,"byte_end":14097493,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097498,"byte_end":14097520,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097525,"byte_end":14097555,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097560,"byte_end":14097563,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097568,"byte_end":14097611,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097616,"byte_end":14097619,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097624,"byte_end":14097668,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097673,"byte_end":14097698,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097703,"byte_end":14097763,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097768,"byte_end":14097773,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097778,"byte_end":14097783,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097788,"byte_end":14097805,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097810,"byte_end":14097817,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097934,"byte_end":14097937,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DirEntry as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14098095,"byte_end":14098100,"line_start":162,"line_end":162,"column_start":8,"column_end":13},"name":"clone","qualname":"<DirEntry as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100098,"byte_end":14100102,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":5728},{"krate":0,"index":5729}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098806,"byte_end":14098841,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098842,"byte_end":14098845,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098846,"byte_end":14098942,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098943,"byte_end":14098955,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098956,"byte_end":14098959,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14098960,"byte_end":14099055,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099056,"byte_end":14099154,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099155,"byte_end":14099158,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099159,"byte_end":14099214,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099215,"byte_end":14099218,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099219,"byte_end":14099253,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099254,"byte_end":14099326,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099327,"byte_end":14099330,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099331,"byte_end":14099345,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099346,"byte_end":14099349,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099350,"byte_end":14099399,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099400,"byte_end":14099403,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099404,"byte_end":14099417,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099418,"byte_end":14099492,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099493,"byte_end":14099498,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099499,"byte_end":14099527,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099528,"byte_end":14099558,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099559,"byte_end":14099562,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099563,"byte_end":14099611,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099612,"byte_end":14099656,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099657,"byte_end":14099662,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099663,"byte_end":14099680,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099681,"byte_end":14099688,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099689,"byte_end":14099692,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099693,"byte_end":14099748,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099749,"byte_end":14099752,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099753,"byte_end":14099766,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099767,"byte_end":14099841,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099842,"byte_end":14099847,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099848,"byte_end":14099876,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099877,"byte_end":14099907,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099908,"byte_end":14099911,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099912,"byte_end":14099958,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099959,"byte_end":14099993,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14099994,"byte_end":14100037,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100038,"byte_end":14100043,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100044,"byte_end":14100061,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100062,"byte_end":14100069,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101563,"byte_end":14101567,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"async fn open<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100730,"byte_end":14100765,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100770,"byte_end":14100773,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100778,"byte_end":14100838,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100843,"byte_end":14100846,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100851,"byte_end":14100863,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100868,"byte_end":14100871,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100876,"byte_end":14100934,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100939,"byte_end":14100942,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100947,"byte_end":14100995,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101000,"byte_end":14101061,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101066,"byte_end":14101102,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101107,"byte_end":14101110,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101115,"byte_end":14101196,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101201,"byte_end":14101204,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101209,"byte_end":14101271,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101276,"byte_end":14101279,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101284,"byte_end":14101298,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101303,"byte_end":14101306,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101311,"byte_end":14101324,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101329,"byte_end":14101403,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101408,"byte_end":14101413,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101418,"byte_end":14101446,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101451,"byte_end":14101454,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101459,"byte_end":14101501,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101506,"byte_end":14101511,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101516,"byte_end":14101533,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101538,"byte_end":14101545,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102820,"byte_end":14102826,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"async fn create<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101875,"byte_end":14101911,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101916,"byte_end":14101919,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14101924,"byte_end":14102015,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102020,"byte_end":14102023,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102028,"byte_end":14102088,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102093,"byte_end":14102096,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102101,"byte_end":14102113,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102118,"byte_end":14102121,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102126,"byte_end":14102184,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102189,"byte_end":14102192,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102197,"byte_end":14102246,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102251,"byte_end":14102316,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102321,"byte_end":14102357,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102362,"byte_end":14102365,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102370,"byte_end":14102451,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102456,"byte_end":14102459,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102464,"byte_end":14102526,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102531,"byte_end":14102534,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102539,"byte_end":14102553,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102558,"byte_end":14102561,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102566,"byte_end":14102579,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102584,"byte_end":14102658,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102663,"byte_end":14102668,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102673,"byte_end":14102701,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102706,"byte_end":14102709,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102714,"byte_end":14102758,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102763,"byte_end":14102768,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102773,"byte_end":14102790,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14102795,"byte_end":14102802,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103849,"byte_end":14103857,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103077,"byte_end":14103145,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103150,"byte_end":14103153,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103158,"byte_end":14103235,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103240,"byte_end":14103243,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103248,"byte_end":14103338,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103343,"byte_end":14103435,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103440,"byte_end":14103443,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103448,"byte_end":14103462,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103467,"byte_end":14103470,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103475,"byte_end":14103488,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103493,"byte_end":14103567,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103572,"byte_end":14103577,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103582,"byte_end":14103610,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103615,"byte_end":14103645,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103650,"byte_end":14103653,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103658,"byte_end":14103706,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103711,"byte_end":14103755,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103760,"byte_end":14103787,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103792,"byte_end":14103797,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103802,"byte_end":14103819,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14103824,"byte_end":14103831,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105062,"byte_end":14105071,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104194,"byte_end":14104249,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104254,"byte_end":14104257,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104262,"byte_end":14104349,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104354,"byte_end":14104357,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104362,"byte_end":14104454,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104459,"byte_end":14104507,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104512,"byte_end":14104515,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104520,"byte_end":14104600,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104605,"byte_end":14104608,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104613,"byte_end":14104647,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104652,"byte_end":14104655,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104660,"byte_end":14104674,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104679,"byte_end":14104682,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104687,"byte_end":14104700,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104705,"byte_end":14104779,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104784,"byte_end":14104789,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104794,"byte_end":14104822,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104827,"byte_end":14104857,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104862,"byte_end":14104865,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104870,"byte_end":14104918,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104923,"byte_end":14104967,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14104972,"byte_end":14105000,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105005,"byte_end":14105010,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105015,"byte_end":14105032,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105037,"byte_end":14105044,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106168,"byte_end":14106175,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105410,"byte_end":14105444,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105449,"byte_end":14105452,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105457,"byte_end":14105548,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105553,"byte_end":14105646,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105651,"byte_end":14105691,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105696,"byte_end":14105699,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105704,"byte_end":14105799,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105804,"byte_end":14105841,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105846,"byte_end":14105849,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105854,"byte_end":14105868,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105873,"byte_end":14105876,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105881,"byte_end":14105894,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105899,"byte_end":14105973,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105978,"byte_end":14105983,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14105988,"byte_end":14106016,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106021,"byte_end":14106024,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106029,"byte_end":14106073,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106078,"byte_end":14106106,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106111,"byte_end":14106116,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106121,"byte_end":14106138,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106143,"byte_end":14106150,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106994,"byte_end":14107002,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106625,"byte_end":14106655,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106660,"byte_end":14106663,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106668,"byte_end":14106682,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106687,"byte_end":14106690,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106695,"byte_end":14106708,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106713,"byte_end":14106787,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106792,"byte_end":14106797,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106802,"byte_end":14106830,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106835,"byte_end":14106838,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106843,"byte_end":14106885,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106890,"byte_end":14106932,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106937,"byte_end":14106942,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106947,"byte_end":14106964,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14106969,"byte_end":14106976,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107848,"byte_end":14107863,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107139,"byte_end":14107179,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107184,"byte_end":14107187,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107192,"byte_end":14107204,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107209,"byte_end":14107212,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107217,"byte_end":14107275,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107280,"byte_end":14107283,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107288,"byte_end":14107365,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107370,"byte_end":14107406,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107411,"byte_end":14107414,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107419,"byte_end":14107433,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107438,"byte_end":14107441,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107446,"byte_end":14107459,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107464,"byte_end":14107538,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107543,"byte_end":14107548,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107553,"byte_end":14107581,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107586,"byte_end":14107589,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107594,"byte_end":14107638,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107643,"byte_end":14107646,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107651,"byte_end":14107708,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107713,"byte_end":14107742,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107747,"byte_end":14107786,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107791,"byte_end":14107796,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107801,"byte_end":14107818,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14107823,"byte_end":14107830,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108050,"byte_end":14108054,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"drop","qualname":"<File as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108549,"byte_end":14108552,"line_start":323,"line_end":323,"column_start":8,"column_end":11},"name":"fmt","qualname":"<File as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108667,"byte_end":14108676,"line_start":329,"line_end":329,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<File as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108884,"byte_end":14108893,"line_start":339,"line_end":339,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ File as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109152,"byte_end":14109162,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<File as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109343,"byte_end":14109353,"line_start":358,"line_end":358,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<File as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109483,"byte_end":14109493,"line_start":362,"line_end":362,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<File as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109648,"byte_end":14109658,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ File as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109890,"byte_end":14109900,"line_start":377,"line_end":377,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ File as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110106,"byte_end":14110116,"line_start":382,"line_end":382,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ File as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110320,"byte_end":14110329,"line_start":389,"line_end":389,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<File as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":29,"index":47},"children":[],"decl_id":{"krate":29,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110534,"byte_end":14110543,"line_start":399,"line_end":399,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<&'_ File as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek(Pin<&mut Self>, &mut Context, SeekFrom) -> Poll<io::Result<u64>>","parent":{"krate":29,"index":47},"children":[],"decl_id":{"krate":29,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110813,"byte_end":14110817,"line_start":410,"line_end":410,"column_start":8,"column_end":12},"name":"from","qualname":"<File as std::convert::From>::from","value":"fn from(std::fs::File) -> File","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111686,"byte_end":14111699,"line_start":445,"line_end":445,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<File as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle(&Self) -> RawHandle","parent":{"krate":1,"index":5794},"children":[],"decl_id":{"krate":1,"index":5795},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111829,"byte_end":14111844,"line_start":451,"line_end":451,"column_start":19,"column_end":34},"name":"from_raw_handle","qualname":"<File as std::os::windows::io::FromRawHandle>::from_raw_handle","value":"unsafe fn from_raw_handle(RawHandle) -> File","parent":{"krate":1,"index":5796},"children":[],"decl_id":{"krate":1,"index":5797},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111994,"byte_end":14112009,"line_start":457,"line_end":457,"column_start":12,"column_end":27},"name":"into_raw_handle","qualname":"<File as std::os::windows::io::IntoRawHandle>::into_raw_handle","value":"fn into_raw_handle(Self) -> RawHandle","parent":{"krate":1,"index":5798},"children":[],"decl_id":{"krate":1,"index":5799},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131493,"byte_end":14131502,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"async fn hard_link<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130729,"byte_end":14130771,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130772,"byte_end":14130775,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130776,"byte_end":14130871,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130872,"byte_end":14130937,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130938,"byte_end":14130941,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14130942,"byte_end":14131006,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131007,"byte_end":14131010,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131011,"byte_end":14131089,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131090,"byte_end":14131093,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131094,"byte_end":14131106,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131107,"byte_end":14131110,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131111,"byte_end":14131169,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131170,"byte_end":14131173,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131174,"byte_end":14131221,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131222,"byte_end":14131258,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131259,"byte_end":14131262,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131263,"byte_end":14131277,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131278,"byte_end":14131281,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131282,"byte_end":14131295,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131296,"byte_end":14131370,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131371,"byte_end":14131376,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131377,"byte_end":14131399,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131400,"byte_end":14131403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131404,"byte_end":14131447,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131448,"byte_end":14131453,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131454,"byte_end":14131471,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\hard_link.rs","byte_start":14131472,"byte_end":14131479,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132941,"byte_end":14132949,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"async fn metadata<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14131996,"byte_end":14132026,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132027,"byte_end":14132030,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132031,"byte_end":14132128,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132129,"byte_end":14132220,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132221,"byte_end":14132233,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132234,"byte_end":14132237,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132238,"byte_end":14132301,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132302,"byte_end":14132305,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132306,"byte_end":14132356,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132357,"byte_end":14132433,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132434,"byte_end":14132437,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132438,"byte_end":14132450,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132451,"byte_end":14132454,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132455,"byte_end":14132513,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132514,"byte_end":14132517,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132518,"byte_end":14132579,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132580,"byte_end":14132654,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132655,"byte_end":14132691,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132692,"byte_end":14132695,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132696,"byte_end":14132710,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132711,"byte_end":14132714,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132715,"byte_end":14132728,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132729,"byte_end":14132803,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132804,"byte_end":14132809,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132810,"byte_end":14132832,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132833,"byte_end":14132836,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132837,"byte_end":14132895,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132896,"byte_end":14132901,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132902,"byte_end":14132919,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\metadata.rs","byte_start":14132920,"byte_end":14132927,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140575,"byte_end":14140586,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139030,"byte_end":14139088,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139089,"byte_end":14139092,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139093,"byte_end":14139151,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139152,"byte_end":14139155,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139156,"byte_end":14139253,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139254,"byte_end":14139299,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139300,"byte_end":14139303,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139304,"byte_end":14139400,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139401,"byte_end":14139475,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139476,"byte_end":14139479,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139480,"byte_end":14139542,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139543,"byte_end":14139546,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139547,"byte_end":14139573,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139574,"byte_end":14139602,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139603,"byte_end":14139633,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139634,"byte_end":14139668,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139669,"byte_end":14139699,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139700,"byte_end":14139738,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139739,"byte_end":14139825,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139826,"byte_end":14139829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139830,"byte_end":14139844,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139845,"byte_end":14139848,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139849,"byte_end":14139877,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139878,"byte_end":14139881,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139882,"byte_end":14139895,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139896,"byte_end":14139970,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139971,"byte_end":14139976,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14139977,"byte_end":14140012,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140013,"byte_end":14140016,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140017,"byte_end":14140050,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140051,"byte_end":14140070,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140071,"byte_end":14140093,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140094,"byte_end":14140110,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140111,"byte_end":14140116,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140117,"byte_end":14140134,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140135,"byte_end":14140142,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140143,"byte_end":14140146,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140147,"byte_end":14140231,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140232,"byte_end":14140235,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140236,"byte_end":14140249,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140250,"byte_end":14140324,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140325,"byte_end":14140330,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140331,"byte_end":14140366,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140367,"byte_end":14140370,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140371,"byte_end":14140404,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140405,"byte_end":14140424,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140425,"byte_end":14140445,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140446,"byte_end":14140467,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140468,"byte_end":14140490,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140491,"byte_end":14140507,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140508,"byte_end":14140513,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140514,"byte_end":14140531,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140532,"byte_end":14140539,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141083,"byte_end":14141086,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140634,"byte_end":14140669,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140674,"byte_end":14140677,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140682,"byte_end":14140727,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140732,"byte_end":14140735,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140740,"byte_end":14140754,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140759,"byte_end":14140762,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140767,"byte_end":14140780,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140785,"byte_end":14140859,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140864,"byte_end":14140869,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140874,"byte_end":14140909,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140914,"byte_end":14140917,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140922,"byte_end":14140955,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140960,"byte_end":14140979,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140984,"byte_end":14141006,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141011,"byte_end":14141027,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141032,"byte_end":14141037,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141042,"byte_end":14141059,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141064,"byte_end":14141071,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141657,"byte_end":14141661,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141166,"byte_end":14141206,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141211,"byte_end":14141214,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141219,"byte_end":14141301,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141306,"byte_end":14141309,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141314,"byte_end":14141328,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141333,"byte_end":14141336,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141341,"byte_end":14141354,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141359,"byte_end":14141433,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141438,"byte_end":14141443,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141448,"byte_end":14141483,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141488,"byte_end":14141491,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141496,"byte_end":14141529,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141534,"byte_end":14141553,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141558,"byte_end":14141580,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141585,"byte_end":14141601,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141606,"byte_end":14141611,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141616,"byte_end":14141633,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141638,"byte_end":14141645,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142381,"byte_end":14142386,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141758,"byte_end":14141799,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141804,"byte_end":14141807,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141812,"byte_end":14141894,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141899,"byte_end":14141902,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14141907,"byte_end":14142001,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142006,"byte_end":14142024,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142029,"byte_end":14142032,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142037,"byte_end":14142051,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142056,"byte_end":14142059,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142064,"byte_end":14142077,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142082,"byte_end":14142156,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142161,"byte_end":14142166,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142171,"byte_end":14142206,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142211,"byte_end":14142214,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142219,"byte_end":14142252,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142257,"byte_end":14142277,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142282,"byte_end":14142304,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142309,"byte_end":14142325,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142330,"byte_end":14142335,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142340,"byte_end":14142357,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142362,"byte_end":14142369,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143071,"byte_end":14143077,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142486,"byte_end":14142528,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142533,"byte_end":14142536,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142541,"byte_end":14142635,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142640,"byte_end":14142713,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142718,"byte_end":14142721,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142726,"byte_end":14142740,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142745,"byte_end":14142748,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142753,"byte_end":14142766,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142771,"byte_end":14142845,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142850,"byte_end":14142855,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142860,"byte_end":14142895,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142900,"byte_end":14142903,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142908,"byte_end":14142941,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142946,"byte_end":14142967,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142972,"byte_end":14142994,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14142999,"byte_end":14143015,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143020,"byte_end":14143025,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143030,"byte_end":14143047,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143052,"byte_end":14143059,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143885,"byte_end":14143893,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143180,"byte_end":14143239,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143244,"byte_end":14143247,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143252,"byte_end":14143328,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143333,"byte_end":14143336,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143341,"byte_end":14143424,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143429,"byte_end":14143432,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143437,"byte_end":14143465,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143470,"byte_end":14143500,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143505,"byte_end":14143508,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143513,"byte_end":14143527,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143532,"byte_end":14143535,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143540,"byte_end":14143553,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143558,"byte_end":14143632,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143637,"byte_end":14143642,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143647,"byte_end":14143682,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143687,"byte_end":14143690,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143695,"byte_end":14143728,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143733,"byte_end":14143753,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143758,"byte_end":14143781,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143786,"byte_end":14143808,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143813,"byte_end":14143829,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143834,"byte_end":14143839,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143844,"byte_end":14143861,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14143866,"byte_end":14143873,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144732,"byte_end":14144738,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144002,"byte_end":14144072,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144077,"byte_end":14144080,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144085,"byte_end":14144174,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144179,"byte_end":14144182,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144187,"byte_end":14144273,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144278,"byte_end":14144281,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144286,"byte_end":14144314,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144319,"byte_end":14144349,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144354,"byte_end":14144357,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144362,"byte_end":14144376,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144381,"byte_end":14144384,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144389,"byte_end":14144402,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144407,"byte_end":14144481,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144486,"byte_end":14144491,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144496,"byte_end":14144531,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144536,"byte_end":14144539,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144544,"byte_end":14144577,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144582,"byte_end":14144602,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144607,"byte_end":14144628,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144633,"byte_end":14144655,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144660,"byte_end":14144676,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144681,"byte_end":14144686,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144691,"byte_end":14144708,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144713,"byte_end":14144720,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145635,"byte_end":14145645,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144841,"byte_end":14144923,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144928,"byte_end":14144931,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14144936,"byte_end":14145027,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145032,"byte_end":14145073,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145078,"byte_end":14145081,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145086,"byte_end":14145172,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145177,"byte_end":14145180,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145185,"byte_end":14145213,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145218,"byte_end":14145248,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145253,"byte_end":14145256,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145261,"byte_end":14145275,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145280,"byte_end":14145283,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145288,"byte_end":14145301,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145306,"byte_end":14145380,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145385,"byte_end":14145390,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145395,"byte_end":14145430,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145435,"byte_end":14145438,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145443,"byte_end":14145476,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145481,"byte_end":14145501,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145506,"byte_end":14145531,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145536,"byte_end":14145558,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145563,"byte_end":14145579,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145584,"byte_end":14145589,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145594,"byte_end":14145611,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145616,"byte_end":14145623,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147083,"byte_end":14147087,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"fn open<P>(&Self, P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145760,"byte_end":14145805,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145810,"byte_end":14145813,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145818,"byte_end":14145830,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145835,"byte_end":14145838,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145843,"byte_end":14145901,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145906,"byte_end":14145909,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14145914,"byte_end":14145995,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146000,"byte_end":14146049,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146054,"byte_end":14146138,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146143,"byte_end":14146200,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146205,"byte_end":14146299,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146304,"byte_end":14146371,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146376,"byte_end":14146462,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146467,"byte_end":14146503,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146508,"byte_end":14146511,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146516,"byte_end":14146542,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146547,"byte_end":14146575,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146580,"byte_end":14146610,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146615,"byte_end":14146649,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146654,"byte_end":14146684,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146689,"byte_end":14146727,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146732,"byte_end":14146735,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146740,"byte_end":14146754,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146759,"byte_end":14146762,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146767,"byte_end":14146780,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146785,"byte_end":14146859,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146864,"byte_end":14146869,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146874,"byte_end":14146909,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146914,"byte_end":14146917,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146922,"byte_end":14146955,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146960,"byte_end":14146979,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14146984,"byte_end":14147006,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147011,"byte_end":14147027,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147032,"byte_end":14147037,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147042,"byte_end":14147059,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147064,"byte_end":14147071,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147437,"byte_end":14147444,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"default","qualname":"<OpenOptions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150591,"byte_end":14150595,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"async fn read<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149586,"byte_end":14149639,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149640,"byte_end":14149643,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149644,"byte_end":14149743,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149744,"byte_end":14149840,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149841,"byte_end":14149853,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149854,"byte_end":14149857,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149858,"byte_end":14149939,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149940,"byte_end":14149943,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14149944,"byte_end":14150003,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150004,"byte_end":14150007,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150008,"byte_end":14150054,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150055,"byte_end":14150123,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150124,"byte_end":14150127,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150128,"byte_end":14150140,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150141,"byte_end":14150144,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150145,"byte_end":14150203,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150204,"byte_end":14150207,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150208,"byte_end":14150256,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150257,"byte_end":14150318,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150319,"byte_end":14150355,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150356,"byte_end":14150359,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150360,"byte_end":14150374,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150375,"byte_end":14150378,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150379,"byte_end":14150392,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150393,"byte_end":14150467,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150468,"byte_end":14150473,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150474,"byte_end":14150496,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150497,"byte_end":14150500,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150501,"byte_end":14150545,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150546,"byte_end":14150551,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150552,"byte_end":14150569,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read.rs","byte_start":14150570,"byte_end":14150577,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4744},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152152,"byte_end":14152160,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"async fn read_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151060,"byte_end":14151107,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151108,"byte_end":14151111,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151112,"byte_end":14151206,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151207,"byte_end":14151247,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151248,"byte_end":14151251,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151252,"byte_end":14151315,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151316,"byte_end":14151319,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151320,"byte_end":14151362,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151363,"byte_end":14151401,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151402,"byte_end":14151478,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151479,"byte_end":14151482,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151483,"byte_end":14151495,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151496,"byte_end":14151499,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151500,"byte_end":14151558,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151559,"byte_end":14151562,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151563,"byte_end":14151616,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151617,"byte_end":14151699,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151700,"byte_end":14151736,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151737,"byte_end":14151740,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151741,"byte_end":14151755,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151756,"byte_end":14151759,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151760,"byte_end":14151773,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151774,"byte_end":14151848,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151849,"byte_end":14151854,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151855,"byte_end":14151877,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151878,"byte_end":14151908,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151909,"byte_end":14151912,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151913,"byte_end":14151960,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151961,"byte_end":14151964,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14151965,"byte_end":14152013,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152014,"byte_end":14152039,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152040,"byte_end":14152100,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152101,"byte_end":14152106,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152107,"byte_end":14152112,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152113,"byte_end":14152130,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152131,"byte_end":14152138,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152965,"byte_end":14152972,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152440,"byte_end":14152479,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152480,"byte_end":14152483,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152484,"byte_end":14152552,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152553,"byte_end":14152651,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152652,"byte_end":14152673,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152674,"byte_end":14152677,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152678,"byte_end":14152736,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152737,"byte_end":14152740,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152741,"byte_end":14152775,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152776,"byte_end":14152818,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152819,"byte_end":14152857,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14152858,"byte_end":14152936,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14153530,"byte_end":14153539,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadDir as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4774},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155145,"byte_end":14155154,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"async fn read_link<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154526,"byte_end":14154586,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154587,"byte_end":14154590,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154591,"byte_end":14154655,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154656,"byte_end":14154659,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154660,"byte_end":14154738,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154739,"byte_end":14154742,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154743,"byte_end":14154755,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154756,"byte_end":14154759,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154760,"byte_end":14154818,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154819,"byte_end":14154822,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154823,"byte_end":14154871,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154872,"byte_end":14154908,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154909,"byte_end":14154912,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154913,"byte_end":14154927,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154928,"byte_end":14154931,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154932,"byte_end":14154945,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14154946,"byte_end":14155020,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155021,"byte_end":14155026,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155027,"byte_end":14155049,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155050,"byte_end":14155053,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155054,"byte_end":14155099,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155100,"byte_end":14155105,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155106,"byte_end":14155123,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_link.rs","byte_start":14155124,"byte_end":14155131,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156620,"byte_end":14156634,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"async fn read_to_string<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155540,"byte_end":14155592,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155593,"byte_end":14155596,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155597,"byte_end":14155696,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155697,"byte_end":14155793,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155794,"byte_end":14155806,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155807,"byte_end":14155810,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155811,"byte_end":14155883,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155884,"byte_end":14155887,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155888,"byte_end":14155957,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155958,"byte_end":14155961,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155962,"byte_end":14155988,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14155989,"byte_end":14156077,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156078,"byte_end":14156081,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156082,"byte_end":14156094,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156095,"byte_end":14156098,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156099,"byte_end":14156157,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156158,"byte_end":14156161,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156162,"byte_end":14156210,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156211,"byte_end":14156272,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156273,"byte_end":14156337,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156338,"byte_end":14156374,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156375,"byte_end":14156378,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156379,"byte_end":14156393,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156394,"byte_end":14156397,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156398,"byte_end":14156411,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156412,"byte_end":14156486,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156487,"byte_end":14156492,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156493,"byte_end":14156515,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156516,"byte_end":14156519,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156520,"byte_end":14156574,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156575,"byte_end":14156580,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156581,"byte_end":14156598,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_to_string.rs","byte_start":14156599,"byte_end":14156606,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157662,"byte_end":14157672,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"async fn remove_dir<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14156995,"byte_end":14157026,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157027,"byte_end":14157030,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157031,"byte_end":14157096,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157097,"byte_end":14157100,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157101,"byte_end":14157181,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157182,"byte_end":14157185,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157186,"byte_end":14157198,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157199,"byte_end":14157202,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157203,"byte_end":14157261,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157262,"byte_end":14157265,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157266,"byte_end":14157318,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157319,"byte_end":14157387,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157388,"byte_end":14157424,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157425,"byte_end":14157428,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157429,"byte_end":14157443,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157444,"byte_end":14157447,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157448,"byte_end":14157461,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157462,"byte_end":14157536,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157537,"byte_end":14157542,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157543,"byte_end":14157565,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157566,"byte_end":14157569,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157570,"byte_end":14157616,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157617,"byte_end":14157622,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157623,"byte_end":14157640,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir.rs","byte_start":14157641,"byte_end":14157648,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4831},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158732,"byte_end":14158746,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"async fn remove_dir_all<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158032,"byte_end":14158080,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158081,"byte_end":14158084,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158085,"byte_end":14158154,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158155,"byte_end":14158158,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158159,"byte_end":14158247,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158248,"byte_end":14158251,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158252,"byte_end":14158264,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158265,"byte_end":14158268,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158269,"byte_end":14158327,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158328,"byte_end":14158331,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158332,"byte_end":14158384,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158385,"byte_end":14158453,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158454,"byte_end":14158490,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158491,"byte_end":14158494,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158495,"byte_end":14158509,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158510,"byte_end":14158513,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158514,"byte_end":14158527,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158528,"byte_end":14158602,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158603,"byte_end":14158608,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158609,"byte_end":14158631,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158632,"byte_end":14158635,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158636,"byte_end":14158686,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158687,"byte_end":14158692,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158693,"byte_end":14158710,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_dir_all.rs","byte_start":14158711,"byte_end":14158718,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159749,"byte_end":14159760,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"async fn remove_file<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159110,"byte_end":14159129,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159130,"byte_end":14159133,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159134,"byte_end":14159200,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159201,"byte_end":14159204,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159205,"byte_end":14159287,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159288,"byte_end":14159291,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159292,"byte_end":14159304,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159305,"byte_end":14159308,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159309,"byte_end":14159367,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159368,"byte_end":14159371,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159372,"byte_end":14159420,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159421,"byte_end":14159484,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159485,"byte_end":14159521,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159522,"byte_end":14159525,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159526,"byte_end":14159540,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159541,"byte_end":14159544,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159545,"byte_end":14159558,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159559,"byte_end":14159633,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159634,"byte_end":14159639,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159640,"byte_end":14159662,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159663,"byte_end":14159666,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159667,"byte_end":14159703,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159704,"byte_end":14159709,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159710,"byte_end":14159727,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\remove_file.rs","byte_start":14159728,"byte_end":14159735,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160964,"byte_end":14160970,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"async fn rename<P, Q>(P, Q) -> /*impl Trait*/ where P: AsRef<Path>,\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160116,"byte_end":14160166,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160167,"byte_end":14160170,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160171,"byte_end":14160267,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160268,"byte_end":14160282,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160283,"byte_end":14160286,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160287,"byte_end":14160348,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160349,"byte_end":14160352,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160353,"byte_end":14160425,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160426,"byte_end":14160429,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160430,"byte_end":14160442,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160443,"byte_end":14160446,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160447,"byte_end":14160505,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160506,"byte_end":14160509,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160510,"byte_end":14160571,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160572,"byte_end":14160623,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160624,"byte_end":14160695,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160696,"byte_end":14160732,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160733,"byte_end":14160736,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160737,"byte_end":14160751,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160752,"byte_end":14160755,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160756,"byte_end":14160769,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160770,"byte_end":14160844,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160845,"byte_end":14160850,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160851,"byte_end":14160873,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160874,"byte_end":14160877,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160878,"byte_end":14160918,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160919,"byte_end":14160924,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160925,"byte_end":14160942,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\rename.rs","byte_start":14160943,"byte_end":14160950,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162297,"byte_end":14162312,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"async fn set_permissions<P>(P, Permissions) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161472,"byte_end":14161523,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161524,"byte_end":14161527,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161528,"byte_end":14161598,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161599,"byte_end":14161602,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161603,"byte_end":14161693,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161694,"byte_end":14161697,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161698,"byte_end":14161710,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161711,"byte_end":14161714,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161715,"byte_end":14161773,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161774,"byte_end":14161777,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161778,"byte_end":14161839,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161840,"byte_end":14161930,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161931,"byte_end":14161967,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161968,"byte_end":14161971,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161972,"byte_end":14161986,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161987,"byte_end":14161990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14161991,"byte_end":14162004,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162005,"byte_end":14162079,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162080,"byte_end":14162085,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162086,"byte_end":14162108,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162109,"byte_end":14162112,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162113,"byte_end":14162175,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162176,"byte_end":14162204,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162205,"byte_end":14162251,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162252,"byte_end":14162257,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162258,"byte_end":14162275,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\set_permissions.rs","byte_start":14162276,"byte_end":14162283,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163508,"byte_end":14163524,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"async fn symlink_metadata<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162589,"byte_end":14162652,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162653,"byte_end":14162656,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162657,"byte_end":14162754,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162755,"byte_end":14162784,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162785,"byte_end":14162788,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162789,"byte_end":14162860,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162861,"byte_end":14162864,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162865,"byte_end":14162899,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162900,"byte_end":14162992,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162993,"byte_end":14162996,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14162997,"byte_end":14163009,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163010,"byte_end":14163013,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163014,"byte_end":14163072,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163073,"byte_end":14163076,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163077,"byte_end":14163138,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163139,"byte_end":14163213,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163214,"byte_end":14163250,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163251,"byte_end":14163254,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163255,"byte_end":14163269,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163270,"byte_end":14163273,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163274,"byte_end":14163287,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163288,"byte_end":14163362,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163363,"byte_end":14163368,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163369,"byte_end":14163391,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163392,"byte_end":14163395,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163396,"byte_end":14163462,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163463,"byte_end":14163468,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163469,"byte_end":14163486,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\symlink_metadata.rs","byte_start":14163487,"byte_end":14163494,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164582,"byte_end":14164587,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"async fn write<P, C>(P, C) -> /*impl Trait*/ where P: AsRef<Path>,\nC: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163790,"byte_end":14163848,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163849,"byte_end":14163852,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163853,"byte_end":14163950,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163951,"byte_end":14163966,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163967,"byte_end":14163970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14163971,"byte_end":14164031,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164032,"byte_end":14164035,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164036,"byte_end":14164106,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164107,"byte_end":14164110,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164111,"byte_end":14164123,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164124,"byte_end":14164127,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164128,"byte_end":14164186,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164187,"byte_end":14164190,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164191,"byte_end":14164240,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164241,"byte_end":14164306,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164307,"byte_end":14164343,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164344,"byte_end":14164347,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164348,"byte_end":14164362,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164363,"byte_end":14164366,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164367,"byte_end":14164380,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164381,"byte_end":14164455,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164456,"byte_end":14164461,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164462,"byte_end":14164484,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164485,"byte_end":14164488,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164489,"byte_end":14164536,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164537,"byte_end":14164542,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164543,"byte_end":14164560,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\write.rs","byte_start":14164561,"byte_end":14164568,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4945},{"krate":0,"index":4976},{"krate":0,"index":5019},{"krate":0,"index":5179},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5288},{"krate":0,"index":5291},{"krate":0,"index":5294},{"krate":0,"index":5297},{"krate":0,"index":5300},{"krate":0,"index":5303},{"krate":0,"index":5306},{"krate":0,"index":5309},{"krate":0,"index":5312},{"krate":0,"index":5315}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14164923,"byte_end":14164960,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14164961,"byte_end":14164964,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14164965,"byte_end":14165018,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165019,"byte_end":14165022,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165023,"byte_end":14165111,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165112,"byte_end":14165194,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165195,"byte_end":14165278,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165279,"byte_end":14165340,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165341,"byte_end":14165344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165345,"byte_end":14165420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165421,"byte_end":14165498,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165499,"byte_end":14165577,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165578,"byte_end":14165656,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165657,"byte_end":14165725,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165726,"byte_end":14165805,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165806,"byte_end":14165809,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165810,"byte_end":14165874,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165875,"byte_end":14165878,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165879,"byte_end":14165898,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165899,"byte_end":14165902,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165903,"byte_end":14165982,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14165983,"byte_end":14166003,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166004,"byte_end":14166007,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166008,"byte_end":14166075,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166076,"byte_end":14166113,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166114,"byte_end":14166117,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166118,"byte_end":14166125,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166126,"byte_end":14166156,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166157,"byte_end":14166181,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166182,"byte_end":14166185,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166186,"byte_end":14166231,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166232,"byte_end":14166235,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166236,"byte_end":14166267,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166268,"byte_end":14166320,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166321,"byte_end":14166324,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166325,"byte_end":14166362,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166363,"byte_end":14166414,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166415,"byte_end":14166418,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166419,"byte_end":14166456,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166457,"byte_end":14166508,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166509,"byte_end":14166516,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166517,"byte_end":14166520,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166521,"byte_end":14166567,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166568,"byte_end":14166571,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166572,"byte_end":14166579,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166580,"byte_end":14166613,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166614,"byte_end":14166617,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166618,"byte_end":14166642,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166643,"byte_end":14166684,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166685,"byte_end":14166688,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166689,"byte_end":14166714,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166715,"byte_end":14166741,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166742,"byte_end":14166745,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166746,"byte_end":14166776,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166777,"byte_end":14166780,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166781,"byte_end":14166845,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166846,"byte_end":14166890,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166891,"byte_end":14166968,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166969,"byte_end":14166976,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166977,"byte_end":14166980,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14166981,"byte_end":14167019,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167020,"byte_end":14167074,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167075,"byte_end":14167111,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167112,"byte_end":14167142,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167143,"byte_end":14167188,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167189,"byte_end":14167260,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167261,"byte_end":14167264,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167265,"byte_end":14167326,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167327,"byte_end":14167399,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\mod.rs","byte_start":14167400,"byte_end":14167466,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168347,"byte_end":14168356,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":5783}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14167854,"byte_end":14167902,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14167903,"byte_end":14167906,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14167907,"byte_end":14167976,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14167977,"byte_end":14168012,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168013,"byte_end":14168016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168017,"byte_end":14168031,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168032,"byte_end":14168035,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168036,"byte_end":14168043,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168044,"byte_end":14168074,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168075,"byte_end":14168078,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168079,"byte_end":14168116,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168117,"byte_end":14168120,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168121,"byte_end":14168159,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168160,"byte_end":14168203,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168204,"byte_end":14168209,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168210,"byte_end":14168217,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168218,"byte_end":14168221,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168222,"byte_end":14168274,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168275,"byte_end":14168305,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168477,"byte_end":14168481,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"next","qualname":"<Ancestors as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169318,"byte_end":14169328,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":5794}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168748,"byte_end":14168802,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168803,"byte_end":14168806,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168807,"byte_end":14168877,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168878,"byte_end":14168913,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168914,"byte_end":14168917,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168918,"byte_end":14168932,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168933,"byte_end":14168936,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168937,"byte_end":14168944,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168945,"byte_end":14168975,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168976,"byte_end":14168979,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14168980,"byte_end":14169025,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169026,"byte_end":14169029,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169030,"byte_end":14169070,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169071,"byte_end":14169107,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169108,"byte_end":14169113,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169114,"byte_end":14169121,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169122,"byte_end":14169125,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169126,"byte_end":14169164,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169165,"byte_end":14169219,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169220,"byte_end":14169250,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169820,"byte_end":14169827,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169417,"byte_end":14169503,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169508,"byte_end":14169511,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169516,"byte_end":14169530,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169535,"byte_end":14169538,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169543,"byte_end":14169550,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169555,"byte_end":14169585,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169590,"byte_end":14169593,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169598,"byte_end":14169666,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169671,"byte_end":14169693,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169698,"byte_end":14169720,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169725,"byte_end":14169728,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169733,"byte_end":14169796,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169801,"byte_end":14169808,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169939,"byte_end":14169945,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Components as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170042,"byte_end":14170048,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Components as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &OsStr","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170190,"byte_end":14170194,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"next","qualname":"<Components as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Component>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170325,"byte_end":14170334,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Components as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Component>","parent":{"krate":2,"index":8042},"children":[],"decl_id":{"krate":2,"index":8043},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170499,"byte_end":14170505,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Component as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5818},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171055,"byte_end":14171059,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5820}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170682,"byte_end":14170757,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170758,"byte_end":14170761,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170762,"byte_end":14170826,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170827,"byte_end":14170862,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170863,"byte_end":14170866,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170867,"byte_end":14170905,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170906,"byte_end":14170948,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170949,"byte_end":14170995,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14170996,"byte_end":14171026,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4998},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171504,"byte_end":14171511,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171131,"byte_end":14171217,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171222,"byte_end":14171225,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171230,"byte_end":14171244,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171249,"byte_end":14171252,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171257,"byte_end":14171264,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171269,"byte_end":14171299,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171304,"byte_end":14171307,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171312,"byte_end":14171368,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171373,"byte_end":14171389,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171394,"byte_end":14171410,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171415,"byte_end":14171418,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171423,"byte_end":14171480,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171485,"byte_end":14171492,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171639,"byte_end":14171643,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a OsStr>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171777,"byte_end":14171780,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iter as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172230,"byte_end":14172236,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172327,"byte_end":14172333,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &OsStr","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172448,"byte_end":14172457,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<&'a OsStr>","parent":{"krate":2,"index":8042},"children":[],"decl_id":{"krate":2,"index":8043},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174142,"byte_end":14174146,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":5825}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14172863,"byte_end":14172885,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14172886,"byte_end":14172889,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14172890,"byte_end":14172949,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14172950,"byte_end":14172953,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14172954,"byte_end":14173032,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173033,"byte_end":14173114,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173115,"byte_end":14173197,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173198,"byte_end":14173225,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173226,"byte_end":14173229,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173230,"byte_end":14173305,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173306,"byte_end":14173371,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173372,"byte_end":14173392,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173393,"byte_end":14173396,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173397,"byte_end":14173433,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173434,"byte_end":14173510,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173511,"byte_end":14173514,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173515,"byte_end":14173574,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173575,"byte_end":14173618,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173619,"byte_end":14173622,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173623,"byte_end":14173637,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173638,"byte_end":14173641,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173642,"byte_end":14173649,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173650,"byte_end":14173674,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173675,"byte_end":14173699,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173700,"byte_end":14173703,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173704,"byte_end":14173750,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173751,"byte_end":14173793,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173794,"byte_end":14173797,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173798,"byte_end":14173829,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173830,"byte_end":14173879,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173880,"byte_end":14173883,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173884,"byte_end":14173921,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173922,"byte_end":14173973,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173974,"byte_end":14173977,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14173978,"byte_end":14174015,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174016,"byte_end":14174067,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174068,"byte_end":14174075,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5070},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174778,"byte_end":14174781,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn new<S>(&S) -> &Path where S: AsRef<OsStr> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174196,"byte_end":14174248,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174253,"byte_end":14174256,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174261,"byte_end":14174296,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174301,"byte_end":14174304,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174309,"byte_end":14174323,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174328,"byte_end":14174331,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174336,"byte_end":14174343,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174348,"byte_end":14174378,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174383,"byte_end":14174386,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174391,"byte_end":14174416,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174421,"byte_end":14174428,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174433,"byte_end":14174436,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174441,"byte_end":14174506,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174511,"byte_end":14174514,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174519,"byte_end":14174526,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174531,"byte_end":14174561,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174566,"byte_end":14174569,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174574,"byte_end":14174615,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174620,"byte_end":14174661,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174666,"byte_end":14174710,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174715,"byte_end":14174754,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174759,"byte_end":14174766,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175304,"byte_end":14175313,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174925,"byte_end":14174968,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174973,"byte_end":14174976,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174981,"byte_end":14175047,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175052,"byte_end":14175055,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175060,"byte_end":14175074,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175079,"byte_end":14175082,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175087,"byte_end":14175094,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175099,"byte_end":14175123,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175128,"byte_end":14175131,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175136,"byte_end":14175166,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175171,"byte_end":14175174,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175179,"byte_end":14175229,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175234,"byte_end":14175280,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175285,"byte_end":14175292,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175903,"byte_end":14175909,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175375,"byte_end":14175435,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175440,"byte_end":14175443,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175448,"byte_end":14175512,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175517,"byte_end":14175584,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175589,"byte_end":14175621,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175626,"byte_end":14175629,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175634,"byte_end":14175696,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175701,"byte_end":14175704,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175709,"byte_end":14175723,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175728,"byte_end":14175731,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175736,"byte_end":14175743,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175748,"byte_end":14175778,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175783,"byte_end":14175786,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175791,"byte_end":14175827,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175832,"byte_end":14175879,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175884,"byte_end":14175891,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176702,"byte_end":14176717,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14175974,"byte_end":14176014,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176019,"byte_end":14176022,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176027,"byte_end":14176074,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176079,"byte_end":14176124,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176129,"byte_end":14176132,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176137,"byte_end":14176205,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176210,"byte_end":14176294,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176299,"byte_end":14176302,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176307,"byte_end":14176321,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176326,"byte_end":14176329,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176334,"byte_end":14176395,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176400,"byte_end":14176403,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176408,"byte_end":14176415,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176420,"byte_end":14176450,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176455,"byte_end":14176458,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176463,"byte_end":14176499,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176504,"byte_end":14176554,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176559,"byte_end":14176566,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176571,"byte_end":14176574,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176579,"byte_end":14176653,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176658,"byte_end":14176690,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177126,"byte_end":14177137,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176791,"byte_end":14176837,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176842,"byte_end":14176845,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176850,"byte_end":14176886,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176891,"byte_end":14176894,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176899,"byte_end":14176913,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176918,"byte_end":14176921,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176926,"byte_end":14176933,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176938,"byte_end":14176979,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176984,"byte_end":14176987,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14176992,"byte_end":14177046,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177051,"byte_end":14177102,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177107,"byte_end":14177114,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177837,"byte_end":14177848,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177217,"byte_end":14177291,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177296,"byte_end":14177322,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177327,"byte_end":14177330,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177335,"byte_end":14177399,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177404,"byte_end":14177456,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177461,"byte_end":14177464,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177469,"byte_end":14177544,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177549,"byte_end":14177622,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177627,"byte_end":14177630,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177635,"byte_end":14177669,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177674,"byte_end":14177677,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177682,"byte_end":14177696,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177701,"byte_end":14177704,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177709,"byte_end":14177716,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177721,"byte_end":14177751,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177756,"byte_end":14177759,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177764,"byte_end":14177813,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177818,"byte_end":14177825,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178264,"byte_end":14178275,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177910,"byte_end":14177974,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177979,"byte_end":14177982,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14177987,"byte_end":14178044,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178049,"byte_end":14178052,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178057,"byte_end":14178097,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178102,"byte_end":14178105,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178110,"byte_end":14178124,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178129,"byte_end":14178132,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178137,"byte_end":14178144,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178149,"byte_end":14178179,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178184,"byte_end":14178187,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178192,"byte_end":14178240,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178245,"byte_end":14178252,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178896,"byte_end":14178904,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178337,"byte_end":14178381,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178386,"byte_end":14178389,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178394,"byte_end":14178449,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178454,"byte_end":14178457,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178462,"byte_end":14178504,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178509,"byte_end":14178577,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178582,"byte_end":14178667,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178672,"byte_end":14178728,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178733,"byte_end":14178736,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178741,"byte_end":14178755,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178760,"byte_end":14178763,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178768,"byte_end":14178775,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178780,"byte_end":14178810,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178815,"byte_end":14178818,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178823,"byte_end":14178872,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178877,"byte_end":14178884,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179609,"byte_end":14179615,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14178963,"byte_end":14179031,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179036,"byte_end":14179039,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179044,"byte_end":14179108,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179113,"byte_end":14179116,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179121,"byte_end":14179201,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179206,"byte_end":14179209,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179214,"byte_end":14179228,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179233,"byte_end":14179236,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179241,"byte_end":14179248,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179253,"byte_end":14179283,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179288,"byte_end":14179291,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179296,"byte_end":14179333,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179338,"byte_end":14179378,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179383,"byte_end":14179425,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179430,"byte_end":14179433,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179438,"byte_end":14179486,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179491,"byte_end":14179536,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179541,"byte_end":14179585,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179590,"byte_end":14179597,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5081},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180738,"byte_end":14180747,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179699,"byte_end":14179754,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179759,"byte_end":14179762,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179767,"byte_end":14179860,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179865,"byte_end":14179955,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14179960,"byte_end":14180051,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180056,"byte_end":14180151,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180156,"byte_end":14180175,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180180,"byte_end":14180183,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180188,"byte_end":14180255,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180260,"byte_end":14180306,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180311,"byte_end":14180314,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180319,"byte_end":14180333,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180338,"byte_end":14180341,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180346,"byte_end":14180353,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180358,"byte_end":14180388,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180393,"byte_end":14180396,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180401,"byte_end":14180459,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180464,"byte_end":14180533,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180538,"byte_end":14180603,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180608,"byte_end":14180670,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180675,"byte_end":14180714,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180719,"byte_end":14180726,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5082},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181792,"byte_end":14181801,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180825,"byte_end":14180888,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180893,"byte_end":14180896,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14180901,"byte_end":14180995,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181000,"byte_end":14181026,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181031,"byte_end":14181034,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181039,"byte_end":14181091,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181096,"byte_end":14181099,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181104,"byte_end":14181184,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181189,"byte_end":14181192,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181197,"byte_end":14181211,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181216,"byte_end":14181219,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181224,"byte_end":14181231,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181236,"byte_end":14181260,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181265,"byte_end":14181268,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181273,"byte_end":14181303,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181308,"byte_end":14181311,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181316,"byte_end":14181392,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181397,"byte_end":14181479,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181484,"byte_end":14181564,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181569,"byte_end":14181651,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181656,"byte_end":14181714,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181719,"byte_end":14181768,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181773,"byte_end":14181780,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5083},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183055,"byte_end":14183067,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181871,"byte_end":14181934,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181939,"byte_end":14181942,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181947,"byte_end":14181959,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181964,"byte_end":14181967,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14181972,"byte_end":14182034,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182039,"byte_end":14182077,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182082,"byte_end":14182085,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182090,"byte_end":14182130,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182135,"byte_end":14182213,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182218,"byte_end":14182221,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182226,"byte_end":14182240,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182245,"byte_end":14182248,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182253,"byte_end":14182260,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182265,"byte_end":14182306,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182311,"byte_end":14182314,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182319,"byte_end":14182366,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182371,"byte_end":14182374,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182379,"byte_end":14182454,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182459,"byte_end":14182533,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182538,"byte_end":14182613,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182618,"byte_end":14182693,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182698,"byte_end":14182774,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182779,"byte_end":14182836,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182841,"byte_end":14182899,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182904,"byte_end":14182907,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182912,"byte_end":14182953,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14182958,"byte_end":14183031,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183036,"byte_end":14183043,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5085},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183752,"byte_end":14183763,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"fn starts_with<P>(&Self, P) -> bool where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183232,"byte_end":14183284,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183289,"byte_end":14183292,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183297,"byte_end":14183347,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183352,"byte_end":14183355,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183360,"byte_end":14183374,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183379,"byte_end":14183382,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183387,"byte_end":14183394,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183399,"byte_end":14183429,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183434,"byte_end":14183437,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183442,"byte_end":14183482,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183487,"byte_end":14183490,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183495,"byte_end":14183533,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183538,"byte_end":14183577,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183582,"byte_end":14183627,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183632,"byte_end":14183678,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183683,"byte_end":14183686,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183691,"byte_end":14183728,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183733,"byte_end":14183740,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5087},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184189,"byte_end":14184198,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"fn ends_with<P>(&Self, P) -> bool where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183863,"byte_end":14183916,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183921,"byte_end":14183924,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183929,"byte_end":14183979,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183984,"byte_end":14183987,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14183992,"byte_end":14184006,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184011,"byte_end":14184014,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184019,"byte_end":14184026,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184031,"byte_end":14184061,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184066,"byte_end":14184069,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184074,"byte_end":14184114,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184119,"byte_end":14184122,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184127,"byte_end":14184165,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184170,"byte_end":14184177,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5089},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185040,"byte_end":14185049,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184298,"byte_end":14184361,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184366,"byte_end":14184369,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184374,"byte_end":14184426,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184431,"byte_end":14184434,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184439,"byte_end":14184455,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184460,"byte_end":14184463,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184468,"byte_end":14184508,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184513,"byte_end":14184567,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184572,"byte_end":14184660,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184665,"byte_end":14184731,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184736,"byte_end":14184739,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184744,"byte_end":14184824,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184829,"byte_end":14184832,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184837,"byte_end":14184851,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184856,"byte_end":14184859,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184864,"byte_end":14184871,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184876,"byte_end":14184906,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184911,"byte_end":14184914,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184919,"byte_end":14184954,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184959,"byte_end":14184962,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14184967,"byte_end":14185016,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185021,"byte_end":14185028,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5090},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185828,"byte_end":14185837,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185119,"byte_end":14185176,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185181,"byte_end":14185184,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185189,"byte_end":14185210,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185215,"byte_end":14185218,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185223,"byte_end":14185263,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185268,"byte_end":14185311,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185316,"byte_end":14185393,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185398,"byte_end":14185463,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185468,"byte_end":14185471,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185476,"byte_end":14185528,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185533,"byte_end":14185613,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185618,"byte_end":14185621,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185626,"byte_end":14185640,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185645,"byte_end":14185648,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185653,"byte_end":14185660,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185665,"byte_end":14185695,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185700,"byte_end":14185703,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185708,"byte_end":14185743,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185748,"byte_end":14185751,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185756,"byte_end":14185804,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185809,"byte_end":14185816,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5091},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186378,"byte_end":14186382,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"fn join<P>(&Self, P) -> PathBuf where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185907,"byte_end":14185971,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185976,"byte_end":14185979,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14185984,"byte_end":14186061,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186066,"byte_end":14186069,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186074,"byte_end":14186110,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186115,"byte_end":14186169,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186174,"byte_end":14186177,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186182,"byte_end":14186196,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186201,"byte_end":14186204,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186209,"byte_end":14186216,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186221,"byte_end":14186262,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186267,"byte_end":14186270,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186275,"byte_end":14186354,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186359,"byte_end":14186366,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187121,"byte_end":14187135,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"fn with_file_name<S>(&Self, S) -> PathBuf where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186485,"byte_end":14186559,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186564,"byte_end":14186567,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186572,"byte_end":14186624,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186629,"byte_end":14186632,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186637,"byte_end":14186673,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186678,"byte_end":14186750,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186755,"byte_end":14186758,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186763,"byte_end":14186777,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186782,"byte_end":14186785,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186790,"byte_end":14186797,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186802,"byte_end":14186843,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186848,"byte_end":14186851,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186856,"byte_end":14186897,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186902,"byte_end":14186980,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186985,"byte_end":14186988,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14186993,"byte_end":14187026,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187031,"byte_end":14187097,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187102,"byte_end":14187109,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187754,"byte_end":14187768,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"fn with_extension<S>(&Self, S) -> PathBuf where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187250,"byte_end":14187324,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187329,"byte_end":14187332,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187337,"byte_end":14187389,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187394,"byte_end":14187397,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187402,"byte_end":14187438,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187443,"byte_end":14187515,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187520,"byte_end":14187523,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187528,"byte_end":14187542,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187547,"byte_end":14187550,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187555,"byte_end":14187562,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187567,"byte_end":14187608,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187613,"byte_end":14187616,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187621,"byte_end":14187656,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187661,"byte_end":14187730,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187735,"byte_end":14187742,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189355,"byte_end":14189365,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187883,"byte_end":14187944,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187949,"byte_end":14187952,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14187957,"byte_end":14188025,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188030,"byte_end":14188033,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188038,"byte_end":14188106,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188111,"byte_end":14188143,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188148,"byte_end":14188151,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188156,"byte_end":14188227,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188232,"byte_end":14188302,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188307,"byte_end":14188378,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188383,"byte_end":14188424,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188429,"byte_end":14188432,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188437,"byte_end":14188514,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188519,"byte_end":14188522,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188527,"byte_end":14188597,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188602,"byte_end":14188674,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188679,"byte_end":14188728,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188733,"byte_end":14188736,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188741,"byte_end":14188779,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188784,"byte_end":14188834,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188839,"byte_end":14188842,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188847,"byte_end":14188861,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188866,"byte_end":14188869,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188874,"byte_end":14188881,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188886,"byte_end":14188910,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188915,"byte_end":14188918,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188923,"byte_end":14188966,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188971,"byte_end":14188974,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14188979,"byte_end":14189043,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189048,"byte_end":14189051,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189056,"byte_end":14189116,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189121,"byte_end":14189199,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189204,"byte_end":14189286,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189291,"byte_end":14189331,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189336,"byte_end":14189343,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5098},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190271,"byte_end":14190275,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189479,"byte_end":14189550,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189555,"byte_end":14189566,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189571,"byte_end":14189574,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189579,"byte_end":14189654,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189659,"byte_end":14189699,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189704,"byte_end":14189707,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189712,"byte_end":14189750,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189755,"byte_end":14189821,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189826,"byte_end":14189829,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189834,"byte_end":14189848,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189853,"byte_end":14189856,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189861,"byte_end":14189868,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189873,"byte_end":14189897,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189902,"byte_end":14189905,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189910,"byte_end":14189948,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189953,"byte_end":14189956,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14189961,"byte_end":14190011,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190016,"byte_end":14190095,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190100,"byte_end":14190151,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190156,"byte_end":14190211,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190216,"byte_end":14190247,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190252,"byte_end":14190259,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190778,"byte_end":14190785,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190371,"byte_end":14190446,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190451,"byte_end":14190489,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190494,"byte_end":14190497,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190502,"byte_end":14190571,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190576,"byte_end":14190579,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190584,"byte_end":14190598,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190603,"byte_end":14190606,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190611,"byte_end":14190618,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190623,"byte_end":14190653,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190658,"byte_end":14190661,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190666,"byte_end":14190706,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190711,"byte_end":14190714,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190719,"byte_end":14190754,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190759,"byte_end":14190766,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191551,"byte_end":14191559,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190850,"byte_end":14190896,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190901,"byte_end":14190904,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190909,"byte_end":14190986,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14190991,"byte_end":14191012,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191017,"byte_end":14191020,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191025,"byte_end":14191066,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191071,"byte_end":14191074,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191079,"byte_end":14191123,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191128,"byte_end":14191131,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191136,"byte_end":14191150,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191155,"byte_end":14191158,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191163,"byte_end":14191176,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191181,"byte_end":14191255,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191260,"byte_end":14191265,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191270,"byte_end":14191300,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191305,"byte_end":14191308,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191313,"byte_end":14191355,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191360,"byte_end":14191402,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191407,"byte_end":14191450,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191455,"byte_end":14191460,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191465,"byte_end":14191482,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191487,"byte_end":14191494,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191499,"byte_end":14191533,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192291,"byte_end":14192307,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191641,"byte_end":14191720,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191725,"byte_end":14191728,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191733,"byte_end":14191782,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191787,"byte_end":14191790,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191795,"byte_end":14191855,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191860,"byte_end":14191863,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191868,"byte_end":14191882,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191887,"byte_end":14191890,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191895,"byte_end":14191908,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191913,"byte_end":14191987,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14191992,"byte_end":14191997,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192002,"byte_end":14192032,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192037,"byte_end":14192040,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192045,"byte_end":14192087,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192092,"byte_end":14192142,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192147,"byte_end":14192190,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192195,"byte_end":14192200,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192205,"byte_end":14192222,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192227,"byte_end":14192234,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192239,"byte_end":14192273,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5106},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193134,"byte_end":14193146,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192397,"byte_end":14192438,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192443,"byte_end":14192446,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192451,"byte_end":14192540,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192545,"byte_end":14192573,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192578,"byte_end":14192581,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192586,"byte_end":14192631,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192636,"byte_end":14192639,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192644,"byte_end":14192696,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192701,"byte_end":14192704,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192709,"byte_end":14192723,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192728,"byte_end":14192731,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192736,"byte_end":14192749,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192754,"byte_end":14192828,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192833,"byte_end":14192838,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192843,"byte_end":14192884,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192889,"byte_end":14192892,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192897,"byte_end":14192950,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14192955,"byte_end":14193033,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193038,"byte_end":14193043,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193048,"byte_end":14193065,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193070,"byte_end":14193077,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193082,"byte_end":14193116,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193801,"byte_end":14193810,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193227,"byte_end":14193297,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193302,"byte_end":14193305,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193310,"byte_end":14193352,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193357,"byte_end":14193360,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193365,"byte_end":14193411,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193416,"byte_end":14193419,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193424,"byte_end":14193438,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193443,"byte_end":14193446,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193451,"byte_end":14193464,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193469,"byte_end":14193543,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193548,"byte_end":14193553,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193558,"byte_end":14193588,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193593,"byte_end":14193596,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193601,"byte_end":14193651,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193656,"byte_end":14193700,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193705,"byte_end":14193710,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193715,"byte_end":14193732,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193737,"byte_end":14193744,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193749,"byte_end":14193783,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5112},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194920,"byte_end":14194928,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193888,"byte_end":14193945,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193950,"byte_end":14193953,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14193958,"byte_end":14194034,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194039,"byte_end":14194112,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194117,"byte_end":14194120,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194125,"byte_end":14194166,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194171,"byte_end":14194174,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194179,"byte_end":14194221,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194226,"byte_end":14194270,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194275,"byte_end":14194319,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194324,"byte_end":14194327,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194332,"byte_end":14194346,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194351,"byte_end":14194354,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194359,"byte_end":14194372,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194377,"byte_end":14194451,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194456,"byte_end":14194461,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194466,"byte_end":14194488,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194493,"byte_end":14194523,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194528,"byte_end":14194558,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194563,"byte_end":14194566,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194571,"byte_end":14194607,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194612,"byte_end":14194657,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194662,"byte_end":14194665,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194670,"byte_end":14194714,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194719,"byte_end":14194744,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194749,"byte_end":14194809,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194814,"byte_end":14194819,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194824,"byte_end":14194829,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194834,"byte_end":14194851,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194856,"byte_end":14194863,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14194868,"byte_end":14194902,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195957,"byte_end":14195963,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195009,"byte_end":14195069,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195074,"byte_end":14195077,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195082,"byte_end":14195159,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195164,"byte_end":14195244,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195249,"byte_end":14195252,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195257,"byte_end":14195335,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195340,"byte_end":14195387,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195392,"byte_end":14195395,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195400,"byte_end":14195414,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195419,"byte_end":14195422,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195427,"byte_end":14195440,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195445,"byte_end":14195519,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195524,"byte_end":14195529,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195534,"byte_end":14195564,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195569,"byte_end":14195639,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195644,"byte_end":14195649,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195654,"byte_end":14195671,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195676,"byte_end":14195683,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195688,"byte_end":14195691,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195696,"byte_end":14195710,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195715,"byte_end":14195718,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195723,"byte_end":14195802,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195807,"byte_end":14195845,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195850,"byte_end":14195853,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195858,"byte_end":14195900,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14195905,"byte_end":14195939,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5118},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197221,"byte_end":14197228,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196033,"byte_end":14196113,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196118,"byte_end":14196121,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196126,"byte_end":14196203,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196208,"byte_end":14196288,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196293,"byte_end":14196296,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196301,"byte_end":14196379,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196384,"byte_end":14196431,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196436,"byte_end":14196439,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196444,"byte_end":14196458,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196463,"byte_end":14196466,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196471,"byte_end":14196484,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196489,"byte_end":14196563,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196568,"byte_end":14196573,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196578,"byte_end":14196608,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196613,"byte_end":14196683,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196688,"byte_end":14196750,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196755,"byte_end":14196760,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196765,"byte_end":14196782,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196787,"byte_end":14196794,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196799,"byte_end":14196802,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196807,"byte_end":14196821,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196826,"byte_end":14196829,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196834,"byte_end":14196913,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196918,"byte_end":14196988,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14196993,"byte_end":14197034,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197039,"byte_end":14197042,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197047,"byte_end":14197089,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197094,"byte_end":14197164,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197169,"byte_end":14197203,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198555,"byte_end":14198561,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197367,"byte_end":14197444,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197449,"byte_end":14197452,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197457,"byte_end":14197534,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197539,"byte_end":14197619,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197624,"byte_end":14197627,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197632,"byte_end":14197710,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197715,"byte_end":14197762,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197767,"byte_end":14197770,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197775,"byte_end":14197789,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197794,"byte_end":14197797,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197802,"byte_end":14197815,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197820,"byte_end":14197894,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197899,"byte_end":14197904,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197909,"byte_end":14197939,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197944,"byte_end":14197947,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14197952,"byte_end":14198020,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198025,"byte_end":14198087,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198092,"byte_end":14198097,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198102,"byte_end":14198119,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198124,"byte_end":14198131,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198136,"byte_end":14198139,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198144,"byte_end":14198158,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198163,"byte_end":14198166,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198171,"byte_end":14198250,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198255,"byte_end":14198325,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198330,"byte_end":14198370,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198375,"byte_end":14198378,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198383,"byte_end":14198425,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198430,"byte_end":14198498,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198503,"byte_end":14198537,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199128,"byte_end":14199141,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198699,"byte_end":14198772,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198777,"byte_end":14198792,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198797,"byte_end":14198800,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198805,"byte_end":14198869,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198874,"byte_end":14198910,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198915,"byte_end":14198918,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198923,"byte_end":14198937,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198942,"byte_end":14198945,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198950,"byte_end":14198957,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198962,"byte_end":14198992,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14198997,"byte_end":14199000,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199005,"byte_end":14199059,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199064,"byte_end":14199104,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199109,"byte_end":14199116,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199370,"byte_end":14199374,"line_start":825,"line_end":825,"column_start":8,"column_end":12},"name":"from","qualname":"<Box<Path> as std::convert::From>::from","value":"fn from(&Path) -> Box<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199697,"byte_end":14199701,"line_start":835,"line_end":835,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Path> as std::convert::From>::from","value":"fn from(&Path) -> Arc<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Converts a Path into a Rc by copying the Path data into a new Rc buffer.\n","sig":null,"attributes":[{"value":"/ Converts a Path into a Rc by copying the Path data into a new Rc buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199599,"byte_end":14199675,"line_start":833,"line_end":833,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199680,"byte_end":14199689,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199913,"byte_end":14199917,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"from","qualname":"<Rc<Path> as std::convert::From>::from","value":"fn from(&Path) -> Rc<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199896,"byte_end":14199905,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200127,"byte_end":14200135,"line_start":852,"line_end":852,"column_start":8,"column_end":16},"name":"to_owned","qualname":"<Path as std::borrow::ToOwned>::to_owned","value":"fn to_owned(&Self) -> PathBuf","parent":{"krate":5,"index":772},"children":[],"decl_id":{"krate":5,"index":774},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200228,"byte_end":14200234,"line_start":858,"line_end":858,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &OsStr","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5139},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200326,"byte_end":14200332,"line_start":864,"line_end":864,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200409,"byte_end":14200415,"line_start":870,"line_end":870,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<OsStr as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5144},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200532,"byte_end":14200536,"line_start":877,"line_end":877,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(&'a Path) -> Cow","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200515,"byte_end":14200524,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5146},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200648,"byte_end":14200654,"line_start":883,"line_end":883,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Cow as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5148},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200745,"byte_end":14200751,"line_start":889,"line_end":889,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<OsString as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5150},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200837,"byte_end":14200843,"line_start":895,"line_end":895,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<str as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200932,"byte_end":14200938,"line_start":901,"line_end":901,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<String as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5154},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14201028,"byte_end":14201034,"line_start":907,"line_end":907,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14201180,"byte_end":14201189,"line_start":916,"line_end":916,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a PathBuf as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5164},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14201341,"byte_end":14201350,"line_start":925,"line_end":925,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Path as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Iter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14203898,"byte_end":14203902,"line_start":1013,"line_end":1013,"column_start":8,"column_end":12},"name":"from","qualname":"<&'a Path as std::convert::From>::from","value":"fn from(&'a std::path::Path) -> &'a Path","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5172},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204047,"byte_end":14204051,"line_start":1019,"line_end":1019,"column_start":8,"column_end":12},"name":"into","qualname":"<&'a Path as std::convert::Into>::into","value":"fn into(Self) -> &'a std::path::Path","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204180,"byte_end":14204186,"line_start":1025,"line_end":1025,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Path as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &std::path::Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5176},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204291,"byte_end":14204297,"line_start":1031,"line_end":1031,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<std::path::Path as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204394,"byte_end":14204400,"line_start":1037,"line_end":1037,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<std::path::PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205111,"byte_end":14205118,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":6099}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14204882,"byte_end":14204944,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14204945,"byte_end":14204948,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14204949,"byte_end":14205028,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205359,"byte_end":14205362,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205174,"byte_end":14205207,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205212,"byte_end":14205215,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205220,"byte_end":14205234,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205239,"byte_end":14205242,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205247,"byte_end":14205254,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205259,"byte_end":14205292,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205297,"byte_end":14205300,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205305,"byte_end":14205335,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205340,"byte_end":14205347,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205723,"byte_end":14205730,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205430,"byte_end":14205462,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205467,"byte_end":14205470,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205475,"byte_end":14205505,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205510,"byte_end":14205513,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205518,"byte_end":14205532,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205537,"byte_end":14205540,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205545,"byte_end":14205552,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205557,"byte_end":14205598,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205603,"byte_end":14205606,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205611,"byte_end":14205646,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205651,"byte_end":14205699,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205704,"byte_end":14205711,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206724,"byte_end":14206728,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"fn push<P>(&mut Self, P) where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205796,"byte_end":14205827,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205832,"byte_end":14205835,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205840,"byte_end":14205896,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205901,"byte_end":14205904,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205909,"byte_end":14205924,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205929,"byte_end":14205932,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205937,"byte_end":14206000,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206005,"byte_end":14206072,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206077,"byte_end":14206138,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206143,"byte_end":14206146,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206151,"byte_end":14206165,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206170,"byte_end":14206173,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206178,"byte_end":14206232,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206237,"byte_end":14206240,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206245,"byte_end":14206252,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206257,"byte_end":14206290,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206295,"byte_end":14206298,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206303,"byte_end":14206344,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206349,"byte_end":14206374,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206379,"byte_end":14206431,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206436,"byte_end":14206443,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206448,"byte_end":14206451,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206456,"byte_end":14206512,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206517,"byte_end":14206520,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206525,"byte_end":14206532,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206537,"byte_end":14206570,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206575,"byte_end":14206578,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206583,"byte_end":14206624,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206629,"byte_end":14206651,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206656,"byte_end":14206700,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206705,"byte_end":14206712,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207426,"byte_end":14207429,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206817,"byte_end":14206857,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206862,"byte_end":14206865,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206870,"byte_end":14206938,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206943,"byte_end":14206973,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206978,"byte_end":14206981,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14206986,"byte_end":14207066,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207071,"byte_end":14207125,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207130,"byte_end":14207133,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207138,"byte_end":14207152,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207157,"byte_end":14207160,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207165,"byte_end":14207172,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207177,"byte_end":14207218,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207223,"byte_end":14207226,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207231,"byte_end":14207278,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207283,"byte_end":14207286,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207291,"byte_end":14207303,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207308,"byte_end":14207346,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207351,"byte_end":14207363,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207368,"byte_end":14207402,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207407,"byte_end":14207414,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208459,"byte_end":14208472,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"fn set_file_name<S>(&mut Self, S) where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207487,"byte_end":14207533,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207538,"byte_end":14207541,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207546,"byte_end":14207615,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207620,"byte_end":14207636,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207641,"byte_end":14207644,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207649,"byte_end":14207715,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207720,"byte_end":14207789,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207794,"byte_end":14207838,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207843,"byte_end":14207846,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207851,"byte_end":14207911,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14207916,"byte_end":14207996,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208001,"byte_end":14208044,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208049,"byte_end":14208052,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208057,"byte_end":14208071,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208076,"byte_end":14208079,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208084,"byte_end":14208091,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208096,"byte_end":14208129,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208134,"byte_end":14208137,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208142,"byte_end":14208179,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208184,"byte_end":14208221,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208226,"byte_end":14208255,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208260,"byte_end":14208302,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208307,"byte_end":14208346,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208351,"byte_end":14208384,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208389,"byte_end":14208435,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208440,"byte_end":14208447,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209485,"byte_end":14209498,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"fn set_extension<S>(&mut Self, S) -> bool where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208572,"byte_end":14208618,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208623,"byte_end":14208626,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208631,"byte_end":14208702,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208707,"byte_end":14208762,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208767,"byte_end":14208770,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208775,"byte_end":14208847,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208852,"byte_end":14208871,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208876,"byte_end":14208879,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208884,"byte_end":14208944,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14208949,"byte_end":14209009,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209014,"byte_end":14209094,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209099,"byte_end":14209102,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209107,"byte_end":14209121,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209126,"byte_end":14209129,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209134,"byte_end":14209141,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209146,"byte_end":14209187,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209192,"byte_end":14209195,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209200,"byte_end":14209243,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209248,"byte_end":14209251,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209256,"byte_end":14209285,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209290,"byte_end":14209348,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209353,"byte_end":14209356,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209361,"byte_end":14209394,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209399,"byte_end":14209461,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209466,"byte_end":14209473,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209965,"byte_end":14209979,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209606,"byte_end":14209678,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209683,"byte_end":14209686,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209691,"byte_end":14209763,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209768,"byte_end":14209771,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209776,"byte_end":14209790,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209795,"byte_end":14209798,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209803,"byte_end":14209810,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209815,"byte_end":14209848,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209853,"byte_end":14209856,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209861,"byte_end":14209900,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209905,"byte_end":14209941,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14209946,"byte_end":14209953,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210230,"byte_end":14210245,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210047,"byte_end":14210106,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210111,"byte_end":14210114,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210119,"byte_end":14210183,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210188,"byte_end":14210218,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210430,"byte_end":14210434,"line_start":200,"line_end":200,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(Box<Path>) -> PathBuf","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210547,"byte_end":14210551,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"from","qualname":"<Box<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Box<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210664,"byte_end":14210669,"line_start":213,"line_end":213,"column_start":8,"column_end":13},"name":"clone","qualname":"<Box<Path> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210647,"byte_end":14210656,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210802,"byte_end":14210806,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(&T) -> PathBuf","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210926,"byte_end":14210930,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(OsString) -> PathBuf","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5240},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211043,"byte_end":14211047,"line_start":231,"line_end":231,"column_start":8,"column_end":12},"name":"from","qualname":"<OsString as std::convert::From>::from","value":"fn from(PathBuf) -> OsString","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211159,"byte_end":14211163,"line_start":237,"line_end":237,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(String) -> PathBuf","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5245},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211315,"byte_end":14211323,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"from_str","qualname":"<PathBuf as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211458,"byte_end":14211467,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<PathBuf as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> PathBuf where I: IntoIterator<Item = P>","parent":{"krate":2,"index":7994},"children":[],"decl_id":{"krate":2,"index":7996},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211660,"byte_end":14211666,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"extend","qualname":"<PathBuf as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = P>","parent":{"krate":2,"index":8007},"children":[],"decl_id":{"krate":2,"index":8009},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5257},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211849,"byte_end":14211854,"line_start":267,"line_end":267,"column_start":8,"column_end":13},"name":"deref","qualname":"<PathBuf as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Path","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211952,"byte_end":14211958,"line_start":273,"line_end":273,"column_start":8,"column_end":14},"name":"borrow","qualname":"<PathBuf as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &Path","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212071,"byte_end":14212075,"line_start":280,"line_end":280,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(PathBuf) -> Cow","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212054,"byte_end":14212063,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212206,"byte_end":14212210,"line_start":287,"line_end":287,"column_start":8,"column_end":12},"name":"from","qualname":"<Cow as std::convert::From>::from","value":"fn from(&'a PathBuf) -> Cow","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212189,"byte_end":14212198,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212354,"byte_end":14212358,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(Cow) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212337,"byte_end":14212346,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212475,"byte_end":14212479,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"from","qualname":"<Arc<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Arc<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212458,"byte_end":14212467,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212700,"byte_end":14212704,"line_start":309,"line_end":309,"column_start":8,"column_end":12},"name":"from","qualname":"<Rc<Path> as std::convert::From>::from","value":"fn from(PathBuf) -> Rc<Path>","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212683,"byte_end":14212692,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212902,"byte_end":14212908,"line_start":316,"line_end":316,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &OsStr","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214053,"byte_end":14214057,"line_start":362,"line_end":362,"column_start":8,"column_end":12},"name":"from","qualname":"<PathBuf as std::convert::From>::from","value":"fn from(std::path::PathBuf) -> PathBuf","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214189,"byte_end":14214193,"line_start":368,"line_end":368,"column_start":8,"column_end":12},"name":"into","qualname":"<PathBuf as std::convert::Into>::into","value":"fn into(Self) -> std::path::PathBuf","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214301,"byte_end":14214307,"line_start":374,"line_end":374,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PathBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &std::path::Path","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5318},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5322},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5329},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5339},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":5474},{"krate":0,"index":5631}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":16847,"byte_end":16874,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214374,"byte_end":14214426,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214427,"byte_end":14214430,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214431,"byte_end":14214518,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214519,"byte_end":14214588,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214589,"byte_end":14214592,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214593,"byte_end":14214645,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214646,"byte_end":14214649,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214650,"byte_end":14214668,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214669,"byte_end":14214672,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214673,"byte_end":14214761,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214762,"byte_end":14214831,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214832,"byte_end":14214913,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214914,"byte_end":14214973,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14214974,"byte_end":14215063,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215064,"byte_end":14215138,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215139,"byte_end":14215231,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215232,"byte_end":14215314,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215315,"byte_end":14215397,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215398,"byte_end":14215401,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215402,"byte_end":14215434,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215435,"byte_end":14215473,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215474,"byte_end":14215512,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215513,"byte_end":14215553,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215554,"byte_end":14215600,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215601,"byte_end":14215647,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215648,"byte_end":14215692,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215693,"byte_end":14215733,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215734,"byte_end":14215781,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215782,"byte_end":14215822,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215823,"byte_end":14215826,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215827,"byte_end":14215861,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215862,"byte_end":14215865,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215866,"byte_end":14215956,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14215957,"byte_end":14216022,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216023,"byte_end":14216026,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216027,"byte_end":14216066,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216067,"byte_end":14216129,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216130,"byte_end":14216133,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216134,"byte_end":14216148,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216149,"byte_end":14216152,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216153,"byte_end":14216182,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216183,"byte_end":14216186,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216187,"byte_end":14216200,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216201,"byte_end":14216275,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216276,"byte_end":14216281,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216282,"byte_end":14216316,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216317,"byte_end":14216320,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216321,"byte_end":14216379,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216380,"byte_end":14216414,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216415,"byte_end":14216418,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216419,"byte_end":14216429,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216430,"byte_end":14216488,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216489,"byte_end":14216537,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216538,"byte_end":14216543,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216544,"byte_end":14216549,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216550,"byte_end":14216560,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\mod.rs","byte_start":14216561,"byte_end":14216568,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218244,"byte_end":14218257,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5412}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217666,"byte_end":14217726,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217727,"byte_end":14217730,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217731,"byte_end":14217797,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217798,"byte_end":14217801,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217802,"byte_end":14217893,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217894,"byte_end":14217934,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217935,"byte_end":14217938,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217939,"byte_end":14217953,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217954,"byte_end":14217957,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217958,"byte_end":14217965,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14217966,"byte_end":14218040,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218041,"byte_end":14218046,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218047,"byte_end":14218085,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218086,"byte_end":14218089,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218090,"byte_end":14218163,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218164,"byte_end":14218201,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218202,"byte_end":14218207,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218208,"byte_end":14218225,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218226,"byte_end":14218233,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218352,"byte_end":14218356,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218264,"byte_end":14218342,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5412},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218698,"byte_end":14218713,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218392,"byte_end":14218458,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218463,"byte_end":14218466,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218471,"byte_end":14218562,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218567,"byte_end":14218592,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218597,"byte_end":14218600,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218605,"byte_end":14218690,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5415},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218930,"byte_end":14218939,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218940,"byte_end":14218965,"line_start":66,"line_end":66,"column_start":15,"column_end":40},"name":"0","qualname":"::net::addr::ToSocketAddrsFuture::Resolving::0","value":"task::join_handle::JoinHandle<std::result::Result<I, futures_io::Error>>","parent":{"krate":0,"index":5415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218972,"byte_end":14218977,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5420},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218978,"byte_end":14218991,"line_start":67,"line_end":67,"column_start":11,"column_end":24},"name":"0","qualname":"::net::addr::ToSocketAddrsFuture::Ready::0","value":"std::result::Result<I, futures_io::Error>","parent":{"krate":0,"index":5418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218998,"byte_end":14219002,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":5413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218901,"byte_end":14218920,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14218852,"byte_end":14218891,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219663,"byte_end":14219667,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"poll","qualname":"<ToSocketAddrsFuture<I> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220391,"byte_end":14220406,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddr as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220698,"byte_end":14220713,"line_start":123,"line_end":123,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV4 as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5442},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14221075,"byte_end":14221090,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV6 as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14221453,"byte_end":14221468,"line_start":153,"line_end":153,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(IpAddr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5449},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14221876,"byte_end":14221891,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv4Addr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14222208,"byte_end":14222223,"line_start":184,"line_end":184,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv6Addr, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14222539,"byte_end":14222554,"line_start":198,"line_end":198,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(&'_ str, u16) as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5460},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14223552,"byte_end":14223567,"line_start":229,"line_end":229,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<str as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14224233,"byte_end":14224248,"line_start":251,"line_end":251,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'a [SocketAddr] as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5470},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14224528,"byte_end":14224543,"line_start":264,"line_end":264,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'_ T as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5473},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14224797,"byte_end":14224812,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<String as net::addr::ToSocketAddrs>::to_socket_addrs","value":"fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5410},"children":[],"decl_id":{"krate":0,"index":5412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226606,"byte_end":14226617,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":6122}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225350,"byte_end":14225401,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225402,"byte_end":14225405,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225406,"byte_end":14225503,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225504,"byte_end":14225592,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225593,"byte_end":14225622,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225623,"byte_end":14225626,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225627,"byte_end":14225683,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225684,"byte_end":14225687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225688,"byte_end":14225757,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225758,"byte_end":14225761,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225762,"byte_end":14225825,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225826,"byte_end":14225829,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225830,"byte_end":14225856,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225857,"byte_end":14225891,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225892,"byte_end":14225946,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14225947,"byte_end":14226035,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226036,"byte_end":14226039,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226040,"byte_end":14226054,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226055,"byte_end":14226058,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226059,"byte_end":14226072,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226073,"byte_end":14226147,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226148,"byte_end":14226153,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226154,"byte_end":14226176,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226177,"byte_end":14226213,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226214,"byte_end":14226244,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226245,"byte_end":14226248,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226249,"byte_end":14226311,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226312,"byte_end":14226355,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226356,"byte_end":14226359,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226360,"byte_end":14226412,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226413,"byte_end":14226442,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226443,"byte_end":14226498,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226499,"byte_end":14226539,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226540,"byte_end":14226545,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226546,"byte_end":14226551,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226552,"byte_end":14226569,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226570,"byte_end":14226577,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227439,"byte_end":14227443,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226689,"byte_end":14226766,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226771,"byte_end":14226774,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226779,"byte_end":14226840,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226845,"byte_end":14226848,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226853,"byte_end":14226946,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226951,"byte_end":14227019,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227024,"byte_end":14227027,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227032,"byte_end":14227046,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227051,"byte_end":14227098,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227103,"byte_end":14227106,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227111,"byte_end":14227124,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227129,"byte_end":14227203,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227208,"byte_end":14227213,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227218,"byte_end":14227254,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227259,"byte_end":14227262,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227267,"byte_end":14227326,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227331,"byte_end":14227336,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227341,"byte_end":14227358,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227363,"byte_end":14227370,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227375,"byte_end":14227378,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14227383,"byte_end":14227421,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5533},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228609,"byte_end":14228615,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228076,"byte_end":14228131,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228136,"byte_end":14228139,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228144,"byte_end":14228236,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228241,"byte_end":14228244,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228249,"byte_end":14228264,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228269,"byte_end":14228272,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228277,"byte_end":14228290,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228295,"byte_end":14228369,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228374,"byte_end":14228379,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228384,"byte_end":14228420,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228425,"byte_end":14228428,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228433,"byte_end":14228492,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228497,"byte_end":14228547,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228552,"byte_end":14228557,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228562,"byte_end":14228579,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228584,"byte_end":14228591,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229779,"byte_end":14229787,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228844,"byte_end":14228889,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228894,"byte_end":14228897,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228902,"byte_end":14228993,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14228998,"byte_end":14229090,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229095,"byte_end":14229098,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229103,"byte_end":14229133,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229138,"byte_end":14229218,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229223,"byte_end":14229226,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229231,"byte_end":14229246,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229251,"byte_end":14229254,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229259,"byte_end":14229272,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229277,"byte_end":14229351,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229356,"byte_end":14229361,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229366,"byte_end":14229402,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229407,"byte_end":14229437,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229442,"byte_end":14229445,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229450,"byte_end":14229509,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229514,"byte_end":14229557,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229562,"byte_end":14229565,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229570,"byte_end":14229622,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229627,"byte_end":14229660,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229665,"byte_end":14229713,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229718,"byte_end":14229723,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229728,"byte_end":14229733,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229738,"byte_end":14229755,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14229760,"byte_end":14229767,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231878,"byte_end":14231888,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231333,"byte_end":14231394,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231399,"byte_end":14231402,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231407,"byte_end":14231502,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231507,"byte_end":14231521,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231526,"byte_end":14231529,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231534,"byte_end":14231548,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231553,"byte_end":14231556,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231561,"byte_end":14231574,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231579,"byte_end":14231653,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231658,"byte_end":14231663,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231668,"byte_end":14231704,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231709,"byte_end":14231712,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231717,"byte_end":14231779,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231784,"byte_end":14231822,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231827,"byte_end":14231832,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231837,"byte_end":14231854,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231859,"byte_end":14231866,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232528,"byte_end":14232536,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":5540}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14231977,"byte_end":14232018,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232019,"byte_end":14232022,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232023,"byte_end":14232121,"line_start":218,"line_end":218,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232122,"byte_end":14232180,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232181,"byte_end":14232184,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232185,"byte_end":14232245,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232246,"byte_end":14232249,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232250,"byte_end":14232330,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232331,"byte_end":14232388,"line_start":224,"line_end":224,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232389,"byte_end":14232433,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232434,"byte_end":14232516,"line_start":226,"line_end":226,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232719,"byte_end":14232728,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Incoming as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5547},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233022,"byte_end":14233025,"line_start":241,"line_end":241,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Incoming as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5549},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233262,"byte_end":14233266,"line_start":248,"line_end":248,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpListener as std::convert::From>::from","value":"fn from(std::net::TcpListener) -> TcpListener","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Converts a `std::net::TcpListener` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::TcpListener` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233182,"byte_end":14233254,"line_start":247,"line_end":247,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5552},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233612,"byte_end":14233620,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::TcpListener as std::convert::TryFrom>::try_from","value":"fn try_from(TcpListener) -> io::Result<std::net::TcpListener>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":" Converts a `TcpListener` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `TcpListener` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233543,"byte_end":14233604,"line_start":257,"line_end":257,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6139},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234517,"byte_end":14234530,"line_start":293,"line_end":293,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<TcpListener as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5822},"children":[],"decl_id":{"krate":1,"index":5823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234670,"byte_end":14234685,"line_start":299,"line_end":299,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<TcpListener as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> TcpListener","parent":{"krate":1,"index":5824},"children":[],"decl_id":{"krate":1,"index":5825},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234857,"byte_end":14234872,"line_start":305,"line_end":305,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<TcpListener as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5826},"children":[],"decl_id":{"krate":1,"index":5827},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236764,"byte_end":14236773,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":6145}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235206,"byte_end":14235259,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235260,"byte_end":14235263,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235264,"byte_end":14235361,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235362,"byte_end":14235455,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235456,"byte_end":14235539,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235540,"byte_end":14235543,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235544,"byte_end":14235640,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235641,"byte_end":14235724,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235725,"byte_end":14235728,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235729,"byte_end":14235790,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235791,"byte_end":14235794,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235795,"byte_end":14235848,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235849,"byte_end":14235903,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235904,"byte_end":14235943,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14235944,"byte_end":14236022,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236023,"byte_end":14236103,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236104,"byte_end":14236174,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236175,"byte_end":14236230,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236231,"byte_end":14236315,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236316,"byte_end":14236319,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236320,"byte_end":14236335,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236336,"byte_end":14236339,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236340,"byte_end":14236353,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236354,"byte_end":14236428,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236429,"byte_end":14236434,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236435,"byte_end":14236469,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236470,"byte_end":14236500,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236501,"byte_end":14236504,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236505,"byte_end":14236570,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236571,"byte_end":14236615,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236616,"byte_end":14236619,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236620,"byte_end":14236654,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236655,"byte_end":14236696,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236697,"byte_end":14236702,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236703,"byte_end":14236720,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236721,"byte_end":14236728,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237538,"byte_end":14237545,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"async fn connect<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236857,"byte_end":14236921,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236926,"byte_end":14236929,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236934,"byte_end":14237018,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237023,"byte_end":14237108,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237113,"byte_end":14237169,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237174,"byte_end":14237177,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237182,"byte_end":14237224,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237229,"byte_end":14237232,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237237,"byte_end":14237251,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237256,"byte_end":14237259,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237264,"byte_end":14237277,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237282,"byte_end":14237356,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237361,"byte_end":14237366,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237371,"byte_end":14237405,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237410,"byte_end":14237413,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237418,"byte_end":14237476,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237481,"byte_end":14237486,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237491,"byte_end":14237508,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14237513,"byte_end":14237520,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238714,"byte_end":14238724,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238298,"byte_end":14238361,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238366,"byte_end":14238369,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238374,"byte_end":14238389,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238394,"byte_end":14238397,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238402,"byte_end":14238415,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238420,"byte_end":14238494,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238499,"byte_end":14238504,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238509,"byte_end":14238543,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238548,"byte_end":14238551,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238556,"byte_end":14238617,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238622,"byte_end":14238658,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238663,"byte_end":14238668,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238673,"byte_end":14238690,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238695,"byte_end":14238702,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239231,"byte_end":14239240,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238815,"byte_end":14238879,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238884,"byte_end":14238887,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238892,"byte_end":14238907,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238912,"byte_end":14238915,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238920,"byte_end":14238933,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14238938,"byte_end":14239012,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239017,"byte_end":14239022,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239027,"byte_end":14239061,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239066,"byte_end":14239069,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239074,"byte_end":14239135,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239140,"byte_end":14239175,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239180,"byte_end":14239185,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239190,"byte_end":14239207,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239212,"byte_end":14239219,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239895,"byte_end":14239898,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239330,"byte_end":14239388,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239393,"byte_end":14239396,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239401,"byte_end":14239461,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239466,"byte_end":14239469,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239474,"byte_end":14239506,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239511,"byte_end":14239514,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239519,"byte_end":14239533,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239538,"byte_end":14239541,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239546,"byte_end":14239559,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239564,"byte_end":14239638,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239643,"byte_end":14239648,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239653,"byte_end":14239687,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239692,"byte_end":14239695,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239700,"byte_end":14239761,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239766,"byte_end":14239769,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239774,"byte_end":14239799,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239804,"byte_end":14239839,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239844,"byte_end":14239849,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239854,"byte_end":14239871,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239876,"byte_end":14239883,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5602},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240537,"byte_end":14240544,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14239975,"byte_end":14240033,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240038,"byte_end":14240041,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240046,"byte_end":14240122,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240127,"byte_end":14240148,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240153,"byte_end":14240156,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240161,"byte_end":14240175,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240180,"byte_end":14240183,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240188,"byte_end":14240201,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240206,"byte_end":14240280,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240285,"byte_end":14240290,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240295,"byte_end":14240329,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240334,"byte_end":14240337,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240342,"byte_end":14240403,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240408,"byte_end":14240411,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240416,"byte_end":14240441,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240446,"byte_end":14240481,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240486,"byte_end":14240491,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240496,"byte_end":14240513,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240518,"byte_end":14240525,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241395,"byte_end":14241399,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240637,"byte_end":14240726,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240731,"byte_end":14240769,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240774,"byte_end":14240777,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240782,"byte_end":14240833,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240838,"byte_end":14240841,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240846,"byte_end":14240941,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240946,"byte_end":14240987,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14240992,"byte_end":14240995,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241000,"byte_end":14241014,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241019,"byte_end":14241022,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241027,"byte_end":14241040,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241045,"byte_end":14241119,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241124,"byte_end":14241129,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241134,"byte_end":14241168,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241173,"byte_end":14241176,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241181,"byte_end":14241242,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241247,"byte_end":14241250,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241255,"byte_end":14241287,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241292,"byte_end":14241333,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241338,"byte_end":14241343,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241348,"byte_end":14241365,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241370,"byte_end":14241377,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242085,"byte_end":14242092,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241494,"byte_end":14241556,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241561,"byte_end":14241564,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241569,"byte_end":14241633,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241638,"byte_end":14241641,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241646,"byte_end":14241686,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241691,"byte_end":14241694,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241699,"byte_end":14241713,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241718,"byte_end":14241721,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241726,"byte_end":14241739,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241744,"byte_end":14241818,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241823,"byte_end":14241828,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241833,"byte_end":14241867,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241872,"byte_end":14241875,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241880,"byte_end":14241941,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241946,"byte_end":14241949,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241954,"byte_end":14241984,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14241989,"byte_end":14242029,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242034,"byte_end":14242039,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242044,"byte_end":14242061,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242066,"byte_end":14242073,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242976,"byte_end":14242987,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242174,"byte_end":14242236,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242241,"byte_end":14242244,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242249,"byte_end":14242318,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242323,"byte_end":14242396,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242401,"byte_end":14242474,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242479,"byte_end":14242554,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242559,"byte_end":14242577,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242582,"byte_end":14242585,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242590,"byte_end":14242604,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242609,"byte_end":14242612,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242617,"byte_end":14242630,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242635,"byte_end":14242709,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242714,"byte_end":14242719,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242724,"byte_end":14242758,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242763,"byte_end":14242766,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242771,"byte_end":14242832,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242837,"byte_end":14242840,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242845,"byte_end":14242875,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242880,"byte_end":14242920,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242925,"byte_end":14242930,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242935,"byte_end":14242952,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14242957,"byte_end":14242964,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243824,"byte_end":14243832,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243093,"byte_end":14243159,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243164,"byte_end":14243167,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243172,"byte_end":14243261,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243266,"byte_end":14243348,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243353,"byte_end":14243356,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243361,"byte_end":14243431,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243436,"byte_end":14243439,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243444,"byte_end":14243458,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243463,"byte_end":14243466,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243471,"byte_end":14243484,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243489,"byte_end":14243563,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243568,"byte_end":14243573,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243578,"byte_end":14243605,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243610,"byte_end":14243613,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243618,"byte_end":14243652,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243657,"byte_end":14243660,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243665,"byte_end":14243726,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243731,"byte_end":14243768,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243773,"byte_end":14243778,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243783,"byte_end":14243800,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243805,"byte_end":14243812,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243977,"byte_end":14243986,"line_start":285,"line_end":285,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<TcpStream as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244170,"byte_end":14244188,"line_start":293,"line_end":293,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<TcpStream as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244424,"byte_end":14244433,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ TcpStream as futures_io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244625,"byte_end":14244643,"line_start":311,"line_end":311,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<&'_ TcpStream as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":39},"children":[],"decl_id":{"krate":29,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244887,"byte_end":14244897,"line_start":321,"line_end":321,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<TcpStream as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14245078,"byte_end":14245097,"line_start":329,"line_end":329,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<TcpStream as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14245298,"byte_end":14245308,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<TcpStream as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14245438,"byte_end":14245448,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<TcpStream as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14245608,"byte_end":14245618,"line_start":347,"line_end":347,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ TcpStream as futures_io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14245807,"byte_end":14245826,"line_start":355,"line_end":355,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<&'_ TcpStream as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246035,"byte_end":14246045,"line_start":363,"line_end":363,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ TcpStream as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246183,"byte_end":14246193,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ TcpStream as futures_io::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":29,"index":42},"children":[],"decl_id":{"krate":29,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246455,"byte_end":14246459,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"from","qualname":"<TcpStream as std::convert::From>::from","value":"fn from(std::net::TcpStream) -> TcpStream","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Converts a `std::net::TcpStream` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::TcpStream` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246377,"byte_end":14246447,"line_start":373,"line_end":373,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5629},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246797,"byte_end":14246805,"line_start":384,"line_end":384,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::TcpStream as std::convert::TryFrom>::try_from","value":"fn try_from(TcpStream) -> io::Result<std::net::TcpStream>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":" Converts a `TcpStream` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `TcpStream` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246730,"byte_end":14246789,"line_start":383,"line_end":383,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248127,"byte_end":14248140,"line_start":427,"line_end":427,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<TcpStream as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5822},"children":[],"decl_id":{"krate":1,"index":5823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248288,"byte_end":14248303,"line_start":433,"line_end":433,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<TcpStream as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> TcpStream","parent":{"krate":1,"index":5824},"children":[],"decl_id":{"krate":1,"index":5825},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248469,"byte_end":14248484,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<TcpStream as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5826},"children":[],"decl_id":{"krate":1,"index":5827},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250247,"byte_end":14250256,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":6170}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14248993,"byte_end":14249010,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249011,"byte_end":14249014,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249015,"byte_end":14249112,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249113,"byte_end":14249158,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249159,"byte_end":14249162,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249163,"byte_end":14249262,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249263,"byte_end":14249356,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249357,"byte_end":14249360,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249361,"byte_end":14249422,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249423,"byte_end":14249426,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249427,"byte_end":14249453,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249454,"byte_end":14249492,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249493,"byte_end":14249523,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249524,"byte_end":14249568,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249569,"byte_end":14249609,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249610,"byte_end":14249672,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249673,"byte_end":14249727,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249728,"byte_end":14249812,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249813,"byte_end":14249816,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249817,"byte_end":14249832,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249833,"byte_end":14249836,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249837,"byte_end":14249850,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249851,"byte_end":14249925,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249926,"byte_end":14249931,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249932,"byte_end":14249966,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249967,"byte_end":14249970,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14249971,"byte_end":14250029,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250030,"byte_end":14250064,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250065,"byte_end":14250068,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250069,"byte_end":14250079,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250080,"byte_end":14250138,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250139,"byte_end":14250187,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250188,"byte_end":14250193,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250194,"byte_end":14250199,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250200,"byte_end":14250210,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250211,"byte_end":14250218,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250911,"byte_end":14250915,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"async fn bind<A>(A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250324,"byte_end":14250372,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250377,"byte_end":14250380,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250385,"byte_end":14250480,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250485,"byte_end":14250549,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250554,"byte_end":14250557,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250562,"byte_end":14250600,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250605,"byte_end":14250608,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250613,"byte_end":14250627,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250632,"byte_end":14250635,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250640,"byte_end":14250653,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250658,"byte_end":14250732,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250737,"byte_end":14250742,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250747,"byte_end":14250781,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250786,"byte_end":14250789,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250794,"byte_end":14250849,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250854,"byte_end":14250859,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250864,"byte_end":14250881,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250886,"byte_end":14250893,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5660},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252194,"byte_end":14252203,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251538,"byte_end":14251602,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251607,"byte_end":14251610,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251615,"byte_end":14251703,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251708,"byte_end":14251731,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251736,"byte_end":14251739,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251744,"byte_end":14251758,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251763,"byte_end":14251766,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251771,"byte_end":14251784,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251789,"byte_end":14251863,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251868,"byte_end":14251873,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251878,"byte_end":14251912,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251917,"byte_end":14251920,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251925,"byte_end":14251981,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14251986,"byte_end":14252042,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252047,"byte_end":14252097,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252102,"byte_end":14252138,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252143,"byte_end":14252148,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252153,"byte_end":14252170,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252175,"byte_end":14252182,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5662},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252919,"byte_end":14252929,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252387,"byte_end":14252448,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252453,"byte_end":14252456,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252461,"byte_end":14252549,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252554,"byte_end":14252573,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252578,"byte_end":14252581,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252586,"byte_end":14252600,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252605,"byte_end":14252608,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252613,"byte_end":14252626,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252631,"byte_end":14252705,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252710,"byte_end":14252715,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252720,"byte_end":14252754,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252759,"byte_end":14252762,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252767,"byte_end":14252822,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252827,"byte_end":14252863,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252868,"byte_end":14252873,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252878,"byte_end":14252895,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14252900,"byte_end":14252907,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5664},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253973,"byte_end":14253980,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"async fn send_to<A, '_, '_>(&'_ Self, &'_ [u8], A) -> /*impl Trait*/ where\nA: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253115,"byte_end":14253165,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253170,"byte_end":14253173,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253178,"byte_end":14253230,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253235,"byte_end":14253238,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253243,"byte_end":14253257,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253262,"byte_end":14253265,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253270,"byte_end":14253283,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253288,"byte_end":14253362,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253367,"byte_end":14253372,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253377,"byte_end":14253411,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253416,"byte_end":14253419,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253424,"byte_end":14253468,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253473,"byte_end":14253514,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253519,"byte_end":14253561,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253566,"byte_end":14253606,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253611,"byte_end":14253661,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253666,"byte_end":14253672,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253677,"byte_end":14253680,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253685,"byte_end":14253740,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253745,"byte_end":14253748,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253753,"byte_end":14253785,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253790,"byte_end":14253858,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253863,"byte_end":14253911,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253916,"byte_end":14253921,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253926,"byte_end":14253943,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14253948,"byte_end":14253955,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255095,"byte_end":14255104,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254513,"byte_end":14254547,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254552,"byte_end":14254555,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254560,"byte_end":14254624,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254629,"byte_end":14254632,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254637,"byte_end":14254651,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254656,"byte_end":14254659,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254664,"byte_end":14254677,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254682,"byte_end":14254756,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254761,"byte_end":14254766,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254771,"byte_end":14254805,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254810,"byte_end":14254813,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254818,"byte_end":14254873,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254878,"byte_end":14254881,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254886,"byte_end":14254918,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254923,"byte_end":14254977,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14254982,"byte_end":14255033,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255038,"byte_end":14255043,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255048,"byte_end":14255065,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255070,"byte_end":14255077,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5672},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255832,"byte_end":14255841,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255218,"byte_end":14255283,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255288,"byte_end":14255291,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255296,"byte_end":14255362,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255367,"byte_end":14255370,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255375,"byte_end":14255389,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255394,"byte_end":14255397,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255402,"byte_end":14255415,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255420,"byte_end":14255494,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255499,"byte_end":14255504,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255509,"byte_end":14255543,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255548,"byte_end":14255551,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255556,"byte_end":14255611,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255616,"byte_end":14255619,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255624,"byte_end":14255656,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255661,"byte_end":14255715,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255720,"byte_end":14255769,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255774,"byte_end":14255779,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255784,"byte_end":14255802,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255807,"byte_end":14255814,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5675},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256733,"byte_end":14256740,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"async fn connect<A, '_>(&'_ Self, A) -> /*impl Trait*/ where A: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14255955,"byte_end":14256003,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256008,"byte_end":14256011,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256016,"byte_end":14256108,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256113,"byte_end":14256207,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256212,"byte_end":14256262,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256267,"byte_end":14256270,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256275,"byte_end":14256301,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256306,"byte_end":14256332,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256337,"byte_end":14256373,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256378,"byte_end":14256381,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256386,"byte_end":14256400,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256405,"byte_end":14256408,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256413,"byte_end":14256426,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256431,"byte_end":14256505,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256510,"byte_end":14256515,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256520,"byte_end":14256554,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256559,"byte_end":14256562,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256567,"byte_end":14256622,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256627,"byte_end":14256671,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256676,"byte_end":14256681,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256686,"byte_end":14256703,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14256708,"byte_end":14256715,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258179,"byte_end":14258183,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257443,"byte_end":14257519,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257524,"byte_end":14257527,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257532,"byte_end":14257604,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257609,"byte_end":14257666,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257671,"byte_end":14257674,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257679,"byte_end":14257711,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257716,"byte_end":14257719,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257724,"byte_end":14257738,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257743,"byte_end":14257746,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257751,"byte_end":14257764,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257769,"byte_end":14257843,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257848,"byte_end":14257853,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257858,"byte_end":14257892,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257897,"byte_end":14257900,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257905,"byte_end":14257964,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14257969,"byte_end":14258013,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258018,"byte_end":14258067,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258072,"byte_end":14258075,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258080,"byte_end":14258117,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258122,"byte_end":14258127,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258132,"byte_end":14258149,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258154,"byte_end":14258161,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258863,"byte_end":14258867,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258274,"byte_end":14258308,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258313,"byte_end":14258316,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258321,"byte_end":14258370,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258375,"byte_end":14258378,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258383,"byte_end":14258397,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258402,"byte_end":14258405,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258410,"byte_end":14258423,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258428,"byte_end":14258502,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258507,"byte_end":14258512,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258517,"byte_end":14258551,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258556,"byte_end":14258559,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258564,"byte_end":14258619,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258624,"byte_end":14258668,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258673,"byte_end":14258676,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258681,"byte_end":14258713,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258718,"byte_end":14258759,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258764,"byte_end":14258801,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258806,"byte_end":14258811,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258816,"byte_end":14258833,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258838,"byte_end":14258845,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259586,"byte_end":14259590,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14258962,"byte_end":14259031,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259036,"byte_end":14259039,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259044,"byte_end":14259095,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259100,"byte_end":14259103,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259108,"byte_end":14259122,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259127,"byte_end":14259130,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259135,"byte_end":14259148,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259153,"byte_end":14259227,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259232,"byte_end":14259237,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259242,"byte_end":14259276,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259281,"byte_end":14259284,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259289,"byte_end":14259344,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259349,"byte_end":14259393,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259398,"byte_end":14259401,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259406,"byte_end":14259438,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259443,"byte_end":14259484,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259489,"byte_end":14259524,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259529,"byte_end":14259534,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259539,"byte_end":14259556,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259561,"byte_end":14259568,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259897,"byte_end":14259906,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259685,"byte_end":14259749,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259754,"byte_end":14259757,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259762,"byte_end":14259828,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259833,"byte_end":14259836,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259841,"byte_end":14259885,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260159,"byte_end":14260172,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14259990,"byte_end":14260054,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260059,"byte_end":14260062,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260067,"byte_end":14260147,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260511,"byte_end":14260528,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260270,"byte_end":14260339,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260344,"byte_end":14260347,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260352,"byte_end":14260426,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260431,"byte_end":14260434,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260439,"byte_end":14260499,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260873,"byte_end":14260894,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260620,"byte_end":14260689,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260694,"byte_end":14260697,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260702,"byte_end":14260776,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260781,"byte_end":14260784,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260789,"byte_end":14260799,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260804,"byte_end":14260807,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14260812,"byte_end":14260861,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261237,"byte_end":14261253,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261000,"byte_end":14261068,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261073,"byte_end":14261076,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261081,"byte_end":14261154,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261159,"byte_end":14261162,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261167,"byte_end":14261225,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5695},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261737,"byte_end":14261757,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261343,"byte_end":14261411,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261416,"byte_end":14261419,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261424,"byte_end":14261519,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261524,"byte_end":14261610,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261615,"byte_end":14261640,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261645,"byte_end":14261648,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261653,"byte_end":14261663,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261668,"byte_end":14261671,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261676,"byte_end":14261725,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262106,"byte_end":14262123,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261863,"byte_end":14261934,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261939,"byte_end":14261942,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14261947,"byte_end":14262021,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262026,"byte_end":14262029,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262034,"byte_end":14262094,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5697},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262472,"byte_end":14262493,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262215,"byte_end":14262286,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262291,"byte_end":14262294,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262299,"byte_end":14262375,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262380,"byte_end":14262383,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262388,"byte_end":14262398,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262403,"byte_end":14262406,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262411,"byte_end":14262460,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5698},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262787,"byte_end":14262790,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262599,"byte_end":14262657,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262662,"byte_end":14262665,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262670,"byte_end":14262730,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262735,"byte_end":14262738,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262743,"byte_end":14262775,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5699},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263052,"byte_end":14263059,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262867,"byte_end":14262925,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262930,"byte_end":14262933,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14262938,"byte_end":14263014,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263019,"byte_end":14263040,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264076,"byte_end":14264093,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263152,"byte_end":14263210,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263215,"byte_end":14263218,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263223,"byte_end":14263315,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263320,"byte_end":14263415,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263420,"byte_end":14263505,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263510,"byte_end":14263560,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263565,"byte_end":14263568,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263573,"byte_end":14263587,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263592,"byte_end":14263595,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263600,"byte_end":14263613,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263618,"byte_end":14263692,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263697,"byte_end":14263702,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263707,"byte_end":14263734,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263739,"byte_end":14263742,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263747,"byte_end":14263781,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263786,"byte_end":14263789,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263794,"byte_end":14263840,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263845,"byte_end":14263895,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263900,"byte_end":14263903,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263908,"byte_end":14263963,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14263968,"byte_end":14264020,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264025,"byte_end":14264030,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264035,"byte_end":14264052,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264057,"byte_end":14264064,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5701},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265156,"byte_end":14265173,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264273,"byte_end":14264333,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264338,"byte_end":14264341,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264346,"byte_end":14264438,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264443,"byte_end":14264537,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264542,"byte_end":14264575,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264580,"byte_end":14264583,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264588,"byte_end":14264602,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264607,"byte_end":14264610,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264615,"byte_end":14264628,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264633,"byte_end":14264707,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264712,"byte_end":14264717,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264722,"byte_end":14264763,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264768,"byte_end":14264771,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264776,"byte_end":14264810,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264815,"byte_end":14264818,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264823,"byte_end":14264910,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264915,"byte_end":14264983,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14264988,"byte_end":14265042,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265047,"byte_end":14265050,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265055,"byte_end":14265100,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265105,"byte_end":14265110,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265115,"byte_end":14265132,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265137,"byte_end":14265144,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265566,"byte_end":14265584,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265347,"byte_end":14265406,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265411,"byte_end":14265414,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265419,"byte_end":14265489,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265494,"byte_end":14265497,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265502,"byte_end":14265554,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265986,"byte_end":14266004,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265765,"byte_end":14265826,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265831,"byte_end":14265834,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265839,"byte_end":14265909,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265914,"byte_end":14265917,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14265922,"byte_end":14265974,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5705},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266306,"byte_end":14266310,"line_start":528,"line_end":528,"column_start":8,"column_end":12},"name":"from","qualname":"<UdpSocket as std::convert::From>::from","value":"fn from(std::net::UdpSocket) -> UdpSocket","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":" Converts a `std::net::UdpSocket` into its asynchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `std::net::UdpSocket` into its asynchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266228,"byte_end":14266298,"line_start":527,"line_end":527,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266638,"byte_end":14266646,"line_start":538,"line_end":538,"column_start":8,"column_end":16},"name":"try_from","qualname":"<std::net::UdpSocket as std::convert::TryFrom>::try_from","value":"fn try_from(UdpSocket) -> io::Result<std::net::UdpSocket>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":" Converts a `UdpSocket` into its synchronous equivalent.\n","sig":null,"attributes":[{"value":"/ Converts a `UdpSocket` into its synchronous equivalent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266571,"byte_end":14266630,"line_start":537,"line_end":537,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267526,"byte_end":14267539,"line_start":573,"line_end":573,"column_start":12,"column_end":25},"name":"as_raw_socket","qualname":"<UdpSocket as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5822},"children":[],"decl_id":{"krate":1,"index":5823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6189},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267687,"byte_end":14267702,"line_start":579,"line_end":579,"column_start":19,"column_end":34},"name":"from_raw_socket","qualname":"<UdpSocket as std::os::windows::io::FromRawSocket>::from_raw_socket","value":"unsafe fn from_raw_socket(RawSocket) -> UdpSocket","parent":{"krate":1,"index":5824},"children":[],"decl_id":{"krate":1,"index":5825},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267868,"byte_end":14267883,"line_start":585,"line_end":585,"column_start":12,"column_end":27},"name":"into_raw_socket","qualname":"<UdpSocket as std::os::windows::io::IntoRawSocket>::into_raw_socket","value":"fn into_raw_socket(Self) -> RawSocket","parent":{"krate":1,"index":5826},"children":[],"decl_id":{"krate":1,"index":5827},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":11828,"byte_end":11832,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748861,"byte_end":13748869,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750768,"byte_end":13750775,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13756132,"byte_end":13756149,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758395,"byte_end":13758405,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759478,"byte_end":13759488,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759637,"byte_end":13759647,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13762764,"byte_end":13762768,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763378,"byte_end":13763382,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763936,"byte_end":13763942,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13764353,"byte_end":13764359,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764949,"byte_end":13764957,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768837,"byte_end":13768848,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768992,"byte_end":13769003,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13769168,"byte_end":13769179,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13769547,"byte_end":13769556,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":13771408,"byte_end":13771425,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":13772838,"byte_end":13772855,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":13909440,"byte_end":13909441,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13910118,"byte_end":13910125,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13911018,"byte_end":13911024,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13911054,"byte_end":13911060,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13613290,"byte_end":13613303,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13613530,"byte_end":13613543,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614179,"byte_end":13614191,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614218,"byte_end":13614230,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684598,"byte_end":13684607,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684814,"byte_end":13684823,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684863,"byte_end":13684872,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13685953,"byte_end":13685962,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13686169,"byte_end":13686178,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13686218,"byte_end":13686227,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687597,"byte_end":13687602,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687820,"byte_end":13687825,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13688863,"byte_end":13688869,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13688981,"byte_end":13688987,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13689938,"byte_end":13689947,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13690176,"byte_end":13690185,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692485,"byte_end":13692491,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692603,"byte_end":13692609,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693266,"byte_end":13693271,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693456,"byte_end":13693461,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694154,"byte_end":13694163,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694270,"byte_end":13694279,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695295,"byte_end":13695303,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695517,"byte_end":13695525,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13696794,"byte_end":13696800,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13696965,"byte_end":13696971,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697768,"byte_end":13697777,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697896,"byte_end":13697905,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698744,"byte_end":13698754,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698888,"byte_end":13698898,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698939,"byte_end":13698949,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699743,"byte_end":13699756,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699890,"byte_end":13699903,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699947,"byte_end":13699960,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13700873,"byte_end":13700883,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13701076,"byte_end":13701086,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13702046,"byte_end":13702059,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13702208,"byte_end":13702221,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703252,"byte_end":13703256,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703411,"byte_end":13703415,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704438,"byte_end":13704446,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704654,"byte_end":13704662,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13705671,"byte_end":13705679,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13705887,"byte_end":13705895,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13706863,"byte_end":13706870,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13707019,"byte_end":13707026,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707746,"byte_end":13707756,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707872,"byte_end":13707882,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13709000,"byte_end":13709008,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13709216,"byte_end":13709224,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710243,"byte_end":13710251,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710459,"byte_end":13710467,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711200,"byte_end":13711203,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711355,"byte_end":13711358,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13712043,"byte_end":13712052,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13712167,"byte_end":13712176,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713348,"byte_end":13713359,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713546,"byte_end":13713557,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13714779,"byte_end":13714793,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13714978,"byte_end":13714992,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716398,"byte_end":13716407,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716522,"byte_end":13716531,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13717700,"byte_end":13717711,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13717898,"byte_end":13717909,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719157,"byte_end":13719171,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719356,"byte_end":13719370,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13720939,"byte_end":13720947,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13721161,"byte_end":13721169,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13722225,"byte_end":13722235,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722682,"byte_end":13722691,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722715,"byte_end":13722724,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722854,"byte_end":13722863,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13724076,"byte_end":13724092,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13724321,"byte_end":13724337,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726721,"byte_end":13726735,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726765,"byte_end":13726779,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726982,"byte_end":13726996,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728194,"byte_end":13728198,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728403,"byte_end":13728407,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729392,"byte_end":13729396,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729510,"byte_end":13729514,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730634,"byte_end":13730643,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730825,"byte_end":13730834,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732177,"byte_end":13732183,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732384,"byte_end":13732390,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733593,"byte_end":13733597,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733768,"byte_end":13733772,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13734817,"byte_end":13734826,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13734991,"byte_end":13735000,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735854,"byte_end":13735867,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735903,"byte_end":13735916,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13736128,"byte_end":13736141,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737171,"byte_end":13737187,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737217,"byte_end":13737233,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737368,"byte_end":13737384,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738646,"byte_end":13738649,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738889,"byte_end":13738892,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13739094,"byte_end":13739097,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13684244,"byte_end":13684245,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740635,"byte_end":13740640,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741141,"byte_end":13741147,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13742076,"byte_end":13742082,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743436,"byte_end":13743444,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744751,"byte_end":13744755,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745924,"byte_end":13745930,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746499,"byte_end":13746509,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747701,"byte_end":13747711,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":13968944,"byte_end":13968949,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":13970871,"byte_end":13970885,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":13972344,"byte_end":13972359,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":13973559,"byte_end":13973564,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13967313,"byte_end":13967314,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986341,"byte_end":13986346,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988161,"byte_end":13988166,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990325,"byte_end":13990330,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990572,"byte_end":13990577,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13991722,"byte_end":13991727,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":13993428,"byte_end":13993438,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":13994013,"byte_end":13994028,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13994950,"byte_end":13994965,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13996115,"byte_end":13996120,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":13997437,"byte_end":13997455,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":13998809,"byte_end":13998827,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999647,"byte_end":13999651,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003323,"byte_end":14003327,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14004245,"byte_end":14004249,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3085},{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13984731,"byte_end":13984732,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14007138,"byte_end":14007148,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14006802,"byte_end":14006803,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14012939,"byte_end":14012950,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14013462,"byte_end":14013473,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14014038,"byte_end":14014052,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14015023,"byte_end":14015037,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14016522,"byte_end":14016541,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14012640,"byte_end":14012641,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017008,"byte_end":14017014,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017267,"byte_end":14017279,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017566,"byte_end":14017578,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017709,"byte_end":14017721,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019702,"byte_end":14019711,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3463},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020939,"byte_end":14020948,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023688,"byte_end":14023697,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14025151,"byte_end":14025160,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026082,"byte_end":14026091,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026429,"byte_end":14026438,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033268,"byte_end":14033277,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14039109,"byte_end":14039118,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040016,"byte_end":14040025,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040271,"byte_end":14040280,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042461,"byte_end":14042471,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047149,"byte_end":14047155,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050456,"byte_end":14050462,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050728,"byte_end":14050734,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051250,"byte_end":14051256,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051606,"byte_end":14051612,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052371,"byte_end":14052377,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052901,"byte_end":14052907,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054185,"byte_end":14054190,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3694}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054309,"byte_end":14054314,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054518,"byte_end":14054523,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055708,"byte_end":14055714,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055833,"byte_end":14055839,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3728}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056824,"byte_end":14056828,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056947,"byte_end":14056951,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058699,"byte_end":14058706,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14061697,"byte_end":14061703,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14065392,"byte_end":14065398,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4037}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068042,"byte_end":14068047,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14070063,"byte_end":14070068,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14072412,"byte_end":14072417,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14075542,"byte_end":14075548,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14079237,"byte_end":14079243,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090711,"byte_end":14090721,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093945,"byte_end":14093953,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4395},{"krate":0,"index":4399}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097916,"byte_end":14097924,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14098077,"byte_end":14098085,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100264,"byte_end":14100268,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4502},{"krate":0,"index":4507},{"krate":0,"index":4512},{"krate":0,"index":4517},{"krate":0,"index":4522},{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108036,"byte_end":14108040,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4531}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108535,"byte_end":14108539,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108653,"byte_end":14108657,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109138,"byte_end":14109142,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110306,"byte_end":14110310,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110799,"byte_end":14110803,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111668,"byte_end":14111672,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111804,"byte_end":14111808,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5748}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111976,"byte_end":14111980,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112384,"byte_end":14112388,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112425,"byte_end":14112429,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112455,"byte_end":14112459,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112811,"byte_end":14112815,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4572}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114050,"byte_end":14114059,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114096,"byte_end":14114105,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114121,"byte_end":14114130,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4584}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114521,"byte_end":14114530,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114838,"byte_end":14114847,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4591},{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114973,"byte_end":14114982,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14116543,"byte_end":14116552,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4619},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140616,"byte_end":14140627,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147416,"byte_end":14147427,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14153268,"byte_end":14153275,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4751}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14153474,"byte_end":14153481,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4753},{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168427,"byte_end":14168436,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4943}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168641,"byte_end":14168650,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169396,"byte_end":14169406,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4961}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169915,"byte_end":14169925,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170018,"byte_end":14170028,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170134,"byte_end":14170144,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170301,"byte_end":14170311,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170436,"byte_end":14170446,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170476,"byte_end":14170485,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171116,"byte_end":14171120,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4998}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171593,"byte_end":14171597,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5001},{"krate":0,"index":5002}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171759,"byte_end":14171763,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171904,"byte_end":14171915,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5010}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172212,"byte_end":14172216,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5012}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172309,"byte_end":14172313,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5014}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172430,"byte_end":14172434,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5017}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172581,"byte_end":14172585,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174185,"byte_end":14174189,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5085},{"krate":0,"index":5087},{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5106},{"krate":0,"index":5109},{"krate":0,"index":5112},{"krate":0,"index":5115},{"krate":0,"index":5118},{"krate":0,"index":5122},{"krate":0,"index":5126}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199351,"byte_end":14199354,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5128}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199583,"byte_end":14199586,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199881,"byte_end":14199883,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200086,"byte_end":14200090,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200214,"byte_end":14200218,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200312,"byte_end":14200316,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5139}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200394,"byte_end":14200399,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5141}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200495,"byte_end":14200498,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5144}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200624,"byte_end":14200627,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5146}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200727,"byte_end":14200735,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5148}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200916,"byte_end":14200922,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14201011,"byte_end":14201018,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5154}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204166,"byte_end":14204170,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5174}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204277,"byte_end":14204281,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5176}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204377,"byte_end":14204384,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205160,"byte_end":14205167,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210413,"byte_end":14210420,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210528,"byte_end":14210531,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210631,"byte_end":14210634,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210785,"byte_end":14210792,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210909,"byte_end":14210916,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211025,"byte_end":14211033,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5240}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211142,"byte_end":14211149,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211255,"byte_end":14211262,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5244},{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211441,"byte_end":14211448,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211643,"byte_end":14211650,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211807,"byte_end":14211814,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211935,"byte_end":14211942,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212034,"byte_end":14212037,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212169,"byte_end":14212172,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212323,"byte_end":14212330,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212442,"byte_end":14212445,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5270}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212668,"byte_end":14212670,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5272}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212885,"byte_end":14212892,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214036,"byte_end":14214043,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5276}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214172,"byte_end":14214179,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214284,"byte_end":14214291,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219119,"byte_end":14219138,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219306,"byte_end":14219325,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219597,"byte_end":14219616,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220319,"byte_end":14220329,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220624,"byte_end":14220636,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5437},{"krate":0,"index":5438}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14221001,"byte_end":14221013,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5441},{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14224732,"byte_end":14224738,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226671,"byte_end":14226682,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5528},{"krate":0,"index":5533},{"krate":0,"index":5536},{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232657,"byte_end":14232665,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5542},{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233000,"byte_end":14233008,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233164,"byte_end":14233175,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5549}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233497,"byte_end":14233508,"line_start":255,"line_end":255,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234492,"byte_end":14234503,"line_start":292,"line_end":292,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234638,"byte_end":14234649,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234832,"byte_end":14234843,"line_start":304,"line_end":304,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236841,"byte_end":14236850,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243958,"byte_end":14243967,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5610},{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244868,"byte_end":14244877,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246361,"byte_end":14246370,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246686,"byte_end":14246695,"line_start":381,"line_end":381,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5628},{"krate":0,"index":5629}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248104,"byte_end":14248113,"line_start":426,"line_end":426,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248258,"byte_end":14248267,"line_start":432,"line_end":432,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6166}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248446,"byte_end":14248455,"line_start":438,"line_end":438,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6168}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250308,"byte_end":14250317,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5655},{"krate":0,"index":5660},{"krate":0,"index":5662},{"krate":0,"index":5664},{"krate":0,"index":5669},{"krate":0,"index":5672},{"krate":0,"index":5675},{"krate":0,"index":5681},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266212,"byte_end":14266221,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5705}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266527,"byte_end":14266536,"line_start":535,"line_end":535,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5707},{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267503,"byte_end":14267512,"line_start":572,"line_end":572,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267657,"byte_end":14267666,"line_start":578,"line_end":578,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6189}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267845,"byte_end":14267854,"line_start":584,"line_end":584,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6191}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10930,"byte_end":10934,"line_start":301,"line_end":301,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":41}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10948,"byte_end":10954,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":42}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":10968,"byte_end":10974,"line_start":303,"line_end":303,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11002,"byte_end":11004,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2464}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\mod.rs","byte_start":13950410,"byte_end":13950417,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2572}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11018,"byte_end":11020,"line_start":308,"line_end":308,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2466}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\mod.rs","byte_start":13951404,"byte_end":13951411,"line_start":8,"line_end":8,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4115}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\os\\windows\\mod.rs","byte_start":14079428,"byte_end":14079430,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4116}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11034,"byte_end":11041,"line_start":309,"line_end":309,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2467}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11055,"byte_end":11059,"line_start":310,"line_end":310,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2468}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11073,"byte_end":11080,"line_start":311,"line_end":311,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2499}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11151,"byte_end":11153,"line_start":316,"line_end":316,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4181}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11167,"byte_end":11171,"line_start":317,"line_end":317,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4932}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\lib.rs","byte_start":11185,"byte_end":11188,"line_start":318,"line_end":318,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5318}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\utils.rs","byte_start":11828,"byte_end":11832,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\yield_now.rs","byte_start":13748861,"byte_end":13748869,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1942},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13750768,"byte_end":13750775,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\builder.rs","byte_start":13756132,"byte_end":13756149,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8278},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13758395,"byte_end":13758405,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759478,"byte_end":13759488,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\join_handle.rs","byte_start":13759637,"byte_end":13759647,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13762764,"byte_end":13762768,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task.rs","byte_start":13763378,"byte_end":13763382,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2280},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13763936,"byte_end":13763942,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_id.rs","byte_start":13764353,"byte_end":13764359,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2285},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13764949,"byte_end":13764957,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768837,"byte_end":13768848,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2310},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13768992,"byte_end":13769003,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2310},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13769168,"byte_end":13769179,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2310},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_local.rs","byte_start":13769547,"byte_end":13769556,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":13771408,"byte_end":13771425,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\task\\task_locals_wrapper.rs","byte_start":13772838,"byte_end":13772855,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":13902217,"byte_end":13902223,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13335},"to":{"krate":0,"index":2343}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\future\\mod.rs","byte_start":13909440,"byte_end":13909441,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2345},"to":{"krate":0,"index":2343}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\pending.rs","byte_start":13910118,"byte_end":13910125,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2376},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13911018,"byte_end":13911024,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2402},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\poll_fn.rs","byte_start":13911054,"byte_end":13911060,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2402},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13613290,"byte_end":13613303,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":8241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13613530,"byte_end":13613543,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":8241},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614179,"byte_end":13614191,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2417},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\future\\timeout.rs","byte_start":13614218,"byte_end":13614230,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684598,"byte_end":13684607,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684814,"byte_end":13684823,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\all.rs","byte_start":13684863,"byte_end":13684872,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13685953,"byte_end":13685962,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13686169,"byte_end":13686178,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\any.rs","byte_start":13686218,"byte_end":13686227,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687597,"byte_end":13687602,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":8192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\chain.rs","byte_start":13687820,"byte_end":13687825,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":8192},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13688863,"byte_end":13688869,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":8156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cloned.rs","byte_start":13688981,"byte_end":13688987,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8156},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13689938,"byte_end":13689947,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cmp.rs","byte_start":13690176,"byte_end":13690185,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8103},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692485,"byte_end":13692491,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\copied.rs","byte_start":13692603,"byte_end":13692609,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8067},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693266,"byte_end":13693271,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\cycle.rs","byte_start":13693456,"byte_end":13693461,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8027},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694154,"byte_end":13694163,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":7987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\enumerate.rs","byte_start":13694270,"byte_end":13694279,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":7987},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695295,"byte_end":13695303,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":7942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\eq.rs","byte_start":13695517,"byte_end":13695525,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":7942},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13696794,"byte_end":13696800,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":7893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter.rs","byte_start":13696965,"byte_end":13696971,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7893},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697768,"byte_end":13697777,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\filter_map.rs","byte_start":13697896,"byte_end":13697905,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":7844},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698744,"byte_end":13698754,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698888,"byte_end":13698898,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find.rs","byte_start":13698939,"byte_end":13698949,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":507},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699743,"byte_end":13699756,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699890,"byte_end":13699903,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\find_map.rs","byte_start":13699947,"byte_end":13699960,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13700873,"byte_end":13700883,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":7782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fold.rs","byte_start":13701076,"byte_end":13701086,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7782},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13702046,"byte_end":13702059,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\for_each.rs","byte_start":13702208,"byte_end":13702221,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703252,"byte_end":13703256,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\fuse.rs","byte_start":13703411,"byte_end":13703415,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7694},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704438,"byte_end":13704446,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ge.rs","byte_start":13704654,"byte_end":13704662,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7653},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13705671,"byte_end":13705679,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\gt.rs","byte_start":13705887,"byte_end":13705895,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7612},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13706863,"byte_end":13706870,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\inspect.rs","byte_start":13707019,"byte_end":13707026,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7563},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707746,"byte_end":13707756,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\last.rs","byte_start":13707872,"byte_end":13707882,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7518},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13709000,"byte_end":13709008,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\le.rs","byte_start":13709216,"byte_end":13709224,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7477},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710243,"byte_end":13710251,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\lt.rs","byte_start":13710459,"byte_end":13710467,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7436},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711200,"byte_end":13711203,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\map.rs","byte_start":13711355,"byte_end":13711358,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7387},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13712043,"byte_end":13712052,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max.rs","byte_start":13712167,"byte_end":13712176,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7342},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713348,"byte_end":13713359,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by.rs","byte_start":13713546,"byte_end":13713557,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7285},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13714779,"byte_end":13714793,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\max_by_key.rs","byte_start":13714978,"byte_end":13714992,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7228},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716398,"byte_end":13716407,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min.rs","byte_start":13716522,"byte_end":13716531,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7183},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13717700,"byte_end":13717711,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by.rs","byte_start":13717898,"byte_end":13717909,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7126},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719157,"byte_end":13719171,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\min_by_key.rs","byte_start":13719356,"byte_end":13719370,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7069},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13720939,"byte_end":13720947,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\ne.rs","byte_start":13721161,"byte_end":13721169,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\next.rs","byte_start":13722225,"byte_end":13722235,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722682,"byte_end":13722691,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722715,"byte_end":13722724,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\nth.rs","byte_start":13722854,"byte_end":13722863,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1176},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13724076,"byte_end":13724092,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":13724321,"byte_end":13724337,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6971},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726721,"byte_end":13726735,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726765,"byte_end":13726779,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\position.rs","byte_start":13726982,"byte_end":13726996,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728194,"byte_end":13728198,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\scan.rs","byte_start":13728403,"byte_end":13728407,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6913},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729392,"byte_end":13729396,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip.rs","byte_start":13729510,"byte_end":13729514,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6873},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730634,"byte_end":13730643,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\skip_while.rs","byte_start":13730825,"byte_end":13730834,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6824},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732177,"byte_end":13732183,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\step_by.rs","byte_start":13732384,"byte_end":13732390,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6780},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733593,"byte_end":13733597,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take.rs","byte_start":13733768,"byte_end":13733772,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6737},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13734817,"byte_end":13734826,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\take_while.rs","byte_start":13734991,"byte_end":13735000,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6688},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735854,"byte_end":13735867,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13735903,"byte_end":13735916,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_fold.rs","byte_start":13736128,"byte_end":13736141,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737171,"byte_end":13737187,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737217,"byte_end":13737233,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\try_for_each.rs","byte_start":13737368,"byte_end":13737384,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738646,"byte_end":13738649,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":6639},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13738889,"byte_end":13738892,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":6639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\zip.rs","byte_start":13739094,"byte_end":13739097,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":6639},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13628491,"byte_end":13628497,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":22,"index":96},"to":{"krate":0,"index":1676}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\stream\\mod.rs","byte_start":13684244,"byte_end":13684245,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1767},"to":{"krate":0,"index":1676}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\empty.rs","byte_start":13740635,"byte_end":13740640,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2431},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13741141,"byte_end":13741147,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2437},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_fn.rs","byte_start":13742076,"byte_end":13742082,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2437},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\from_iter.rs","byte_start":13743436,"byte_end":13743444,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6600},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\once.rs","byte_start":13744751,"byte_end":13744755,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6561},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat.rs","byte_start":13745924,"byte_end":13745930,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2446},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13746499,"byte_end":13746509,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2455},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\stream\\repeat_with.rs","byte_start":13747701,"byte_end":13747711,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2455},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\lines.rs","byte_start":13968944,"byte_end":13968949,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":6513},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_line.rs","byte_start":13970871,"byte_end":13970885,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2668},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\read_until.rs","byte_start":13972344,"byte_end":13972359,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2704},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\split.rs","byte_start":13973559,"byte_end":13973564,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6465},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13961016,"byte_end":13961023,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":29,"index":49},"to":{"krate":0,"index":2780}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_read\\mod.rs","byte_start":13967313,"byte_end":13967314,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2788},"to":{"krate":0,"index":2780}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\bytes.rs","byte_start":13986341,"byte_end":13986346,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3759},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13988161,"byte_end":13988166,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990325,"byte_end":13990330,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6416},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13990572,"byte_end":13990577,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6416},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\chain.rs","byte_start":13991722,"byte_end":13991727,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6416},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read.rs","byte_start":13993428,"byte_end":13993438,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2888},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_exact.rs","byte_start":13994013,"byte_end":13994028,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2921},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13994950,"byte_end":13994965,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_end.rs","byte_start":13996115,"byte_end":13996120,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2963},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_to_string.rs","byte_start":13997437,"byte_end":13997455,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2999},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\read_vectored.rs","byte_start":13998809,"byte_end":13998827,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3035},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":13999647,"byte_end":13999651,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14003323,"byte_end":14003327,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6376},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\take.rs","byte_start":14004245,"byte_end":14004249,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6376},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13974733,"byte_end":13974737,"line_start":31,"line_end":31,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":29,"index":39},"to":{"krate":0,"index":3124}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\read\\mod.rs","byte_start":13984731,"byte_end":13984732,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3141},"to":{"krate":0,"index":3124}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\seek.rs","byte_start":14007138,"byte_end":14007148,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14005963,"byte_end":14005967,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":29,"index":47},"to":{"krate":0,"index":3187}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\seek\\mod.rs","byte_start":14006802,"byte_end":14006803,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3190},"to":{"krate":0,"index":3187}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\flush.rs","byte_start":14012939,"byte_end":14012950,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3213},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write.rs","byte_start":14013462,"byte_end":14013473,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3242},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_all.rs","byte_start":14014038,"byte_end":14014052,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_fmt.rs","byte_start":14015023,"byte_end":14015037,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3305},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\write_vectored.rs","byte_start":14016522,"byte_end":14016541,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14007779,"byte_end":14007784,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":29,"index":42},"to":{"krate":0,"index":3374}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\write\\mod.rs","byte_start":14012640,"byte_end":14012641,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3387},"to":{"krate":0,"index":3374}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017008,"byte_end":14017014,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":157}},"from":{"krate":2,"index":47063},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017267,"byte_end":14017279,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017566,"byte_end":14017578,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3765},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\utils.rs","byte_start":14017709,"byte_end":14017721,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3765},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14019702,"byte_end":14019711,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14020939,"byte_end":14020948,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14023688,"byte_end":14023697,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6331},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14025151,"byte_end":14025160,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6331},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026082,"byte_end":14026091,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6331},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_reader.rs","byte_start":14026429,"byte_end":14026438,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6331},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14033268,"byte_end":14033277,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14039109,"byte_end":14039118,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6290},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040016,"byte_end":14040025,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6290},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\buf_writer.rs","byte_start":14040271,"byte_end":14040280,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6290},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\copy.rs","byte_start":14042461,"byte_end":14042471,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6241},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14047149,"byte_end":14047155,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050456,"byte_end":14050462,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14050728,"byte_end":14050734,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051250,"byte_end":14051256,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14051606,"byte_end":14051612,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052371,"byte_end":14052377,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\cursor.rs","byte_start":14052901,"byte_end":14052907,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3778},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054185,"byte_end":14054190,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3691},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054309,"byte_end":14054314,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3691},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\empty.rs","byte_start":14054518,"byte_end":14054523,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3691},"to":{"krate":29,"index":49}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055708,"byte_end":14055714,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3723},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\repeat.rs","byte_start":14055833,"byte_end":14055839,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3723},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056824,"byte_end":14056828,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\sink.rs","byte_start":14056947,"byte_end":14056951,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3751},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\timeout.rs","byte_start":14058699,"byte_end":14058706,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14061697,"byte_end":14061703,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4000},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stderr.rs","byte_start":14065392,"byte_end":14065398,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4000},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14068042,"byte_end":14068047,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14070063,"byte_end":14070068,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4038},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdin.rs","byte_start":14072412,"byte_end":14072417,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4038},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14075542,"byte_end":14075548,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4077},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\io\\stdout.rs","byte_start":14079237,"byte_end":14079243,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4077},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_builder.rs","byte_start":14090711,"byte_end":14090721,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14093945,"byte_end":14093953,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14097916,"byte_end":14097924,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\dir_entry.rs","byte_start":14098077,"byte_end":14098085,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14100264,"byte_end":14100268,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108036,"byte_end":14108040,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5727},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108535,"byte_end":14108539,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5727},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14108653,"byte_end":14108657,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5727},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14109138,"byte_end":14109142,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5727},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110306,"byte_end":14110310,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5727},"to":{"krate":29,"index":47}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14110799,"byte_end":14110803,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5727},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111668,"byte_end":14111672,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5727},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111804,"byte_end":14111808,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5727},"to":{"krate":1,"index":5796}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14111976,"byte_end":14111980,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5727},"to":{"krate":1,"index":5798}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112384,"byte_end":14112388,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4553},"to":{"krate":2,"index":3150}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112425,"byte_end":14112429,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4553},"to":{"krate":2,"index":3162}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112455,"byte_end":14112459,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4553},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14112811,"byte_end":14112815,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114050,"byte_end":14114059,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4574},"to":{"krate":2,"index":3150}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114096,"byte_end":14114105,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4574},"to":{"krate":2,"index":3162}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114121,"byte_end":14114130,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114521,"byte_end":14114530,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4574},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114838,"byte_end":14114847,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4574},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14114973,"byte_end":14114982,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4574},"to":{"krate":2,"index":3382}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\file.rs","byte_start":14116543,"byte_end":14116552,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14140616,"byte_end":14140627,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\open_options.rs","byte_start":14147416,"byte_end":14147427,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5757},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14153268,"byte_end":14153275,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\fs\\read_dir.rs","byte_start":14153474,"byte_end":14153481,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5767},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168427,"byte_end":14168436,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5781},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\ancestors.rs","byte_start":14168641,"byte_end":14168650,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5781},"to":{"krate":2,"index":8468}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169396,"byte_end":14169406,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14169915,"byte_end":14169925,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170018,"byte_end":14170028,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170134,"byte_end":14170144,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170301,"byte_end":14170311,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":8042}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170436,"byte_end":14170446,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":8468}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\components.rs","byte_start":14170476,"byte_end":14170485,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":1,"index":10525},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171116,"byte_end":14171120,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171593,"byte_end":14171597,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171759,"byte_end":14171763,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14171904,"byte_end":14171915,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5005},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172212,"byte_end":14172216,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172309,"byte_end":14172313,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172430,"byte_end":14172434,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":8042}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\iter.rs","byte_start":14172581,"byte_end":14172585,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5818},"to":{"krate":2,"index":8468}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14174185,"byte_end":14174189,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199351,"byte_end":14199354,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":241}},"from":{"krate":5,"index":421},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199583,"byte_end":14199586,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":6312},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14199881,"byte_end":14199883,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":5,"index":4992},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200086,"byte_end":14200090,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5824},"to":{"krate":5,"index":772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200214,"byte_end":14200218,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200312,"byte_end":14200316,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200394,"byte_end":14200399,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":247}},"from":{"krate":1,"index":2845},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200495,"byte_end":14200498,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":5,"index":781},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200624,"byte_end":14200627,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":249}},"from":{"krate":5,"index":781},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200727,"byte_end":14200735,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":1,"index":2842},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14200916,"byte_end":14200922,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":5,"index":8050},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14201011,"byte_end":14201018,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204166,"byte_end":14204170,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204277,"byte_end":14204281,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":305}},"from":{"krate":1,"index":6527},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\path.rs","byte_start":14204377,"byte_end":14204384,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":1,"index":6418},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14205160,"byte_end":14205167,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210413,"byte_end":14210420,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210528,"byte_end":14210531,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":309}},"from":{"krate":5,"index":421},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210631,"byte_end":14210634,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":310}},"from":{"krate":5,"index":421},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210785,"byte_end":14210792,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14210909,"byte_end":14210916,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211025,"byte_end":14211033,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":1,"index":2842},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211142,"byte_end":14211149,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211255,"byte_end":14211262,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211441,"byte_end":14211448,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":7994}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211643,"byte_end":14211650,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":8007}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211807,"byte_end":14211814,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14211935,"byte_end":14211942,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":2747}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212034,"byte_end":14212037,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":320}},"from":{"krate":5,"index":781},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212169,"byte_end":14212172,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":321}},"from":{"krate":5,"index":781},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212323,"byte_end":14212330,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212442,"byte_end":14212445,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":5,"index":6312},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212668,"byte_end":14212670,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":324}},"from":{"krate":5,"index":4992},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14212885,"byte_end":14212892,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214036,"byte_end":14214043,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214172,"byte_end":14214179,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3053}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\path\\pathbuf.rs","byte_start":14214284,"byte_end":14214291,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219119,"byte_end":14219138,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5413},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219306,"byte_end":14219325,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5413},"to":{"krate":0,"index":15}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14219597,"byte_end":14219616,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5413},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220319,"byte_end":14220329,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":332}},"from":{"krate":1,"index":10170},"to":{"krate":0,"index":5410}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14220624,"byte_end":14220636,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":333}},"from":{"krate":1,"index":10194},"to":{"krate":0,"index":5410}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14221001,"byte_end":14221013,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":1,"index":10197},"to":{"krate":0,"index":5410}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\addr.rs","byte_start":14224732,"byte_end":14224738,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":5,"index":8050},"to":{"krate":0,"index":5410}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14226671,"byte_end":14226682,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14232657,"byte_end":14232665,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5538},"to":{"krate":22,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233000,"byte_end":14233008,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5538},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233164,"byte_end":14233175,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6121},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14233497,"byte_end":14233508,"line_start":255,"line_end":255,"column_start":55,"column_end":66},"kind":{"Impl":{"id":341}},"from":{"krate":1,"index":5254},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234492,"byte_end":14234503,"line_start":292,"line_end":292,"column_start":26,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6121},"to":{"krate":1,"index":5822}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234638,"byte_end":14234649,"line_start":298,"line_end":298,"column_start":28,"column_end":39},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6121},"to":{"krate":1,"index":5824}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\listener.rs","byte_start":14234832,"byte_end":14234843,"line_start":304,"line_end":304,"column_start":28,"column_end":39},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6121},"to":{"krate":1,"index":5826}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14236841,"byte_end":14236850,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14243958,"byte_end":14243967,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6144},"to":{"krate":29,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14244868,"byte_end":14244877,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6144},"to":{"krate":29,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246361,"byte_end":14246370,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6144},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14246686,"byte_end":14246695,"line_start":381,"line_end":381,"column_start":53,"column_end":62},"kind":{"Impl":{"id":349}},"from":{"krate":1,"index":5251},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248104,"byte_end":14248113,"line_start":426,"line_end":426,"column_start":26,"column_end":35},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6144},"to":{"krate":1,"index":5822}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248258,"byte_end":14248267,"line_start":432,"line_end":432,"column_start":28,"column_end":37},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":6144},"to":{"krate":1,"index":5824}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\tcp\\stream.rs","byte_start":14248446,"byte_end":14248455,"line_start":438,"line_end":438,"column_start":28,"column_end":37},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":6144},"to":{"krate":1,"index":5826}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14250308,"byte_end":14250317,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266212,"byte_end":14266221,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6169},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14266527,"byte_end":14266536,"line_start":535,"line_end":535,"column_start":53,"column_end":62},"kind":{"Impl":{"id":355}},"from":{"krate":1,"index":5376},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267503,"byte_end":14267512,"line_start":572,"line_end":572,"column_start":26,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6169},"to":{"krate":1,"index":5822}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267657,"byte_end":14267666,"line_start":578,"line_end":578,"column_start":28,"column_end":37},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6169},"to":{"krate":1,"index":5824}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.12.0\\src\\net\\udp\\mod.rs","byte_start":14267845,"byte_end":14267854,"line_start":584,"line_end":584,"column_start":28,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6169},"to":{"krate":1,"index":5826}}]}