{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","strum","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"sea-orm\"","--cfg","feature=\"sea-strum_macros\"","--cfg","feature=\"std\"","-C","metadata=ea5ffc10c6c03404","-C","extra-filename=-ea5ffc10c6c03404","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","strum_macros=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\strum_macros-b64a02c915614dac.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libstrum-ea5ffc10c6c03404.rmeta"},"prelude":{"crate_id":{"name":"strum","disambiguator":[9056652402636350690,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","num":16,"id":{"name":"strum_macros","disambiguator":[13945975971457682859,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":0,"byte_end":6653,"line_start":1,"line_end":224,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5830,"byte_end":5831,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":0,"byte_end":6653,"line_start":1,"line_end":224,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" # Strum","sig":null,"attributes":[{"value":"/ # Strum","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [![Build Status](https://travis-ci.org/Peternator7/strum.svg?branch=master)](https://travis-ci.org/Peternator7/strum)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":16,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/ [![Latest Version](https://img.shields.io/crates/v/strum.svg)](https://crates.io/crates/strum)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":138,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ [![Rust Documentation](https://docs.rs/strum/badge.svg)](https://docs.rs/strum)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":237,"byte_end":320,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":321,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Strum is a set of macros and traits for working with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":325,"byte_end":381,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/ enums and strings easier in Rust.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":382,"byte_end":419,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":420,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The full version of the README can be found on [Github](https://github.com/Peternator7/strum).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":424,"byte_end":522,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":523,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Including Strum in Your Project","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":527,"byte_end":564,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":565,"byte_end":568,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Import strum and strum_macros into your project by adding the following lines to your","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":569,"byte_end":658,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/ Cargo.toml. Strum_macros contains the macros needed to derive all the traits in Strum.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":659,"byte_end":749,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":750,"byte_end":753,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":754,"byte_end":765,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":766,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ strum = \"0.23\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":785,"byte_end":803,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ strum_macros = \"0.23\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":804,"byte_end":829,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":830,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # You can also access strum_macros exports directly through strum using the \"derive\" feature","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":834,"byte_end":930,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ strum = { version = \"0.23\", features = [\"derive\"] }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":931,"byte_end":986,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":987,"byte_end":994,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":995,"byte_end":998,"line_start":25,"line_end":25,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"additional_attributes","qualname":"::additional_attributes","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","parent":null,"children":[],"decl_id":null,"docs":" # Documentation for Additional Attributes","sig":null,"attributes":[{"value":"/ # Documentation for Additional Attributes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6655,"byte_end":6700,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6701,"byte_end":6704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Attributes on Enums","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6705,"byte_end":6731,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6732,"byte_end":6735,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Strum supports several custom attributes to modify the generated code. At the enum level, the following attributes are supported:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6736,"byte_end":6869,"line_start":5,"line_end":5,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6870,"byte_end":6873,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `#[strum(serialize_all = \"case_style\")]` attribute can be used to change the case used when serializing to and deserializing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":6874,"byte_end":7004,"line_start":7,"line_end":7,"column_start":1,"column_end":131}},{"value":"/   from strings. This feature is enabled by [withoutboats/heck](https://github.com/withoutboats/heck) and supported case styles are:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7005,"byte_end":7140,"line_start":8,"line_end":8,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7141,"byte_end":7144,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/   - `camelCase`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7145,"byte_end":7164,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/   - `PascalCase`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7165,"byte_end":7185,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/   - `kebab-case`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7186,"byte_end":7206,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/   - `snake_case`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7207,"byte_end":7227,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/   - `SCREAMING_SNAKE_CASE`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7228,"byte_end":7258,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/   - `SCREAMING-KEBAB-CASE`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7259,"byte_end":7289,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/   - `lowercase`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7290,"byte_end":7309,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/   - `UPPERCASE`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7310,"byte_end":7329,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/   - `title_case`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7330,"byte_end":7350,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/   - `mixed_case`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7351,"byte_end":7371,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7372,"byte_end":7375,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/   ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7376,"byte_end":7389,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/   use std::string::ToString;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7390,"byte_end":7422,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/   use strum;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7423,"byte_end":7439,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/   use strum_macros;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7440,"byte_end":7463,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/   ","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7464,"byte_end":7470,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/   #[derive(Debug, Eq, PartialEq, strum_macros::ToString)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7471,"byte_end":7532,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/   #[strum(serialize_all = \"snake_case\")]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7533,"byte_end":7577,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/   enum Brightness {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7578,"byte_end":7601,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/       DarkBlack,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7602,"byte_end":7622,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/       Dim {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7623,"byte_end":7638,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/           glow: usize,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7639,"byte_end":7665,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/       },","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7666,"byte_end":7678,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/       #[strum(serialize = \"bright\")]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7679,"byte_end":7719,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/       BrightWhite,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7720,"byte_end":7742,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/   }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7743,"byte_end":7750,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/   ","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7751,"byte_end":7757,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/   assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7758,"byte_end":7775,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/       String::from(\"dark_black\"),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7776,"byte_end":7813,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/       Brightness::DarkBlack.to_string().as_ref()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7814,"byte_end":7866,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/   );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7867,"byte_end":7875,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/   assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7876,"byte_end":7893,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/       String::from(\"dim\"),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7894,"byte_end":7924,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/       Brightness::Dim { glow: 0 }.to_string().as_ref()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7925,"byte_end":7983,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/   );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7984,"byte_end":7992,"line_start":44,"line_end":44,"column_start":1,"column_end":9}},{"value":"/   assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":7993,"byte_end":8010,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/       String::from(\"bright\"),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8011,"byte_end":8044,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/       Brightness::BrightWhite.to_string().as_ref()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8045,"byte_end":8099,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/   );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8100,"byte_end":8108,"line_start":48,"line_end":48,"column_start":1,"column_end":9}},{"value":"/   ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8109,"byte_end":8118,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8119,"byte_end":8122,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ - You can also apply the `#[strum(ascii_case_insensitive)]` attribute to the enum,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8123,"byte_end":8209,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"/   and this has the same effect of applying it to every variant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8210,"byte_end":8277,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8278,"byte_end":8281,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Attributes on Variants","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8282,"byte_end":8311,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8312,"byte_end":8315,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Custom attributes are applied to a variant by adding `#[strum(parameter=\"value\")]` to the variant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8316,"byte_end":8418,"line_start":56,"line_end":56,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8419,"byte_end":8422,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - `serialize=\"...\"`: Changes the text that `FromStr()` looks for when parsing a string. This attribute can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8423,"byte_end":8533,"line_start":58,"line_end":58,"column_start":1,"column_end":111}},{"value":"/    be applied multiple times to an element and the enum variant will be parsed if any of them match.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8534,"byte_end":8638,"line_start":59,"line_end":59,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8639,"byte_end":8642,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ - `to_string=\"...\"`: Similar to `serialize`. This value will be included when using `FromStr()`. More importantly,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8643,"byte_end":8761,"line_start":61,"line_end":61,"column_start":1,"column_end":119}},{"value":"/    this specifies what text to use when calling `variant.to_string()` with the `Display` derivation, or when calling `variant.as_ref()` with `AsRefStr`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8762,"byte_end":8918,"line_start":62,"line_end":62,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8919,"byte_end":8922,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `default`: Applied to a single variant of an enum. The variant must be a Tuple-like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":8923,"byte_end":9012,"line_start":64,"line_end":64,"column_start":1,"column_end":90}},{"value":"/    variant with a single piece of data that can be create from a `&str` i.e. `T: From<&str>`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9013,"byte_end":9110,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/    The generated code will now return the variant with the input string captured as shown below","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9111,"byte_end":9210,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/    instead of failing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9211,"byte_end":9237,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9238,"byte_end":9241,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     ```rust,ignore","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9242,"byte_end":9264,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/     // Replaces this:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9265,"byte_end":9290,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/     _ => Err(strum::ParseError::VariantNotFound)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9291,"byte_end":9343,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/     // With this in generated code:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9344,"byte_end":9383,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/     default => Ok(Variant(default.into()))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9384,"byte_end":9430,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/     ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9431,"byte_end":9442,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/     The plugin will fail if the data doesn't implement From<&str>. You can only have one `default`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9443,"byte_end":9545,"line_start":75,"line_end":75,"column_start":1,"column_end":103}},{"value":"/     on your enum.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9546,"byte_end":9567,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9568,"byte_end":9571,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - `disabled`: removes variant from generated code.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9572,"byte_end":9626,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9627,"byte_end":9630,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - `ascii_case_insensitive`: makes the comparison to this variant case insensitive (ASCII only).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9631,"byte_end":9730,"line_start":80,"line_end":80,"column_start":1,"column_end":100}},{"value":"/   If the whole enum is marked `ascii_case_insensitive`, you can specify `ascii_case_insensitive = false`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9731,"byte_end":9839,"line_start":81,"line_end":81,"column_start":1,"column_end":109}},{"value":"/   to disable case insensitivity on this v ariant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9840,"byte_end":9893,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9894,"byte_end":9897,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - `message=\"..\"`: Adds a message to enum variant. This is used in conjunction with the `EnumMessage`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":9898,"byte_end":10002,"line_start":84,"line_end":84,"column_start":1,"column_end":105}},{"value":"/    trait to associate a message with a variant. If `detailed_message` is not provided,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10003,"byte_end":10093,"line_start":85,"line_end":85,"column_start":1,"column_end":91}},{"value":"/    then `message` will also be returned when get_detailed_message() is called.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10094,"byte_end":10176,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10177,"byte_end":10180,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ - `detailed_message=\"..\"`: Adds a more detailed message to a variant. If this value is omitted, then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10181,"byte_end":10285,"line_start":88,"line_end":88,"column_start":1,"column_end":105}},{"value":"/    `message` will be used in it's place.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10286,"byte_end":10330,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10331,"byte_end":10334,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ - `props(key=\"value\")`: Enables associating additional information with a given variant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src\\additional_attributes.rs","byte_start":10335,"byte_end":10427,"line_start":91,"line_end":91,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1340,"byte_end":1355,"line_start":37,"line_end":37,"column_start":5,"column_end":20},"name":"VariantNotFound","qualname":"::ParseError::VariantNotFound","value":"ParseError::VariantNotFound","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1323,"byte_end":1333,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"enum ParseError { VariantNotFound, }","parent":null,"children":[{"krate":0,"index":29}],"decl_id":null,"docs":" The ParseError enum is a collection of all the possible reasons\n an enum can fail to parse from a string.\n","sig":null,"attributes":[{"value":"/ The ParseError enum is a collection of all the possible reasons","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1150,"byte_end":1217,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ an enum can fail to parse from a string.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1218,"byte_end":1262,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> Result<(), std::fmt::Error>","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1811,"byte_end":1822,"line_start":53,"line_end":53,"column_start":8,"column_end":19},"name":"description","qualname":"<ParseError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2892,"byte_end":2908,"line_start":94,"line_end":94,"column_start":11,"column_end":27},"name":"IntoEnumIterator","qualname":"::IntoEnumIterator","value":"IntoEnumIterator: Sized","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" This trait designates that an `Enum` can be iterated over. It can\n be auto generated using `strum_macros` on your behalf.","sig":null,"attributes":[{"value":"/ This trait designates that an `Enum` can be iterated over. It can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2123,"byte_end":2192,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ be auto generated using `strum_macros` on your behalf.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2193,"byte_end":2251,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2252,"byte_end":2255,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2256,"byte_end":2269,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2270,"byte_end":2273,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2274,"byte_end":2285,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2286,"byte_end":2312,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2313,"byte_end":2370,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ use strum::{EnumIter, IntoEnumIterator};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2371,"byte_end":2415,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2416,"byte_end":2419,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ #[derive(EnumIter, Debug)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2420,"byte_end":2450,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ enum Color {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2451,"byte_end":2467,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/     Red,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2468,"byte_end":2480,"line_start":75,"line_end":75,"column_start":1,"column_end":13}},{"value":"/     Green { range: usize },","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2481,"byte_end":2512,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/     Blue(usize),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2513,"byte_end":2533,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/     Yellow,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2534,"byte_end":2549,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2550,"byte_end":2555,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2556,"byte_end":2559,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Iterate over the items in an enum and perform some function on them.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2560,"byte_end":2635,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ fn generic_iterator<E, F>(pred: F)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2636,"byte_end":2674,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2675,"byte_end":2684,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/     E: IntoEnumIterator,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2685,"byte_end":2713,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/     F: Fn(E),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2714,"byte_end":2731,"line_start":85,"line_end":85,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2732,"byte_end":2737,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/     for e in E::iter() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2738,"byte_end":2766,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/         pred(e)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2767,"byte_end":2786,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2787,"byte_end":2796,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2797,"byte_end":2802,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2803,"byte_end":2806,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ generic_iterator::<Color, _>(|color| println!(\"{:?}\", color));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2807,"byte_end":2873,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2874,"byte_end":2881,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2927,"byte_end":2935,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"name":"Iterator","qualname":"::IntoEnumIterator::Iterator","value":"type Iterator: Iterator<Item = Self>;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2968,"byte_end":2972,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"iter","qualname":"::IntoEnumIterator::iter","value":"fn iter() -> Self::Iterator","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3688,"byte_end":3699,"line_start":123,"line_end":123,"column_start":11,"column_end":22},"name":"EnumMessage","qualname":"::EnumMessage","value":"EnumMessage","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Associates additional pieces of information with an Enum. This can be\n autoimplemented by deriving `EnumMessage` and annotating your variants with\n `#[strum(message=\"...\")].","sig":null,"attributes":[{"value":"/ Associates additional pieces of information with an Enum. This can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2997,"byte_end":3070,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ autoimplemented by deriving `EnumMessage` and annotating your variants with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3071,"byte_end":3150,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ `#[strum(message=\"...\")].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3151,"byte_end":3180,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3181,"byte_end":3184,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3185,"byte_end":3198,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3199,"byte_end":3202,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3203,"byte_end":3214,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3215,"byte_end":3241,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3242,"byte_end":3299,"line_start":108,"line_end":108,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumMessage;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3300,"byte_end":3327,"line_start":109,"line_end":109,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3328,"byte_end":3331,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumMessage)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3332,"byte_end":3380,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/ enum Pet {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3381,"byte_end":3395,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/     #[strum(message=\"I have a dog\")]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3396,"byte_end":3436,"line_start":113,"line_end":113,"column_start":1,"column_end":41}},{"value":"/     #[strum(detailed_message=\"My dog's name is Spots\")]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3437,"byte_end":3496,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/     Dog,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3497,"byte_end":3509,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/     #[strum(message=\"I don't have a cat\")]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3510,"byte_end":3556,"line_start":116,"line_end":116,"column_start":1,"column_end":47}},{"value":"/     Cat,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3557,"byte_end":3569,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3570,"byte_end":3575,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ let my_pet = Pet::Dog;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3580,"byte_end":3606,"line_start":120,"line_end":120,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(\"I have a dog\", my_pet.get_message().unwrap());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3607,"byte_end":3669,"line_start":121,"line_end":121,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3670,"byte_end":3677,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3709,"byte_end":3720,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"get_message","qualname":"::EnumMessage::get_message","value":"fn get_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3760,"byte_end":3780,"line_start":125,"line_end":125,"column_start":8,"column_end":28},"name":"get_detailed_message","qualname":"::EnumMessage::get_detailed_message","value":"fn get_detailed_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3820,"byte_end":3838,"line_start":126,"line_end":126,"column_start":8,"column_end":26},"name":"get_serializations","qualname":"::EnumMessage::get_serializations","value":"fn get_serializations(&Self) -> &'static [&'static str]","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4821,"byte_end":4833,"line_start":156,"line_end":156,"column_start":11,"column_end":23},"name":"EnumProperty","qualname":"::EnumProperty","value":"EnumProperty","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" EnumProperty is a trait that makes it possible to store additional information\n with enum variants. This trait is designed to be used with the macro of the same\n name in the `strum_macros` crate. Currently, the only string literals are supported\n in attributes, the other methods will be implemented as additional attribute types\n become stabilized.","sig":null,"attributes":[{"value":"/ EnumProperty is a trait that makes it possible to store additional information","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3877,"byte_end":3959,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ with enum variants. This trait is designed to be used with the macro of the same","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":3960,"byte_end":4044,"line_start":130,"line_end":130,"column_start":1,"column_end":85}},{"value":"/ name in the `strum_macros` crate. Currently, the only string literals are supported","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4045,"byte_end":4132,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ in attributes, the other methods will be implemented as additional attribute types","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4133,"byte_end":4219,"line_start":132,"line_end":132,"column_start":1,"column_end":87}},{"value":"/ become stabilized.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4220,"byte_end":4242,"line_start":133,"line_end":133,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4247,"byte_end":4260,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4261,"byte_end":4264,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4265,"byte_end":4276,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4277,"byte_end":4303,"line_start":138,"line_end":138,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4304,"byte_end":4361,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumProperty;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4362,"byte_end":4390,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4391,"byte_end":4394,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumProperty)]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4395,"byte_end":4444,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/ enum Class {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4445,"byte_end":4461,"line_start":143,"line_end":143,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Ms.Frizzle\", Room=\"201\"))]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4462,"byte_end":4519,"line_start":144,"line_end":144,"column_start":1,"column_end":58}},{"value":"/     History,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4520,"byte_end":4536,"line_start":145,"line_end":145,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Mr.Smith\"))]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4537,"byte_end":4580,"line_start":146,"line_end":146,"column_start":1,"column_end":44}},{"value":"/     #[strum(props(Room=\"103\"))]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4581,"byte_end":4616,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/     Mathematics,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4617,"byte_end":4637,"line_start":148,"line_end":148,"column_start":1,"column_end":21}},{"value":"/     #[strum(props(Time=\"2:30\"))]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4638,"byte_end":4674,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/     Science,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4675,"byte_end":4691,"line_start":150,"line_end":150,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4692,"byte_end":4697,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4698,"byte_end":4701,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let history = Class::History;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4702,"byte_end":4735,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(\"Ms.Frizzle\", history.get_str(\"Teacher\").unwrap());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4736,"byte_end":4802,"line_start":154,"line_end":154,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4803,"byte_end":4810,"line_start":155,"line_end":155,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4843,"byte_end":4850,"line_start":157,"line_end":157,"column_start":8,"column_end":15},"name":"get_str","qualname":"::EnumProperty::get_str","value":"fn get_str(&Self, &str) -> Option<&'static str>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4902,"byte_end":4909,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"get_int","qualname":"::EnumProperty::get_int","value":"fn get_int(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":4984,"byte_end":4992,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"get_bool","qualname":"::EnumProperty::get_bool","value":"fn get_bool(&Self, &str) -> Option<bool>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5310,"byte_end":5321,"line_start":173,"line_end":173,"column_start":11,"column_end":22},"name":"AsStaticRef","qualname":"::AsStaticRef","value":"AsStaticRef<T>","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" A cheap reference-to-reference conversion. Used to convert a value to a\n reference value with `'static` lifetime within generic code.\n","sig":null,"attributes":[{"value":"/ A cheap reference-to-reference conversion. Used to convert a value to a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5061,"byte_end":5136,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ reference value with `'static` lifetime within generic code.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5137,"byte_end":5201,"line_start":168,"line_end":168,"column_start":1,"column_end":65}},{"value":"deprecated(since = \"0.22.0\", note =\n\"please use `#[derive(IntoStaticStr)]` instead\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5202,"byte_end":5299,"line_start":169,"line_end":172,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5355,"byte_end":5364,"line_start":177,"line_end":177,"column_start":8,"column_end":17},"name":"as_static","qualname":"::AsStaticRef::as_static","value":"fn as_static(&Self) -> &'static T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5511,"byte_end":5520,"line_start":182,"line_end":182,"column_start":11,"column_end":20},"name":"EnumCount","qualname":"::EnumCount","value":"EnumCount","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" A trait for capturing the number of variants in Enum. This trait can be autoderived by\n `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for capturing the number of variants in Enum. This trait can be autoderived by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5390,"byte_end":5480,"line_start":180,"line_end":180,"column_start":1,"column_end":91}},{"value":"/ `strum_macros`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5481,"byte_end":5500,"line_start":181,"line_end":181,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5533,"byte_end":5538,"line_start":183,"line_end":183,"column_start":11,"column_end":16},"name":"COUNT","qualname":"::EnumCount::COUNT","value":"usize","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5675,"byte_end":5687,"line_start":188,"line_end":188,"column_start":11,"column_end":23},"name":"VariantNames","qualname":"::VariantNames","value":"VariantNames","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" A trait for retrieving the names of each variant in Enum. This trait can\n be autoderived by `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for retrieving the names of each variant in Enum. This trait can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5550,"byte_end":5626,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ be autoderived by `strum_macros`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5627,"byte_end":5664,"line_start":187,"line_end":187,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5743,"byte_end":5751,"line_start":190,"line_end":190,"column_start":11,"column_end":19},"name":"VARIANTS","qualname":"::VariantNames::VARIANTS","value":"&'static [&'static str]","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Names of the variants of this enum\n","sig":null,"attributes":[{"value":"/ Names of the variants of this enum","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":5694,"byte_end":5732,"line_start":189,"line_end":189,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1411,"byte_end":1421,"line_start":41,"line_end":41,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1791,"byte_end":1801,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1126,"byte_end":1147,"line_start":31,"line_end":31,"column_start":9,"column_end":30},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1411,"byte_end":1421,"line_start":41,"line_end":41,"column_start":28,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":1791,"byte_end":1801,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\sea-strum-0.23.0\\src/lib.rs","byte_start":2910,"byte_end":2915,"line_start":94,"line_end":94,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":8}}]}