{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","time","--edition=2021","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"macros\"","--cfg","feature=\"std\"","--cfg","feature=\"time-macros\"","-C","metadata=c9b90efb81aa219c","-C","extra-filename=-c9b90efb81aa219c","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\entity\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\entity\\target\\rls\\debug\\deps","--extern","itoa=d:\\Programming\\DestituteDepictions\\src-tauri\\entity\\target\\rls\\debug\\deps\\libitoa-17e019cd974ce0e3.rmeta","--extern","time_macros=d:\\Programming\\DestituteDepictions\\src-tauri\\entity\\target\\rls\\debug\\deps\\time_macros-48a224b83bbf626a.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\entity\\target\\rls\\debug\\deps\\libtime-c9b90efb81aa219c.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[6877616117287053830,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","num":16,"id":{"name":"time_macros","disambiguator":[15932318028816177385,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\mod.rs","num":17,"id":{"name":"itoa","disambiguator":[18166472351004448284,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":11046,"line_start":1,"line_end":332,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84730,"byte_end":84744,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84772,"byte_end":84787,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84772,"byte_end":84787,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84816,"byte_end":84832,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84816,"byte_end":84832,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84881,"byte_end":84887,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85090,"byte_end":85114,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85141,"byte_end":85155,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85141,"byte_end":85155,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":320}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108734,"byte_end":108743,"line_start":18,"line_end":18,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108792,"byte_end":108797,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142120,"byte_end":142141,"line_start":7,"line_end":7,"column_start":26,"column_end":47},"alias_span":null,"name":"DoNotRelyOnWhatThisIs","value":"","parent":{"krate":0,"index":629}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142143,"byte_end":142156,"line_start":7,"line_end":7,"column_start":49,"column_end":62},"alias_span":null,"name":"EncodedConfig","value":"","parent":{"krate":0,"index":629}},{"kind":"Use","ref_id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109503,"byte_end":109510,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":2433},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109503,"byte_end":109510,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109533,"byte_end":109540,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109533,"byte_end":109540,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109563,"byte_end":109570,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109563,"byte_end":109570,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":628}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\mod.rs","byte_start":161480,"byte_end":161491,"line_start":9,"line_end":9,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":730}},{"kind":"Use","ref_id":{"krate":16,"index":846},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":202572,"byte_end":202576,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":16,"index":850},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":203724,"byte_end":203732,"line_start":51,"line_end":51,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":16,"index":619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":204735,"byte_end":204753,"line_start":74,"line_end":74,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":16,"index":854},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":205893,"byte_end":205899,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":16,"index":858},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":207239,"byte_end":207243,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10552,"byte_end":10556,"line_start":319,"line_end":319,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10583,"byte_end":10591,"line_start":320,"line_end":320,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10615,"byte_end":10620,"line_start":321,"line_end":321,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10670,"byte_end":10677,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10670,"byte_end":10677,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10701,"byte_end":10706,"line_start":324,"line_end":324,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10741,"byte_end":10755,"line_start":325,"line_end":325,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10793,"byte_end":10810,"line_start":326,"line_end":326,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10833,"byte_end":10837,"line_start":327,"line_end":327,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10866,"byte_end":10875,"line_start":328,"line_end":328,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10901,"byte_end":10908,"line_start":329,"line_end":329,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":11046,"line_start":1,"line_end":332,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":138},{"krate":0,"index":320},{"krate":0,"index":446},{"krate":0,"index":512},{"krate":0,"index":730},{"krate":0,"index":1038},{"krate":0,"index":1120},{"krate":0,"index":1136},{"krate":0,"index":1164},{"krate":0,"index":1339},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1541},{"krate":0,"index":1582},{"krate":0,"index":1598},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1510,"byte_end":1523,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1524,"byte_end":1527,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1528,"byte_end":1614,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1615,"byte_end":1618,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1619,"byte_end":1707,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1712,"byte_end":1804,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1805,"byte_end":1899,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1900,"byte_end":1991,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1992,"byte_end":1995,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":1996,"byte_end":2096,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2097,"byte_end":2115,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2116,"byte_end":2119,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2120,"byte_end":2210,"line_start":55,"line_end":55,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2211,"byte_end":2214,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2215,"byte_end":2303,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2304,"byte_end":2372,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2373,"byte_end":2376,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2377,"byte_end":2389,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2390,"byte_end":2393,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2394,"byte_end":2459,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2460,"byte_end":2463,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2464,"byte_end":2513,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2514,"byte_end":2517,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2518,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `wasm-bindgen`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2619,"byte_end":2639,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2640,"byte_end":2643,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [wasm-bindgen](https://github.com/rustwasm/wasm-bindgen) support for converting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2644,"byte_end":2737,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/   [JavaScript dates](https://rustwasm.github.io/wasm-bindgen/api/js_sys/struct.Date.html), as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2738,"byte_end":2835,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/   well as obtaining the UTC offset from JavaScript.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2836,"byte_end":2891,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2892,"byte_end":2895,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2896,"byte_end":2994,"line_start":74,"line_end":74,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":2995,"byte_end":3090,"line_start":75,"line_end":75,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3091,"byte_end":3188,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3189,"byte_end":3289,"line_start":77,"line_end":77,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3290,"byte_end":3389,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3390,"byte_end":3487,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3488,"byte_end":3583,"line_start":80,"line_end":80,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant when otherwise unsound.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3584,"byte_end":3667,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"deny(anonymous_parameters, clippy :: all, clippy ::\nundocumented_unsafe_blocks, const_err, illegal_floating_point_literal_pattern,\nlate_bound_lifetime_arguments, path_statements, patterns_in_fns_without_body,\nrust_2018_idioms, trivial_casts, trivial_numeric_casts, unreachable_pub,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":3964,"byte_end":4349,"line_start":90,"line_end":105,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":4350,"byte_end":4850,"line_start":106,"line_end":124,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":4851,"byte_end":4889,"line_start":125,"line_end":125,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12138,"byte_end":12142,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1658}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":11769,"byte_end":11814,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":11815,"byte_end":11818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":11819,"byte_end":11918,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":11919,"byte_end":12015,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12016,"byte_end":12065,"line_start":33,"line_end":33,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12496,"byte_end":12499,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12856,"byte_end":12859,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12729,"byte_end":12758,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12763,"byte_end":12766,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12771,"byte_end":12841,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13050,"byte_end":13053,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12923,"byte_end":12952,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12957,"byte_end":12960,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12965,"byte_end":13035,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13323,"byte_end":13352,"line_start":68,"line_end":68,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13166,"byte_end":13252,"line_start":65,"line_end":65,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13257,"byte_end":13286,"line_start":66,"line_end":66,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":14128,"byte_end":14146,"line_start":91,"line_end":91,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13647,"byte_end":13708,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13713,"byte_end":13716,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13721,"byte_end":13732,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13737,"byte_end":13767,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13772,"byte_end":13843,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13848,"byte_end":13921,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13926,"byte_end":13933,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13938,"byte_end":13941,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13946,"byte_end":13957,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13962,"byte_end":13992,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":13997,"byte_end":14098,"line_start":89,"line_end":89,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":14103,"byte_end":14110,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15337,"byte_end":15354,"line_start":124,"line_end":124,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"const fn from_ordinal_date(i32, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":14918,"byte_end":14986,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":14991,"byte_end":14994,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":14999,"byte_end":15010,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15015,"byte_end":15036,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15041,"byte_end":15095,"line_start":116,"line_end":116,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15100,"byte_end":15156,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15161,"byte_end":15168,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15173,"byte_end":15176,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15181,"byte_end":15192,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15197,"byte_end":15218,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15223,"byte_end":15307,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15312,"byte_end":15319,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":16184,"byte_end":16202,"line_start":143,"line_end":143,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15639,"byte_end":15707,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15712,"byte_end":15715,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15720,"byte_end":15731,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15736,"byte_end":15771,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15776,"byte_end":15839,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15844,"byte_end":15908,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15913,"byte_end":15977,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15982,"byte_end":15989,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":15994,"byte_end":15997,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":16002,"byte_end":16013,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":16018,"byte_end":16053,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":16058,"byte_end":16154,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":16159,"byte_end":16166,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":18077,"byte_end":18092,"line_start":190,"line_end":190,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17377,"byte_end":17417,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17422,"byte_end":17425,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17430,"byte_end":17524,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17529,"byte_end":17625,"line_start":180,"line_end":180,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17630,"byte_end":17633,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17638,"byte_end":17649,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17654,"byte_end":17691,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17696,"byte_end":17765,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17770,"byte_end":17846,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17851,"byte_end":17927,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":17932,"byte_end":18008,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":18013,"byte_end":18020,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20213,"byte_end":20217,"line_start":246,"line_end":246,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":19928,"byte_end":19957,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":19962,"byte_end":19965,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":19970,"byte_end":19981,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":19986,"byte_end":20015,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20020,"byte_end":20071,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20076,"byte_end":20127,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20132,"byte_end":20183,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20188,"byte_end":20195,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20518,"byte_end":20523,"line_start":257,"line_end":257,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20268,"byte_end":20286,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20291,"byte_end":20294,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20299,"byte_end":20310,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20315,"byte_end":20353,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20358,"byte_end":20420,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20425,"byte_end":20488,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20493,"byte_end":20500,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20874,"byte_end":20877,"line_start":270,"line_end":270,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20579,"byte_end":20608,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20613,"byte_end":20616,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20621,"byte_end":20681,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20686,"byte_end":20689,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20694,"byte_end":20705,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20710,"byte_end":20739,"line_start":266,"line_end":266,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20744,"byte_end":20791,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20796,"byte_end":20844,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":20849,"byte_end":20856,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23122,"byte_end":23129,"line_start":324,"line_end":324,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22789,"byte_end":22817,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22822,"byte_end":22825,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22830,"byte_end":22920,"line_start":317,"line_end":317,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22925,"byte_end":22928,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22933,"byte_end":22944,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22949,"byte_end":22978,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":22983,"byte_end":23034,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23039,"byte_end":23092,"line_start":322,"line_end":322,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23097,"byte_end":23104,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24082,"byte_end":24090,"line_start":351,"line_end":351,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23605,"byte_end":23633,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23638,"byte_end":23641,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23646,"byte_end":23706,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23711,"byte_end":23714,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23719,"byte_end":23730,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23735,"byte_end":23764,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23769,"byte_end":23821,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23826,"byte_end":23879,"line_start":346,"line_end":346,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23884,"byte_end":23936,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23941,"byte_end":23994,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":23999,"byte_end":24052,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24057,"byte_end":24064,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24637,"byte_end":24654,"line_start":366,"line_end":366,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24147,"byte_end":24211,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24216,"byte_end":24219,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24224,"byte_end":24284,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24289,"byte_end":24292,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24297,"byte_end":24308,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24313,"byte_end":24342,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24347,"byte_end":24408,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24413,"byte_end":24474,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24479,"byte_end":24541,"line_start":363,"line_end":363,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24546,"byte_end":24607,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24612,"byte_end":24619,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25267,"byte_end":25284,"line_start":381,"line_end":381,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24777,"byte_end":24841,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24846,"byte_end":24849,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24854,"byte_end":24914,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24919,"byte_end":24922,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24927,"byte_end":24938,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24943,"byte_end":24972,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":24977,"byte_end":25038,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25043,"byte_end":25104,"line_start":377,"line_end":377,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25109,"byte_end":25171,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25176,"byte_end":25237,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25242,"byte_end":25249,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25660,"byte_end":25676,"line_start":394,"line_end":394,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25407,"byte_end":25440,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25445,"byte_end":25448,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25453,"byte_end":25464,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25469,"byte_end":25507,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25512,"byte_end":25527,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25532,"byte_end":25581,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25586,"byte_end":25619,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25624,"byte_end":25630,"line_start":392,"line_end":392,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25635,"byte_end":25642,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25995,"byte_end":26010,"line_start":405,"line_end":405,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25795,"byte_end":25835,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25840,"byte_end":25843,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25848,"byte_end":25859,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25864,"byte_end":25893,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25898,"byte_end":25965,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":25970,"byte_end":25977,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26718,"byte_end":26734,"line_start":425,"line_end":425,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26082,"byte_end":26134,"line_start":409,"line_end":409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26139,"byte_end":26142,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26147,"byte_end":26158,"line_start":411,"line_end":411,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26163,"byte_end":26206,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26211,"byte_end":26288,"line_start":413,"line_end":413,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26293,"byte_end":26370,"line_start":414,"line_end":414,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26375,"byte_end":26390,"line_start":415,"line_end":415,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26395,"byte_end":26444,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26449,"byte_end":26477,"line_start":417,"line_end":417,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26482,"byte_end":26488,"line_start":418,"line_end":418,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26493,"byte_end":26508,"line_start":419,"line_end":419,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26513,"byte_end":26562,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26567,"byte_end":26595,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26600,"byte_end":26606,"line_start":422,"line_end":422,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26611,"byte_end":26688,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":26693,"byte_end":26700,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28006,"byte_end":28013,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27143,"byte_end":27163,"line_start":436,"line_end":436,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27168,"byte_end":27171,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27176,"byte_end":27187,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27192,"byte_end":27235,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27240,"byte_end":27297,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27302,"byte_end":27358,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27363,"byte_end":27419,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27424,"byte_end":27480,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27485,"byte_end":27544,"line_start":444,"line_end":444,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27549,"byte_end":27607,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27612,"byte_end":27668,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27673,"byte_end":27731,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27736,"byte_end":27792,"line_start":448,"line_end":448,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27797,"byte_end":27854,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27859,"byte_end":27915,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27920,"byte_end":27976,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":27981,"byte_end":27988,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28971,"byte_end":28979,"line_start":486,"line_end":486,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28445,"byte_end":28476,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28481,"byte_end":28484,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28489,"byte_end":28500,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28505,"byte_end":28542,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28547,"byte_end":28562,"line_start":472,"line_end":472,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28567,"byte_end":28608,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28613,"byte_end":28648,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28653,"byte_end":28659,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28664,"byte_end":28679,"line_start":476,"line_end":476,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28684,"byte_end":28725,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28730,"byte_end":28765,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28770,"byte_end":28776,"line_start":479,"line_end":479,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28781,"byte_end":28796,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28801,"byte_end":28842,"line_start":481,"line_end":481,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28847,"byte_end":28882,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28887,"byte_end":28893,"line_start":483,"line_end":483,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28898,"byte_end":28941,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":28946,"byte_end":28953,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29939,"byte_end":29951,"line_start":518,"line_end":518,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29393,"byte_end":29428,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29433,"byte_end":29436,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29441,"byte_end":29452,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29457,"byte_end":29494,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29499,"byte_end":29514,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29519,"byte_end":29564,"line_start":505,"line_end":505,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29569,"byte_end":29604,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29609,"byte_end":29615,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29620,"byte_end":29635,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29640,"byte_end":29685,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29690,"byte_end":29725,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29730,"byte_end":29736,"line_start":511,"line_end":511,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29741,"byte_end":29756,"line_start":512,"line_end":512,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29761,"byte_end":29806,"line_start":513,"line_end":513,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29811,"byte_end":29846,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29851,"byte_end":29857,"line_start":515,"line_end":515,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29862,"byte_end":29909,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":29914,"byte_end":29921,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30946,"byte_end":30959,"line_start":545,"line_end":545,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30341,"byte_end":30377,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30382,"byte_end":30385,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30390,"byte_end":30484,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30489,"byte_end":30585,"line_start":536,"line_end":536,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30590,"byte_end":30593,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30598,"byte_end":30609,"line_start":538,"line_end":538,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30614,"byte_end":30643,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30648,"byte_end":30706,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30711,"byte_end":30776,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30781,"byte_end":30846,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30851,"byte_end":30916,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":30921,"byte_end":30928,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32302,"byte_end":32313,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31262,"byte_end":31335,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31340,"byte_end":31343,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31348,"byte_end":31359,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31364,"byte_end":31425,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31430,"byte_end":31484,"line_start":560,"line_end":560,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31489,"byte_end":31546,"line_start":561,"line_end":561,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31551,"byte_end":31566,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31571,"byte_end":31623,"line_start":563,"line_end":563,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31628,"byte_end":31663,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31668,"byte_end":31674,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31679,"byte_end":31686,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31691,"byte_end":31694,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31699,"byte_end":31709,"line_start":568,"line_end":568,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31714,"byte_end":31717,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31722,"byte_end":31775,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31780,"byte_end":31783,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31788,"byte_end":31799,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31804,"byte_end":31865,"line_start":573,"line_end":573,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31870,"byte_end":31937,"line_start":574,"line_end":574,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":31942,"byte_end":32012,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32017,"byte_end":32032,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32037,"byte_end":32091,"line_start":577,"line_end":577,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32096,"byte_end":32131,"line_start":578,"line_end":578,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32136,"byte_end":32142,"line_start":579,"line_end":579,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32147,"byte_end":32162,"line_start":580,"line_end":580,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32167,"byte_end":32221,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32226,"byte_end":32261,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32266,"byte_end":32272,"line_start":583,"line_end":583,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32277,"byte_end":32284,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33780,"byte_end":33791,"line_start":628,"line_end":628,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32748,"byte_end":32821,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32826,"byte_end":32829,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32834,"byte_end":32841,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32846,"byte_end":32907,"line_start":602,"line_end":602,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32912,"byte_end":32969,"line_start":603,"line_end":603,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":32974,"byte_end":33028,"line_start":604,"line_end":604,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33033,"byte_end":33048,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33053,"byte_end":33105,"line_start":606,"line_end":606,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33110,"byte_end":33145,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33150,"byte_end":33156,"line_start":608,"line_end":608,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33161,"byte_end":33168,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33173,"byte_end":33176,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33181,"byte_end":33191,"line_start":611,"line_end":611,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33196,"byte_end":33199,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33204,"byte_end":33257,"line_start":613,"line_end":613,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33262,"byte_end":33265,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33270,"byte_end":33277,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33282,"byte_end":33343,"line_start":616,"line_end":616,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33348,"byte_end":33418,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33423,"byte_end":33490,"line_start":618,"line_end":618,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33495,"byte_end":33510,"line_start":619,"line_end":619,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33515,"byte_end":33569,"line_start":620,"line_end":620,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33574,"byte_end":33609,"line_start":621,"line_end":621,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33614,"byte_end":33620,"line_start":622,"line_end":622,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33625,"byte_end":33640,"line_start":623,"line_end":623,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33645,"byte_end":33699,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33704,"byte_end":33739,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33744,"byte_end":33750,"line_start":626,"line_end":626,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":33755,"byte_end":33762,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35182,"byte_end":35196,"line_start":671,"line_end":671,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34300,"byte_end":34361,"line_start":644,"line_end":644,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34366,"byte_end":34369,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34374,"byte_end":34385,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34390,"byte_end":34451,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34456,"byte_end":34518,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34523,"byte_end":34588,"line_start":649,"line_end":649,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34593,"byte_end":34608,"line_start":650,"line_end":650,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34613,"byte_end":34668,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34673,"byte_end":34702,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34707,"byte_end":34713,"line_start":653,"line_end":653,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34718,"byte_end":34725,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34730,"byte_end":34733,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34738,"byte_end":34748,"line_start":656,"line_end":656,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34753,"byte_end":34756,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34761,"byte_end":34814,"line_start":658,"line_end":658,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34819,"byte_end":34822,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34827,"byte_end":34838,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34843,"byte_end":34898,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34903,"byte_end":34918,"line_start":662,"line_end":662,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34923,"byte_end":34980,"line_start":663,"line_end":663,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":34985,"byte_end":35014,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35019,"byte_end":35025,"line_start":665,"line_end":665,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35030,"byte_end":35045,"line_start":666,"line_end":666,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35050,"byte_end":35107,"line_start":667,"line_end":667,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35112,"byte_end":35141,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35146,"byte_end":35152,"line_start":669,"line_end":669,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35157,"byte_end":35164,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36365,"byte_end":36379,"line_start":709,"line_end":709,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35491,"byte_end":35552,"line_start":682,"line_end":682,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35557,"byte_end":35560,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35565,"byte_end":35572,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35577,"byte_end":35638,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35643,"byte_end":35708,"line_start":686,"line_end":686,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35713,"byte_end":35775,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35780,"byte_end":35795,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35800,"byte_end":35855,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35860,"byte_end":35889,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35894,"byte_end":35900,"line_start":691,"line_end":691,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35905,"byte_end":35912,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35917,"byte_end":35920,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35925,"byte_end":35935,"line_start":694,"line_end":694,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35940,"byte_end":35943,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":35948,"byte_end":36001,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36006,"byte_end":36009,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36014,"byte_end":36021,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36026,"byte_end":36081,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36086,"byte_end":36101,"line_start":700,"line_end":700,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36106,"byte_end":36163,"line_start":701,"line_end":701,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36168,"byte_end":36197,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36202,"byte_end":36208,"line_start":703,"line_end":703,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36213,"byte_end":36228,"line_start":704,"line_end":704,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36233,"byte_end":36290,"line_start":705,"line_end":705,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36295,"byte_end":36324,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36329,"byte_end":36335,"line_start":707,"line_end":707,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36340,"byte_end":36347,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":37304,"byte_end":37316,"line_start":734,"line_end":734,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36738,"byte_end":36796,"line_start":722,"line_end":722,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36801,"byte_end":36804,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36809,"byte_end":36820,"line_start":724,"line_end":724,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36825,"byte_end":36854,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36859,"byte_end":36874,"line_start":726,"line_end":726,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36879,"byte_end":36928,"line_start":727,"line_end":727,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36933,"byte_end":36966,"line_start":728,"line_end":728,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36971,"byte_end":36977,"line_start":729,"line_end":729,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":36982,"byte_end":37092,"line_start":730,"line_end":730,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":37097,"byte_end":37205,"line_start":731,"line_end":731,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":37210,"byte_end":37217,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":37222,"byte_end":37286,"line_start":733,"line_end":733,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39097,"byte_end":39110,"line_start":779,"line_end":779,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38573,"byte_end":38607,"line_start":763,"line_end":763,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38612,"byte_end":38615,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38620,"byte_end":38631,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38636,"byte_end":38665,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38670,"byte_end":38692,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38697,"byte_end":38712,"line_start":768,"line_end":768,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38717,"byte_end":38777,"line_start":769,"line_end":769,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38782,"byte_end":38815,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38820,"byte_end":38826,"line_start":771,"line_end":771,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38831,"byte_end":38843,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38848,"byte_end":38877,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38882,"byte_end":38925,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38930,"byte_end":38951,"line_start":775,"line_end":775,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":38956,"byte_end":38998,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39003,"byte_end":39010,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39015,"byte_end":39079,"line_start":778,"line_end":778,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39785,"byte_end":39796,"line_start":796,"line_end":796,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39288,"byte_end":39321,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39326,"byte_end":39329,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39334,"byte_end":39345,"line_start":786,"line_end":786,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39350,"byte_end":39379,"line_start":787,"line_end":787,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39384,"byte_end":39399,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39404,"byte_end":39449,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39454,"byte_end":39487,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39492,"byte_end":39498,"line_start":791,"line_end":791,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39503,"byte_end":39585,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39590,"byte_end":39686,"line_start":793,"line_end":793,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39691,"byte_end":39698,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":39703,"byte_end":39767,"line_start":795,"line_end":795,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40720,"byte_end":40728,"line_start":822,"line_end":822,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40427,"byte_end":40521,"line_start":815,"line_end":815,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40526,"byte_end":40542,"line_start":816,"line_end":816,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40547,"byte_end":40550,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40555,"byte_end":40566,"line_start":818,"line_end":818,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40571,"byte_end":40612,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40617,"byte_end":40690,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40695,"byte_end":40702,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41138,"byte_end":41147,"line_start":835,"line_end":835,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40822,"byte_end":40907,"line_start":826,"line_end":826,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40912,"byte_end":40915,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40920,"byte_end":40931,"line_start":828,"line_end":828,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40936,"byte_end":40983,"line_start":829,"line_end":829,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40988,"byte_end":41003,"line_start":830,"line_end":830,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41008,"byte_end":41057,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41062,"byte_end":41097,"line_start":832,"line_end":832,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41102,"byte_end":41108,"line_start":833,"line_end":833,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41113,"byte_end":41120,"line_start":834,"line_end":834,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41557,"byte_end":41565,"line_start":846,"line_end":846,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41243,"byte_end":41335,"line_start":839,"line_end":839,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41340,"byte_end":41343,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41348,"byte_end":41359,"line_start":841,"line_end":841,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41364,"byte_end":41393,"line_start":842,"line_end":842,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41398,"byte_end":41459,"line_start":843,"line_end":843,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41464,"byte_end":41527,"line_start":844,"line_end":844,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41532,"byte_end":41539,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42168,"byte_end":42182,"line_start":865,"line_end":865,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41836,"byte_end":41928,"line_start":858,"line_end":858,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41933,"byte_end":41936,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41941,"byte_end":41952,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41957,"byte_end":41986,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":41991,"byte_end":42061,"line_start":862,"line_end":862,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42066,"byte_end":42138,"line_start":863,"line_end":863,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42143,"byte_end":42150,"line_start":864,"line_end":864,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42830,"byte_end":42844,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42498,"byte_end":42590,"line_start":878,"line_end":878,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42595,"byte_end":42598,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42603,"byte_end":42614,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42619,"byte_end":42648,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42653,"byte_end":42723,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42728,"byte_end":42800,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":42805,"byte_end":42812,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43490,"byte_end":43503,"line_start":905,"line_end":905,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43160,"byte_end":43252,"line_start":898,"line_end":898,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43257,"byte_end":43260,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43265,"byte_end":43276,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43281,"byte_end":43310,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43315,"byte_end":43384,"line_start":902,"line_end":902,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43389,"byte_end":43460,"line_start":903,"line_end":903,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43465,"byte_end":43472,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44019,"byte_end":44030,"line_start":924,"line_end":924,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43918,"byte_end":44007,"line_start":923,"line_end":923,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44614,"byte_end":44620,"line_start":940,"line_end":940,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44239,"byte_end":44328,"line_start":932,"line_end":932,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44333,"byte_end":44336,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44341,"byte_end":44352,"line_start":934,"line_end":934,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44357,"byte_end":44408,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44413,"byte_end":44481,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44486,"byte_end":44555,"line_start":937,"line_end":937,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44560,"byte_end":44590,"line_start":938,"line_end":938,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":44595,"byte_end":44602,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":45414,"byte_end":45417,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46123,"byte_end":46126,"line_start":992,"line_end":992,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46336,"byte_end":46339,"line_start":1001,"line_end":1001,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46653,"byte_end":46656,"line_start":1012,"line_end":1012,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46873,"byte_end":46876,"line_start":1021,"line_end":1021,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":47191,"byte_end":47194,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1705},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48363,"byte_end":48371,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48025,"byte_end":48070,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48071,"byte_end":48074,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48075,"byte_end":48172,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48173,"byte_end":48189,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48190,"byte_end":48193,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48194,"byte_end":48281,"line_start":33,"line_end":33,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48693,"byte_end":48696,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49146,"byte_end":49150,"line_start":61,"line_end":61,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48958,"byte_end":48990,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48995,"byte_end":48998,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49003,"byte_end":49014,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49019,"byte_end":49070,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49075,"byte_end":49119,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49124,"byte_end":49131,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49384,"byte_end":49394,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49182,"byte_end":49218,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49223,"byte_end":49226,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49231,"byte_end":49242,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49247,"byte_end":49298,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49303,"byte_end":49357,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49362,"byte_end":49369,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49635,"byte_end":49646,"line_start":77,"line_end":77,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49430,"byte_end":49467,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49472,"byte_end":49475,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49480,"byte_end":49491,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49496,"byte_end":49547,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49552,"byte_end":49608,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49613,"byte_end":49620,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49888,"byte_end":49899,"line_start":85,"line_end":85,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49683,"byte_end":49720,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49725,"byte_end":49728,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49733,"byte_end":49744,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49749,"byte_end":49800,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49805,"byte_end":49861,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49866,"byte_end":49873,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50126,"byte_end":50132,"line_start":93,"line_end":93,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49936,"byte_end":49968,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49973,"byte_end":49976,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49981,"byte_end":49992,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":49997,"byte_end":50048,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50053,"byte_end":50099,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50104,"byte_end":50111,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50354,"byte_end":50360,"line_start":101,"line_end":101,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50164,"byte_end":50196,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50201,"byte_end":50204,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50209,"byte_end":50220,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50225,"byte_end":50276,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50281,"byte_end":50327,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50332,"byte_end":50339,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50576,"byte_end":50580,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50392,"byte_end":50422,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50427,"byte_end":50430,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50435,"byte_end":50446,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50451,"byte_end":50502,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50507,"byte_end":50549,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50554,"byte_end":50561,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50791,"byte_end":50794,"line_start":117,"line_end":117,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50610,"byte_end":50639,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50644,"byte_end":50647,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50652,"byte_end":50663,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50668,"byte_end":50719,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50724,"byte_end":50764,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50769,"byte_end":50776,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51007,"byte_end":51011,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50823,"byte_end":50853,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50858,"byte_end":50861,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50866,"byte_end":50877,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50882,"byte_end":50933,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50938,"byte_end":50980,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":50985,"byte_end":50992,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51151,"byte_end":51154,"line_start":128,"line_end":128,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51041,"byte_end":51136,"line_start":127,"line_end":127,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51323,"byte_end":51326,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51213,"byte_end":51308,"line_start":130,"line_end":130,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51659,"byte_end":51666,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51436,"byte_end":51476,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51481,"byte_end":51484,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51489,"byte_end":51500,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51505,"byte_end":51544,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51549,"byte_end":51584,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51589,"byte_end":51629,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51634,"byte_end":51641,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52016,"byte_end":52027,"line_start":154,"line_end":154,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51745,"byte_end":51781,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51786,"byte_end":51789,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51794,"byte_end":51805,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51810,"byte_end":51849,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51854,"byte_end":51896,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51901,"byte_end":51941,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51946,"byte_end":51986,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":51991,"byte_end":51998,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52375,"byte_end":52386,"line_start":166,"line_end":166,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52104,"byte_end":52140,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52145,"byte_end":52148,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52153,"byte_end":52164,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52169,"byte_end":52208,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52213,"byte_end":52252,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52257,"byte_end":52297,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52302,"byte_end":52345,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52350,"byte_end":52357,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52898,"byte_end":52901,"line_start":182,"line_end":182,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52509,"byte_end":52552,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52557,"byte_end":52560,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52565,"byte_end":52641,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52646,"byte_end":52649,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52654,"byte_end":52665,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52670,"byte_end":52709,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52714,"byte_end":52761,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52766,"byte_end":52813,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52818,"byte_end":52868,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":52873,"byte_end":52880,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53524,"byte_end":53536,"line_start":195,"line_end":195,"column_start":18,"column_end":30},"name":"unsigned_abs","qualname":"<Duration>::unsigned_abs","value":"const fn unsigned_abs(Self) -> StdDuration","parent":null,"children":[],"decl_id":null,"docs":" Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a\n [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","sig":null,"attributes":[{"value":"/ Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53012,"byte_end":53103,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53108,"byte_end":53204,"line_start":187,"line_end":187,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53209,"byte_end":53212,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53217,"byte_end":53228,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::{NumericalDuration, NumericalStdDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53233,"byte_end":53296,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(1.seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53301,"byte_end":53361,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(0.seconds().unsigned_abs(), 0.std_seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53366,"byte_end":53426,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53431,"byte_end":53494,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":53499,"byte_end":53506,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54795,"byte_end":54798,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54345,"byte_end":54436,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54441,"byte_end":54507,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54512,"byte_end":54515,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54520,"byte_end":54531,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54536,"byte_end":54587,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54592,"byte_end":54641,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54646,"byte_end":54699,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54704,"byte_end":54765,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":54770,"byte_end":54777,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55534,"byte_end":55539,"line_start":251,"line_end":251,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55246,"byte_end":55319,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55324,"byte_end":55365,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55370,"byte_end":55373,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55378,"byte_end":55389,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55394,"byte_end":55445,"line_start":248,"line_end":248,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55450,"byte_end":55504,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55509,"byte_end":55516,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55895,"byte_end":55899,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55612,"byte_end":55684,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55689,"byte_end":55728,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55733,"byte_end":55736,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55741,"byte_end":55752,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55757,"byte_end":55808,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55813,"byte_end":55865,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55870,"byte_end":55877,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56253,"byte_end":56258,"line_start":273,"line_end":273,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":55969,"byte_end":56042,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56047,"byte_end":56086,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56091,"byte_end":56094,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56099,"byte_end":56110,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56115,"byte_end":56166,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56171,"byte_end":56223,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56228,"byte_end":56235,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56613,"byte_end":56620,"line_start":284,"line_end":284,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56329,"byte_end":56404,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56409,"byte_end":56447,"line_start":278,"line_end":278,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56452,"byte_end":56455,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56460,"byte_end":56471,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56476,"byte_end":56527,"line_start":281,"line_end":281,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56532,"byte_end":56583,"line_start":282,"line_end":282,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56588,"byte_end":56595,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56927,"byte_end":56934,"line_start":294,"line_end":294,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56692,"byte_end":56753,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56758,"byte_end":56761,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56766,"byte_end":56777,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56782,"byte_end":56833,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56838,"byte_end":56897,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":56902,"byte_end":56909,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57329,"byte_end":57340,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57010,"byte_end":57097,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57102,"byte_end":57105,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57110,"byte_end":57121,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57126,"byte_end":57177,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57182,"byte_end":57240,"line_start":302,"line_end":302,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57245,"byte_end":57305,"line_start":303,"line_end":303,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57310,"byte_end":57317,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57779,"byte_end":57790,"line_start":316,"line_end":316,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57458,"byte_end":57545,"line_start":309,"line_end":309,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57550,"byte_end":57553,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57558,"byte_end":57569,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57574,"byte_end":57625,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57630,"byte_end":57688,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57693,"byte_end":57755,"line_start":314,"line_end":314,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57760,"byte_end":57767,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58226,"byte_end":58238,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57908,"byte_end":57974,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57979,"byte_end":57982,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":57987,"byte_end":57998,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58003,"byte_end":58054,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58059,"byte_end":58123,"line_start":324,"line_end":324,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58128,"byte_end":58196,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58201,"byte_end":58208,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58723,"byte_end":58735,"line_start":341,"line_end":341,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58407,"byte_end":58473,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58478,"byte_end":58481,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58486,"byte_end":58497,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58502,"byte_end":58553,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58558,"byte_end":58621,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58626,"byte_end":58693,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58698,"byte_end":58705,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59231,"byte_end":59242,"line_start":355,"line_end":355,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58908,"byte_end":58973,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58978,"byte_end":58981,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":58986,"byte_end":58997,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59002,"byte_end":59053,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59058,"byte_end":59125,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59130,"byte_end":59201,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59206,"byte_end":59213,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60241,"byte_end":60252,"line_start":384,"line_end":384,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59896,"byte_end":59946,"line_start":375,"line_end":375,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59951,"byte_end":59954,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59959,"byte_end":59970,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":59975,"byte_end":60014,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60019,"byte_end":60062,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60067,"byte_end":60114,"line_start":380,"line_end":380,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60119,"byte_end":60161,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60166,"byte_end":60211,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60216,"byte_end":60223,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60660,"byte_end":60670,"line_start":397,"line_end":397,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60318,"byte_end":60367,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60372,"byte_end":60375,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60380,"byte_end":60391,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60396,"byte_end":60435,"line_start":391,"line_end":391,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60440,"byte_end":60481,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60486,"byte_end":60531,"line_start":393,"line_end":393,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60536,"byte_end":60579,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60584,"byte_end":60630,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60635,"byte_end":60642,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61088,"byte_end":61099,"line_start":410,"line_end":410,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60735,"byte_end":60785,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60790,"byte_end":60793,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60798,"byte_end":60809,"line_start":403,"line_end":403,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60814,"byte_end":60853,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60858,"byte_end":60901,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60906,"byte_end":60953,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":60958,"byte_end":61004,"line_start":407,"line_end":407,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61009,"byte_end":61058,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61063,"byte_end":61070,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61530,"byte_end":61543,"line_start":423,"line_end":423,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61163,"byte_end":61215,"line_start":414,"line_end":414,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61220,"byte_end":61223,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61228,"byte_end":61239,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61244,"byte_end":61283,"line_start":417,"line_end":417,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61288,"byte_end":61335,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61340,"byte_end":61391,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61396,"byte_end":61444,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61449,"byte_end":61500,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61505,"byte_end":61512,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61972,"byte_end":61985,"line_start":436,"line_end":436,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61604,"byte_end":61656,"line_start":427,"line_end":427,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61661,"byte_end":61664,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61669,"byte_end":61680,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61685,"byte_end":61724,"line_start":430,"line_end":430,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61729,"byte_end":61776,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61781,"byte_end":61832,"line_start":432,"line_end":432,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61837,"byte_end":61885,"line_start":433,"line_end":433,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61890,"byte_end":61942,"line_start":434,"line_end":434,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":61947,"byte_end":61954,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62300,"byte_end":62314,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62033,"byte_end":62090,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62095,"byte_end":62098,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62103,"byte_end":62114,"line_start":442,"line_end":442,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62119,"byte_end":62158,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62163,"byte_end":62215,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62220,"byte_end":62276,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62281,"byte_end":62288,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62679,"byte_end":62693,"line_start":458,"line_end":458,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62412,"byte_end":62469,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62474,"byte_end":62477,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62482,"byte_end":62493,"line_start":453,"line_end":453,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62498,"byte_end":62537,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62542,"byte_end":62594,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62599,"byte_end":62655,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62660,"byte_end":62667,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63200,"byte_end":63218,"line_start":471,"line_end":471,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62791,"byte_end":62848,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62853,"byte_end":62856,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62861,"byte_end":62872,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62877,"byte_end":62916,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62921,"byte_end":62977,"line_start":466,"line_end":466,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":62982,"byte_end":63042,"line_start":467,"line_end":467,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63047,"byte_end":63104,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63109,"byte_end":63170,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63175,"byte_end":63182,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63741,"byte_end":63760,"line_start":485,"line_end":485,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63322,"byte_end":63390,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63395,"byte_end":63398,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63403,"byte_end":63443,"line_start":477,"line_end":477,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63448,"byte_end":63451,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63456,"byte_end":63467,"line_start":479,"line_end":479,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63472,"byte_end":63511,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63516,"byte_end":63573,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63578,"byte_end":63639,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63644,"byte_end":63651,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64250,"byte_end":64268,"line_start":498,"line_end":498,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63831,"byte_end":63888,"line_start":489,"line_end":489,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63893,"byte_end":63896,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63901,"byte_end":63912,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63917,"byte_end":63956,"line_start":492,"line_end":492,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":63961,"byte_end":64022,"line_start":493,"line_end":493,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64027,"byte_end":64092,"line_start":494,"line_end":494,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64097,"byte_end":64154,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64159,"byte_end":64220,"line_start":496,"line_end":496,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64225,"byte_end":64232,"line_start":497,"line_end":497,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64733,"byte_end":64752,"line_start":511,"line_end":511,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64372,"byte_end":64440,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64445,"byte_end":64448,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64453,"byte_end":64501,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64506,"byte_end":64509,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64514,"byte_end":64525,"line_start":506,"line_end":506,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64530,"byte_end":64569,"line_start":507,"line_end":507,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64574,"byte_end":64634,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64639,"byte_end":64703,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64708,"byte_end":64715,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65218,"byte_end":65235,"line_start":524,"line_end":524,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64812,"byte_end":64862,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64867,"byte_end":64870,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64875,"byte_end":64886,"line_start":517,"line_end":517,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64891,"byte_end":64930,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":64935,"byte_end":64995,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65000,"byte_end":65064,"line_start":520,"line_end":520,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65069,"byte_end":65124,"line_start":521,"line_end":521,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65129,"byte_end":65188,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65193,"byte_end":65200,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65742,"byte_end":65760,"line_start":537,"line_end":537,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65335,"byte_end":65402,"line_start":528,"line_end":528,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65407,"byte_end":65410,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65415,"byte_end":65498,"line_start":530,"line_end":530,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65503,"byte_end":65506,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65511,"byte_end":65522,"line_start":532,"line_end":532,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65527,"byte_end":65566,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65571,"byte_end":65637,"line_start":534,"line_end":534,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65642,"byte_end":65712,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65717,"byte_end":65724,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66277,"byte_end":66288,"line_start":551,"line_end":551,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65871,"byte_end":65939,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65944,"byte_end":65947,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65952,"byte_end":65963,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":65968,"byte_end":66019,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66024,"byte_end":66097,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66102,"byte_end":66167,"line_start":548,"line_end":548,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66172,"byte_end":66247,"line_start":549,"line_end":549,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66252,"byte_end":66259,"line_start":550,"line_end":550,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67327,"byte_end":67338,"line_start":574,"line_end":574,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66918,"byte_end":66986,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66991,"byte_end":66994,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":66999,"byte_end":67010,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67015,"byte_end":67066,"line_start":569,"line_end":569,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67071,"byte_end":67146,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67151,"byte_end":67216,"line_start":571,"line_end":571,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67221,"byte_end":67297,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67302,"byte_end":67309,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68465,"byte_end":68476,"line_start":599,"line_end":599,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":67968,"byte_end":68036,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68041,"byte_end":68044,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68049,"byte_end":68060,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68065,"byte_end":68116,"line_start":592,"line_end":592,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68121,"byte_end":68184,"line_start":593,"line_end":593,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68189,"byte_end":68256,"line_start":594,"line_end":594,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68261,"byte_end":68323,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68328,"byte_end":68379,"line_start":596,"line_end":596,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68384,"byte_end":68435,"line_start":597,"line_end":597,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68440,"byte_end":68447,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69354,"byte_end":69365,"line_start":619,"line_end":619,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":68972,"byte_end":69062,"line_start":611,"line_end":611,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69067,"byte_end":69070,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69075,"byte_end":69086,"line_start":613,"line_end":613,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69091,"byte_end":69130,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69135,"byte_end":69198,"line_start":615,"line_end":615,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69203,"byte_end":69270,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69275,"byte_end":69324,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69329,"byte_end":69336,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70395,"byte_end":70409,"line_start":642,"line_end":642,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69867,"byte_end":69929,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69934,"byte_end":69937,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69942,"byte_end":69953,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":69958,"byte_end":70009,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70014,"byte_end":70084,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70089,"byte_end":70166,"line_start":635,"line_end":635,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70171,"byte_end":70186,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70191,"byte_end":70248,"line_start":637,"line_end":637,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70253,"byte_end":70274,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70279,"byte_end":70285,"line_start":639,"line_end":639,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70290,"byte_end":70365,"line_start":640,"line_end":640,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":70370,"byte_end":70377,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71877,"byte_end":71891,"line_start":681,"line_end":681,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71349,"byte_end":71411,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71416,"byte_end":71419,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71424,"byte_end":71435,"line_start":671,"line_end":671,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71440,"byte_end":71491,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71496,"byte_end":71568,"line_start":673,"line_end":673,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71573,"byte_end":71650,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71655,"byte_end":71670,"line_start":675,"line_end":675,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71675,"byte_end":71732,"line_start":676,"line_end":676,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71737,"byte_end":71758,"line_start":677,"line_end":677,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71763,"byte_end":71769,"line_start":678,"line_end":678,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71774,"byte_end":71847,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":71852,"byte_end":71859,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73478,"byte_end":73492,"line_start":720,"line_end":720,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":72831,"byte_end":72893,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":72898,"byte_end":72901,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":72906,"byte_end":72917,"line_start":710,"line_end":710,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":72922,"byte_end":72973,"line_start":711,"line_end":711,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":72978,"byte_end":73038,"line_start":712,"line_end":712,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73043,"byte_end":73107,"line_start":713,"line_end":713,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73112,"byte_end":73174,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73179,"byte_end":73242,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73247,"byte_end":73310,"line_start":716,"line_end":716,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73315,"byte_end":73379,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73384,"byte_end":73448,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":73453,"byte_end":73460,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":74558,"byte_end":74565,"line_start":747,"line_end":747,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"fn time_fn<T, impl FnOnce() -> T>(impl FnOnce() -> T) -> (Self, T) where\nimpl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":74367,"byte_end":74457,"line_start":744,"line_end":744,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":74462,"byte_end":74518,"line_start":745,"line_end":745,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":74523,"byte_end":74546,"line_start":746,"line_end":746,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":75327,"byte_end":75330,"line_start":772,"line_end":772,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":77643,"byte_end":77651,"line_start":841,"line_end":841,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Duration as std::convert::TryFrom>::try_from","value":"fn try_from(StdDuration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78022,"byte_end":78030,"line_start":855,"line_end":855,"column_start":8,"column_end":16},"name":"try_from","qualname":"<StdDuration as std::convert::TryFrom>::try_from","value":"fn try_from(Duration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78453,"byte_end":78456,"line_start":872,"line_end":872,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78654,"byte_end":78657,"line_start":881,"line_end":881,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78920,"byte_end":78923,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"add","qualname":"<StdDuration as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79089,"byte_end":79099,"line_start":898,"line_end":898,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<StdDuration as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, Duration)","parent":{"krate":2,"index":3249},"children":[],"decl_id":{"krate":2,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79381,"byte_end":79384,"line_start":909,"line_end":909,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79536,"byte_end":79539,"line_start":917,"line_end":917,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79742,"byte_end":79745,"line_start":926,"line_end":926,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79990,"byte_end":79993,"line_start":935,"line_end":935,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdDuration as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":80276,"byte_end":80286,"line_start":945,"line_end":945,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<StdDuration as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, Duration)","parent":{"krate":2,"index":3253},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81565,"byte_end":81568,"line_start":990,"line_end":990,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81732,"byte_end":81735,"line_start":998,"line_end":998,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81864,"byte_end":81867,"line_start":1006,"line_end":1006,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f64) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82031,"byte_end":82034,"line_start":1014,"line_end":1014,"column_start":8,"column_end":11},"name":"mul","qualname":"<f64 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82230,"byte_end":82233,"line_start":1024,"line_end":1024,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f32) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82393,"byte_end":82396,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f64) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82617,"byte_end":82620,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, Self) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82786,"byte_end":82789,"line_start":1050,"line_end":1050,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82959,"byte_end":82962,"line_start":1058,"line_end":1058,"column_start":8,"column_end":11},"name":"div","qualname":"<StdDuration as std::ops::Div>::div","value":"fn div(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83111,"byte_end":83113,"line_start":1064,"line_end":1064,"column_start":8,"column_end":10},"name":"eq","qualname":"<Duration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdDuration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83251,"byte_end":83253,"line_start":1070,"line_end":1070,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdDuration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Duration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83367,"byte_end":83378,"line_start":1076,"line_end":1076,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Duration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdDuration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83756,"byte_end":83767,"line_start":1090,"line_end":1090,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdDuration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Duration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83906,"byte_end":83909,"line_start":1096,"line_end":1096,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":7957},"children":[],"decl_id":{"krate":2,"index":7959},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":84063,"byte_end":84066,"line_start":1102,"line_end":1102,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = &'a Self>","parent":{"krate":2,"index":7957},"children":[],"decl_id":{"krate":2,"index":7959},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":339},{"krate":0,"index":354},{"krate":0,"index":366},{"krate":0,"index":390},{"krate":0,"index":409},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":1929},{"krate":0,"index":1948},{"krate":0,"index":442},{"krate":0,"index":444}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":84178,"byte_end":84240,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":88801,"byte_end":88815,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":88532,"byte_end":88626,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":88627,"byte_end":88639,"line_start":8,"line_end":8,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89337,"byte_end":89341,"line_start":27,"line_end":27,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89253,"byte_end":89319,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89585,"byte_end":89599,"line_start":33,"line_end":33,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89395,"byte_end":89482,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89487,"byte_end":89567,"line_start":32,"line_end":32,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89702,"byte_end":89705,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ComponentRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90086,"byte_end":90090,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ComponentRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90273,"byte_end":90281,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91400,"byte_end":91415,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91227,"byte_end":91324,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91325,"byte_end":91343,"line_start":8,"line_end":8,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91465,"byte_end":91468,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConversionRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91726,"byte_end":91730,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ConversionRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91906,"byte_end":91914,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ConversionRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92354,"byte_end":92370,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92155,"byte_end":92250,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92251,"byte_end":92297,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92421,"byte_end":92424,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DifferentVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92680,"byte_end":92684,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(DifferentVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92844,"byte_end":92852,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<DifferentVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93424,"byte_end":93451,"line_start":16,"line_end":16,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":1883},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93306,"byte_end":93397,"line_start":14,"line_end":14,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93402,"byte_end":93419,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93626,"byte_end":93642,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":1883},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93457,"byte_end":93544,"line_start":17,"line_end":17,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93549,"byte_end":93552,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93557,"byte_end":93621,"line_start":19,"line_end":19,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93643,"byte_end":93655,"line_start":20,"line_end":20,"column_start":22,"column_end":34},"name":"0","qualname":"::error::format::Format::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":1886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93723,"byte_end":93728,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":1883},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93662,"byte_end":93718,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":1891},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93729,"byte_end":93738,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"0","qualname":"::error::format::Format::StdIo::0","value":"std::io::Error","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93293,"byte_end":93299,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1889}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93109,"byte_end":93147,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93148,"byte_end":93165,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93166,"byte_end":93204,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93782,"byte_end":93785,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Format as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94348,"byte_end":94352,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"from","qualname":"<Format as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94500,"byte_end":94508,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"try_from","qualname":"<io::Error as std::convert::TryFrom>::try_from","value":"fn try_from(Format) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94749,"byte_end":94755,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"source","qualname":"<Format as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95088,"byte_end":95092,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Format) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95313,"byte_end":95321,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Format as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96270,"byte_end":96292,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96183,"byte_end":96243,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96248,"byte_end":96265,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96360,"byte_end":96365,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket::index","value":"usize","parent":{"krate":0,"index":1895},"children":[],"decl_id":null,"docs":" The zero-based index of the opening bracket.\n","sig":null,"attributes":[{"value":"/ The zero-based index of the opening bracket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96303,"byte_end":96351,"line_start":19,"line_end":19,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96446,"byte_end":96466,"line_start":24,"line_end":24,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96385,"byte_end":96419,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96424,"byte_end":96441,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96529,"byte_end":96533,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"name","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::name","value":"std::string::String","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" The name of the invalid component name.\n","sig":null,"attributes":[{"value":"/ The name of the invalid component name.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96477,"byte_end":96520,"line_start":25,"line_end":25,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96614,"byte_end":96619,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::index","value":"usize","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":" The zero-based index the component name starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the component name starts at.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96551,"byte_end":96605,"line_start":27,"line_end":27,"column_start":9,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96694,"byte_end":96709,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96639,"byte_end":96667,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96672,"byte_end":96689,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96767,"byte_end":96772,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"value","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::value","value":"std::string::String","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The value of the invalid modifier.\n","sig":null,"attributes":[{"value":"/ The value of the invalid modifier.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96720,"byte_end":96758,"line_start":33,"line_end":33,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96847,"byte_end":96852,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::index","value":"usize","parent":{"krate":0,"index":1900},"children":[],"decl_id":null,"docs":" The zero-based index the modifier starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the modifier starts at.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96790,"byte_end":96838,"line_start":35,"line_end":35,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96931,"byte_end":96951,"line_start":40,"line_end":40,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96872,"byte_end":96904,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96909,"byte_end":96926,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97034,"byte_end":97039,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName::index","value":"usize","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The zero-based index where the component name should start.\n","sig":null,"attributes":[{"value":"/ The zero-based index where the component name should start.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96962,"byte_end":97025,"line_start":41,"line_end":41,"column_start":9,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96152,"byte_end":96176,"line_start":15,"line_end":15,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":95913,"byte_end":95963,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":96086,"byte_end":96103,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97242,"byte_end":97246,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidFormatDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97581,"byte_end":97589,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidFormatDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97850,"byte_end":97853,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidFormatDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98862,"byte_end":98876,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98679,"byte_end":98776,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98777,"byte_end":98805,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98925,"byte_end":98928,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99163,"byte_end":99167,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99347,"byte_end":99355,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85813,"byte_end":85828,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85829,"byte_end":85844,"line_start":48,"line_end":48,"column_start":21,"column_end":36},"name":"0","qualname":"::error::Error::ConversionRange::0","value":"error::conversion_range::ConversionRange","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85851,"byte_end":85865,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85866,"byte_end":85880,"line_start":49,"line_end":49,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86005,"byte_end":86011,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85970,"byte_end":86000,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86012,"byte_end":86018,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"0","qualname":"::error::Error::Format::0","value":"error::format::Format","parent":{"krate":0,"index":1936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86344,"byte_end":86368,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86259,"byte_end":86339,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86369,"byte_end":86393,"line_start":62,"line_end":62,"column_start":30,"column_end":54},"name":"0","qualname":"::error::Error::InvalidFormatDescription::0","value":"error::invalid_format_description::InvalidFormatDescription","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86400,"byte_end":86416,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86417,"byte_end":86433,"line_start":63,"line_end":63,"column_start":22,"column_end":38},"name":"0","qualname":"::error::Error::DifferentVariant::0","value":"error::different_variant::DifferentVariant","parent":{"krate":0,"index":1942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86440,"byte_end":86454,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86455,"byte_end":86469,"line_start":64,"line_end":64,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::InvalidVariant::0","value":"error::invalid_variant::InvalidVariant","parent":{"krate":0,"index":1945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85801,"byte_end":85806,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85358,"byte_end":85435,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85436,"byte_end":85439,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85440,"byte_end":85533,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85534,"byte_end":85626,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85627,"byte_end":85691,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85692,"byte_end":85739,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":85757,"byte_end":85774,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86512,"byte_end":86515,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":87528,"byte_end":87534,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":467},{"krate":0,"index":476},{"krate":0,"index":485},{"krate":0,"index":494},{"krate":0,"index":503}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99557,"byte_end":99578,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99791,"byte_end":99797,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99717,"byte_end":99776,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101596,"byte_end":101613,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99914,"byte_end":99961,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99962,"byte_end":99965,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99966,"byte_end":99980,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99981,"byte_end":99984,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":99985,"byte_end":100025,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100026,"byte_end":100029,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100030,"byte_end":100041,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100042,"byte_end":100093,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100094,"byte_end":100152,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100153,"byte_end":100213,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100214,"byte_end":100274,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100275,"byte_end":100325,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100326,"byte_end":100376,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100377,"byte_end":100423,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100424,"byte_end":100468,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100469,"byte_end":100515,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100516,"byte_end":100523,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100524,"byte_end":100527,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100528,"byte_end":100561,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100562,"byte_end":100565,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100566,"byte_end":100577,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100578,"byte_end":100629,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100630,"byte_end":100692,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100693,"byte_end":100757,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100758,"byte_end":100822,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100823,"byte_end":100877,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100878,"byte_end":100932,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100933,"byte_end":100983,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":100984,"byte_end":101032,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101033,"byte_end":101083,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101084,"byte_end":101091,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101092,"byte_end":101095,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101096,"byte_end":101169,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101170,"byte_end":101173,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101174,"byte_end":101185,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101186,"byte_end":101225,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101226,"byte_end":101297,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101298,"byte_end":101369,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101370,"byte_end":101377,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101378,"byte_end":101381,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101382,"byte_end":101473,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101474,"byte_end":101571,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101572,"byte_end":101585,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101701,"byte_end":101712,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101636,"byte_end":101693,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101802,"byte_end":101814,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101736,"byte_end":101794,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101904,"byte_end":101916,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101838,"byte_end":101896,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102001,"byte_end":102008,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101940,"byte_end":101993,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102093,"byte_end":102100,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102032,"byte_end":102085,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102183,"byte_end":102188,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102124,"byte_end":102175,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102270,"byte_end":102274,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102212,"byte_end":102262,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102357,"byte_end":102362,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102298,"byte_end":102349,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102425,"byte_end":102436,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<i64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":459},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102507,"byte_end":102519,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<i64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":460},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102591,"byte_end":102603,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<i64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":461},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102675,"byte_end":102682,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"seconds","qualname":"<i64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":462},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102749,"byte_end":102756,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"minutes","qualname":"<i64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":463},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102823,"byte_end":102828,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"hours","qualname":"<i64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":464},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102893,"byte_end":102897,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"days","qualname":"<i64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":465},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":102961,"byte_end":102966,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"weeks","qualname":"<i64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":466},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103066,"byte_end":103077,"line_start":114,"line_end":114,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<f64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":459},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103153,"byte_end":103165,"line_start":118,"line_end":118,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<f64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":460},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103252,"byte_end":103264,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<f64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":461},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103355,"byte_end":103362,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"seconds","qualname":"<f64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":462},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103457,"byte_end":103464,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"minutes","qualname":"<f64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":463},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103560,"byte_end":103565,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"hours","qualname":"<f64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":464},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103664,"byte_end":103668,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"days","qualname":"<f64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":465},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103768,"byte_end":103773,"line_start":142,"line_end":142,"column_start":8,"column_end":13},"name":"weeks","qualname":"<f64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":458},"children":[],"decl_id":{"krate":0,"index":466},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105251,"byte_end":105271,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103932,"byte_end":103990,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103991,"byte_end":103994,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":103995,"byte_end":104009,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104010,"byte_end":104013,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104014,"byte_end":104065,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104066,"byte_end":104069,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104070,"byte_end":104081,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104082,"byte_end":104124,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104125,"byte_end":104156,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104157,"byte_end":104218,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104219,"byte_end":104282,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104283,"byte_end":104346,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104347,"byte_end":104403,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104404,"byte_end":104465,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104466,"byte_end":104528,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104529,"byte_end":104591,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104592,"byte_end":104656,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104657,"byte_end":104664,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104665,"byte_end":104668,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104669,"byte_end":104753,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104754,"byte_end":104757,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104758,"byte_end":104769,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104770,"byte_end":104812,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104813,"byte_end":104828,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104829,"byte_end":104878,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104879,"byte_end":104911,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104912,"byte_end":104918,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104919,"byte_end":104934,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104935,"byte_end":104984,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":104985,"byte_end":105017,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105018,"byte_end":105024,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105025,"byte_end":105032,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105033,"byte_end":105036,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105037,"byte_end":105128,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105129,"byte_end":105226,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105227,"byte_end":105240,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105370,"byte_end":105385,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105294,"byte_end":105362,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105489,"byte_end":105505,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105412,"byte_end":105481,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105609,"byte_end":105625,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105532,"byte_end":105601,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105724,"byte_end":105735,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105652,"byte_end":105716,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105834,"byte_end":105845,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105762,"byte_end":105826,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105942,"byte_end":105951,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105872,"byte_end":105934,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106047,"byte_end":106055,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105978,"byte_end":106039,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106152,"byte_end":106161,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106082,"byte_end":106144,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106230,"byte_end":106245,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106321,"byte_end":106337,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":487},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106414,"byte_end":106430,"line_start":213,"line_end":213,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106507,"byte_end":106518,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<u64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106593,"byte_end":106604,"line_start":221,"line_end":221,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<u64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":490},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106684,"byte_end":106693,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<u64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":491},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106776,"byte_end":106784,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"std_days","qualname":"<u64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":492},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":106868,"byte_end":106877,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<u64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":493},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107000,"byte_end":107015,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107125,"byte_end":107141,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":487},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107262,"byte_end":107278,"line_start":249,"line_end":249,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107403,"byte_end":107414,"line_start":254,"line_end":254,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<f64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107543,"byte_end":107554,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<f64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":490},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107684,"byte_end":107693,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<f64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":491},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107826,"byte_end":107834,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"std_days","qualname":"<f64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":492},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":107968,"byte_end":107977,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<f64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":485},"children":[],"decl_id":{"krate":0,"index":493},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":559},{"krate":0,"index":577},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":628},{"krate":0,"index":2573},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9757,"byte_end":9813,"line_start":288,"line_end":288,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108141,"byte_end":108201,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108202,"byte_end":108205,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108206,"byte_end":108295,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108296,"byte_end":108376,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108377,"byte_end":108450,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108451,"byte_end":108530,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113226,"byte_end":113229,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113200,"byte_end":113221,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113230,"byte_end":113243,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"0","qualname":"::format_description::component::Component::Day::0","value":"format_description::modifier::Day","parent":{"krate":0,"index":1951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113277,"byte_end":113282,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113250,"byte_end":113272,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113283,"byte_end":113298,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"0","qualname":"::format_description::component::Component::Month::0","value":"format_description::modifier::Month","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113338,"byte_end":113345,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113305,"byte_end":113333,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113346,"byte_end":113363,"line_start":19,"line_end":19,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Ordinal::0","value":"format_description::modifier::Ordinal","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113395,"byte_end":113402,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113370,"byte_end":113390,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113403,"byte_end":113420,"line_start":21,"line_end":21,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Weekday::0","value":"format_description::modifier::Weekday","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113457,"byte_end":113467,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113427,"byte_end":113452,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113468,"byte_end":113488,"line_start":23,"line_end":23,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::WeekNumber::0","value":"format_description::modifier::WeekNumber","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113521,"byte_end":113525,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113495,"byte_end":113516,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113526,"byte_end":113540,"line_start":25,"line_end":25,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Year::0","value":"format_description::modifier::Year","parent":{"krate":0,"index":1966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113572,"byte_end":113576,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113547,"byte_end":113567,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113577,"byte_end":113591,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Hour::0","value":"format_description::modifier::Hour","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113630,"byte_end":113636,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113598,"byte_end":113625,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113637,"byte_end":113653,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Minute::0","value":"format_description::modifier::Minute","parent":{"krate":0,"index":1972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113692,"byte_end":113698,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113660,"byte_end":113687,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1977},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113699,"byte_end":113715,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Period::0","value":"format_description::modifier::Period","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113756,"byte_end":113762,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113722,"byte_end":113751,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1980},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113763,"byte_end":113779,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Second::0","value":"format_description::modifier::Second","parent":{"krate":0,"index":1978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113823,"byte_end":113832,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113786,"byte_end":113818,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113833,"byte_end":113852,"line_start":35,"line_end":35,"column_start":15,"column_end":34},"name":"0","qualname":"::format_description::component::Component::Subsecond::0","value":"format_description::modifier::Subsecond","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113891,"byte_end":113901,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113859,"byte_end":113886,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113902,"byte_end":113922,"line_start":37,"line_end":37,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::OffsetHour::0","value":"format_description::modifier::OffsetHour","parent":{"krate":0,"index":1984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113979,"byte_end":113991,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113929,"byte_end":113974,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113992,"byte_end":114014,"line_start":39,"line_end":39,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetMinute::0","value":"format_description::modifier::OffsetMinute","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":114073,"byte_end":114085,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":114021,"byte_end":114068,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":114086,"byte_end":114108,"line_start":41,"line_end":41,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetSecond::0","value":"format_description::modifier::OffsetSecond","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113184,"byte_end":113193,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113064,"byte_end":113111,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":113112,"byte_end":113129,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2408},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":575}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119262,"byte_end":119299,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119619,"byte_end":119622,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":2006}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119523,"byte_end":119544,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119545,"byte_end":119562,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119682,"byte_end":119689,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119629,"byte_end":119673,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2020},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119890,"byte_end":119899,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119826,"byte_end":119885,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119963,"byte_end":119967,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119905,"byte_end":119958,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120028,"byte_end":120033,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119973,"byte_end":120023,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119810,"byte_end":119819,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119703,"byte_end":119737,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":119738,"byte_end":119755,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120135,"byte_end":120140,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120038,"byte_end":120060,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120061,"byte_end":120078,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120200,"byte_end":120207,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120147,"byte_end":120191,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120278,"byte_end":120282,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120222,"byte_end":120269,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120353,"byte_end":120367,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120299,"byte_end":120344,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120481,"byte_end":120488,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":2054}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120378,"byte_end":120406,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120407,"byte_end":120424,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120548,"byte_end":120555,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120495,"byte_end":120539,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120764,"byte_end":120769,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120712,"byte_end":120759,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120829,"byte_end":120833,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120775,"byte_end":120824,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120999,"byte_end":121005,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120839,"byte_end":120912,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120917,"byte_end":120920,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120925,"byte_end":120994,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121171,"byte_end":121177,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121011,"byte_end":121084,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121089,"byte_end":121092,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121097,"byte_end":121166,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120694,"byte_end":120705,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120569,"byte_end":120621,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":120622,"byte_end":120639,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121277,"byte_end":121284,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121182,"byte_end":121202,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121203,"byte_end":121220,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121347,"byte_end":121351,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121291,"byte_end":121338,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121455,"byte_end":121466,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121370,"byte_end":121446,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121532,"byte_end":121546,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121478,"byte_end":121523,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121751,"byte_end":121754,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121699,"byte_end":121746,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121824,"byte_end":121830,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121760,"byte_end":121819,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121900,"byte_end":121906,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121836,"byte_end":121895,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121678,"byte_end":121692,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121557,"byte_end":121605,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121606,"byte_end":121623,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122011,"byte_end":122021,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121911,"byte_end":121936,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":121937,"byte_end":121954,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122081,"byte_end":122088,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122028,"byte_end":122072,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122159,"byte_end":122163,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122103,"byte_end":122150,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122353,"byte_end":122357,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122317,"byte_end":122348,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2139},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122409,"byte_end":122416,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122363,"byte_end":122404,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122302,"byte_end":122310,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2139}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122184,"byte_end":122229,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122230,"byte_end":122247,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122517,"byte_end":122521,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122421,"byte_end":122442,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122443,"byte_end":122460,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122581,"byte_end":122588,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2152},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122528,"byte_end":122572,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122659,"byte_end":122663,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":2152},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122603,"byte_end":122650,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2155},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122768,"byte_end":122782,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":2152},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122679,"byte_end":122759,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122892,"byte_end":122909,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2152},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122794,"byte_end":122883,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123069,"byte_end":123073,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122974,"byte_end":122994,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":122995,"byte_end":123012,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123133,"byte_end":123140,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123080,"byte_end":123124,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123218,"byte_end":123234,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123155,"byte_end":123209,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123347,"byte_end":123353,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":2185}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123245,"byte_end":123272,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123273,"byte_end":123290,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123413,"byte_end":123420,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2184},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123360,"byte_end":123404,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123536,"byte_end":123542,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123434,"byte_end":123461,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123462,"byte_end":123479,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123599,"byte_end":123611,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123549,"byte_end":123590,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123777,"byte_end":123791,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123623,"byte_end":123668,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123673,"byte_end":123676,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123681,"byte_end":123768,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123906,"byte_end":123912,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":2214}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123802,"byte_end":123831,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123832,"byte_end":123849,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123972,"byte_end":123979,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123919,"byte_end":123963,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124178,"byte_end":124181,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124151,"byte_end":124173,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124215,"byte_end":124218,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124187,"byte_end":124210,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124254,"byte_end":124259,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124224,"byte_end":124249,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124294,"byte_end":124298,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124265,"byte_end":124289,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124333,"byte_end":124337,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124304,"byte_end":124328,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124371,"byte_end":124374,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124343,"byte_end":124366,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124410,"byte_end":124415,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124380,"byte_end":124405,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124451,"byte_end":124456,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124421,"byte_end":124446,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124491,"byte_end":124495,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124462,"byte_end":124486,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124633,"byte_end":124642,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124501,"byte_end":124596,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124601,"byte_end":124628,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124129,"byte_end":124144,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":123993,"byte_end":124056,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124057,"byte_end":124074,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124754,"byte_end":124763,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":2260}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124647,"byte_end":124679,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124680,"byte_end":124697,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124828,"byte_end":124834,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124770,"byte_end":124819,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125014,"byte_end":125024,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124912,"byte_end":124939,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":124940,"byte_end":124957,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125095,"byte_end":125112,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125031,"byte_end":125086,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125177,"byte_end":125184,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125124,"byte_end":125168,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125318,"byte_end":125330,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":2289}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125198,"byte_end":125243,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125244,"byte_end":125261,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125390,"byte_end":125397,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2288},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125337,"byte_end":125381,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125533,"byte_end":125545,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":2303}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125411,"byte_end":125458,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125459,"byte_end":125476,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125605,"byte_end":125612,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":2302},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125552,"byte_end":125596,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125848,"byte_end":125853,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":2316},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125789,"byte_end":125843,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125917,"byte_end":125921,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":2316},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125859,"byte_end":125912,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":126041,"byte_end":126045,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":2316},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125927,"byte_end":126016,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":126021,"byte_end":126036,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125775,"byte_end":125782,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2321}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125656,"byte_end":125702,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":125703,"byte_end":125720,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\parse.rs","byte_start":141676,"byte_end":141681,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\parse.rs","byte_start":141415,"byte_end":141473,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\parse.rs","byte_start":141474,"byte_end":141477,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\parse.rs","byte_start":141478,"byte_end":141540,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\parse.rs","byte_start":141541,"byte_end":141611,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109394,"byte_end":109404,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":706}],"decl_id":null,"docs":" Well-known formats, typically standards.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically standards.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109341,"byte_end":109385,"line_start":38,"line_end":38,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iso8601","qualname":"::format_description::well_known::iso8601","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":2432},{"krate":0,"index":2436},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":2459},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2545},{"krate":0,"index":689}],"decl_id":null,"docs":" The format described in ISO 8601.\n","sig":null,"attributes":[{"value":"/ The format described in ISO 8601.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142014,"byte_end":142051,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150315,"byte_end":150336,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"name":"DoNotRelyOnWhatThisIs","qualname":"::format_description::well_known::iso8601::adt_hack::DoNotRelyOnWhatThisIs","value":"u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150545,"byte_end":150558,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"EncodedConfig","qualname":"::format_description::well_known::iso8601::adt_hack::EncodedConfig","value":"DoNotRelyOnWhatThisIs","parent":null,"children":[],"decl_id":null,"docs":" An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","sig":null,"attributes":[{"value":"/ An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150346,"byte_end":150425,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150426,"byte_end":150429,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The type this is aliased to must not be relied upon. It can change in any release without","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150430,"byte_end":150523,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ notice.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150524,"byte_end":150535,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152353,"byte_end":152359,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"name":"encode","qualname":"<Config>::encode","value":"const fn encode(&Self) -> EncodedConfig","parent":null,"children":[],"decl_id":null,"docs":" Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","sig":null,"attributes":[{"value":"/ Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152090,"byte_end":152181,"line_start":52,"line_end":52,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152186,"byte_end":152189,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The value returned by this method must only be used as a const parameter to [`Iso8601`]. Any","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152194,"byte_end":152290,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ other usage is unspecified behavior.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152295,"byte_end":152335,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143418,"byte_end":143425,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Iso8601","qualname":"::format_description::well_known::iso8601::Iso8601","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","sig":null,"attributes":[{"value":"/ The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142662,"byte_end":142757,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142758,"byte_end":142761,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation is of ISO 8601-1:2019. It may not be compatible with other versions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142762,"byte_end":142854,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142855,"byte_end":142858,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The const parameter `CONFIG` **must** be a value that was returned by [`Config::encode`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142859,"byte_end":142952,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ Passing any other value is **unspecified behavior**.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":142953,"byte_end":143009,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143010,"byte_end":143013,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Example: 1997-11-21T09:55:06.000000000-06:00","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143014,"byte_end":143062,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143063,"byte_end":143066,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143067,"byte_end":143081,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143082,"byte_end":143085,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143086,"byte_end":143097,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # use time::format_description::well_known::Iso8601;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143098,"byte_end":143154,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143155,"byte_end":143188,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143189,"byte_end":143204,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-12 9:55:06 -6:00).format(&Iso8601::DEFAULT)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143205,"byte_end":143276,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/     \"1997-11-12T09:55:06.000000000-06:00\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143277,"byte_end":143322,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143323,"byte_end":143329,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143330,"byte_end":143360,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143361,"byte_end":143368,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143554,"byte_end":143557,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iso8601<CONFIG> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144492,"byte_end":144499,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Iso8601::<DEFAULT_CONFIG>::DEFAULT","value":"Self","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" An [`Iso8601`] with the default configuration.","sig":null,"attributes":[{"value":"/ An [`Iso8601`] with the default configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143776,"byte_end":143826,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143831,"byte_end":143834,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143839,"byte_end":143881,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143886,"byte_end":143889,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143894,"byte_end":143962,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143967,"byte_end":144022,"line_start":62,"line_end":62,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144027,"byte_end":144079,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144084,"byte_end":144167,"line_start":64,"line_end":64,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144172,"byte_end":144212,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144217,"byte_end":144284,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144289,"byte_end":144338,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144343,"byte_end":144346,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use [`Config::DEFAULT`] and [`Config`]'s methods to create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144351,"byte_end":144445,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ a custom configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144450,"byte_end":144477,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144680,"byte_end":144687,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"name":"PARSING","qualname":"::format_description::well_known::iso8601::Iso8601::<PARSING_ONLY>::PARSING","value":"Self","parent":{"krate":0,"index":687},"children":[],"decl_id":null,"docs":" An [`Iso8601`] that can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ An [`Iso8601`] that can only be used for parsing. Using this to format a value is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144550,"byte_end":144635,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ unspecified behavior.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144640,"byte_end":144665,"line_start":76,"line_end":76,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144935,"byte_end":144939,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::well_known::iso8601::FormattedComponents::None","value":"FormattedComponents::None","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" The configuration can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ The configuration can only be used for parsing. Using this to format a value is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144817,"byte_end":144900,"line_start":83,"line_end":83,"column_start":5,"column_end":88}},{"value":"/ unspecified behavior.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144905,"byte_end":144930,"line_start":84,"line_end":84,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144975,"byte_end":144979,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Date","qualname":"::format_description::well_known::iso8601::FormattedComponents::Date","value":"FormattedComponents::Date","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format only the date.\n","sig":null,"attributes":[{"value":"/ Format only the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144945,"byte_end":144970,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145015,"byte_end":145019,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Time","qualname":"::format_description::well_known::iso8601::FormattedComponents::Time","value":"FormattedComponents::Time","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format only the time.\n","sig":null,"attributes":[{"value":"/ Format only the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144985,"byte_end":145010,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145061,"byte_end":145067,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Offset","qualname":"::format_description::well_known::iso8601::FormattedComponents::Offset","value":"FormattedComponents::Offset","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format only the UTC offset.\n","sig":null,"attributes":[{"value":"/ Format only the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145025,"byte_end":145056,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145107,"byte_end":145115,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTime","value":"FormattedComponents::DateTime","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format the date and time.\n","sig":null,"attributes":[{"value":"/ Format the date and time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145073,"byte_end":145102,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145168,"byte_end":145182,"line_start":95,"line_end":95,"column_start":5,"column_end":19},"name":"DateTimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTimeOffset","value":"FormattedComponents::DateTimeOffset","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format the date, time, and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the date, time, and UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145121,"byte_end":145163,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145228,"byte_end":145238,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"name":"TimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::TimeOffset","value":"FormattedComponents::TimeOffset","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Format the time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the time and UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145188,"byte_end":145223,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144791,"byte_end":144810,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"name":"FormattedComponents","qualname":"::format_description::well_known::iso8601::FormattedComponents","value":"enum FormattedComponents {\n    None,\n    Date,\n    Time,\n    Offset,\n    DateTime,\n    DateTimeOffset,\n    TimeOffset,\n}","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472}],"decl_id":null,"docs":" Which components to format.\n","sig":null,"attributes":[{"value":"/ Which components to format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144705,"byte_end":144736,"line_start":80,"line_end":80,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145389,"byte_end":145397,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Calendar","qualname":"::format_description::well_known::iso8601::DateKind::Calendar","value":"DateKind::Calendar","parent":{"krate":0,"index":2485},"children":[],"decl_id":null,"docs":" Use the year-month-day format.\n","sig":null,"attributes":[{"value":"/ Use the year-month-day format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145350,"byte_end":145384,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145445,"byte_end":145449,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Week","qualname":"::format_description::well_known::iso8601::DateKind::Week","value":"DateKind::Week","parent":{"krate":0,"index":2485},"children":[],"decl_id":null,"docs":" Use the year-week-weekday format.\n","sig":null,"attributes":[{"value":"/ Use the year-week-weekday format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145403,"byte_end":145440,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145492,"byte_end":145499,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::well_known::iso8601::DateKind::Ordinal","value":"DateKind::Ordinal","parent":{"krate":0,"index":2485},"children":[],"decl_id":null,"docs":" Use the week-ordinal format.\n","sig":null,"attributes":[{"value":"/ Use the week-ordinal format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145455,"byte_end":145487,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145335,"byte_end":145343,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"DateKind","qualname":"::format_description::well_known::iso8601::DateKind","value":"enum DateKind { Calendar, Week, Ordinal, }","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490}],"decl_id":null,"docs":" Which format to use for the date.\n","sig":null,"attributes":[{"value":"/ Which format to use for the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145243,"byte_end":145280,"line_start":100,"line_end":100,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145792,"byte_end":145796,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour","value":"TimePrecision::Hour { decimal_digits }","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" Format the hour only. Minutes, seconds, and nanoseconds will be represented with the\n specified number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour only. Minutes, seconds, and nanoseconds will be represented with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145647,"byte_end":145735,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ specified number of decimal digits, if any.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145740,"byte_end":145787,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145863,"byte_end":145877,"line_start":118,"line_end":118,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145807,"byte_end":145854,"line_start":117,"line_end":117,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146050,"byte_end":146056,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute","value":"TimePrecision::Minute { decimal_digits }","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" Format the hour and minute. Seconds and nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour and minute. Seconds and nanoseconds will be represented with the specified","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145909,"byte_end":146003,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146008,"byte_end":146045,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146123,"byte_end":146137,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":2506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146067,"byte_end":146114,"line_start":123,"line_end":123,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146307,"byte_end":146313,"line_start":128,"line_end":128,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::well_known::iso8601::TimePrecision::Second","value":"TimePrecision::Second { decimal_digits }","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" Format the hour, minute, and second. Nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour, minute, and second. Nanoseconds will be represented with the specified","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146169,"byte_end":146260,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146265,"byte_end":146302,"line_start":127,"line_end":127,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146380,"byte_end":146394,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Second::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":2508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146324,"byte_end":146371,"line_start":129,"line_end":129,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145627,"byte_end":145640,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"name":"TimePrecision","qualname":"::format_description::well_known::iso8601::TimePrecision","value":"enum TimePrecision {\n    Hour {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Minute {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Second {\n            decimal_digits: Option<NonZeroU8>,\n        },\n}","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508}],"decl_id":null,"docs":" The precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ The precision and number of decimal digits present for the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":145504,"byte_end":145572,"line_start":111,"line_end":111,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146615,"byte_end":146619,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Hour","value":"OffsetPrecision::Hour","parent":{"krate":0,"index":2522},"children":[],"decl_id":null,"docs":" Format only the offset hour. Requires the offset minute to be zero.\n","sig":null,"attributes":[{"value":"/ Format only the offset hour. Requires the offset minute to be zero.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146539,"byte_end":146610,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146673,"byte_end":146679,"line_start":140,"line_end":140,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Minute","value":"OffsetPrecision::Minute","parent":{"krate":0,"index":2522},"children":[],"decl_id":null,"docs":" Format both the offset hour and minute.\n","sig":null,"attributes":[{"value":"/ Format both the offset hour and minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146625,"byte_end":146668,"line_start":139,"line_end":139,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2522},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146517,"byte_end":146532,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"name":"OffsetPrecision","qualname":"::format_description::well_known::iso8601::OffsetPrecision","value":"enum OffsetPrecision { Hour, Minute, }","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2525}],"decl_id":null,"docs":" The precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ The precision for the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146425,"byte_end":146462,"line_start":134,"line_end":134,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146993,"byte_end":146999,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"Config","qualname":"::format_description::well_known::iso8601::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544}],"decl_id":null,"docs":" Configuration for [`Iso8601`].\n","sig":null,"attributes":[{"value":"/ Configuration for [`Iso8601`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146684,"byte_end":146718,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":146825,"byte_end":146863,"line_start":146,"line_end":146,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148267,"byte_end":148274,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Config::DEFAULT","value":"Self","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":" A configuration for the [`Iso8601`] format.","sig":null,"attributes":[{"value":"/ A configuration for the [`Iso8601`] format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147606,"byte_end":147653,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147658,"byte_end":147661,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147666,"byte_end":147708,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147713,"byte_end":147716,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147721,"byte_end":147789,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147794,"byte_end":147849,"line_start":170,"line_end":170,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147854,"byte_end":147906,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147911,"byte_end":147994,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147999,"byte_end":148039,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148044,"byte_end":148111,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148116,"byte_end":148165,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148170,"byte_end":148173,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use the setter methods on this struct.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148178,"byte_end":148252,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148709,"byte_end":148733,"line_start":190,"line_end":190,"column_start":18,"column_end":42},"name":"set_formatted_components","qualname":"<Config>::set_formatted_components","value":"const fn set_formatted_components(Self, FormattedComponents) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format the date, time, and/or UTC offset.\n","sig":null,"attributes":[{"value":"/ Set whether the format the date, time, and/or UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148630,"byte_end":148691,"line_start":189,"line_end":189,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148968,"byte_end":148986,"line_start":198,"line_end":198,"column_start":18,"column_end":36},"name":"set_use_separators","qualname":"<Config>::set_use_separators","value":"const fn set_use_separators(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format contains separators (such as `-` or `:`).\n","sig":null,"attributes":[{"value":"/ Set whether the format contains separators (such as `-` or `:`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":148882,"byte_end":148950,"line_start":197,"line_end":197,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149165,"byte_end":149187,"line_start":206,"line_end":206,"column_start":18,"column_end":40},"name":"set_year_is_six_digits","qualname":"<Config>::set_year_is_six_digits","value":"const fn set_year_is_six_digits(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the year is six digits.\n","sig":null,"attributes":[{"value":"/ Set whether the year is six digits.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149108,"byte_end":149147,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149372,"byte_end":149385,"line_start":214,"line_end":214,"column_start":18,"column_end":31},"name":"set_date_kind","qualname":"<Config>::set_date_kind","value":"const fn set_date_kind(Self, DateKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the format used for the date.\n","sig":null,"attributes":[{"value":"/ Set the format used for the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149317,"byte_end":149354,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149559,"byte_end":149577,"line_start":219,"line_end":219,"column_start":18,"column_end":36},"name":"set_time_precision","qualname":"<Config>::set_time_precision","value":"const fn set_time_precision(Self, TimePrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ Set the precision and number of decimal digits present for the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149469,"byte_end":149541,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149767,"byte_end":149787,"line_start":227,"line_end":227,"column_start":18,"column_end":38},"name":"set_offset_precision","qualname":"<Config>::set_offset_precision","value":"const fn set_offset_precision(Self, OffsetPrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ Set the precision for the UTC offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":149708,"byte_end":149749,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2547},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160519,"byte_end":160526,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc2822","qualname":"::format_description::well_known::rfc2822::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159752,"byte_end":159840,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159841,"byte_end":159844,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159845,"byte_end":159889,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159890,"byte_end":159893,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159894,"byte_end":159908,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159909,"byte_end":159912,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159913,"byte_end":159924,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":159925,"byte_end":160017,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160018,"byte_end":160033,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160034,"byte_end":160108,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160109,"byte_end":160154,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160155,"byte_end":160161,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160162,"byte_end":160192,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160193,"byte_end":160200,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160201,"byte_end":160204,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160205,"byte_end":160216,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160217,"byte_end":160293,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160294,"byte_end":160309,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160310,"byte_end":160374,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160375,"byte_end":160416,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160417,"byte_end":160423,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160424,"byte_end":160454,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc2822.rs","byte_start":160455,"byte_end":160462,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161326,"byte_end":161333,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc3339","qualname":"::format_description::well_known::rfc3339::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160568,"byte_end":160656,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160657,"byte_end":160660,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160661,"byte_end":160704,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160705,"byte_end":160708,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160709,"byte_end":160723,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160724,"byte_end":160727,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160728,"byte_end":160739,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160740,"byte_end":160832,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160833,"byte_end":160848,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160849,"byte_end":160917,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160918,"byte_end":160966,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160967,"byte_end":160973,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":160974,"byte_end":161004,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161005,"byte_end":161012,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161013,"byte_end":161016,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161017,"byte_end":161028,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161029,"byte_end":161105,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161106,"byte_end":161121,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161122,"byte_end":161189,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161190,"byte_end":161223,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161224,"byte_end":161230,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161231,"byte_end":161261,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\rfc3339.rs","byte_start":161262,"byte_end":161269,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109961,"byte_end":109968,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109768,"byte_end":109803,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109808,"byte_end":109811,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109816,"byte_end":109906,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109911,"byte_end":109956,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109969,"byte_end":109977,"line_start":59,"line_end":59,"column_start":13,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::Literal::0","value":"&'a [u8]","parent":{"krate":0,"index":2575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110047,"byte_end":110056,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109984,"byte_end":110042,"line_start":60,"line_end":60,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110057,"byte_end":110066,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Component::0","value":"format_description::component::Component","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110182,"byte_end":110190,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110073,"byte_end":110156,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110161,"byte_end":110177,"line_start":63,"line_end":63,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110191,"byte_end":110201,"line_start":64,"line_end":64,"column_start":14,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Compound::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110453,"byte_end":110461,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110208,"byte_end":110303,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110308,"byte_end":110348,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110353,"byte_end":110356,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110361,"byte_end":110448,"line_start":68,"line_end":68,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110462,"byte_end":110470,"line_start":69,"line_end":69,"column_start":14,"column_end":22},"name":"0","qualname":"::format_description::FormatItem::Optional::0","value":"&'a format_description::FormatItem<'a>","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110696,"byte_end":110701,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110477,"byte_end":110568,"line_start":70,"line_end":70,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110573,"byte_end":110660,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110665,"byte_end":110691,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110702,"byte_end":110712,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::First::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":2587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109747,"byte_end":109757,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2587}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109575,"byte_end":109636,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109637,"byte_end":109654,"line_start":51,"line_end":51,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110788,"byte_end":110791,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormatItem as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111330,"byte_end":111334,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(Component) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111506,"byte_end":111514,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Component as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111784,"byte_end":111788,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(&'a [FormatItem]) -> FormatItem","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111990,"byte_end":111998,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"try_from","qualname":"<&'_ [FormatItem] as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112249,"byte_end":112251,"line_start":124,"line_end":124,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Component) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112426,"byte_end":112428,"line_start":130,"line_end":130,"column_start":8,"column_end":10},"name":"eq","qualname":"<Component as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112559,"byte_end":112561,"line_start":136,"line_end":136,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[FormatItem]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112749,"byte_end":112751,"line_start":142,"line_end":142,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [FormatItem] as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\mod.rs","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":847},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":975},{"krate":0,"index":979},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9842,"byte_end":9872,"line_start":290,"line_end":290,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\mod.rs","byte_start":161336,"byte_end":161369,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178690,"byte_end":178701,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178598,"byte_end":178631,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179321,"byte_end":179327,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":800}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179144,"byte_end":179240,"line_start":29,"line_end":29,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179434,"byte_end":179445,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179338,"byte_end":179422,"line_start":32,"line_end":32,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179717,"byte_end":179723,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":179662,"byte_end":179705,"line_start":41,"line_end":41,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":180147,"byte_end":180158,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"format_into","qualname":"<FormatItem as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":180938,"byte_end":180949,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"format_into","qualname":"<[FormatItem] as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181382,"byte_end":181393,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"format_into","qualname":"<T as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181747,"byte_end":181758,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc2822 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":183711,"byte_end":183722,"line_start":160,"line_end":160,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc3339 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":186931,"byte_end":186942,"line_start":235,"line_end":235,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Iso8601<CONFIG> as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":797},"children":[],"decl_id":{"krate":0,"index":798},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195485,"byte_end":195492,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194311,"byte_end":194411,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194412,"byte_end":194415,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194416,"byte_end":194515,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194516,"byte_end":194611,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194612,"byte_end":194622,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194623,"byte_end":194626,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194627,"byte_end":194725,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194726,"byte_end":194824,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194825,"byte_end":194922,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194923,"byte_end":194946,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194947,"byte_end":194950,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":194951,"byte_end":195048,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195049,"byte_end":195148,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195149,"byte_end":195194,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195195,"byte_end":195198,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195199,"byte_end":195298,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195299,"byte_end":195329,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195385,"byte_end":195405,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195493,"byte_end":195507,"line_start":31,"line_end":31,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195723,"byte_end":195726,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195556,"byte_end":195604,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195609,"byte_end":195612,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195617,"byte_end":195628,"line_start":37,"line_end":37,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195633,"byte_end":195657,"line_start":38,"line_end":38,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195662,"byte_end":195699,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195704,"byte_end":195711,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196238,"byte_end":196245,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195782,"byte_end":195877,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195882,"byte_end":195945,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195950,"byte_end":195953,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195958,"byte_end":195969,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195974,"byte_end":196048,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196053,"byte_end":196075,"line_start":50,"line_end":50,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196080,"byte_end":196113,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196118,"byte_end":196158,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196163,"byte_end":196214,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196219,"byte_end":196226,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196864,"byte_end":196875,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196366,"byte_end":196456,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196461,"byte_end":196552,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196557,"byte_end":196571,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196576,"byte_end":196579,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196584,"byte_end":196595,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196600,"byte_end":196650,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196655,"byte_end":196684,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196689,"byte_end":196759,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196764,"byte_end":196840,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":196845,"byte_end":196852,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197737,"byte_end":197748,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197239,"byte_end":197329,"line_start":82,"line_end":82,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197334,"byte_end":197425,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197430,"byte_end":197444,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197449,"byte_end":197452,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197457,"byte_end":197468,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197473,"byte_end":197523,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197528,"byte_end":197557,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197562,"byte_end":197632,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197637,"byte_end":197713,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":197718,"byte_end":197725,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198354,"byte_end":198364,"line_start":111,"line_end":111,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198148,"byte_end":198192,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198197,"byte_end":198200,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198205,"byte_end":198216,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198221,"byte_end":198245,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198250,"byte_end":198279,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198284,"byte_end":198324,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198329,"byte_end":198336,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198477,"byte_end":198481,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"from","qualname":"<Instant as std::convert::From>::from","value":"fn from(StdInstant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198587,"byte_end":198591,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"from","qualname":"<StdInstant as std::convert::From>::from","value":"fn from(Instant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198706,"byte_end":198709,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199249,"byte_end":199252,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdInstant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199403,"byte_end":199406,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Instant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199551,"byte_end":199554,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199948,"byte_end":199951,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"add","qualname":"<StdInstant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200110,"byte_end":200113,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200358,"byte_end":200361,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200755,"byte_end":200758,"line_start":212,"line_end":212,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200917,"byte_end":200920,"line_start":220,"line_end":220,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201148,"byte_end":201150,"line_start":229,"line_end":229,"column_start":8,"column_end":10},"name":"eq","qualname":"<Instant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdInstant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201266,"byte_end":201268,"line_start":235,"line_end":235,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdInstant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Instant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201383,"byte_end":201394,"line_start":241,"line_end":241,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Instant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdInstant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201532,"byte_end":201543,"line_start":247,"line_end":247,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdInstant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Instant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201674,"byte_end":201680,"line_start":253,"line_end":253,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Instant as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &StdInstant","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201775,"byte_end":201781,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Instant as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &StdInstant","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9930,"byte_end":9956,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\macros.rs","byte_start":201856,"byte_end":201904,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207569,"byte_end":207576,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207586,"byte_end":207594,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207604,"byte_end":207609,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207619,"byte_end":207624,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2651},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207634,"byte_end":207637,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207647,"byte_end":207651,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2657},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207661,"byte_end":207665,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207675,"byte_end":207681,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207691,"byte_end":207700,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207710,"byte_end":207717,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207728,"byte_end":207736,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207747,"byte_end":207755,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":2638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207557,"byte_end":207562,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207401,"byte_end":207424,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207425,"byte_end":207472,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207485,"byte_end":207496,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208712,"byte_end":208720,"line_start":61,"line_end":61,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208540,"byte_end":208567,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208572,"byte_end":208575,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208580,"byte_end":208591,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208596,"byte_end":208618,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208623,"byte_end":208682,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":208687,"byte_end":208694,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209307,"byte_end":209311,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209143,"byte_end":209166,"line_start":78,"line_end":78,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209171,"byte_end":209174,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209179,"byte_end":209190,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209195,"byte_end":209217,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209222,"byte_end":209277,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209282,"byte_end":209289,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209769,"byte_end":209772,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Month as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":210337,"byte_end":210345,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":210935,"byte_end":210939,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(Month) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":211069,"byte_end":211077,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Month as std::convert::TryFrom>::try_from","value":"fn try_from(u8) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212385,"byte_end":212399,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212232,"byte_end":212281,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212282,"byte_end":212285,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212286,"byte_end":212339,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212904,"byte_end":212914,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212680,"byte_end":212716,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212721,"byte_end":212724,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212729,"byte_end":212740,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212745,"byte_end":212796,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212801,"byte_end":212877,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212882,"byte_end":212889,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213425,"byte_end":213432,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213035,"byte_end":213107,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213112,"byte_end":213115,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213120,"byte_end":213131,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213136,"byte_end":213185,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213190,"byte_end":213244,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213249,"byte_end":213314,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213319,"byte_end":213326,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":213331,"byte_end":213354,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215457,"byte_end":215466,"line_start":119,"line_end":119,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214517,"byte_end":214611,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214616,"byte_end":214619,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214624,"byte_end":214635,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214640,"byte_end":214683,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214688,"byte_end":214703,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214708,"byte_end":214746,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214751,"byte_end":214786,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214791,"byte_end":214811,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214816,"byte_end":214829,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214834,"byte_end":214840,"line_start":103,"line_end":103,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214845,"byte_end":214848,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214853,"byte_end":214946,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214951,"byte_end":214954,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":214959,"byte_end":215009,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215014,"byte_end":215062,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215067,"byte_end":215116,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215121,"byte_end":215173,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215178,"byte_end":215211,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215216,"byte_end":215251,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215256,"byte_end":215294,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215299,"byte_end":215306,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215311,"byte_end":215314,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215319,"byte_end":215331,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215336,"byte_end":215339,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method panics if the local date-time in the new offset is outside the supported range.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":215344,"byte_end":215439,"line_start":118,"line_end":118,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218812,"byte_end":218831,"line_start":208,"line_end":208,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":217795,"byte_end":217886,"line_start":181,"line_end":181,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":217891,"byte_end":217939,"line_start":182,"line_end":182,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":217944,"byte_end":217947,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":217952,"byte_end":217963,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":217968,"byte_end":218019,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218024,"byte_end":218039,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218044,"byte_end":218091,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218096,"byte_end":218135,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218140,"byte_end":218146,"line_start":189,"line_end":189,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218151,"byte_end":218166,"line_start":190,"line_end":190,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218171,"byte_end":218230,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218235,"byte_end":218278,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218283,"byte_end":218289,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218294,"byte_end":218301,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218306,"byte_end":218309,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218314,"byte_end":218403,"line_start":196,"line_end":196,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218408,"byte_end":218422,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218427,"byte_end":218430,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218435,"byte_end":218446,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218451,"byte_end":218518,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218523,"byte_end":218569,"line_start":201,"line_end":201,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218574,"byte_end":218589,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218594,"byte_end":218681,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218686,"byte_end":218736,"line_start":204,"line_end":204,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218741,"byte_end":218747,"line_start":205,"line_end":205,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218752,"byte_end":218782,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":218787,"byte_end":218794,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220507,"byte_end":220532,"line_start":249,"line_end":249,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":219939,"byte_end":220031,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220036,"byte_end":220103,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220108,"byte_end":220111,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220116,"byte_end":220127,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220132,"byte_end":220183,"line_start":239,"line_end":239,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220188,"byte_end":220203,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220208,"byte_end":220261,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220266,"byte_end":220305,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220310,"byte_end":220316,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220321,"byte_end":220336,"line_start":244,"line_end":244,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220341,"byte_end":220418,"line_start":245,"line_end":245,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220423,"byte_end":220466,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220471,"byte_end":220477,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":220482,"byte_end":220489,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221419,"byte_end":221425,"line_start":274,"line_end":274,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221143,"byte_end":221169,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221174,"byte_end":221177,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221182,"byte_end":221193,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221198,"byte_end":221241,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221246,"byte_end":221316,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221321,"byte_end":221389,"line_start":272,"line_end":272,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221394,"byte_end":221401,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221787,"byte_end":221801,"line_start":285,"line_end":285,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221478,"byte_end":221548,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221553,"byte_end":221556,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221561,"byte_end":221572,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221577,"byte_end":221610,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221615,"byte_end":221682,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221687,"byte_end":221757,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":221762,"byte_end":221769,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222577,"byte_end":222597,"line_start":306,"line_end":306,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222239,"byte_end":222281,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222286,"byte_end":222289,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222294,"byte_end":222305,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222310,"byte_end":222341,"line_start":299,"line_end":299,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222346,"byte_end":222419,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222424,"byte_end":222439,"line_start":301,"line_end":301,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222444,"byte_end":222505,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222510,"byte_end":222536,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222541,"byte_end":222547,"line_start":304,"line_end":304,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222552,"byte_end":222559,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223105,"byte_end":223109,"line_start":322,"line_end":322,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222707,"byte_end":222749,"line_start":310,"line_end":310,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222754,"byte_end":222757,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222762,"byte_end":222773,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222778,"byte_end":222827,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222832,"byte_end":222905,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222910,"byte_end":222925,"line_start":315,"line_end":315,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222930,"byte_end":222968,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":222973,"byte_end":223008,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223013,"byte_end":223033,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223038,"byte_end":223064,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223069,"byte_end":223075,"line_start":320,"line_end":320,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223080,"byte_end":223087,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223558,"byte_end":223562,"line_start":338,"line_end":338,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223172,"byte_end":223214,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223219,"byte_end":223222,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223227,"byte_end":223238,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223243,"byte_end":223292,"line_start":329,"line_end":329,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223297,"byte_end":223364,"line_start":330,"line_end":330,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223369,"byte_end":223384,"line_start":331,"line_end":331,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223389,"byte_end":223427,"line_start":332,"line_end":332,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223432,"byte_end":223467,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223472,"byte_end":223492,"line_start":334,"line_end":334,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223497,"byte_end":223517,"line_start":335,"line_end":335,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223522,"byte_end":223528,"line_start":336,"line_end":336,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223533,"byte_end":223540,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224093,"byte_end":224097,"line_start":356,"line_end":356,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223653,"byte_end":223703,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223708,"byte_end":223711,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223716,"byte_end":223727,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223732,"byte_end":223775,"line_start":346,"line_end":346,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223780,"byte_end":223840,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223845,"byte_end":223860,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223865,"byte_end":223904,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223909,"byte_end":223944,"line_start":350,"line_end":350,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223949,"byte_end":223969,"line_start":351,"line_end":351,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223974,"byte_end":223987,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":223992,"byte_end":223998,"line_start":353,"line_end":353,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224003,"byte_end":224063,"line_start":354,"line_end":354,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224068,"byte_end":224075,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224576,"byte_end":224581,"line_start":373,"line_end":373,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224151,"byte_end":224202,"line_start":360,"line_end":360,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224207,"byte_end":224210,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224215,"byte_end":224226,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224231,"byte_end":224253,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224258,"byte_end":224301,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224306,"byte_end":224377,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224382,"byte_end":224397,"line_start":366,"line_end":366,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224402,"byte_end":224441,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224446,"byte_end":224481,"line_start":368,"line_end":368,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224486,"byte_end":224507,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224512,"byte_end":224535,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224540,"byte_end":224546,"line_start":371,"line_end":371,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224551,"byte_end":224558,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225077,"byte_end":225080,"line_start":391,"line_end":391,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224638,"byte_end":224687,"line_start":377,"line_end":377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224692,"byte_end":224695,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224700,"byte_end":224760,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224765,"byte_end":224768,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224773,"byte_end":224784,"line_start":381,"line_end":381,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224789,"byte_end":224832,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224837,"byte_end":224893,"line_start":383,"line_end":383,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224898,"byte_end":224913,"line_start":384,"line_end":384,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224918,"byte_end":224957,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":224962,"byte_end":224997,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225002,"byte_end":225021,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225026,"byte_end":225036,"line_start":388,"line_end":388,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225041,"byte_end":225047,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225052,"byte_end":225059,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225592,"byte_end":225599,"line_start":409,"line_end":409,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225132,"byte_end":225193,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225198,"byte_end":225201,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225206,"byte_end":225267,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225272,"byte_end":225275,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225280,"byte_end":225291,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225296,"byte_end":225339,"line_start":400,"line_end":400,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225344,"byte_end":225404,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225409,"byte_end":225424,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225429,"byte_end":225468,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225473,"byte_end":225508,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225513,"byte_end":225536,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225541,"byte_end":225551,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225556,"byte_end":225562,"line_start":407,"line_end":407,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225567,"byte_end":225574,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226148,"byte_end":226156,"line_start":424,"line_end":424,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225656,"byte_end":225717,"line_start":413,"line_end":413,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225722,"byte_end":225725,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225730,"byte_end":225790,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225795,"byte_end":225798,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225803,"byte_end":225814,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225819,"byte_end":225852,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225857,"byte_end":225918,"line_start":419,"line_end":419,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225923,"byte_end":225984,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":225989,"byte_end":226051,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226056,"byte_end":226118,"line_start":422,"line_end":422,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226123,"byte_end":226130,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226743,"byte_end":226760,"line_start":439,"line_end":439,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226213,"byte_end":226277,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226282,"byte_end":226285,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226290,"byte_end":226350,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226355,"byte_end":226358,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226363,"byte_end":226374,"line_start":432,"line_end":432,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226379,"byte_end":226412,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226417,"byte_end":226487,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226492,"byte_end":226562,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226567,"byte_end":226638,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226643,"byte_end":226713,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226718,"byte_end":226725,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227356,"byte_end":227373,"line_start":454,"line_end":454,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226826,"byte_end":226890,"line_start":443,"line_end":443,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226895,"byte_end":226898,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226903,"byte_end":226963,"line_start":445,"line_end":445,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226968,"byte_end":226971,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226976,"byte_end":226987,"line_start":447,"line_end":447,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":226992,"byte_end":227025,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227030,"byte_end":227100,"line_start":449,"line_end":449,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227105,"byte_end":227175,"line_start":450,"line_end":450,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227180,"byte_end":227251,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227256,"byte_end":227326,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227331,"byte_end":227338,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227705,"byte_end":227721,"line_start":467,"line_end":467,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227439,"byte_end":227472,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227477,"byte_end":227480,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227485,"byte_end":227496,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227501,"byte_end":227543,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227548,"byte_end":227563,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227568,"byte_end":227626,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227631,"byte_end":227664,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227669,"byte_end":227675,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227680,"byte_end":227687,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228047,"byte_end":228062,"line_start":480,"line_end":480,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227800,"byte_end":227840,"line_start":471,"line_end":471,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227845,"byte_end":227848,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227853,"byte_end":227864,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227869,"byte_end":227902,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227907,"byte_end":227922,"line_start":475,"line_end":475,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227927,"byte_end":227984,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":227989,"byte_end":228006,"line_start":477,"line_end":477,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228011,"byte_end":228017,"line_start":478,"line_end":478,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228022,"byte_end":228029,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228921,"byte_end":228937,"line_start":509,"line_end":509,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228134,"byte_end":228186,"line_start":484,"line_end":484,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228191,"byte_end":228194,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228199,"byte_end":228210,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228215,"byte_end":228262,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228267,"byte_end":228282,"line_start":488,"line_end":488,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228287,"byte_end":228345,"line_start":489,"line_end":489,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228350,"byte_end":228376,"line_start":490,"line_end":490,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228381,"byte_end":228387,"line_start":491,"line_end":491,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228392,"byte_end":228407,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228412,"byte_end":228470,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228475,"byte_end":228501,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228506,"byte_end":228512,"line_start":495,"line_end":495,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228517,"byte_end":228532,"line_start":496,"line_end":496,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228537,"byte_end":228595,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228600,"byte_end":228628,"line_start":498,"line_end":498,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228633,"byte_end":228639,"line_start":499,"line_end":499,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228644,"byte_end":228659,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228664,"byte_end":228722,"line_start":501,"line_end":501,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228727,"byte_end":228755,"line_start":502,"line_end":502,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228760,"byte_end":228766,"line_start":503,"line_end":503,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228771,"byte_end":228786,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228791,"byte_end":228849,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228854,"byte_end":228880,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228885,"byte_end":228891,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":228896,"byte_end":228903,"line_start":508,"line_end":508,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229388,"byte_end":229395,"line_start":521,"line_end":521,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229018,"byte_end":229071,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229076,"byte_end":229079,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229084,"byte_end":229095,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229100,"byte_end":229147,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229152,"byte_end":229218,"line_start":517,"line_end":517,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229223,"byte_end":229288,"line_start":518,"line_end":518,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229293,"byte_end":229358,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229363,"byte_end":229370,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230158,"byte_end":230171,"line_start":537,"line_end":537,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229456,"byte_end":229549,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229554,"byte_end":229557,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229562,"byte_end":229656,"line_start":527,"line_end":527,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229661,"byte_end":229757,"line_start":528,"line_end":528,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229762,"byte_end":229765,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229770,"byte_end":229781,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229786,"byte_end":229819,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229824,"byte_end":229891,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229896,"byte_end":229970,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":229975,"byte_end":230049,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230054,"byte_end":230128,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230133,"byte_end":230140,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230581,"byte_end":230587,"line_start":550,"line_end":550,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230292,"byte_end":230335,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230340,"byte_end":230343,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230348,"byte_end":230359,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230364,"byte_end":230397,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230402,"byte_end":230472,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230477,"byte_end":230551,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230556,"byte_end":230563,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231046,"byte_end":231058,"line_start":567,"line_end":567,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230652,"byte_end":230708,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230713,"byte_end":230716,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230721,"byte_end":230732,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230737,"byte_end":230770,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230775,"byte_end":230790,"line_start":558,"line_end":558,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230795,"byte_end":230852,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230857,"byte_end":230877,"line_start":560,"line_end":560,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230882,"byte_end":230888,"line_start":561,"line_end":561,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230893,"byte_end":230908,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230913,"byte_end":230975,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":230980,"byte_end":231005,"line_start":564,"line_end":564,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231010,"byte_end":231016,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231021,"byte_end":231028,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231536,"byte_end":231548,"line_start":584,"line_end":584,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231134,"byte_end":231190,"line_start":571,"line_end":571,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231195,"byte_end":231198,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231203,"byte_end":231214,"line_start":573,"line_end":573,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231219,"byte_end":231252,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231257,"byte_end":231272,"line_start":575,"line_end":575,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231277,"byte_end":231334,"line_start":576,"line_end":576,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231339,"byte_end":231359,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231364,"byte_end":231370,"line_start":578,"line_end":578,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231375,"byte_end":231390,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231395,"byte_end":231461,"line_start":580,"line_end":580,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231466,"byte_end":231495,"line_start":581,"line_end":581,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231500,"byte_end":231506,"line_start":582,"line_end":582,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231511,"byte_end":231518,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232031,"byte_end":232042,"line_start":601,"line_end":601,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231624,"byte_end":231679,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231684,"byte_end":231687,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231692,"byte_end":231703,"line_start":590,"line_end":590,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231708,"byte_end":231741,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231746,"byte_end":231761,"line_start":592,"line_end":592,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231766,"byte_end":231822,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231827,"byte_end":231847,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231852,"byte_end":231858,"line_start":595,"line_end":595,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231863,"byte_end":231878,"line_start":596,"line_end":596,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231883,"byte_end":231952,"line_start":597,"line_end":597,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231957,"byte_end":231990,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":231995,"byte_end":232001,"line_start":599,"line_end":599,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232006,"byte_end":232013,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232556,"byte_end":232560,"line_start":619,"line_end":619,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232117,"byte_end":232161,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232166,"byte_end":232169,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232174,"byte_end":232233,"line_start":607,"line_end":607,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232238,"byte_end":232241,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232246,"byte_end":232257,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232262,"byte_end":232305,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232310,"byte_end":232367,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232372,"byte_end":232387,"line_start":612,"line_end":612,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232392,"byte_end":232434,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232439,"byte_end":232474,"line_start":614,"line_end":614,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232479,"byte_end":232499,"line_start":615,"line_end":615,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232504,"byte_end":232515,"line_start":616,"line_end":616,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232520,"byte_end":232526,"line_start":617,"line_end":617,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232531,"byte_end":232538,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233071,"byte_end":233077,"line_start":637,"line_end":637,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232613,"byte_end":232669,"line_start":623,"line_end":623,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232674,"byte_end":232677,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232682,"byte_end":232741,"line_start":625,"line_end":625,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232746,"byte_end":232749,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232754,"byte_end":232765,"line_start":627,"line_end":627,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232770,"byte_end":232813,"line_start":628,"line_end":628,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232818,"byte_end":232877,"line_start":629,"line_end":629,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232882,"byte_end":232897,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232902,"byte_end":232944,"line_start":631,"line_end":631,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232949,"byte_end":232987,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":232992,"byte_end":233014,"line_start":633,"line_end":633,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233019,"byte_end":233030,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233035,"byte_end":233041,"line_start":635,"line_end":635,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233046,"byte_end":233053,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233595,"byte_end":233601,"line_start":655,"line_end":655,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233132,"byte_end":233190,"line_start":641,"line_end":641,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233195,"byte_end":233198,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233203,"byte_end":233262,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233267,"byte_end":233270,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233275,"byte_end":233286,"line_start":645,"line_end":645,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233291,"byte_end":233334,"line_start":646,"line_end":646,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233339,"byte_end":233398,"line_start":647,"line_end":647,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233403,"byte_end":233418,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233423,"byte_end":233465,"line_start":649,"line_end":649,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233470,"byte_end":233511,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233516,"byte_end":233538,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233543,"byte_end":233554,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233559,"byte_end":233565,"line_start":653,"line_end":653,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233570,"byte_end":233577,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234179,"byte_end":234190,"line_start":671,"line_end":671,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233800,"byte_end":233864,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233869,"byte_end":233872,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233877,"byte_end":233939,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233944,"byte_end":233947,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233952,"byte_end":233963,"line_start":666,"line_end":666,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":233968,"byte_end":234001,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234006,"byte_end":234070,"line_start":668,"line_end":668,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234075,"byte_end":234149,"line_start":669,"line_end":669,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234154,"byte_end":234161,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234677,"byte_end":234688,"line_start":687,"line_end":687,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234251,"byte_end":234315,"line_start":675,"line_end":675,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234320,"byte_end":234323,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234328,"byte_end":234394,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234399,"byte_end":234402,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234407,"byte_end":234418,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234423,"byte_end":234456,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234461,"byte_end":234525,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234530,"byte_end":234545,"line_start":682,"line_end":682,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234550,"byte_end":234615,"line_start":683,"line_end":683,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234620,"byte_end":234636,"line_start":684,"line_end":684,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234641,"byte_end":234647,"line_start":685,"line_end":685,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234652,"byte_end":234659,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235184,"byte_end":235194,"line_start":703,"line_end":703,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234749,"byte_end":234812,"line_start":691,"line_end":691,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234817,"byte_end":234820,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234825,"byte_end":234895,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234900,"byte_end":234903,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234908,"byte_end":234919,"line_start":695,"line_end":695,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234924,"byte_end":234957,"line_start":696,"line_end":696,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":234962,"byte_end":235025,"line_start":697,"line_end":697,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235030,"byte_end":235045,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235050,"byte_end":235118,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235123,"byte_end":235143,"line_start":700,"line_end":700,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235148,"byte_end":235154,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235159,"byte_end":235166,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236005,"byte_end":236016,"line_start":726,"line_end":726,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235343,"byte_end":235416,"line_start":710,"line_end":710,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235421,"byte_end":235424,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235429,"byte_end":235436,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235441,"byte_end":235488,"line_start":713,"line_end":713,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235493,"byte_end":235536,"line_start":714,"line_end":714,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235541,"byte_end":235609,"line_start":715,"line_end":715,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235614,"byte_end":235670,"line_start":716,"line_end":716,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235675,"byte_end":235678,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235683,"byte_end":235751,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235756,"byte_end":235809,"line_start":719,"line_end":719,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235814,"byte_end":235817,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235822,"byte_end":235837,"line_start":721,"line_end":721,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235842,"byte_end":235910,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235915,"byte_end":235964,"line_start":723,"line_end":723,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235969,"byte_end":235975,"line_start":724,"line_end":724,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":235980,"byte_end":235987,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236833,"byte_end":236844,"line_start":746,"line_end":746,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236171,"byte_end":236244,"line_start":730,"line_end":730,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236249,"byte_end":236252,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236257,"byte_end":236264,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236269,"byte_end":236316,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236321,"byte_end":236364,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236369,"byte_end":236437,"line_start":735,"line_end":735,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236442,"byte_end":236495,"line_start":736,"line_end":736,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236500,"byte_end":236503,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236508,"byte_end":236576,"line_start":738,"line_end":738,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236581,"byte_end":236637,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236642,"byte_end":236645,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236650,"byte_end":236665,"line_start":741,"line_end":741,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236670,"byte_end":236738,"line_start":742,"line_end":742,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236743,"byte_end":236792,"line_start":743,"line_end":743,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236797,"byte_end":236803,"line_start":744,"line_end":744,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":236808,"byte_end":236815,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237786,"byte_end":237800,"line_start":772,"line_end":772,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237073,"byte_end":237134,"line_start":752,"line_end":752,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237139,"byte_end":237142,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237147,"byte_end":237154,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237159,"byte_end":237198,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237203,"byte_end":237236,"line_start":756,"line_end":756,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237241,"byte_end":237256,"line_start":757,"line_end":757,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237261,"byte_end":237335,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237340,"byte_end":237385,"line_start":759,"line_end":759,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237390,"byte_end":237396,"line_start":760,"line_end":760,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237401,"byte_end":237404,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237409,"byte_end":237424,"line_start":762,"line_end":762,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237429,"byte_end":237516,"line_start":763,"line_end":763,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237521,"byte_end":237582,"line_start":764,"line_end":764,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237587,"byte_end":237593,"line_start":765,"line_end":765,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237598,"byte_end":237601,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237606,"byte_end":237621,"line_start":767,"line_end":767,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237626,"byte_end":237697,"line_start":768,"line_end":768,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237702,"byte_end":237745,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237750,"byte_end":237756,"line_start":770,"line_end":770,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":237761,"byte_end":237768,"line_start":771,"line_end":771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238888,"byte_end":238902,"line_start":803,"line_end":803,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238175,"byte_end":238236,"line_start":783,"line_end":783,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238241,"byte_end":238244,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238249,"byte_end":238256,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238261,"byte_end":238300,"line_start":786,"line_end":786,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238305,"byte_end":238338,"line_start":787,"line_end":787,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238343,"byte_end":238358,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238363,"byte_end":238434,"line_start":789,"line_end":789,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238439,"byte_end":238484,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238489,"byte_end":238495,"line_start":791,"line_end":791,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238500,"byte_end":238503,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238508,"byte_end":238523,"line_start":793,"line_end":793,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238528,"byte_end":238618,"line_start":794,"line_end":794,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238623,"byte_end":238684,"line_start":795,"line_end":795,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238689,"byte_end":238695,"line_start":796,"line_end":796,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238700,"byte_end":238703,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238708,"byte_end":238723,"line_start":798,"line_end":798,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238728,"byte_end":238799,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238804,"byte_end":238847,"line_start":800,"line_end":800,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238852,"byte_end":238858,"line_start":801,"line_end":801,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":238863,"byte_end":238870,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240151,"byte_end":240163,"line_start":838,"line_end":838,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239419,"byte_end":239505,"line_start":819,"line_end":819,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239510,"byte_end":239539,"line_start":820,"line_end":820,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239544,"byte_end":239547,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239552,"byte_end":239563,"line_start":822,"line_end":822,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239568,"byte_end":239609,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239614,"byte_end":239629,"line_start":824,"line_end":824,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239634,"byte_end":239700,"line_start":825,"line_end":825,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239705,"byte_end":239744,"line_start":826,"line_end":826,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239749,"byte_end":239755,"line_start":827,"line_end":827,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239760,"byte_end":239775,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239780,"byte_end":239845,"line_start":829,"line_end":829,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239850,"byte_end":239887,"line_start":830,"line_end":830,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239892,"byte_end":239898,"line_start":831,"line_end":831,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239903,"byte_end":239918,"line_start":832,"line_end":832,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239923,"byte_end":239988,"line_start":833,"line_end":833,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239993,"byte_end":240031,"line_start":834,"line_end":834,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240036,"byte_end":240042,"line_start":835,"line_end":835,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240047,"byte_end":240054,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240059,"byte_end":240133,"line_start":837,"line_end":837,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240902,"byte_end":240914,"line_start":859,"line_end":859,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240303,"byte_end":240389,"line_start":844,"line_end":844,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240394,"byte_end":240423,"line_start":845,"line_end":845,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240428,"byte_end":240431,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240436,"byte_end":240447,"line_start":847,"line_end":847,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240452,"byte_end":240493,"line_start":848,"line_end":848,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240498,"byte_end":240513,"line_start":849,"line_end":849,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240518,"byte_end":240590,"line_start":850,"line_end":850,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240595,"byte_end":240634,"line_start":851,"line_end":851,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240639,"byte_end":240645,"line_start":852,"line_end":852,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240650,"byte_end":240665,"line_start":853,"line_end":853,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240670,"byte_end":240740,"line_start":854,"line_end":854,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240745,"byte_end":240782,"line_start":855,"line_end":855,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240787,"byte_end":240793,"line_start":856,"line_end":856,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240798,"byte_end":240805,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":240810,"byte_end":240884,"line_start":858,"line_end":858,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241679,"byte_end":241696,"line_start":880,"line_end":880,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241054,"byte_end":241141,"line_start":865,"line_end":865,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241146,"byte_end":241178,"line_start":866,"line_end":866,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241183,"byte_end":241186,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241191,"byte_end":241202,"line_start":868,"line_end":868,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241207,"byte_end":241240,"line_start":869,"line_end":869,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241245,"byte_end":241260,"line_start":870,"line_end":870,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241265,"byte_end":241352,"line_start":871,"line_end":871,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241357,"byte_end":241396,"line_start":872,"line_end":872,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241401,"byte_end":241407,"line_start":873,"line_end":873,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241412,"byte_end":241427,"line_start":874,"line_end":874,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241432,"byte_end":241517,"line_start":875,"line_end":875,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241522,"byte_end":241559,"line_start":876,"line_end":876,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241564,"byte_end":241570,"line_start":877,"line_end":877,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241575,"byte_end":241582,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241587,"byte_end":241661,"line_start":879,"line_end":879,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242195,"byte_end":242209,"line_start":894,"line_end":894,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241799,"byte_end":241869,"line_start":884,"line_end":884,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241874,"byte_end":241877,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241882,"byte_end":241893,"line_start":886,"line_end":886,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241898,"byte_end":241941,"line_start":887,"line_end":887,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241946,"byte_end":241961,"line_start":888,"line_end":888,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":241966,"byte_end":242033,"line_start":889,"line_end":889,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242038,"byte_end":242075,"line_start":890,"line_end":890,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242080,"byte_end":242086,"line_start":891,"line_end":891,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242091,"byte_end":242098,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242103,"byte_end":242177,"line_start":893,"line_end":893,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242863,"byte_end":242875,"line_start":909,"line_end":909,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242306,"byte_end":242364,"line_start":898,"line_end":898,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242369,"byte_end":242372,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242377,"byte_end":242388,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242393,"byte_end":242426,"line_start":901,"line_end":901,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242431,"byte_end":242446,"line_start":902,"line_end":902,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242451,"byte_end":242514,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242519,"byte_end":242566,"line_start":904,"line_end":904,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242571,"byte_end":242577,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242582,"byte_end":242706,"line_start":906,"line_end":906,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242711,"byte_end":242833,"line_start":907,"line_end":907,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":242838,"byte_end":242845,"line_start":908,"line_end":908,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243480,"byte_end":243493,"line_start":924,"line_end":924,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243035,"byte_end":243069,"line_start":913,"line_end":913,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243074,"byte_end":243077,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243082,"byte_end":243093,"line_start":915,"line_end":915,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243098,"byte_end":243131,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243136,"byte_end":243158,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243163,"byte_end":243178,"line_start":918,"line_end":918,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243183,"byte_end":243257,"line_start":919,"line_end":919,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243262,"byte_end":243309,"line_start":920,"line_end":920,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243314,"byte_end":243320,"line_start":921,"line_end":921,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243325,"byte_end":243450,"line_start":922,"line_end":922,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243455,"byte_end":243462,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244147,"byte_end":244158,"line_start":939,"line_end":939,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243658,"byte_end":243691,"line_start":928,"line_end":928,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243696,"byte_end":243699,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243704,"byte_end":243715,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243720,"byte_end":243753,"line_start":931,"line_end":931,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243758,"byte_end":243773,"line_start":932,"line_end":932,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243778,"byte_end":243837,"line_start":933,"line_end":933,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243842,"byte_end":243889,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243894,"byte_end":243900,"line_start":935,"line_end":935,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":243905,"byte_end":244002,"line_start":936,"line_end":936,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244007,"byte_end":244117,"line_start":937,"line_end":937,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244122,"byte_end":244129,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244731,"byte_end":244743,"line_start":953,"line_end":953,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244314,"byte_end":244341,"line_start":943,"line_end":943,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244346,"byte_end":244349,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244354,"byte_end":244365,"line_start":945,"line_end":945,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244370,"byte_end":244403,"line_start":946,"line_end":946,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244408,"byte_end":244423,"line_start":947,"line_end":947,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244428,"byte_end":244503,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244508,"byte_end":244570,"line_start":949,"line_end":949,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244575,"byte_end":244581,"line_start":950,"line_end":950,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244586,"byte_end":244701,"line_start":951,"line_end":951,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244706,"byte_end":244713,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245338,"byte_end":245352,"line_start":967,"line_end":967,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244902,"byte_end":244942,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244947,"byte_end":244950,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244955,"byte_end":244966,"line_start":959,"line_end":959,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":244971,"byte_end":245004,"line_start":960,"line_end":960,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245009,"byte_end":245024,"line_start":961,"line_end":961,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245029,"byte_end":245106,"line_start":962,"line_end":962,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245111,"byte_end":245173,"line_start":963,"line_end":963,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245178,"byte_end":245184,"line_start":964,"line_end":964,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245189,"byte_end":245308,"line_start":965,"line_end":965,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245313,"byte_end":245320,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245955,"byte_end":245969,"line_start":981,"line_end":981,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245517,"byte_end":245559,"line_start":971,"line_end":971,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245564,"byte_end":245567,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245572,"byte_end":245583,"line_start":973,"line_end":973,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245588,"byte_end":245621,"line_start":974,"line_end":974,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245626,"byte_end":245641,"line_start":975,"line_end":975,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245646,"byte_end":245723,"line_start":976,"line_end":976,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245728,"byte_end":245790,"line_start":977,"line_end":977,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245795,"byte_end":245801,"line_start":978,"line_end":978,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245806,"byte_end":245925,"line_start":979,"line_end":979,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":245930,"byte_end":245937,"line_start":980,"line_end":980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246590,"byte_end":246609,"line_start":995,"line_end":995,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246134,"byte_end":246181,"line_start":985,"line_end":985,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246186,"byte_end":246189,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246194,"byte_end":246205,"line_start":987,"line_end":987,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246210,"byte_end":246243,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246248,"byte_end":246263,"line_start":989,"line_end":989,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246268,"byte_end":246350,"line_start":990,"line_end":990,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246355,"byte_end":246409,"line_start":991,"line_end":991,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246414,"byte_end":246420,"line_start":992,"line_end":992,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246425,"byte_end":246560,"line_start":993,"line_end":993,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246565,"byte_end":246572,"line_start":994,"line_end":994,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247325,"byte_end":247344,"line_start":1015,"line_end":1015,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246853,"byte_end":246900,"line_start":1005,"line_end":1005,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246905,"byte_end":246908,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246913,"byte_end":246924,"line_start":1007,"line_end":1007,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246929,"byte_end":246962,"line_start":1008,"line_end":1008,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246967,"byte_end":246982,"line_start":1009,"line_end":1009,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":246987,"byte_end":247073,"line_start":1010,"line_end":1010,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247078,"byte_end":247136,"line_start":1011,"line_end":1011,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247141,"byte_end":247147,"line_start":1012,"line_end":1012,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247152,"byte_end":247295,"line_start":1013,"line_end":1013,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247300,"byte_end":247307,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248072,"byte_end":248090,"line_start":1035,"line_end":1035,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247588,"byte_end":247634,"line_start":1025,"line_end":1025,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247639,"byte_end":247642,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247647,"byte_end":247658,"line_start":1027,"line_end":1027,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247663,"byte_end":247696,"line_start":1028,"line_end":1028,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247701,"byte_end":247716,"line_start":1029,"line_end":1029,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247721,"byte_end":247810,"line_start":1030,"line_end":1030,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247815,"byte_end":247877,"line_start":1031,"line_end":1031,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247882,"byte_end":247888,"line_start":1032,"line_end":1032,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":247893,"byte_end":248042,"line_start":1033,"line_end":1033,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248047,"byte_end":248054,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248539,"byte_end":248550,"line_start":1049,"line_end":1049,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248420,"byte_end":248478,"line_start":1047,"line_end":1047,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248483,"byte_end":248527,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249448,"byte_end":249454,"line_start":1077,"line_end":1077,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248851,"byte_end":248909,"line_start":1062,"line_end":1062,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248914,"byte_end":248958,"line_start":1063,"line_end":1063,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248963,"byte_end":248966,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248971,"byte_end":248982,"line_start":1065,"line_end":1065,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248987,"byte_end":249042,"line_start":1066,"line_end":1066,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249047,"byte_end":249090,"line_start":1067,"line_end":1067,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249095,"byte_end":249164,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249169,"byte_end":249231,"line_start":1069,"line_end":1069,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249236,"byte_end":249243,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249248,"byte_end":249263,"line_start":1071,"line_end":1071,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249268,"byte_end":249334,"line_start":1072,"line_end":1072,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249339,"byte_end":249378,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249383,"byte_end":249389,"line_start":1074,"line_end":1074,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249394,"byte_end":249424,"line_start":1075,"line_end":1075,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":249429,"byte_end":249436,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251474,"byte_end":251477,"line_start":1131,"line_end":1131,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OffsetDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251708,"byte_end":251710,"line_start":1139,"line_end":1139,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251873,"byte_end":251884,"line_start":1145,"line_end":1145,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252000,"byte_end":252003,"line_start":1151,"line_end":1151,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OffsetDateTime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252180,"byte_end":252184,"line_start":1158,"line_end":1158,"column_start":8,"column_end":12},"name":"hash","qualname":"<OffsetDateTime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10120},"children":[],"decl_id":{"krate":2,"index":10121},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252560,"byte_end":252563,"line_start":1171,"line_end":1171,"column_start":8,"column_end":11},"name":"add","qualname":"<OffsetDateTime as std::ops::Add>::add","value":"fn add(Self, T) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252859,"byte_end":252862,"line_start":1184,"line_end":1184,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, T) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253091,"byte_end":253094,"line_start":1194,"line_end":1194,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253416,"byte_end":253419,"line_start":1205,"line_end":1205,"column_start":8,"column_end":11},"name":"add","qualname":"<SystemTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253886,"byte_end":253889,"line_start":1223,"line_end":1223,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254165,"byte_end":254168,"line_start":1234,"line_end":1234,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, SystemTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254352,"byte_end":254355,"line_start":1243,"line_end":1243,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, OffsetDateTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254530,"byte_end":254532,"line_start":1250,"line_end":1250,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &SystemTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254690,"byte_end":254692,"line_start":1257,"line_end":1257,"column_start":8,"column_end":10},"name":"eq","qualname":"<SystemTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OffsetDateTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254865,"byte_end":254876,"line_start":1264,"line_end":1264,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &SystemTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255061,"byte_end":255072,"line_start":1271,"line_end":1271,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<SystemTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &OffsetDateTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255264,"byte_end":255268,"line_start":1278,"line_end":1278,"column_start":8,"column_end":12},"name":"from","qualname":"<OffsetDateTime as std::convert::From>::from","value":"fn from(SystemTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255646,"byte_end":255650,"line_start":1289,"line_end":1289,"column_start":8,"column_end":12},"name":"from","qualname":"<SystemTime as std::convert::From>::from","value":"fn from(OffsetDateTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257507,"byte_end":257524,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257400,"byte_end":257427,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258295,"byte_end":258298,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257717,"byte_end":257787,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257792,"byte_end":257795,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257800,"byte_end":257877,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257882,"byte_end":257885,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257890,"byte_end":257968,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257973,"byte_end":258052,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258057,"byte_end":258060,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258065,"byte_end":258076,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258081,"byte_end":258135,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258140,"byte_end":258189,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258194,"byte_end":258268,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258273,"byte_end":258280,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258956,"byte_end":258959,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258345,"byte_end":258414,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258419,"byte_end":258422,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258427,"byte_end":258504,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258509,"byte_end":258512,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258517,"byte_end":258604,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258609,"byte_end":258697,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258702,"byte_end":258705,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258710,"byte_end":258721,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258726,"byte_end":258780,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258785,"byte_end":258834,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258839,"byte_end":258929,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":258934,"byte_end":258941,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259349,"byte_end":259352,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259006,"byte_end":259083,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259088,"byte_end":259091,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259096,"byte_end":259107,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259112,"byte_end":259180,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259185,"byte_end":259200,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259205,"byte_end":259268,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259273,"byte_end":259308,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259313,"byte_end":259319,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259324,"byte_end":259331,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259691,"byte_end":259695,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259459,"byte_end":259517,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259522,"byte_end":259525,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259530,"byte_end":259541,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259546,"byte_end":259587,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259592,"byte_end":259661,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259666,"byte_end":259673,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259955,"byte_end":259959,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259741,"byte_end":259799,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259804,"byte_end":259807,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259812,"byte_end":259823,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259828,"byte_end":259869,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":259874,"byte_end":259937,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260372,"byte_end":260376,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260068,"byte_end":260097,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260102,"byte_end":260105,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260110,"byte_end":260121,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260126,"byte_end":260159,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260164,"byte_end":260220,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260225,"byte_end":260281,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260286,"byte_end":260342,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260347,"byte_end":260354,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260704,"byte_end":260709,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260428,"byte_end":260458,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260463,"byte_end":260466,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260471,"byte_end":260482,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260487,"byte_end":260529,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260534,"byte_end":260601,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260606,"byte_end":260674,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260679,"byte_end":260686,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261072,"byte_end":261075,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260764,"byte_end":260792,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260797,"byte_end":260800,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260805,"byte_end":260865,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260870,"byte_end":260873,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260878,"byte_end":260889,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260894,"byte_end":260927,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260932,"byte_end":260984,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":260989,"byte_end":261042,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261047,"byte_end":261054,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261472,"byte_end":261479,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261125,"byte_end":261153,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261158,"byte_end":261161,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261166,"byte_end":261256,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261261,"byte_end":261264,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261269,"byte_end":261280,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261285,"byte_end":261318,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261323,"byte_end":261379,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261384,"byte_end":261442,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261447,"byte_end":261454,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262040,"byte_end":262048,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261534,"byte_end":261562,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261567,"byte_end":261570,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261575,"byte_end":261635,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261640,"byte_end":261643,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261648,"byte_end":261659,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261664,"byte_end":261697,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261702,"byte_end":261759,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261764,"byte_end":261822,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261827,"byte_end":261884,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261889,"byte_end":261947,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":261952,"byte_end":262010,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262015,"byte_end":262022,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262617,"byte_end":262634,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262103,"byte_end":262167,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262172,"byte_end":262175,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262180,"byte_end":262240,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262245,"byte_end":262248,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262253,"byte_end":262264,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262269,"byte_end":262302,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262307,"byte_end":262373,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262378,"byte_end":262444,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262449,"byte_end":262516,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262521,"byte_end":262587,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262592,"byte_end":262599,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263212,"byte_end":263229,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262698,"byte_end":262762,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262767,"byte_end":262770,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262775,"byte_end":262835,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262840,"byte_end":262843,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262848,"byte_end":262859,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262864,"byte_end":262897,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262902,"byte_end":262968,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":262973,"byte_end":263039,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263044,"byte_end":263111,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263116,"byte_end":263182,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263187,"byte_end":263194,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263555,"byte_end":263571,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263293,"byte_end":263326,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263331,"byte_end":263334,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263339,"byte_end":263350,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263355,"byte_end":263397,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263402,"byte_end":263417,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263422,"byte_end":263476,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263481,"byte_end":263514,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263519,"byte_end":263525,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263530,"byte_end":263537,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263857,"byte_end":263872,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263648,"byte_end":263688,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263693,"byte_end":263696,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263701,"byte_end":263712,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263717,"byte_end":263750,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263755,"byte_end":263827,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263832,"byte_end":263839,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264709,"byte_end":264725,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263942,"byte_end":263994,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":263999,"byte_end":264002,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264007,"byte_end":264018,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264023,"byte_end":264070,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264075,"byte_end":264090,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264095,"byte_end":264149,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264154,"byte_end":264180,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264185,"byte_end":264191,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264196,"byte_end":264211,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264216,"byte_end":264270,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264275,"byte_end":264301,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264306,"byte_end":264312,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264317,"byte_end":264332,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264337,"byte_end":264391,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264396,"byte_end":264424,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264429,"byte_end":264435,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264440,"byte_end":264455,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264460,"byte_end":264514,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264519,"byte_end":264547,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264552,"byte_end":264558,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264563,"byte_end":264578,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264583,"byte_end":264637,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264642,"byte_end":264668,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264673,"byte_end":264679,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264684,"byte_end":264691,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265731,"byte_end":265738,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264804,"byte_end":264824,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264829,"byte_end":264832,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264837,"byte_end":264848,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264853,"byte_end":264900,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264905,"byte_end":264967,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":264972,"byte_end":265033,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265038,"byte_end":265099,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265104,"byte_end":265165,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265170,"byte_end":265234,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265239,"byte_end":265302,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265307,"byte_end":265368,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265373,"byte_end":265436,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265441,"byte_end":265502,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265507,"byte_end":265569,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265574,"byte_end":265635,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265640,"byte_end":265701,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265706,"byte_end":265713,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266483,"byte_end":266496,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265797,"byte_end":265890,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265895,"byte_end":265898,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":265903,"byte_end":265997,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266002,"byte_end":266098,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266103,"byte_end":266106,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266111,"byte_end":266122,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266127,"byte_end":266160,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266165,"byte_end":266228,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266233,"byte_end":266303,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266308,"byte_end":266378,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266383,"byte_end":266453,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266458,"byte_end":266465,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266896,"byte_end":266902,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266615,"byte_end":266658,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266663,"byte_end":266666,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266671,"byte_end":266682,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266687,"byte_end":266720,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266725,"byte_end":266791,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266796,"byte_end":266866,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266871,"byte_end":266878,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267317,"byte_end":267329,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":266965,"byte_end":267021,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267026,"byte_end":267029,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267034,"byte_end":267045,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267050,"byte_end":267083,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267088,"byte_end":267163,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267168,"byte_end":267183,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267188,"byte_end":267246,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267251,"byte_end":267276,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267281,"byte_end":267287,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267292,"byte_end":267299,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267763,"byte_end":267775,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267403,"byte_end":267459,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267464,"byte_end":267467,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267472,"byte_end":267483,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267488,"byte_end":267521,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267526,"byte_end":267601,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267606,"byte_end":267621,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267626,"byte_end":267688,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267693,"byte_end":267722,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267727,"byte_end":267733,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267738,"byte_end":267745,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268214,"byte_end":268225,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267849,"byte_end":267904,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267909,"byte_end":267912,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267917,"byte_end":267928,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267933,"byte_end":267966,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":267971,"byte_end":268045,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268050,"byte_end":268065,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268070,"byte_end":268135,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268140,"byte_end":268173,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268178,"byte_end":268184,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268189,"byte_end":268196,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268606,"byte_end":268610,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268298,"byte_end":268321,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268326,"byte_end":268329,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268334,"byte_end":268393,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268398,"byte_end":268401,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268406,"byte_end":268417,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268422,"byte_end":268455,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268460,"byte_end":268513,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268518,"byte_end":268576,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268581,"byte_end":268588,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268985,"byte_end":268991,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268661,"byte_end":268696,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268701,"byte_end":268704,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268709,"byte_end":268768,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268773,"byte_end":268776,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268781,"byte_end":268792,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268797,"byte_end":268830,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268835,"byte_end":268890,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268895,"byte_end":268955,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":268960,"byte_end":268967,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269370,"byte_end":269376,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269044,"byte_end":269081,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269086,"byte_end":269089,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269094,"byte_end":269153,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269158,"byte_end":269161,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269166,"byte_end":269177,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269182,"byte_end":269215,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269220,"byte_end":269275,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269280,"byte_end":269340,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269345,"byte_end":269352,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269779,"byte_end":269790,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269429,"byte_end":269472,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269477,"byte_end":269480,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269485,"byte_end":269547,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269552,"byte_end":269555,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269560,"byte_end":269571,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269576,"byte_end":269609,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269614,"byte_end":269674,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269679,"byte_end":269749,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269754,"byte_end":269761,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270245,"byte_end":270256,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269849,"byte_end":269892,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269897,"byte_end":269900,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269905,"byte_end":269971,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269976,"byte_end":269979,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":269984,"byte_end":269995,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270000,"byte_end":270033,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270038,"byte_end":270098,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270103,"byte_end":270118,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270123,"byte_end":270184,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270189,"byte_end":270204,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270209,"byte_end":270215,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270220,"byte_end":270227,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270721,"byte_end":270731,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270315,"byte_end":270357,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270362,"byte_end":270365,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270370,"byte_end":270440,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270445,"byte_end":270448,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270453,"byte_end":270464,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270469,"byte_end":270502,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270507,"byte_end":270566,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270571,"byte_end":270586,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270591,"byte_end":270655,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270660,"byte_end":270680,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270685,"byte_end":270691,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270696,"byte_end":270703,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271442,"byte_end":271455,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270848,"byte_end":270934,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270939,"byte_end":270987,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":270992,"byte_end":270995,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271000,"byte_end":271011,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271016,"byte_end":271059,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271064,"byte_end":271079,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271084,"byte_end":271118,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271123,"byte_end":271163,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271168,"byte_end":271198,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271203,"byte_end":271225,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271230,"byte_end":271236,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271241,"byte_end":271256,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271261,"byte_end":271295,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271300,"byte_end":271339,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271344,"byte_end":271374,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271379,"byte_end":271401,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271406,"byte_end":271412,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271417,"byte_end":271424,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271937,"byte_end":271947,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271601,"byte_end":271689,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271694,"byte_end":271717,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271722,"byte_end":271725,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271730,"byte_end":271741,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271746,"byte_end":271779,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271784,"byte_end":271799,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271804,"byte_end":271869,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271874,"byte_end":271896,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271901,"byte_end":271907,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":271912,"byte_end":271919,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272681,"byte_end":272692,"line_start":470,"line_end":470,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272093,"byte_end":272166,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272171,"byte_end":272174,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272179,"byte_end":272186,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272191,"byte_end":272238,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272243,"byte_end":272276,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272281,"byte_end":272321,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272326,"byte_end":272382,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272387,"byte_end":272390,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272395,"byte_end":272435,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272440,"byte_end":272493,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272498,"byte_end":272501,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272506,"byte_end":272521,"line_start":465,"line_end":465,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272526,"byte_end":272590,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272595,"byte_end":272640,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272645,"byte_end":272651,"line_start":468,"line_end":468,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":272656,"byte_end":272663,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273802,"byte_end":273813,"line_start":500,"line_end":500,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273214,"byte_end":273287,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273292,"byte_end":273295,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273300,"byte_end":273307,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273312,"byte_end":273359,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273364,"byte_end":273397,"line_start":488,"line_end":488,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273402,"byte_end":273442,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273447,"byte_end":273500,"line_start":490,"line_end":490,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273505,"byte_end":273508,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273513,"byte_end":273553,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273558,"byte_end":273614,"line_start":493,"line_end":493,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273619,"byte_end":273622,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273627,"byte_end":273642,"line_start":495,"line_end":495,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273647,"byte_end":273711,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273716,"byte_end":273761,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273766,"byte_end":273772,"line_start":498,"line_end":498,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":273777,"byte_end":273784,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275043,"byte_end":275057,"line_start":536,"line_end":536,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274409,"byte_end":274470,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274475,"byte_end":274478,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274483,"byte_end":274490,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274495,"byte_end":274555,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274560,"byte_end":274593,"line_start":520,"line_end":520,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274598,"byte_end":274613,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274618,"byte_end":274677,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274682,"byte_end":274712,"line_start":523,"line_end":523,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274717,"byte_end":274723,"line_start":524,"line_end":524,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274728,"byte_end":274731,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274736,"byte_end":274751,"line_start":526,"line_end":526,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274756,"byte_end":274812,"line_start":527,"line_end":527,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274817,"byte_end":274847,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274852,"byte_end":274858,"line_start":529,"line_end":529,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274863,"byte_end":274866,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274871,"byte_end":274886,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274891,"byte_end":274958,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":274963,"byte_end":275002,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275007,"byte_end":275013,"line_start":534,"line_end":534,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275018,"byte_end":275025,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275935,"byte_end":275949,"line_start":566,"line_end":566,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275301,"byte_end":275362,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275367,"byte_end":275370,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275375,"byte_end":275382,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275387,"byte_end":275447,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275452,"byte_end":275485,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275490,"byte_end":275505,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275510,"byte_end":275566,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275571,"byte_end":275601,"line_start":553,"line_end":553,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275606,"byte_end":275612,"line_start":554,"line_end":554,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275617,"byte_end":275620,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275625,"byte_end":275640,"line_start":556,"line_end":556,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275645,"byte_end":275704,"line_start":557,"line_end":557,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275709,"byte_end":275739,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275744,"byte_end":275750,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275755,"byte_end":275758,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275763,"byte_end":275778,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275783,"byte_end":275850,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275855,"byte_end":275894,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275899,"byte_end":275905,"line_start":564,"line_end":564,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":275910,"byte_end":275917,"line_start":565,"line_end":565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276702,"byte_end":276714,"line_start":591,"line_end":591,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276341,"byte_end":276383,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276388,"byte_end":276391,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276396,"byte_end":276407,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276412,"byte_end":276453,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276458,"byte_end":276473,"line_start":585,"line_end":585,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276478,"byte_end":276540,"line_start":586,"line_end":586,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276545,"byte_end":276579,"line_start":587,"line_end":587,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276584,"byte_end":276590,"line_start":588,"line_end":588,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276595,"byte_end":276602,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276607,"byte_end":276684,"line_start":590,"line_end":590,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277156,"byte_end":277168,"line_start":605,"line_end":605,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276788,"byte_end":276830,"line_start":595,"line_end":595,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276835,"byte_end":276838,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276843,"byte_end":276854,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276859,"byte_end":276900,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276905,"byte_end":276920,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276925,"byte_end":276993,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276998,"byte_end":277033,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277038,"byte_end":277044,"line_start":602,"line_end":602,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277049,"byte_end":277056,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277061,"byte_end":277138,"line_start":604,"line_end":604,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277865,"byte_end":277877,"line_start":621,"line_end":621,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277242,"byte_end":277300,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277305,"byte_end":277308,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277313,"byte_end":277324,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277329,"byte_end":277362,"line_start":612,"line_end":612,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277367,"byte_end":277382,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277387,"byte_end":277446,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277451,"byte_end":277494,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277499,"byte_end":277505,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277510,"byte_end":277630,"line_start":617,"line_end":617,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277635,"byte_end":277753,"line_start":618,"line_end":618,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277758,"byte_end":277765,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":277770,"byte_end":277847,"line_start":620,"line_end":620,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278536,"byte_end":278549,"line_start":637,"line_end":637,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278021,"byte_end":278055,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278060,"byte_end":278063,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278068,"byte_end":278079,"line_start":627,"line_end":627,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278084,"byte_end":278117,"line_start":628,"line_end":628,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278122,"byte_end":278144,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278149,"byte_end":278164,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278169,"byte_end":278239,"line_start":631,"line_end":631,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278244,"byte_end":278287,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278292,"byte_end":278298,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278303,"byte_end":278424,"line_start":634,"line_end":634,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278429,"byte_end":278436,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278441,"byte_end":278518,"line_start":636,"line_end":636,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279253,"byte_end":279264,"line_start":653,"line_end":653,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278698,"byte_end":278731,"line_start":641,"line_end":641,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278736,"byte_end":278739,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278744,"byte_end":278755,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278760,"byte_end":278793,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278798,"byte_end":278813,"line_start":645,"line_end":645,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278818,"byte_end":278873,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278878,"byte_end":278921,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278926,"byte_end":278932,"line_start":648,"line_end":648,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":278937,"byte_end":279030,"line_start":649,"line_end":649,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279035,"byte_end":279141,"line_start":650,"line_end":650,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279146,"byte_end":279153,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279158,"byte_end":279235,"line_start":652,"line_end":652,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279891,"byte_end":279903,"line_start":668,"line_end":668,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279404,"byte_end":279431,"line_start":657,"line_end":657,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279436,"byte_end":279439,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279444,"byte_end":279455,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279460,"byte_end":279493,"line_start":660,"line_end":660,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279498,"byte_end":279513,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279518,"byte_end":279589,"line_start":662,"line_end":662,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279594,"byte_end":279652,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279657,"byte_end":279663,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279668,"byte_end":279779,"line_start":665,"line_end":665,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279784,"byte_end":279791,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":279796,"byte_end":279873,"line_start":667,"line_end":667,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280580,"byte_end":280594,"line_start":685,"line_end":685,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280074,"byte_end":280114,"line_start":674,"line_end":674,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280119,"byte_end":280122,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280127,"byte_end":280138,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280143,"byte_end":280176,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280181,"byte_end":280196,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280201,"byte_end":280274,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280279,"byte_end":280337,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280342,"byte_end":280348,"line_start":681,"line_end":681,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280353,"byte_end":280468,"line_start":682,"line_end":682,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280473,"byte_end":280480,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280485,"byte_end":280562,"line_start":684,"line_end":684,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281279,"byte_end":281293,"line_start":702,"line_end":702,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280771,"byte_end":280813,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280818,"byte_end":280821,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280826,"byte_end":280837,"line_start":693,"line_end":693,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280842,"byte_end":280875,"line_start":694,"line_end":694,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280880,"byte_end":280895,"line_start":695,"line_end":695,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280900,"byte_end":280973,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":280978,"byte_end":281036,"line_start":697,"line_end":697,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281041,"byte_end":281047,"line_start":698,"line_end":698,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281052,"byte_end":281167,"line_start":699,"line_end":699,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281172,"byte_end":281179,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281184,"byte_end":281261,"line_start":701,"line_end":701,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281996,"byte_end":282015,"line_start":719,"line_end":719,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281470,"byte_end":281517,"line_start":708,"line_end":708,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281522,"byte_end":281525,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281530,"byte_end":281541,"line_start":710,"line_end":710,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281546,"byte_end":281579,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281584,"byte_end":281599,"line_start":712,"line_end":712,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281604,"byte_end":281682,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281687,"byte_end":281737,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281742,"byte_end":281748,"line_start":715,"line_end":715,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281753,"byte_end":281884,"line_start":716,"line_end":716,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281889,"byte_end":281896,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":281901,"byte_end":281978,"line_start":718,"line_end":718,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282773,"byte_end":282792,"line_start":739,"line_end":739,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282231,"byte_end":282278,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282283,"byte_end":282286,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282291,"byte_end":282302,"line_start":730,"line_end":730,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282307,"byte_end":282340,"line_start":731,"line_end":731,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282345,"byte_end":282360,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282365,"byte_end":282447,"line_start":733,"line_end":733,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282452,"byte_end":282506,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282511,"byte_end":282517,"line_start":735,"line_end":735,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282522,"byte_end":282661,"line_start":736,"line_end":736,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282666,"byte_end":282673,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":282678,"byte_end":282755,"line_start":738,"line_end":738,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283562,"byte_end":283580,"line_start":759,"line_end":759,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283008,"byte_end":283054,"line_start":748,"line_end":748,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283059,"byte_end":283062,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283067,"byte_end":283078,"line_start":750,"line_end":750,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283083,"byte_end":283116,"line_start":751,"line_end":751,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283121,"byte_end":283136,"line_start":752,"line_end":752,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283141,"byte_end":283226,"line_start":753,"line_end":753,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283231,"byte_end":283289,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283294,"byte_end":283300,"line_start":755,"line_end":755,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283305,"byte_end":283450,"line_start":756,"line_end":756,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283455,"byte_end":283462,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283467,"byte_end":283544,"line_start":758,"line_end":758,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284007,"byte_end":284018,"line_start":772,"line_end":772,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283885,"byte_end":283946,"line_start":770,"line_end":770,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283951,"byte_end":283995,"line_start":771,"line_end":771,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284720,"byte_end":284726,"line_start":792,"line_end":792,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284243,"byte_end":284304,"line_start":780,"line_end":780,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284309,"byte_end":284353,"line_start":781,"line_end":781,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284358,"byte_end":284361,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284366,"byte_end":284377,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284382,"byte_end":284437,"line_start":784,"line_end":784,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284442,"byte_end":284535,"line_start":785,"line_end":785,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284540,"byte_end":284555,"line_start":786,"line_end":786,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284560,"byte_end":284616,"line_start":787,"line_end":787,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284621,"byte_end":284650,"line_start":788,"line_end":788,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284655,"byte_end":284661,"line_start":789,"line_end":789,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284666,"byte_end":284696,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":284701,"byte_end":284708,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285687,"byte_end":285690,"line_start":820,"line_end":820,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PrimitiveDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285933,"byte_end":285936,"line_start":830,"line_end":830,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286158,"byte_end":286161,"line_start":839,"line_end":839,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286713,"byte_end":286716,"line_start":860,"line_end":860,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286938,"byte_end":286941,"line_start":869,"line_end":869,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":287499,"byte_end":287502,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288925,"byte_end":288929,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288568,"byte_end":288629,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288630,"byte_end":288633,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288634,"byte_end":288731,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288732,"byte_end":288766,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288767,"byte_end":288770,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":288771,"byte_end":288852,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289318,"byte_end":289321,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289815,"byte_end":289823,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289628,"byte_end":289673,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289678,"byte_end":289681,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289686,"byte_end":289697,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289702,"byte_end":289739,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289744,"byte_end":289788,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289793,"byte_end":289800,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290352,"byte_end":290378,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290275,"byte_end":290315,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291290,"byte_end":291298,"line_start":111,"line_end":111,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290795,"byte_end":290860,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290865,"byte_end":290868,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290873,"byte_end":290884,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290889,"byte_end":290910,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290915,"byte_end":290960,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290965,"byte_end":290972,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290977,"byte_end":290980,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":290985,"byte_end":290996,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291001,"byte_end":291022,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291027,"byte_end":291100,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291105,"byte_end":291180,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291185,"byte_end":291260,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291265,"byte_end":291272,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292250,"byte_end":292264,"line_start":132,"line_end":132,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291606,"byte_end":291684,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291689,"byte_end":291692,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291697,"byte_end":291708,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291713,"byte_end":291734,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291739,"byte_end":291793,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291798,"byte_end":291805,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291810,"byte_end":291813,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291818,"byte_end":291829,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291834,"byte_end":291855,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291860,"byte_end":291942,"line_start":127,"line_end":127,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":291947,"byte_end":292031,"line_start":128,"line_end":128,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292036,"byte_end":292120,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292125,"byte_end":292220,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292225,"byte_end":292232,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293426,"byte_end":293440,"line_start":164,"line_end":164,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292774,"byte_end":292852,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292857,"byte_end":292860,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292865,"byte_end":292876,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292881,"byte_end":292902,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292907,"byte_end":292961,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292966,"byte_end":292973,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292978,"byte_end":292981,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":292986,"byte_end":292997,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293002,"byte_end":293023,"line_start":158,"line_end":158,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293028,"byte_end":293110,"line_start":159,"line_end":159,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293115,"byte_end":293199,"line_start":160,"line_end":160,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293204,"byte_end":293288,"line_start":161,"line_end":161,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293293,"byte_end":293396,"line_start":162,"line_end":162,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293401,"byte_end":293408,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294596,"byte_end":294609,"line_start":196,"line_end":196,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"const fn from_hms_nano(u8, u8, u8, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":293943,"byte_end":294020,"line_start":182,"line_end":182,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294025,"byte_end":294028,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294033,"byte_end":294044,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294049,"byte_end":294070,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294075,"byte_end":294128,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294133,"byte_end":294140,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294145,"byte_end":294148,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294153,"byte_end":294164,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294169,"byte_end":294190,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294195,"byte_end":294276,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294281,"byte_end":294364,"line_start":192,"line_end":192,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294369,"byte_end":294452,"line_start":193,"line_end":193,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294457,"byte_end":294566,"line_start":194,"line_end":194,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":294571,"byte_end":294578,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295369,"byte_end":295375,"line_start":220,"line_end":220,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295122,"byte_end":295165,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295170,"byte_end":295173,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295178,"byte_end":295189,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295194,"byte_end":295223,"line_start":216,"line_end":216,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295228,"byte_end":295279,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295284,"byte_end":295339,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295344,"byte_end":295351,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295741,"byte_end":295753,"line_start":231,"line_end":231,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295457,"byte_end":295513,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295518,"byte_end":295521,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295526,"byte_end":295537,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295542,"byte_end":295571,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295576,"byte_end":295636,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295641,"byte_end":295711,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295716,"byte_end":295723,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296263,"byte_end":296275,"line_start":250,"line_end":250,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295937,"byte_end":295993,"line_start":240,"line_end":240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":295998,"byte_end":296001,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296006,"byte_end":296017,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296022,"byte_end":296051,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296056,"byte_end":296116,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296121,"byte_end":296136,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296141,"byte_end":296188,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296193,"byte_end":296222,"line_start":247,"line_end":247,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296227,"byte_end":296233,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296238,"byte_end":296245,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296718,"byte_end":296729,"line_start":264,"line_end":264,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296387,"byte_end":296442,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296447,"byte_end":296450,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296455,"byte_end":296466,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296471,"byte_end":296500,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296505,"byte_end":296564,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296569,"byte_end":296584,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296589,"byte_end":296639,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296644,"byte_end":296677,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296682,"byte_end":296688,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296693,"byte_end":296700,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297110,"byte_end":297114,"line_start":277,"line_end":277,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296833,"byte_end":296856,"line_start":268,"line_end":268,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296861,"byte_end":296864,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296869,"byte_end":296928,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296933,"byte_end":296936,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296941,"byte_end":296952,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296957,"byte_end":296986,"line_start":273,"line_end":273,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":296991,"byte_end":297032,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297037,"byte_end":297080,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297085,"byte_end":297092,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297451,"byte_end":297457,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297158,"byte_end":297193,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297198,"byte_end":297201,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297206,"byte_end":297265,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297270,"byte_end":297273,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297278,"byte_end":297289,"line_start":285,"line_end":285,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297294,"byte_end":297323,"line_start":286,"line_end":286,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297328,"byte_end":297371,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297376,"byte_end":297421,"line_start":288,"line_end":288,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297426,"byte_end":297433,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297798,"byte_end":297804,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297503,"byte_end":297540,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297545,"byte_end":297548,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297553,"byte_end":297612,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297617,"byte_end":297620,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297625,"byte_end":297636,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297641,"byte_end":297670,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297675,"byte_end":297718,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297723,"byte_end":297768,"line_start":301,"line_end":301,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297773,"byte_end":297780,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298166,"byte_end":298177,"line_start":316,"line_end":316,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297850,"byte_end":297893,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297898,"byte_end":297901,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297906,"byte_end":297968,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297973,"byte_end":297976,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297981,"byte_end":297992,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":297997,"byte_end":298026,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298031,"byte_end":298076,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298081,"byte_end":298136,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298141,"byte_end":298148,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298575,"byte_end":298586,"line_start":329,"line_end":329,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298247,"byte_end":298290,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298295,"byte_end":298298,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298303,"byte_end":298369,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298374,"byte_end":298377,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298382,"byte_end":298393,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298398,"byte_end":298427,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298432,"byte_end":298477,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298482,"byte_end":298545,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298550,"byte_end":298557,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298982,"byte_end":298992,"line_start":342,"line_end":342,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298645,"byte_end":298687,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298692,"byte_end":298695,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298700,"byte_end":298770,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298775,"byte_end":298778,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298783,"byte_end":298794,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298799,"byte_end":298828,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298833,"byte_end":298877,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298882,"byte_end":298952,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":298957,"byte_end":298964,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304084,"byte_end":304096,"line_start":469,"line_end":469,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303671,"byte_end":303698,"line_start":458,"line_end":458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303703,"byte_end":303706,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303711,"byte_end":303722,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303727,"byte_end":303756,"line_start":461,"line_end":461,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303761,"byte_end":303776,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303781,"byte_end":303833,"line_start":463,"line_end":463,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303838,"byte_end":303877,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303882,"byte_end":303888,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303893,"byte_end":303985,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":303990,"byte_end":303997,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304002,"byte_end":304066,"line_start":468,"line_end":468,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304799,"byte_end":304813,"line_start":490,"line_end":490,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304367,"byte_end":304407,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304412,"byte_end":304415,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304420,"byte_end":304431,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304436,"byte_end":304465,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304470,"byte_end":304485,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304490,"byte_end":304544,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304549,"byte_end":304588,"line_start":485,"line_end":485,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304593,"byte_end":304599,"line_start":486,"line_end":486,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304604,"byte_end":304700,"line_start":487,"line_end":487,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304705,"byte_end":304712,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":304717,"byte_end":304781,"line_start":489,"line_end":489,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305522,"byte_end":305536,"line_start":511,"line_end":511,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305088,"byte_end":305130,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305135,"byte_end":305138,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305143,"byte_end":305154,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305159,"byte_end":305188,"line_start":503,"line_end":503,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305193,"byte_end":305208,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305213,"byte_end":305267,"line_start":505,"line_end":505,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305272,"byte_end":305311,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305316,"byte_end":305322,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305327,"byte_end":305423,"line_start":508,"line_end":508,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305428,"byte_end":305435,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305440,"byte_end":305504,"line_start":510,"line_end":510,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306263,"byte_end":306282,"line_start":532,"line_end":532,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305811,"byte_end":305858,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305863,"byte_end":305866,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305871,"byte_end":305882,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305887,"byte_end":305916,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305921,"byte_end":305936,"line_start":525,"line_end":525,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":305941,"byte_end":306000,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306005,"byte_end":306036,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306041,"byte_end":306047,"line_start":528,"line_end":528,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306052,"byte_end":306164,"line_start":529,"line_end":529,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306169,"byte_end":306176,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306181,"byte_end":306245,"line_start":531,"line_end":531,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307080,"byte_end":307099,"line_start":556,"line_end":556,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306612,"byte_end":306659,"line_start":545,"line_end":545,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306664,"byte_end":306667,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306672,"byte_end":306683,"line_start":547,"line_end":547,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306688,"byte_end":306717,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306722,"byte_end":306737,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306742,"byte_end":306805,"line_start":550,"line_end":550,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306810,"byte_end":306845,"line_start":551,"line_end":551,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306850,"byte_end":306856,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306861,"byte_end":306981,"line_start":553,"line_end":553,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306986,"byte_end":306993,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":306998,"byte_end":307062,"line_start":555,"line_end":555,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307901,"byte_end":307919,"line_start":580,"line_end":580,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307421,"byte_end":307467,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307472,"byte_end":307475,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307480,"byte_end":307491,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307496,"byte_end":307525,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307530,"byte_end":307545,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307550,"byte_end":307616,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307621,"byte_end":307660,"line_start":575,"line_end":575,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307665,"byte_end":307671,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307676,"byte_end":307802,"line_start":577,"line_end":577,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307807,"byte_end":307814,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":307819,"byte_end":307883,"line_start":579,"line_end":579,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308419,"byte_end":308430,"line_start":596,"line_end":596,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, crate::error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308318,"byte_end":308407,"line_start":595,"line_end":595,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":309014,"byte_end":309020,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308646,"byte_end":308735,"line_start":604,"line_end":604,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308740,"byte_end":308743,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308748,"byte_end":308759,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308764,"byte_end":308815,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308820,"byte_end":308892,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308897,"byte_end":308955,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308960,"byte_end":308990,"line_start":610,"line_end":610,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308995,"byte_end":309002,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":309837,"byte_end":309840,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311135,"byte_end":311138,"line_start":672,"line_end":672,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310823,"byte_end":310901,"line_start":665,"line_end":665,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310906,"byte_end":310909,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310914,"byte_end":310925,"line_start":667,"line_end":667,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310930,"byte_end":310985,"line_start":668,"line_end":668,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(12:00) + 2.hours(), time!(14:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310990,"byte_end":311045,"line_start":669,"line_end":669,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00:01) + (-2).seconds(), time!(23:59:59));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311050,"byte_end":311115,"line_start":670,"line_end":670,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311120,"byte_end":311127,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311624,"byte_end":311627,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311293,"byte_end":311382,"line_start":680,"line_end":680,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311387,"byte_end":311390,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311395,"byte_end":311406,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311411,"byte_end":311469,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(12:00) + 2.std_hours(), time!(14:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311474,"byte_end":311533,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(23:59:59) + 2.std_seconds(), time!(0:00:01));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311538,"byte_end":311604,"line_start":685,"line_end":685,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311609,"byte_end":311616,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312153,"byte_end":312156,"line_start":704,"line_end":704,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311834,"byte_end":311919,"line_start":697,"line_end":697,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311924,"byte_end":311927,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311932,"byte_end":311943,"line_start":699,"line_end":699,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311948,"byte_end":312003,"line_start":700,"line_end":700,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(14:00) - 2.hours(), time!(12:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312008,"byte_end":312063,"line_start":701,"line_end":701,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(23:59:59) - (-2).seconds(), time!(0:00:01));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312068,"byte_end":312133,"line_start":702,"line_end":702,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312138,"byte_end":312145,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312649,"byte_end":312652,"line_start":719,"line_end":719,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312311,"byte_end":312407,"line_start":712,"line_end":712,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312412,"byte_end":312415,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312420,"byte_end":312431,"line_start":714,"line_end":714,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312436,"byte_end":312494,"line_start":715,"line_end":715,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(14:00) - 2.std_hours(), time!(12:00));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312499,"byte_end":312558,"line_start":716,"line_end":716,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(0:00:01) - 2.std_seconds(), time!(23:59:59));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312563,"byte_end":312629,"line_start":717,"line_end":717,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312634,"byte_end":312641,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313324,"byte_end":313327,"line_start":739,"line_end":739,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in\n the same calendar day.","sig":null,"attributes":[{"value":"/ Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312853,"byte_end":312947,"line_start":729,"line_end":729,"column_start":5,"column_end":99}},{"value":"/ the same calendar day.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312952,"byte_end":312978,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312983,"byte_end":312986,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312991,"byte_end":313002,"line_start":732,"line_end":732,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313007,"byte_end":313062,"line_start":733,"line_end":733,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00) - time!(0:00), 0.seconds());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313067,"byte_end":313122,"line_start":734,"line_end":734,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(1:00) - time!(0:00), 1.hours());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313127,"byte_end":313180,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(time!(0:00) - time!(1:00), (-1).hours());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313185,"byte_end":313241,"line_start":736,"line_end":736,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(time!(0:00) - time!(23:00), (-23).hours());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313246,"byte_end":313304,"line_start":737,"line_end":737,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":313309,"byte_end":313316,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":314848,"byte_end":314857,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":314554,"byte_end":314577,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":314578,"byte_end":314581,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":314582,"byte_end":314679,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":314680,"byte_end":314717,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315269,"byte_end":315272,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":1557},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315089,"byte_end":315119,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315124,"byte_end":315127,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315132,"byte_end":315143,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315148,"byte_end":315192,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315197,"byte_end":315242,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315247,"byte_end":315254,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315598,"byte_end":315618,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315351,"byte_end":315447,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315452,"byte_end":315547,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315552,"byte_end":315561,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316809,"byte_end":316817,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316294,"byte_end":316386,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316391,"byte_end":316404,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316409,"byte_end":316412,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316417,"byte_end":316511,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316516,"byte_end":316545,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316550,"byte_end":316553,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316558,"byte_end":316569,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316574,"byte_end":316600,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316605,"byte_end":316671,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316676,"byte_end":316744,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316749,"byte_end":316779,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":316784,"byte_end":316791,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317775,"byte_end":317793,"line_start":113,"line_end":113,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317494,"byte_end":317576,"line_start":106,"line_end":106,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317581,"byte_end":317584,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317589,"byte_end":317600,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317605,"byte_end":317631,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317636,"byte_end":317710,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317715,"byte_end":317745,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":317750,"byte_end":317757,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318541,"byte_end":318547,"line_start":133,"line_end":133,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318135,"byte_end":318229,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318234,"byte_end":318330,"line_start":126,"line_end":126,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318335,"byte_end":318338,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318343,"byte_end":318354,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318359,"byte_end":318390,"line_start":129,"line_end":129,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318395,"byte_end":318449,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318454,"byte_end":318511,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318516,"byte_end":318523,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318977,"byte_end":318988,"line_start":145,"line_end":145,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318632,"byte_end":318722,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318727,"byte_end":318774,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318779,"byte_end":318782,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318787,"byte_end":318798,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318803,"byte_end":318834,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318839,"byte_end":318890,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318895,"byte_end":318947,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":318952,"byte_end":318959,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319386,"byte_end":319399,"line_start":157,"line_end":157,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319033,"byte_end":319125,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319130,"byte_end":319177,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319182,"byte_end":319185,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319190,"byte_end":319201,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319206,"byte_end":319237,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319242,"byte_end":319296,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319301,"byte_end":319356,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319361,"byte_end":319368,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319846,"byte_end":319863,"line_start":169,"line_end":169,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319479,"byte_end":319566,"line_start":161,"line_end":161,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319571,"byte_end":319631,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319636,"byte_end":319639,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319644,"byte_end":319655,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319660,"byte_end":319691,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319696,"byte_end":319753,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319758,"byte_end":319816,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319821,"byte_end":319828,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320399,"byte_end":320412,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":319910,"byte_end":320002,"line_start":173,"line_end":173,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320007,"byte_end":320054,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320059,"byte_end":320062,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320067,"byte_end":320078,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320083,"byte_end":320114,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320119,"byte_end":320175,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320180,"byte_end":320237,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320242,"byte_end":320249,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320895,"byte_end":320914,"line_start":195,"line_end":195,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320522,"byte_end":320611,"line_start":187,"line_end":187,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320616,"byte_end":320676,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320681,"byte_end":320684,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320689,"byte_end":320700,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320705,"byte_end":320736,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320741,"byte_end":320800,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320805,"byte_end":320865,"line_start":193,"line_end":193,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":320870,"byte_end":320877,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321280,"byte_end":321286,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321011,"byte_end":321050,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321055,"byte_end":321058,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321063,"byte_end":321066,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321071,"byte_end":321082,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321087,"byte_end":321118,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321123,"byte_end":321164,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321169,"byte_end":321210,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321215,"byte_end":321250,"line_start":208,"line_end":208,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321255,"byte_end":321262,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321669,"byte_end":321680,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321380,"byte_end":321432,"line_start":214,"line_end":214,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321437,"byte_end":321440,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321445,"byte_end":321456,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321461,"byte_end":321492,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321497,"byte_end":321542,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321547,"byte_end":321593,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321598,"byte_end":321639,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321644,"byte_end":321651,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":322060,"byte_end":322071,"line_start":234,"line_end":234,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321771,"byte_end":321823,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321828,"byte_end":321831,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321836,"byte_end":321847,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321852,"byte_end":321883,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321888,"byte_end":321934,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321939,"byte_end":321984,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":321989,"byte_end":322030,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":322035,"byte_end":322042,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323588,"byte_end":323599,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323482,"byte_end":323576,"line_start":276,"line_end":276,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":324200,"byte_end":324206,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323808,"byte_end":323902,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323907,"byte_end":323910,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323915,"byte_end":323926,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323931,"byte_end":323984,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323989,"byte_end":324081,"line_start":289,"line_end":289,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":324086,"byte_end":324141,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":324146,"byte_end":324176,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":324181,"byte_end":324188,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325027,"byte_end":325030,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UtcOffset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325408,"byte_end":325411,"line_start":334,"line_end":334,"column_start":8,"column_end":11},"name":"neg","qualname":"<UtcOffset as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1593},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325523,"byte_end":325545,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326040,"byte_end":326058,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325846,"byte_end":325902,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325903,"byte_end":325906,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325907,"byte_end":325918,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325919,"byte_end":325949,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":325950,"byte_end":326018,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326019,"byte_end":326026,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326757,"byte_end":326769,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326332,"byte_end":326421,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326422,"byte_end":326515,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326516,"byte_end":326519,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326520,"byte_end":326531,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326532,"byte_end":326567,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326568,"byte_end":326601,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326602,"byte_end":326634,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326635,"byte_end":326667,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326668,"byte_end":326701,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326702,"byte_end":326735,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326736,"byte_end":326743,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327242,"byte_end":327254,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326850,"byte_end":326902,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326903,"byte_end":326906,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326907,"byte_end":326963,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326964,"byte_end":326967,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326968,"byte_end":326979,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":326980,"byte_end":327015,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327016,"byte_end":327056,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327057,"byte_end":327097,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327098,"byte_end":327138,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327139,"byte_end":327179,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327180,"byte_end":327220,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327221,"byte_end":327228,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327585,"byte_end":327598,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327325,"byte_end":327369,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327370,"byte_end":327373,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327374,"byte_end":327428,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327429,"byte_end":327432,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327433,"byte_end":327444,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327445,"byte_end":327481,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327482,"byte_end":327522,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327523,"byte_end":327563,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\util.rs","byte_start":327564,"byte_end":327571,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328557,"byte_end":328563,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328505,"byte_end":328552,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328621,"byte_end":328628,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328569,"byte_end":328616,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328686,"byte_end":328695,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328634,"byte_end":328681,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328753,"byte_end":328761,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328701,"byte_end":328748,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328819,"byte_end":328825,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328767,"byte_end":328814,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328883,"byte_end":328891,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328831,"byte_end":328878,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328949,"byte_end":328955,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328897,"byte_end":328944,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328491,"byte_end":328498,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328244,"byte_end":328265,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328266,"byte_end":328269,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328270,"byte_end":328365,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328366,"byte_end":328430,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329157,"byte_end":329165,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328979,"byte_end":329008,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329013,"byte_end":329016,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329021,"byte_end":329032,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329037,"byte_end":329061,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329066,"byte_end":329127,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329132,"byte_end":329139,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329620,"byte_end":329624,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329450,"byte_end":329475,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329480,"byte_end":329483,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329488,"byte_end":329499,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329504,"byte_end":329528,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329533,"byte_end":329590,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329595,"byte_end":329602,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330145,"byte_end":330163,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329909,"byte_end":329960,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329965,"byte_end":329968,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329973,"byte_end":329984,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":329989,"byte_end":330013,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330018,"byte_end":330074,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330079,"byte_end":330086,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330427,"byte_end":330445,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330232,"byte_end":330283,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330288,"byte_end":330291,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330296,"byte_end":330307,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330312,"byte_end":330336,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330341,"byte_end":330397,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330402,"byte_end":330409,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330715,"byte_end":330738,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330514,"byte_end":330566,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330571,"byte_end":330574,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330579,"byte_end":330590,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330595,"byte_end":330619,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330624,"byte_end":330685,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330690,"byte_end":330697,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330983,"byte_end":331006,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330782,"byte_end":330834,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330839,"byte_end":330842,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330847,"byte_end":330858,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330863,"byte_end":330887,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330892,"byte_end":330953,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":330958,"byte_end":330965,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331278,"byte_end":331281,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331700,"byte_end":331708,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":11003,"byte_end":11009,"line_start":332,"line_end":332,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10911,"byte_end":10993,"line_start":331,"line_end":331,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12482,"byte_end":12486,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12718,"byte_end":12722,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40416,"byte_end":40420,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43907,"byte_end":43911,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":45400,"byte_end":45404,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46084,"byte_end":46088,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46297,"byte_end":46301,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46614,"byte_end":46618,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46834,"byte_end":46838,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":47148,"byte_end":47152,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":47956,"byte_end":47963,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48675,"byte_end":48683,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48918,"byte_end":48926,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":75309,"byte_end":75317,"line_start":771,"line_end":771,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":77583,"byte_end":77591,"line_start":838,"line_end":838,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":77959,"byte_end":77970,"line_start":852,"line_end":852,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78410,"byte_end":78418,"line_start":869,"line_end":869,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78611,"byte_end":78619,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78870,"byte_end":78881,"line_start":887,"line_end":887,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79068,"byte_end":79079,"line_start":897,"line_end":897,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79338,"byte_end":79346,"line_start":906,"line_end":906,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79493,"byte_end":79501,"line_start":914,"line_end":914,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79699,"byte_end":79707,"line_start":923,"line_end":923,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79940,"byte_end":79951,"line_start":932,"line_end":932,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":80255,"byte_end":80266,"line_start":944,"line_end":944,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81522,"byte_end":81530,"line_start":987,"line_end":987,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81821,"byte_end":81829,"line_start":1003,"line_end":1003,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82187,"byte_end":82195,"line_start":1021,"line_end":1021,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82350,"byte_end":82358,"line_start":1029,"line_end":1029,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82575,"byte_end":82583,"line_start":1039,"line_end":1039,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82744,"byte_end":82752,"line_start":1047,"line_end":1047,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82914,"byte_end":82925,"line_start":1055,"line_end":1055,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83093,"byte_end":83101,"line_start":1063,"line_end":1063,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83230,"byte_end":83241,"line_start":1069,"line_end":1069,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83349,"byte_end":83357,"line_start":1075,"line_end":1075,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83735,"byte_end":83746,"line_start":1089,"line_end":1089,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83888,"byte_end":83896,"line_start":1095,"line_end":1095,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":84045,"byte_end":84053,"line_start":1101,"line_end":1101,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89232,"byte_end":89246,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89678,"byte_end":89692,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90071,"byte_end":90076,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90206,"byte_end":90220,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":91145,"byte_end":91159,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91440,"byte_end":91455,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91653,"byte_end":91668,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91711,"byte_end":91716,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91838,"byte_end":91853,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92395,"byte_end":92411,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92605,"byte_end":92621,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92665,"byte_end":92670,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92794,"byte_end":92810,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93766,"byte_end":93772,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94332,"byte_end":94338,"line_start":41,"line_end":41,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94442,"byte_end":94447,"line_start":47,"line_end":47,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94733,"byte_end":94739,"line_start":59,"line_end":59,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95073,"byte_end":95078,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95254,"byte_end":95260,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97227,"byte_end":97232,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97504,"byte_end":97528,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97816,"byte_end":97840,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":98607,"byte_end":98631,"line_start":92,"line_end":92,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98901,"byte_end":98915,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99092,"byte_end":99106,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99148,"byte_end":99153,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99273,"byte_end":99287,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86497,"byte_end":86502,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":87513,"byte_end":87518,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":114896,"byte_end":114910,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":132364,"byte_end":132373,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150650,"byte_end":150657,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152077,"byte_end":152083,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143529,"byte_end":143536,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143746,"byte_end":143753,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144522,"byte_end":144529,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147593,"byte_end":147599,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110764,"byte_end":110774,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111306,"byte_end":111316,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111444,"byte_end":111453,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111760,"byte_end":111770,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112225,"byte_end":112235,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112407,"byte_end":112416,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112535,"byte_end":112545,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178742,"byte_end":178752,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178822,"byte_end":178829,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178854,"byte_end":178861,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178915,"byte_end":178922,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178965,"byte_end":178966,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":180123,"byte_end":180133,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181334,"byte_end":181335,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181730,"byte_end":181737,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":183694,"byte_end":183701,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":186906,"byte_end":186913,"line_start":234,"line_end":234,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195516,"byte_end":195523,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198460,"byte_end":198467,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198567,"byte_end":198577,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198660,"byte_end":198667,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199203,"byte_end":199210,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199354,"byte_end":199364,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199509,"byte_end":199516,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199903,"byte_end":199913,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200068,"byte_end":200075,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200316,"byte_end":200323,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200710,"byte_end":200720,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200875,"byte_end":200882,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201131,"byte_end":201138,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201246,"byte_end":201256,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201366,"byte_end":201373,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201512,"byte_end":201522,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201657,"byte_end":201664,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201758,"byte_end":201765,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207770,"byte_end":207775,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209754,"byte_end":209759,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":210283,"byte_end":210288,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":211013,"byte_end":211018,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212659,"byte_end":212673,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239398,"byte_end":239412,"line_start":818,"line_end":818,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248399,"byte_end":248413,"line_start":1046,"line_end":1046,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251450,"byte_end":251464,"line_start":1130,"line_end":1130,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251684,"byte_end":251698,"line_start":1138,"line_end":1138,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251849,"byte_end":251863,"line_start":1144,"line_end":1144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251976,"byte_end":251990,"line_start":1150,"line_end":1150,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252156,"byte_end":252170,"line_start":1157,"line_end":1157,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252446,"byte_end":252460,"line_start":1165,"line_end":1165,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252745,"byte_end":252759,"line_start":1178,"line_end":1178,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253038,"byte_end":253052,"line_start":1191,"line_end":1191,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253371,"byte_end":253381,"line_start":1202,"line_end":1202,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253841,"byte_end":253851,"line_start":1220,"line_end":1220,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254112,"byte_end":254126,"line_start":1231,"line_end":1231,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254303,"byte_end":254313,"line_start":1240,"line_end":1240,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254506,"byte_end":254520,"line_start":1249,"line_end":1249,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254670,"byte_end":254680,"line_start":1256,"line_end":1256,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254841,"byte_end":254855,"line_start":1263,"line_end":1263,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255041,"byte_end":255051,"line_start":1270,"line_end":1270,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255240,"byte_end":255254,"line_start":1277,"line_end":1277,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255626,"byte_end":255636,"line_start":1288,"line_end":1288,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257693,"byte_end":257710,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276317,"byte_end":276334,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283861,"byte_end":283878,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285660,"byte_end":285677,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285881,"byte_end":285898,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286106,"byte_end":286123,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286661,"byte_end":286678,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286886,"byte_end":286903,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":287443,"byte_end":287460,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289304,"byte_end":289308,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289617,"byte_end":289621,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308307,"byte_end":308311,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":309823,"byte_end":309827,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310787,"byte_end":310791,"line_start":662,"line_end":662,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311257,"byte_end":311261,"line_start":677,"line_end":677,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311798,"byte_end":311802,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312275,"byte_end":312279,"line_start":709,"line_end":709,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312813,"byte_end":312817,"line_start":726,"line_end":726,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315073,"byte_end":315082,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323466,"byte_end":323475,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325008,"byte_end":325017,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325364,"byte_end":325373,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328965,"byte_end":328972,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331261,"byte_end":331268,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331644,"byte_end":331651,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9737,"byte_end":9742,"line_start":286,"line_end":286,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":320}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9752,"byte_end":9755,"line_start":287,"line_end":287,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":446}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9822,"byte_end":9840,"line_start":289,"line_end":289,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":512}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":108555,"byte_end":108563,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":559}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":109419,"byte_end":109426,"line_start":40,"line_end":40,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":629}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9881,"byte_end":9891,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":730}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":9965,"byte_end":9971,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1120}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\lib.rs","byte_start":10511,"byte_end":10515,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1582}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12482,"byte_end":12486,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":12718,"byte_end":12722,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":40416,"byte_end":40420,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":43907,"byte_end":43911,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":45400,"byte_end":45404,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46084,"byte_end":46088,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46297,"byte_end":46301,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46614,"byte_end":46618,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":46834,"byte_end":46838,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\date.rs","byte_start":47148,"byte_end":47152,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":47956,"byte_end":47963,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48675,"byte_end":48683,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":48918,"byte_end":48926,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":75309,"byte_end":75317,"line_start":771,"line_end":771,"column_start":23,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":77583,"byte_end":77591,"line_start":838,"line_end":838,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":77959,"byte_end":77970,"line_start":852,"line_end":852,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78410,"byte_end":78418,"line_start":869,"line_end":869,"column_start":14,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78611,"byte_end":78619,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":78870,"byte_end":78881,"line_start":887,"line_end":887,"column_start":24,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79068,"byte_end":79079,"line_start":897,"line_end":897,"column_start":30,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3249}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79338,"byte_end":79346,"line_start":906,"line_end":906,"column_start":14,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3245}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79493,"byte_end":79501,"line_start":914,"line_end":914,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79699,"byte_end":79707,"line_start":923,"line_end":923,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":79940,"byte_end":79951,"line_start":932,"line_end":932,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":80255,"byte_end":80266,"line_start":944,"line_end":944,"column_start":30,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3253}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81522,"byte_end":81530,"line_start":987,"line_end":987,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":81821,"byte_end":81829,"line_start":1003,"line_end":1003,"column_start":19,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82187,"byte_end":82195,"line_start":1021,"line_end":1021,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3233}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82350,"byte_end":82358,"line_start":1029,"line_end":1029,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3233}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82575,"byte_end":82583,"line_start":1039,"line_end":1039,"column_start":14,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3233}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82744,"byte_end":82752,"line_start":1047,"line_end":1047,"column_start":27,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3233}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":82914,"byte_end":82925,"line_start":1055,"line_end":1055,"column_start":24,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":3233}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83093,"byte_end":83101,"line_start":1063,"line_end":1063,"column_start":33,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83230,"byte_end":83241,"line_start":1069,"line_end":1069,"column_start":30,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83349,"byte_end":83357,"line_start":1075,"line_end":1075,"column_start":34,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83735,"byte_end":83746,"line_start":1089,"line_end":1089,"column_start":31,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":2,"index":49629},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":83888,"byte_end":83896,"line_start":1095,"line_end":1095,"column_start":14,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":7957}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\duration.rs","byte_start":84045,"byte_end":84053,"line_start":1101,"line_end":1101,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":7957}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89232,"byte_end":89246,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":89678,"byte_end":89692,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90071,"byte_end":90076,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":90206,"byte_end":90220,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1836},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\component_range.rs","byte_start":91145,"byte_end":91159,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1836},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91440,"byte_end":91455,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1857},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91653,"byte_end":91668,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1857},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91711,"byte_end":91716,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\conversion_range.rs","byte_start":91838,"byte_end":91853,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1857},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92395,"byte_end":92411,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92605,"byte_end":92621,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1870},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92665,"byte_end":92670,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\different_variant.rs","byte_start":92794,"byte_end":92810,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":93766,"byte_end":93772,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1883},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94332,"byte_end":94338,"line_start":41,"line_end":41,"column_start":26,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1883},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94442,"byte_end":94447,"line_start":47,"line_end":47,"column_start":30,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":1,"index":3940},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":94733,"byte_end":94739,"line_start":59,"line_end":59,"column_start":28,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1883},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95073,"byte_end":95078,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\format.rs","byte_start":95254,"byte_end":95260,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1883},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97227,"byte_end":97232,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97504,"byte_end":97528,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":97816,"byte_end":97840,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1894},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_format_description.rs","byte_start":98607,"byte_end":98631,"line_start":92,"line_end":92,"column_start":28,"column_end":52},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1894},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":98901,"byte_end":98915,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99092,"byte_end":99106,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1916},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99148,"byte_end":99153,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\invalid_variant.rs","byte_start":99273,"byte_end":99287,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":86497,"byte_end":86502,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\error\\mod.rs","byte_start":87513,"byte_end":87518,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1929},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":101623,"byte_end":101629,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":454},"to":{"krate":0,"index":458}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\ext.rs","byte_start":105281,"byte_end":105287,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":454},"to":{"krate":0,"index":485}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\component.rs","byte_start":114896,"byte_end":114910,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\modifier.rs","byte_start":132364,"byte_end":132373,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":150650,"byte_end":150657,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601\\adt_hack.rs","byte_start":152077,"byte_end":152083,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143529,"byte_end":143536,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":143746,"byte_end":143753,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":144522,"byte_end":144529,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\well_known\\iso8601.rs","byte_start":147593,"byte_end":147599,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":110764,"byte_end":110774,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111306,"byte_end":111316,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111444,"byte_end":111453,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":111760,"byte_end":111770,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112225,"byte_end":112235,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112407,"byte_end":112416,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\format_description\\mod.rs","byte_start":112535,"byte_end":112545,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2573},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178711,"byte_end":178717,"line_start":16,"line_end":16,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":797},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178742,"byte_end":178752,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2573},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178822,"byte_end":178829,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2560},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178854,"byte_end":178861,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2547},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178915,"byte_end":178922,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":178965,"byte_end":178966,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":786}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":180123,"byte_end":180133,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2573},"to":{"krate":0,"index":797}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181334,"byte_end":181335,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":810},"to":{"krate":0,"index":797}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":181730,"byte_end":181737,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2547},"to":{"krate":0,"index":797}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":183694,"byte_end":183701,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2560},"to":{"krate":0,"index":797}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\formatting\\formattable.rs","byte_start":186906,"byte_end":186913,"line_start":234,"line_end":234,"column_start":54,"column_end":61},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":797}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":195516,"byte_end":195523,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198460,"byte_end":198467,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198567,"byte_end":198577,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":198660,"byte_end":198667,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199203,"byte_end":199210,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199354,"byte_end":199364,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199509,"byte_end":199516,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":199903,"byte_end":199913,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200068,"byte_end":200075,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200316,"byte_end":200323,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200710,"byte_end":200720,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"kind":{"Impl":{"id":187}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":200875,"byte_end":200882,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201131,"byte_end":201138,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201246,"byte_end":201256,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201366,"byte_end":201373,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201512,"byte_end":201522,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":1,"index":11171},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201657,"byte_end":201664,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\instant.rs","byte_start":201758,"byte_end":201765,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":2747}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":207770,"byte_end":207775,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":209754,"byte_end":209759,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2638},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":210283,"byte_end":210288,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2638},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\month.rs","byte_start":211013,"byte_end":211018,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2638},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":212659,"byte_end":212673,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":239398,"byte_end":239412,"line_start":818,"line_end":818,"column_start":6,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":248399,"byte_end":248413,"line_start":1046,"line_end":1046,"column_start":6,"column_end":20},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251450,"byte_end":251464,"line_start":1130,"line_end":1130,"column_start":23,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251684,"byte_end":251698,"line_start":1138,"line_end":1138,"column_start":20,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251849,"byte_end":251863,"line_start":1144,"line_end":1144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":251976,"byte_end":251990,"line_start":1150,"line_end":1150,"column_start":14,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252156,"byte_end":252170,"line_start":1157,"line_end":1157,"column_start":15,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":10120}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252446,"byte_end":252460,"line_start":1165,"line_end":1165,"column_start":20,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":252745,"byte_end":252759,"line_start":1178,"line_end":1178,"column_start":20,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253038,"byte_end":253052,"line_start":1191,"line_end":1191,"column_start":14,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253371,"byte_end":253381,"line_start":1202,"line_end":1202,"column_start":24,"column_end":34},"kind":{"Impl":{"id":218}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":253841,"byte_end":253851,"line_start":1220,"line_end":1220,"column_start":24,"column_end":34},"kind":{"Impl":{"id":220}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254112,"byte_end":254126,"line_start":1231,"line_end":1231,"column_start":26,"column_end":40},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254303,"byte_end":254313,"line_start":1240,"line_end":1240,"column_start":30,"column_end":40},"kind":{"Impl":{"id":223}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254506,"byte_end":254520,"line_start":1249,"line_end":1249,"column_start":32,"column_end":46},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254670,"byte_end":254680,"line_start":1256,"line_end":1256,"column_start":36,"column_end":46},"kind":{"Impl":{"id":225}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":254841,"byte_end":254855,"line_start":1263,"line_end":1263,"column_start":33,"column_end":47},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255041,"byte_end":255051,"line_start":1270,"line_end":1270,"column_start":37,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255240,"byte_end":255254,"line_start":1277,"line_end":1277,"column_start":27,"column_end":41},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2689},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\offset_date_time.rs","byte_start":255626,"byte_end":255636,"line_start":1288,"line_end":1288,"column_start":31,"column_end":41},"kind":{"Impl":{"id":229}},"from":{"krate":1,"index":11191},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":257693,"byte_end":257710,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":276317,"byte_end":276334,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":283861,"byte_end":283878,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285660,"byte_end":285677,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":285881,"byte_end":285898,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286106,"byte_end":286123,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286661,"byte_end":286678,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":286886,"byte_end":286903,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\primitive_date_time.rs","byte_start":287443,"byte_end":287460,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2712},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289304,"byte_end":289308,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":289617,"byte_end":289621,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":308307,"byte_end":308311,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":309823,"byte_end":309827,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":310787,"byte_end":310791,"line_start":662,"line_end":662,"column_start":24,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311257,"byte_end":311261,"line_start":677,"line_end":677,"column_start":27,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":3218}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":311798,"byte_end":311802,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312275,"byte_end":312279,"line_start":709,"line_end":709,"column_start":27,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\time.rs","byte_start":312813,"byte_end":312817,"line_start":726,"line_end":726,"column_start":14,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":3223}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":315073,"byte_end":315082,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":323466,"byte_end":323475,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325008,"byte_end":325017,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\utc_offset.rs","byte_start":325364,"byte_end":325373,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":3245}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":328965,"byte_end":328972,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331261,"byte_end":331268,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\time-0.3.14\\src\\weekday.rs","byte_start":331644,"byte_end":331651,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":12561}}]}