{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","polling","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7c64fddc2b309843","-C","extra-filename=-7c64fddc2b309843","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","cfg_if=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libcfg_if-8aebaf67cb64a367.rmeta","--extern","log=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\liblog-1dd3e90b8058f4be.rmeta","--extern","wepoll_ffi=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libwepoll_ffi-2c972f83ba74262d.rmeta","--extern","winapi=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libwinapi-a00e7d918e45a20a.rmeta","--cap-lints","allow","--cfg","polling_no_io_safety","-L","native=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\build\\wepoll-ffi-c969ef1a281d2b7e\\out","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libpolling-7c64fddc2b309843.rmeta"},"prelude":{"crate_id":{"name":"polling","disambiguator":[15980128312241325737,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[9011972299413683491,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","num":17,"id":{"name":"log","disambiguator":[2643609071996618890,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","num":18,"id":{"name":"value_bag","disambiguator":[4509803819817264786,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","num":19,"id":{"name":"ctor","disambiguator":[5086943377281928300,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","num":20,"id":{"name":"wepoll_ffi","disambiguator":[2648474857639074693,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","num":21,"id":{"name":"winapi","disambiguator":[12804740736339557305,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":0,"byte_end":17157,"line_start":1,"line_end":565,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":0,"byte_end":17157,"line_start":1,"line_end":565,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":64},{"krate":0,"index":136},{"krate":0,"index":28},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":29},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":49},{"krate":0,"index":62},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172}],"decl_id":null,"docs":" Portable interface to epoll, kqueue, event ports, and wepoll.","sig":null,"attributes":[{"value":"/ Portable interface to epoll, kqueue, event ports, and wepoll.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Supported platforms:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":70,"byte_end":94,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/ - [epoll](https://en.wikipedia.org/wiki/Epoll): Linux, Android","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":95,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ - [kqueue](https://en.wikipedia.org/wiki/Kqueue): macOS, iOS, FreeBSD, NetBSD, OpenBSD,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":162,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/   DragonFly BSD","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":254,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ - [event ports](https://illumos.org/man/port_create): illumos, Solaris","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":274,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ - [poll](https://en.wikipedia.org/wiki/Poll_(Unix)): VxWorks, Fuchsia, other Unix systems","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":349,"byte_end":442,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ - [wepoll](https://github.com/piscisaureus/wepoll): Windows","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":443,"byte_end":506,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":507,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Polling is done in oneshot mode, which means interest in I/O events needs to be re-enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":511,"byte_end":605,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ after an event is delivered if we're interested in the next event of the same kind.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":606,"byte_end":693,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":694,"byte_end":697,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Only one thread can be waiting for I/O events at a time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":698,"byte_end":758,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":759,"byte_end":762,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":763,"byte_end":777,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":778,"byte_end":781,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":782,"byte_end":795,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":796,"byte_end":829,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":830,"byte_end":860,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":861,"byte_end":864,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a TCP listener.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":865,"byte_end":894,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:8000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":895,"byte_end":949,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ socket.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":950,"byte_end":984,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let key = 7; // Arbitrary key identifying the socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":985,"byte_end":1042,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1043,"byte_end":1046,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Create a poller and register interest in readability on the socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1047,"byte_end":1121,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1122,"byte_end":1154,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ poller.add(&socket, Event::readable(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1155,"byte_end":1202,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1203,"byte_end":1206,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // The event loop.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1207,"byte_end":1229,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/ let mut events = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1230,"byte_end":1262,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1263,"byte_end":1273,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/     // Wait for at least one I/O event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1274,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/     events.clear();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1318,"byte_end":1341,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/     poller.wait(&mut events, None)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1342,"byte_end":1382,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1383,"byte_end":1386,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     for ev in &events {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1387,"byte_end":1414,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/         if ev.key == key {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1415,"byte_end":1445,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/             // Perform a non-blocking accept operation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1446,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/             socket.accept()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1506,"byte_end":1539,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/             // Set interest in the next readability event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1540,"byte_end":1602,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/             poller.modify(&socket, Event::readable(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1603,"byte_end":1665,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1666,"byte_end":1679,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1680,"byte_end":1689,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1690,"byte_end":1695,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1696,"byte_end":1725,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1726,"byte_end":1733,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1735,"byte_end":1759,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1803,"byte_end":1874,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"allow(clippy :: useless_conversion, clippy :: unnecessary_cast)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":1875,"byte_end":1938,"line_start":53,"line_end":53,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3548,"byte_end":3553,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Event","qualname":"::Event","value":"Event { key, readable, writable }","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" Indicates that a file descriptor or socket can read or write without blocking.\n","sig":null,"attributes":[{"value":"/ Indicates that a file descriptor or socket can read or write without blocking.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3409,"byte_end":3491,"line_start":117,"line_end":117,"column_start":1,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3619,"byte_end":3622,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"key","qualname":"::Event::key","value":"usize","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Key identifying the file descriptor or socket.\n","sig":null,"attributes":[{"value":"/ Key identifying the file descriptor or socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3560,"byte_end":3610,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3692,"byte_end":3700,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"readable","qualname":"::Event::readable","value":"bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Can it do a read operation without blocking?\n","sig":null,"attributes":[{"value":"/ Can it do a read operation without blocking?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3635,"byte_end":3683,"line_start":122,"line_end":122,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3770,"byte_end":3778,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"writable","qualname":"::Event::writable","value":"bool","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Can it do a write operation without blocking?\n","sig":null,"attributes":[{"value":"/ Can it do a write operation without blocking?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3712,"byte_end":3761,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3945,"byte_end":3948,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"all","qualname":"<Event>::all","value":"fn all(usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" All kinds of events (readable and writable).","sig":null,"attributes":[{"value":"/ All kinds of events (readable and writable).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3806,"byte_end":3854,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3859,"byte_end":3862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: true, writable: true }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3867,"byte_end":3933,"line_start":131,"line_end":131,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4202,"byte_end":4210,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"readable","qualname":"<Event>::readable","value":"fn readable(usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Only the readable event.","sig":null,"attributes":[{"value":"/ Only the readable event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4082,"byte_end":4110,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4115,"byte_end":4118,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: true, writable: false }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4123,"byte_end":4190,"line_start":142,"line_end":142,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4465,"byte_end":4473,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"writable","qualname":"<Event>::writable","value":"fn writable(usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Only the writable event.","sig":null,"attributes":[{"value":"/ Only the writable event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4345,"byte_end":4373,"line_start":151,"line_end":151,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4378,"byte_end":4381,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: false, writable: true }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4386,"byte_end":4453,"line_start":153,"line_end":153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4715,"byte_end":4719,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"none","qualname":"<Event>::none","value":"fn none(usize) -> Event","parent":null,"children":[],"decl_id":null,"docs":" No events.","sig":null,"attributes":[{"value":"/ No events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4608,"byte_end":4622,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4627,"byte_end":4630,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Equivalent to: `Event { key, readable: false, writable: false }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4635,"byte_end":4703,"line_start":164,"line_end":164,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4890,"byte_end":4896,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"Poller","qualname":"::Poller","value":"Poller {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" Waits for I/O events.\n","sig":null,"attributes":[{"value":"/ Waits for I/O events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4853,"byte_end":4878,"line_start":174,"line_end":174,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5207,"byte_end":5210,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"new","qualname":"<Poller>::new","value":"fn new() -> io::Result<Poller>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new poller.","sig":null,"attributes":[{"value":"/ Creates a new poller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5003,"byte_end":5028,"line_start":182,"line_end":182,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5033,"byte_end":5036,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5041,"byte_end":5055,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5060,"byte_end":5063,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5068,"byte_end":5075,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5080,"byte_end":5104,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5109,"byte_end":5112,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5117,"byte_end":5149,"line_start":189,"line_end":189,"column_start":5,"column_end":37}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5154,"byte_end":5183,"line_start":190,"line_end":190,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5188,"byte_end":5195,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7202,"byte_end":7205,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"add","qualname":"<Poller>::add","value":"fn add<impl Source>(&Self, impl Source, Event) -> io::Result<()> where\nimpl Source: Source","parent":null,"children":[],"decl_id":null,"docs":" Adds a file descriptor or socket to the poller.","sig":null,"attributes":[{"value":"/ Adds a file descriptor or socket to the poller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5418,"byte_end":5469,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5474,"byte_end":5477,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ A file descriptor or socket is considered readable or writable when a read or write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5482,"byte_end":5569,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ operation on it would not block. This doesn't mean the read or write operation will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5574,"byte_end":5661,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/ succeed, it only means the operation will return immediately.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5666,"byte_end":5731,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5736,"byte_end":5739,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If interest is set in both readability and writability, the two kinds of events might be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5744,"byte_end":5836,"line_start":206,"line_end":206,"column_start":5,"column_end":97}},{"value":"/ delivered either separately or together.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5841,"byte_end":5885,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5890,"byte_end":5893,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ For example, interest in `Event { key: 7, readable: true, writable: true }` might result in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5898,"byte_end":5993,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ a single [`Event`] of the same form, or in two separate [`Event`]s:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":5998,"byte_end":6069,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ - `Event { key: 7, readable: true, writable: false }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6074,"byte_end":6131,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/ - `Event { key: 7, readable: false, writable: true }`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6136,"byte_end":6193,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6198,"byte_end":6201,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that interest in I/O events needs to be re-enabled using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6206,"byte_end":6271,"line_start":214,"line_end":214,"column_start":5,"column_end":70}},{"value":"/ [`modify()`][`Poller::modify()`] again after an event is delivered if we're interested in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6276,"byte_end":6369,"line_start":215,"line_end":215,"column_start":5,"column_end":98}},{"value":"/ the next event of the same kind.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6374,"byte_end":6410,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6415,"byte_end":6418,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Don't forget to [`delete()`][`Poller::delete()`] the file descriptor or socket when it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6423,"byte_end":6516,"line_start":218,"line_end":218,"column_start":5,"column_end":98}},{"value":"/ no longer used!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6521,"byte_end":6540,"line_start":219,"line_end":219,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6545,"byte_end":6548,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6553,"byte_end":6565,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6570,"byte_end":6573,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method returns an error in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6578,"byte_end":6639,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6644,"byte_end":6647,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ * If `key` equals `usize::MAX` because that key is reserved for internal use.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6652,"byte_end":6733,"line_start":225,"line_end":225,"column_start":5,"column_end":86}},{"value":"/ * If an error is returned by the syscall.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6738,"byte_end":6783,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6788,"byte_end":6791,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6796,"byte_end":6810,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6815,"byte_end":6818,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Set interest in all events:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6823,"byte_end":6854,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6859,"byte_end":6862,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6867,"byte_end":6880,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/ use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6885,"byte_end":6918,"line_start":233,"line_end":233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6923,"byte_end":6926,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6931,"byte_end":6992,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ source.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":6997,"byte_end":7031,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/ let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7036,"byte_end":7052,"line_start":237,"line_end":237,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7057,"byte_end":7060,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7065,"byte_end":7097,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ poller.add(&source, Event::all(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7102,"byte_end":7144,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7149,"byte_end":7178,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7183,"byte_end":7190,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10069,"byte_end":10075,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"modify","qualname":"<Poller>::modify","value":"fn modify<impl Source>(&Self, impl Source, Event) -> io::Result<()> where\nimpl Source: Source","parent":null,"children":[],"decl_id":null,"docs":" Modifies the interest in a file descriptor or socket.","sig":null,"attributes":[{"value":"/ Modifies the interest in a file descriptor or socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7541,"byte_end":7598,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7603,"byte_end":7606,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method has the same behavior as [`add()`][`Poller::add()`] except it modifies the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7611,"byte_end":7701,"line_start":255,"line_end":255,"column_start":5,"column_end":95}},{"value":"/ interest of a previously added file descriptor or socket.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7706,"byte_end":7767,"line_start":256,"line_end":256,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7772,"byte_end":7775,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ To use this method with a file descriptor or socket, you must first add it using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7780,"byte_end":7864,"line_start":258,"line_end":258,"column_start":5,"column_end":89}},{"value":"/ [`add()`][`Poller::add()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7869,"byte_end":7900,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7905,"byte_end":7908,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Note that interest in I/O events needs to be re-enabled using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7913,"byte_end":7978,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ [`modify()`][`Poller::modify()`] again after an event is delivered if we're interested in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":7983,"byte_end":8076,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ the next event of the same kind.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8081,"byte_end":8117,"line_start":263,"line_end":263,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8122,"byte_end":8125,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8130,"byte_end":8142,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8147,"byte_end":8150,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method returns an error in the following situations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8155,"byte_end":8216,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8221,"byte_end":8224,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ * If `key` equals `usize::MAX` because that key is reserved for internal use.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8229,"byte_end":8310,"line_start":269,"line_end":269,"column_start":5,"column_end":86}},{"value":"/ * If an error is returned by the syscall.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8315,"byte_end":8360,"line_start":270,"line_end":270,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8365,"byte_end":8368,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8373,"byte_end":8387,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8392,"byte_end":8395,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ To enable interest in all events:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8400,"byte_end":8437,"line_start":274,"line_end":274,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8442,"byte_end":8445,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8450,"byte_end":8463,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8468,"byte_end":8503,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8508,"byte_end":8571,"line_start":278,"line_end":278,"column_start":5,"column_end":68}},{"value":"/ # let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8576,"byte_end":8594,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8599,"byte_end":8633,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/ # poller.add(&source, Event::none(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8638,"byte_end":8683,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/ poller.modify(&source, Event::all(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8688,"byte_end":8733,"line_start":282,"line_end":282,"column_start":5,"column_end":50}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8738,"byte_end":8767,"line_start":283,"line_end":283,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8772,"byte_end":8779,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8784,"byte_end":8787,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ To enable interest in readable events and disable interest in writable events:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8792,"byte_end":8874,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8879,"byte_end":8882,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8887,"byte_end":8900,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8905,"byte_end":8940,"line_start":289,"line_end":289,"column_start":5,"column_end":40}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":8945,"byte_end":9008,"line_start":290,"line_end":290,"column_start":5,"column_end":68}},{"value":"/ # let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9013,"byte_end":9031,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9036,"byte_end":9070,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/ # poller.add(&source, Event::none(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9075,"byte_end":9120,"line_start":293,"line_end":293,"column_start":5,"column_end":50}},{"value":"/ poller.modify(&source, Event::readable(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9125,"byte_end":9175,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9180,"byte_end":9209,"line_start":295,"line_end":295,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9214,"byte_end":9221,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9226,"byte_end":9229,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ To disable interest in readable events and enable interest in writable events:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9234,"byte_end":9316,"line_start":298,"line_end":298,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9321,"byte_end":9324,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9329,"byte_end":9342,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9347,"byte_end":9382,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9387,"byte_end":9421,"line_start":302,"line_end":302,"column_start":5,"column_end":39}},{"value":"/ # let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9426,"byte_end":9444,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9449,"byte_end":9512,"line_start":304,"line_end":304,"column_start":5,"column_end":68}},{"value":"/ # poller.add(&source, Event::none(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9517,"byte_end":9562,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/ poller.modify(&source, Event::writable(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9567,"byte_end":9617,"line_start":306,"line_end":306,"column_start":5,"column_end":55}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9622,"byte_end":9651,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9656,"byte_end":9663,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9668,"byte_end":9671,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ To disable interest in all events:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9676,"byte_end":9714,"line_start":310,"line_end":310,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9719,"byte_end":9722,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9727,"byte_end":9740,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ # use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9745,"byte_end":9780,"line_start":313,"line_end":313,"column_start":5,"column_end":40}},{"value":"/ # let source = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9785,"byte_end":9848,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/ # let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9853,"byte_end":9871,"line_start":315,"line_end":315,"column_start":5,"column_end":23}},{"value":"/ # let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9876,"byte_end":9910,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ # poller.add(&source, Event::none(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9915,"byte_end":9960,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/ poller.modify(&source, Event::none(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":9965,"byte_end":10011,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10016,"byte_end":10045,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10050,"byte_end":10057,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11071,"byte_end":11077,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"delete","qualname":"<Poller>::delete","value":"fn delete<impl Source>(&Self, impl Source) -> io::Result<()> where\nimpl Source: Source","parent":null,"children":[],"decl_id":null,"docs":" Removes a file descriptor or socket from the poller.","sig":null,"attributes":[{"value":"/ Removes a file descriptor or socket from the poller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10414,"byte_end":10470,"line_start":331,"line_end":331,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10475,"byte_end":10478,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`add()`][`Poller::add()`], this method only removes the file descriptor or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10483,"byte_end":10569,"line_start":333,"line_end":333,"column_start":5,"column_end":91}},{"value":"/ socket from the poller without putting it back into blocking mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10574,"byte_end":10644,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10649,"byte_end":10652,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10657,"byte_end":10671,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10676,"byte_end":10679,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10684,"byte_end":10691,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10696,"byte_end":10729,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10734,"byte_end":10764,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10769,"byte_end":10772,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10777,"byte_end":10828,"line_start":342,"line_end":342,"column_start":5,"column_end":56}},{"value":"/ socket.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10833,"byte_end":10867,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10872,"byte_end":10888,"line_start":344,"line_end":344,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10893,"byte_end":10896,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10901,"byte_end":10933,"line_start":346,"line_end":346,"column_start":5,"column_end":37}},{"value":"/ poller.add(&socket, Event::all(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10938,"byte_end":10980,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/ poller.delete(&socket)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":10985,"byte_end":11013,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11018,"byte_end":11047,"line_start":349,"line_end":349,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11052,"byte_end":11059,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12593,"byte_end":12597,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"wait","qualname":"<Poller>::wait","value":"fn wait(&Self, &mut Vec<Event>, Option<Duration>) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Waits for at least one I/O event and returns the number of new events.","sig":null,"attributes":[{"value":"/ Waits for at least one I/O event and returns the number of new events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11178,"byte_end":11252,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11257,"byte_end":11260,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ New events will be appended to `events`. If necessary, make sure to clear the [`Vec`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11265,"byte_end":11354,"line_start":357,"line_end":357,"column_start":5,"column_end":94}},{"value":"/ before calling [`wait()`][`Poller::wait()`]!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11359,"byte_end":11407,"line_start":358,"line_end":358,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11412,"byte_end":11415,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This method will return with no new events if a notification is delivered by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11420,"byte_end":11504,"line_start":360,"line_end":360,"column_start":5,"column_end":89}},{"value":"/ [`notify()`] method, or the timeout is reached. Sometimes it may even return with no events","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11509,"byte_end":11604,"line_start":361,"line_end":361,"column_start":5,"column_end":100}},{"value":"/ spuriously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11609,"byte_end":11624,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11629,"byte_end":11632,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Only one thread can wait on I/O. If another thread is already in [`wait()`], concurrent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11637,"byte_end":11728,"line_start":364,"line_end":364,"column_start":5,"column_end":96}},{"value":"/ calls to this method will return immediately with no new events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11733,"byte_end":11801,"line_start":365,"line_end":365,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11806,"byte_end":11809,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If the operating system is ready to deliver a large number of events at once, this method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11814,"byte_end":11907,"line_start":367,"line_end":367,"column_start":5,"column_end":98}},{"value":"/ may decide to deliver them in smaller batches.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11912,"byte_end":11962,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11967,"byte_end":11970,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: `Poller::notify()`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":11975,"byte_end":12011,"line_start":370,"line_end":370,"column_start":5,"column_end":41}},{"value":"/ [`wait()`]: `Poller::wait()`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12016,"byte_end":12048,"line_start":371,"line_end":371,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12053,"byte_end":12056,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12061,"byte_end":12075,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12080,"byte_end":12083,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12088,"byte_end":12095,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use polling::{Event, Poller};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12100,"byte_end":12133,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12138,"byte_end":12168,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12173,"byte_end":12201,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12206,"byte_end":12209,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let socket = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12214,"byte_end":12265,"line_start":380,"line_end":380,"column_start":5,"column_end":56}},{"value":"/ socket.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12270,"byte_end":12304,"line_start":381,"line_end":381,"column_start":5,"column_end":39}},{"value":"/ let key = 7;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12309,"byte_end":12325,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12330,"byte_end":12333,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12338,"byte_end":12370,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/ poller.add(&socket, Event::all(key))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12375,"byte_end":12417,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12422,"byte_end":12425,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let mut events = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12430,"byte_end":12462,"line_start":387,"line_end":387,"column_start":5,"column_end":37}},{"value":"/ let n = poller.wait(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12467,"byte_end":12535,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12540,"byte_end":12569,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":12574,"byte_end":12581,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13945,"byte_end":13951,"line_start":433,"line_end":433,"column_start":12,"column_end":18},"name":"notify","qualname":"<Poller>::notify","value":"fn notify(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wakes up the current or the following invocation of [`wait()`].","sig":null,"attributes":[{"value":"/ Wakes up the current or the following invocation of [`wait()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13308,"byte_end":13375,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13380,"byte_end":13383,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ If no thread is calling [`wait()`] right now, this method will cause the following call","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13388,"byte_end":13479,"line_start":413,"line_end":413,"column_start":5,"column_end":96}},{"value":"/ to wake up immediately.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13484,"byte_end":13511,"line_start":414,"line_end":414,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13516,"byte_end":13519,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ [`wait()`]: `Poller::wait()`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13524,"byte_end":13556,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13561,"byte_end":13564,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13569,"byte_end":13583,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13588,"byte_end":13591,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13596,"byte_end":13603,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use polling::Poller;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13608,"byte_end":13632,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13637,"byte_end":13640,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let poller = Poller::new()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13645,"byte_end":13677,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13682,"byte_end":13685,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // Notify the poller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13690,"byte_end":13715,"line_start":425,"line_end":425,"column_start":5,"column_end":30}},{"value":"/ poller.notify()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13720,"byte_end":13741,"line_start":426,"line_end":426,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13746,"byte_end":13749,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let mut events = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13754,"byte_end":13786,"line_start":428,"line_end":428,"column_start":5,"column_end":37}},{"value":"/ poller.wait(&mut events, None)?; // wakes up immediately","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13791,"byte_end":13851,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13856,"byte_end":13887,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13892,"byte_end":13921,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":13926,"byte_end":13933,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15624,"byte_end":15637,"line_start":504,"line_end":504,"column_start":12,"column_end":25},"name":"as_raw_handle","qualname":"<Poller as std::os::windows::io::AsRawHandle>::as_raw_handle","value":"fn as_raw_handle(&Self) -> RawHandle","parent":{"krate":1,"index":5794},"children":[],"decl_id":{"krate":1,"index":5795},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15929,"byte_end":15932,"line_start":518,"line_end":518,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Poller as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16756,"byte_end":16762,"line_start":548,"line_end":548,"column_start":19,"column_end":25},"name":"Source","qualname":"::Source","value":"Source","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":" A [`RawSocket`] or a reference to a type implementing [`AsRawSocket`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16843,"byte_end":16846,"line_start":550,"line_end":550,"column_start":16,"column_end":19},"name":"raw","qualname":"::Source::raw","value":"fn raw(&Self) -> RawSocket","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Returns the [`RawSocket`] for this I/O object.\n","sig":null,"attributes":[{"value":"/ Returns the [`RawSocket`] for this I/O object.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16777,"byte_end":16827,"line_start":549,"line_end":549,"column_start":13,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16930,"byte_end":16933,"line_start":554,"line_end":554,"column_start":16,"column_end":19},"name":"raw","qualname":"<RawSocket as Source>::raw","value":"fn raw(&Self) -> RawSocket","parent":{"krate":0,"index":168},"children":[],"decl_id":{"krate":0,"index":169},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":17063,"byte_end":17066,"line_start":560,"line_end":560,"column_start":16,"column_end":19},"name":"raw","qualname":"<&'_ T as Source>::raw","value":"fn raw(&Self) -> RawSocket","parent":{"krate":0,"index":168},"children":[],"decl_id":{"krate":0,"index":169},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603899,"byte_end":13603905,"line_start":37,"line_end":37,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603930,"byte_end":13603936,"line_start":38,"line_end":38,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603946,"byte_end":13603952,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13608605,"byte_end":13608611,"line_start":172,"line_end":172,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13608946,"byte_end":13608952,"line_start":186,"line_end":186,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13609520,"byte_end":13609526,"line_start":207,"line_end":207,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13609536,"byte_end":13609542,"line_start":209,"line_end":209,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3794,"byte_end":3799,"line_start":128,"line_end":128,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4990,"byte_end":4996,"line_start":181,"line_end":181,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15604,"byte_end":15610,"line_start":503,"line_end":503,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15913,"byte_end":15919,"line_start":517,"line_end":517,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16903,"byte_end":16912,"line_start":553,"line_end":553,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603899,"byte_end":13603905,"line_start":37,"line_end":37,"column_start":22,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3150}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603930,"byte_end":13603936,"line_start":38,"line_end":38,"column_start":22,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3162}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13603946,"byte_end":13603952,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13608605,"byte_end":13608611,"line_start":172,"line_end":172,"column_start":22,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13608946,"byte_end":13608952,"line_start":186,"line_end":186,"column_start":15,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13609520,"byte_end":13609526,"line_start":207,"line_end":207,"column_start":22,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3150}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\wepoll.rs","byte_start":13609536,"byte_end":13609542,"line_start":209,"line_end":209,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":3794,"byte_end":3799,"line_start":128,"line_end":128,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":4990,"byte_end":4996,"line_start":181,"line_end":181,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15604,"byte_end":15610,"line_start":503,"line_end":503,"column_start":26,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":5794}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":15913,"byte_end":15919,"line_start":517,"line_end":517,"column_start":21,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\polling-2.3.0\\src\\lib.rs","byte_start":16903,"byte_end":16912,"line_start":553,"line_end":553,"column_start":25,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":1,"index":5793},"to":{"krate":0,"index":168}}]}