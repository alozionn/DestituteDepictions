{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_io","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=143ae4af089f83c4","-C","extra-filename=-143ae4af089f83c4","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","concurrent_queue=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libconcurrent_queue-cfb9a7fdf5052c8c.rmeta","--extern","futures_lite=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_lite-ec71dc6ba284b982.rmeta","--extern","log=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\liblog-1dd3e90b8058f4be.rmeta","--extern","once_cell=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libonce_cell-819ed08e05e0f985.rmeta","--extern","parking=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libparking-b62f1b2aabf0a1f7.rmeta","--extern","polling=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libpolling-7c64fddc2b309843.rmeta","--extern","slab=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libslab-e60e2139a106c566.rmeta","--extern","socket2=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libsocket2-ba402a14a26e3010.rmeta","--extern","waker_fn=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libwaker_fn-b1326bf08fcd791a.rmeta","--extern","winapi=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libwinapi-a00e7d918e45a20a.rmeta","--cap-lints","allow","--cfg","async_io_no_io_safety","-L","native=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\build\\wepoll-ffi-c969ef1a281d2b7e\\out","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_io-143ae4af089f83c4.rmeta"},"prelude":{"crate_id":{"name":"async_io","disambiguator":[10815744989608091282,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-lite-1.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":16,"id":{"name":"futures_lite","disambiguator":[4085200745368450539,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[1441963753095972349,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","num":18,"id":{"name":"parking","disambiguator":[5946867893921293462,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","num":19,"id":{"name":"waker_fn","disambiguator":[11825350276565424202,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[2748732991061193384,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":21,"id":{"name":"futures_io","disambiguator":[4903404691194748518,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":22,"id":{"name":"fastrand","disambiguator":[67840404346320079,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":23,"id":{"name":"memchr","disambiguator":[3764855290657491244,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":24,"id":{"name":"socket2","disambiguator":[4122808461488802705,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","num":25,"id":{"name":"winapi","disambiguator":[12804740736339557305,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","num":26,"id":{"name":"once_cell","disambiguator":[10678987216154076725,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":27,"id":{"name":"concurrent_queue","disambiguator":[4202749932227842576,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":28,"id":{"name":"cache_padded","disambiguator":[352611526439087220,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":29,"id":{"name":"polling","disambiguator":[15980128312241325737,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":30,"id":{"name":"cfg_if","disambiguator":[9011972299413683491,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","num":31,"id":{"name":"log","disambiguator":[2643609071996618890,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":32,"id":{"name":"value_bag","disambiguator":[4509803819817264786,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":33,"id":{"name":"ctor","disambiguator":[5086943377281928300,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":34,"id":{"name":"wepoll_ffi","disambiguator":[2648474857639074693,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","num":35,"id":{"name":"slab","disambiguator":[12612427118917540995,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":62277,"line_start":1,"line_end":1914,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3196,"byte_end":3204,"line_start":91,"line_end":91,"column_start":17,"column_end":25},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3224,"byte_end":3232,"line_start":92,"line_end":92,"column_start":19,"column_end":27},"alias_span":null,"name":"Readable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3234,"byte_end":3247,"line_start":92,"line_end":92,"column_start":29,"column_end":42},"alias_span":null,"name":"ReadableOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3249,"byte_end":3257,"line_start":92,"line_end":92,"column_start":44,"column_end":52},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3259,"byte_end":3272,"line_start":92,"line_end":92,"column_start":54,"column_end":67},"alias_span":null,"name":"WritableOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":62277,"line_start":1,"line_end":1914,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":188},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":605},{"krate":0,"index":609},{"krate":0,"index":426},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":513},{"krate":0,"index":520},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":583}],"decl_id":null,"docs":" Async I/O and timers.","sig":null,"attributes":[{"value":"/ Async I/O and timers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides two tools:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30,"byte_end":64,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":65,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Async`], an adapter for standard networking types (and [many other] types) to use in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":69,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/   async programs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":162,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":22}},{"value":"/ * [`Timer`], a future or stream that emits timed events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":184,"byte_end":244,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":245,"byte_end":248,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For concrete async networking types built on top of this crate, see [`async-net`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":249,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":336,"byte_end":339,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [many other]: https://github.com/smol-rs/async-io/tree/master/examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":340,"byte_end":414,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ [`async-net`]: https://docs.rs/async-net","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":415,"byte_end":459,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":460,"byte_end":463,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":464,"byte_end":484,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The first time [`Async`] or [`Timer`] is used, a thread named \"async-io\" will be spawned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":489,"byte_end":582,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ The purpose of this thread is to wait for I/O events reported by the operating system, and then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":583,"byte_end":682,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ wake appropriate futures blocked on I/O or timers when they can be resumed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":683,"byte_end":762,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":763,"byte_end":766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ To wait for the next I/O event, the \"async-io\" thread uses [epoll] on Linux/Android/illumos,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":767,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ [kqueue] on macOS/iOS/BSD, [event ports] on illumos/Solaris, and [wepoll] on Windows. That","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":864,"byte_end":958,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ functionality is provided by the [`polling`] crate.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":959,"byte_end":1014,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1015,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ However, note that you can also process I/O events and wake futures on any thread using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1019,"byte_end":1114,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ [`block_on()`] function. The \"async-io\" thread is therefore just a fallback mechanism","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1115,"byte_end":1204,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ processing I/O events in case no other threads are.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1205,"byte_end":1260,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1261,"byte_end":1264,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1265,"byte_end":1313,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1314,"byte_end":1364,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1365,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1420,"byte_end":1472,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/ [`polling`]: https://docs.rs/polling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1473,"byte_end":1513,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1514,"byte_end":1517,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1518,"byte_end":1532,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1533,"byte_end":1536,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Connect to `example.com:80`, or time out after 10 seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1537,"byte_end":1599,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1600,"byte_end":1603,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1604,"byte_end":1611,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_io::{Async, Timer};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1612,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ use futures_lite::{future::FutureExt, io};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1646,"byte_end":1692,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1693,"byte_end":1696,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1697,"byte_end":1742,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1743,"byte_end":1771,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1772,"byte_end":1775,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1776,"byte_end":1820,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1821,"byte_end":1888,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1889,"byte_end":1892,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).or(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1893,"byte_end":1954,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":1955,"byte_end":2007,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/     Err(io::ErrorKind::TimedOut.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2008,"byte_end":2051,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2052,"byte_end":2058,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2059,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2072,"byte_end":2105,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2106,"byte_end":2113,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":2115,"byte_end":2186,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65456,"byte_end":65464,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"block_on","qualname":"::driver::block_on","value":"fn block_on<T, impl Future<Output = T>>(impl Future<Output = T>) -> T where\nimpl Future<Output = T>: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread on a future, processing I/O events when idle.","sig":null,"attributes":[{"value":"/ Blocks the current thread on a future, processing I/O events when idle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65059,"byte_end":65134,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65135,"byte_end":65138,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65139,"byte_end":65153,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65154,"byte_end":65157,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65158,"byte_end":65165,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65166,"byte_end":65190,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65191,"byte_end":65219,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65220,"byte_end":65223,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ async_io::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65224,"byte_end":65254,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     // This timer will likely be processed by the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65255,"byte_end":65316,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/     // thread rather than the fallback \"async-io\" thread.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65317,"byte_end":65378,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     Timer::after(Duration::from_millis(1)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65379,"byte_end":65432,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65433,"byte_end":65440,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":65441,"byte_end":65448,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86597,"byte_end":86605,"line_start":485,"line_end":485,"column_start":12,"column_end":20},"name":"Readable","qualname":"::reactor::Readable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable`](crate::Async::readable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable`](crate::Async::readable).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86458,"byte_end":86517,"line_start":483,"line_end":483,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86518,"byte_end":86585,"line_start":484,"line_end":484,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86725,"byte_end":86729,"line_start":490,"line_end":490,"column_start":8,"column_end":12},"name":"poll","qualname":"<Readable as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87002,"byte_end":87005,"line_start":498,"line_end":498,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Readable as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87262,"byte_end":87275,"line_start":505,"line_end":505,"column_start":12,"column_end":25},"name":"ReadableOwned","qualname":"::reactor::ReadableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::readable_owned`](crate::Async::readable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::readable_owned`](crate::Async::readable_owned).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87111,"byte_end":87182,"line_start":503,"line_end":503,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87183,"byte_end":87250,"line_start":504,"line_end":504,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87393,"byte_end":87397,"line_start":510,"line_end":510,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadableOwned<T> as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87677,"byte_end":87680,"line_start":518,"line_end":518,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReadableOwned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87930,"byte_end":87938,"line_start":525,"line_end":525,"column_start":12,"column_end":20},"name":"Writable","qualname":"::reactor::Writable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable`](crate::Async::writable).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable`](crate::Async::writable).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87791,"byte_end":87850,"line_start":523,"line_end":523,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87851,"byte_end":87918,"line_start":524,"line_end":524,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88058,"byte_end":88062,"line_start":530,"line_end":530,"column_start":8,"column_end":12},"name":"poll","qualname":"<Writable as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88335,"byte_end":88338,"line_start":538,"line_end":538,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Writable as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88595,"byte_end":88608,"line_start":545,"line_end":545,"column_start":12,"column_end":25},"name":"WritableOwned","qualname":"::reactor::WritableOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for [`Async::writable_owned`](crate::Async::writable_owned).\n","sig":null,"attributes":[{"value":"/ Future for [`Async::writable_owned`](crate::Async::writable_owned).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88444,"byte_end":88515,"line_start":543,"line_end":543,"column_start":1,"column_end":72}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88516,"byte_end":88583,"line_start":544,"line_end":544,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88726,"byte_end":88730,"line_start":550,"line_end":550,"column_start":8,"column_end":12},"name":"poll","qualname":"<WritableOwned<T> as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":89010,"byte_end":89013,"line_start":558,"line_end":558,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WritableOwned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4514,"byte_end":4519,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"Timer","qualname":"::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"decl_id":null,"docs":" A future or stream that emits timed events.","sig":null,"attributes":[{"value":"/ A future or stream that emits timed events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3627,"byte_end":3674,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3675,"byte_end":3678,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Timers are futures that output a single [`Instant`] when they fire.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3679,"byte_end":3750,"line_start":107,"line_end":107,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3751,"byte_end":3754,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Timers are also streams that can output [`Instant`]s periodically.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3755,"byte_end":3825,"line_start":109,"line_end":109,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3826,"byte_end":3829,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3830,"byte_end":3844,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3845,"byte_end":3848,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Sleep for 1 second:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3849,"byte_end":3872,"line_start":113,"line_end":113,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3873,"byte_end":3876,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3877,"byte_end":3884,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3885,"byte_end":3909,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3910,"byte_end":3938,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3939,"byte_end":3942,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3943,"byte_end":3987,"line_start":119,"line_end":119,"column_start":1,"column_end":45}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":3988,"byte_end":4035,"line_start":120,"line_end":120,"column_start":1,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4036,"byte_end":4045,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4046,"byte_end":4053,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4054,"byte_end":4057,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Timeout after 1 second:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4058,"byte_end":4085,"line_start":124,"line_end":124,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4086,"byte_end":4089,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4090,"byte_end":4097,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4098,"byte_end":4122,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::FutureExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4123,"byte_end":4155,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4156,"byte_end":4184,"line_start":129,"line_end":129,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4185,"byte_end":4188,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4189,"byte_end":4233,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/ let addrs = async_net::resolve(\"google.com:80\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4234,"byte_end":4285,"line_start":132,"line_end":132,"column_start":1,"column_end":52}},{"value":"/     .or(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4286,"byte_end":4305,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/         Timer::after(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4306,"byte_end":4362,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/         Err(std::io::ErrorKind::TimedOut.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4363,"byte_end":4415,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4416,"byte_end":4426,"line_start":136,"line_end":136,"column_start":1,"column_end":11}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4427,"byte_end":4443,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4444,"byte_end":4477,"line_start":138,"line_end":138,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":4478,"byte_end":4485,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6133,"byte_end":6138,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"never","qualname":"<Timer>::never","value":"fn never() -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that will never fire.","sig":null,"attributes":[{"value":"/ Creates a timer that will never fire.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5034,"byte_end":5075,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5080,"byte_end":5083,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5088,"byte_end":5102,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5107,"byte_end":5110,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function may also be useful for creating a function with an optional timeout.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5115,"byte_end":5201,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5206,"byte_end":5209,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5214,"byte_end":5221,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5226,"byte_end":5270,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5275,"byte_end":5299,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5304,"byte_end":5337,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5342,"byte_end":5370,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5375,"byte_end":5378,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ async fn run_with_timeout(timeout: Option<Duration>) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5383,"byte_end":5441,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/     let timer = timeout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5446,"byte_end":5473,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/         .map(|timeout| Timer::after(timeout))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5478,"byte_end":5527,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/         .unwrap_or_else(Timer::never);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5532,"byte_end":5574,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5579,"byte_end":5582,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     run_lengthy_operation().or(timer).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5587,"byte_end":5635,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5640,"byte_end":5645,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # // Note that since a Timer as a Future returns an Instant,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5650,"byte_end":5714,"line_start":178,"line_end":178,"column_start":5,"column_end":69}},{"value":"/ # // this function needs to return an Instant to be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5719,"byte_end":5779,"line_start":179,"line_end":179,"column_start":5,"column_end":65}},{"value":"/ # // in \"or\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5784,"byte_end":5801,"line_start":180,"line_end":180,"column_start":5,"column_end":22}},{"value":"/ # async fn run_lengthy_operation() -> std::time::Instant {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5806,"byte_end":5868,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ #    std::time::Instant::now()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5873,"byte_end":5907,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5912,"byte_end":5919,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5924,"byte_end":5927,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // Times out after 5 seconds.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5932,"byte_end":5965,"line_start":185,"line_end":185,"column_start":5,"column_end":38}},{"value":"/ run_with_timeout(Some(Duration::from_secs(5))).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5970,"byte_end":6027,"line_start":186,"line_end":186,"column_start":5,"column_end":62}},{"value":"/ // Does not time out.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6032,"byte_end":6057,"line_start":187,"line_end":187,"column_start":5,"column_end":30}},{"value":"/ run_with_timeout(None).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6062,"byte_end":6095,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6100,"byte_end":6109,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6114,"byte_end":6121,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6615,"byte_end":6620,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"after","qualname":"<Timer>::after","value":"fn after(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once after the given duration of time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6281,"byte_end":6359,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6364,"byte_end":6367,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6372,"byte_end":6386,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6391,"byte_end":6394,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6399,"byte_end":6406,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6411,"byte_end":6435,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6440,"byte_end":6468,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6473,"byte_end":6476,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6481,"byte_end":6525,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/ Timer::after(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6530,"byte_end":6577,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6582,"byte_end":6591,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6596,"byte_end":6603,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7204,"byte_end":7206,"line_start":233,"line_end":233,"column_start":12,"column_end":14},"name":"at","qualname":"<Timer>::at","value":"fn at(Instant) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Creates a timer that emits an event once at the given time instant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6804,"byte_end":6875,"line_start":219,"line_end":219,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6880,"byte_end":6883,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6888,"byte_end":6902,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6907,"byte_end":6910,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6915,"byte_end":6922,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6927,"byte_end":6951,"line_start":224,"line_end":224,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":6956,"byte_end":6995,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7000,"byte_end":7003,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7008,"byte_end":7052,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7057,"byte_end":7086,"line_start":228,"line_end":228,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7091,"byte_end":7135,"line_start":229,"line_end":229,"column_start":5,"column_end":49}},{"value":"/ Timer::at(when).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7140,"byte_end":7166,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7171,"byte_end":7180,"line_start":231,"line_end":231,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7185,"byte_end":7192,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7762,"byte_end":7770,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"interval","qualname":"<Timer>::interval","value":"fn interval(Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7368,"byte_end":7419,"line_start":238,"line_end":238,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7424,"byte_end":7427,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7432,"byte_end":7446,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7451,"byte_end":7454,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7459,"byte_end":7466,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7471,"byte_end":7495,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7500,"byte_end":7532,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7537,"byte_end":7576,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7581,"byte_end":7584,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7589,"byte_end":7633,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7638,"byte_end":7678,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/ Timer::interval(period).next().await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7683,"byte_end":7724,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7729,"byte_end":7738,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7743,"byte_end":7750,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8440,"byte_end":8451,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"interval_at","qualname":"<Timer>::interval_at","value":"fn interval_at(Instant, Duration) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Creates a timer that emits events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Creates a timer that emits events periodically, starting at `start`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":7979,"byte_end":8051,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8056,"byte_end":8059,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8064,"byte_end":8078,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8083,"byte_end":8086,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8091,"byte_end":8098,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8103,"byte_end":8127,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8132,"byte_end":8164,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8169,"byte_end":8208,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8213,"byte_end":8216,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8221,"byte_end":8265,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8270,"byte_end":8301,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8306,"byte_end":8346,"line_start":272,"line_end":272,"column_start":5,"column_end":45}},{"value":"/ Timer::interval_at(start, period).next().await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8351,"byte_end":8402,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8407,"byte_end":8416,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8421,"byte_end":8428,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9228,"byte_end":9237,"line_start":301,"line_end":301,"column_start":12,"column_end":21},"name":"set_after","qualname":"<Timer>::set_after","value":"fn set_after(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an en event once after the given duration of time.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an en event once after the given duration of time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8617,"byte_end":8694,"line_start":284,"line_end":284,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8699,"byte_end":8702,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8707,"byte_end":8785,"line_start":286,"line_end":286,"column_start":5,"column_end":83}},{"value":"/ [`set_after()`][`Timer::set_after()`] does not remove the waker associated with the task","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8790,"byte_end":8882,"line_start":287,"line_end":287,"column_start":5,"column_end":97}},{"value":"/ that is polling the timer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8887,"byte_end":8917,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8922,"byte_end":8925,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8930,"byte_end":8944,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8949,"byte_end":8952,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8957,"byte_end":8964,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8969,"byte_end":8993,"line_start":293,"line_end":293,"column_start":5,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":8998,"byte_end":9026,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9031,"byte_end":9034,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9039,"byte_end":9083,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9088,"byte_end":9141,"line_start":297,"line_end":297,"column_start":5,"column_end":58}},{"value":"/ t.set_after(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9146,"byte_end":9190,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9195,"byte_end":9204,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9209,"byte_end":9216,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10098,"byte_end":10104,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"name":"set_at","qualname":"<Timer>::set_at","value":"fn set_at(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit an event once at the given time instant.","sig":null,"attributes":[{"value":"/ Sets the timer to emit an event once at the given time instant.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9426,"byte_end":9493,"line_start":309,"line_end":309,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9498,"byte_end":9501,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9506,"byte_end":9584,"line_start":311,"line_end":311,"column_start":5,"column_end":83}},{"value":"/ [`set_at()`][`Timer::set_at()`] does not remove the waker associated with the task","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9589,"byte_end":9675,"line_start":312,"line_end":312,"column_start":5,"column_end":91}},{"value":"/ that is polling the timer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9680,"byte_end":9710,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9715,"byte_end":9718,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9723,"byte_end":9737,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9742,"byte_end":9745,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9750,"byte_end":9757,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9762,"byte_end":9786,"line_start":318,"line_end":318,"column_start":5,"column_end":29}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9791,"byte_end":9830,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9835,"byte_end":9838,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9843,"byte_end":9887,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9892,"byte_end":9945,"line_start":322,"line_end":322,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9950,"byte_end":9953,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9958,"byte_end":9987,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/ let when = now + Duration::from_secs(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":9992,"byte_end":10036,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/ t.set_at(when);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10041,"byte_end":10060,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10065,"byte_end":10074,"line_start":327,"line_end":327,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10079,"byte_end":10086,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11285,"byte_end":11297,"line_start":364,"line_end":364,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Timer>::set_interval","value":"fn set_interval(&mut Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10614,"byte_end":10661,"line_start":344,"line_end":344,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10666,"byte_end":10669,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10674,"byte_end":10752,"line_start":346,"line_end":346,"column_start":5,"column_end":83}},{"value":"/ [`set_interval()`][`Timer::set_interval()`] does not remove the waker associated with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10757,"byte_end":10850,"line_start":347,"line_end":347,"column_start":5,"column_end":98}},{"value":"/ task that is polling the timer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10855,"byte_end":10890,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10895,"byte_end":10898,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10903,"byte_end":10917,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10922,"byte_end":10925,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10930,"byte_end":10937,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10942,"byte_end":10966,"line_start":353,"line_end":353,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":10971,"byte_end":11003,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11008,"byte_end":11047,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11052,"byte_end":11055,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11060,"byte_end":11104,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11109,"byte_end":11162,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11167,"byte_end":11170,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11175,"byte_end":11215,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ t.set_interval(period);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11220,"byte_end":11247,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11252,"byte_end":11261,"line_start":362,"line_end":362,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11266,"byte_end":11273,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12255,"byte_end":12270,"line_start":394,"line_end":394,"column_start":12,"column_end":27},"name":"set_interval_at","qualname":"<Timer>::set_interval_at","value":"fn set_interval_at(&mut Self, Instant, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the timer to emit events periodically, starting at `start`.","sig":null,"attributes":[{"value":"/ Sets the timer to emit events periodically, starting at `start`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11511,"byte_end":11579,"line_start":373,"line_end":373,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11584,"byte_end":11587,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Note that resetting a timer is different from creating a new timer because","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11592,"byte_end":11670,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ [`set_interval_at()`][`Timer::set_interval_at()`] does not remove the waker associated with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11675,"byte_end":11770,"line_start":376,"line_end":376,"column_start":5,"column_end":100}},{"value":"/ the task that is polling the timer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11775,"byte_end":11814,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11819,"byte_end":11822,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11827,"byte_end":11841,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11846,"byte_end":11849,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11854,"byte_end":11861,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use async_io::Timer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11866,"byte_end":11890,"line_start":382,"line_end":382,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::StreamExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11895,"byte_end":11927,"line_start":383,"line_end":383,"column_start":5,"column_end":37}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11932,"byte_end":11971,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11976,"byte_end":11979,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":11984,"byte_end":12028,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ let mut t = Timer::after(Duration::from_secs(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12033,"byte_end":12086,"line_start":387,"line_end":387,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12091,"byte_end":12094,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12099,"byte_end":12130,"line_start":389,"line_end":389,"column_start":5,"column_end":36}},{"value":"/ let period = Duration::from_secs(2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12135,"byte_end":12175,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/ t.set_interval_at(start, period);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12180,"byte_end":12217,"line_start":391,"line_end":391,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12222,"byte_end":12231,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12236,"byte_end":12243,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12818,"byte_end":12822,"line_start":411,"line_end":411,"column_start":8,"column_end":12},"name":"drop","qualname":"<Timer as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13104,"byte_end":13108,"line_start":422,"line_end":422,"column_start":8,"column_end":12},"name":"poll","qualname":"<Timer as futures_lite::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13439,"byte_end":13448,"line_start":434,"line_end":434,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Timer as futures_lite::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18989,"byte_end":18994,"line_start":568,"line_end":568,"column_start":12,"column_end":17},"name":"Async","qualname":"::Async","value":"Async {  }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Async adapter for I/O types.","sig":null,"attributes":[{"value":"/ Async adapter for I/O types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15258,"byte_end":15290,"line_start":476,"line_end":476,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15291,"byte_end":15294,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ This type puts an I/O handle into non-blocking mode, registers it in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15295,"byte_end":15367,"line_start":478,"line_end":478,"column_start":1,"column_end":73}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll], and then provides an async interface for it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15368,"byte_end":15457,"line_start":479,"line_end":479,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15458,"byte_end":15461,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15462,"byte_end":15510,"line_start":481,"line_end":481,"column_start":1,"column_end":49}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15511,"byte_end":15561,"line_start":482,"line_end":482,"column_start":1,"column_end":51}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15562,"byte_end":15616,"line_start":483,"line_end":483,"column_start":1,"column_end":55}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15617,"byte_end":15669,"line_start":484,"line_end":484,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15670,"byte_end":15673,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15674,"byte_end":15687,"line_start":486,"line_end":486,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15688,"byte_end":15691,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ [`Async`] is a low-level primitive, and as such it comes with some caveats.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15692,"byte_end":15771,"line_start":488,"line_end":488,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15772,"byte_end":15775,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ For higher-level primitives built on top of [`Async`], look into [`async-net`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15776,"byte_end":15861,"line_start":490,"line_end":490,"column_start":1,"column_end":86}},{"value":"/ [`async-process`] (on Unix).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15862,"byte_end":15894,"line_start":491,"line_end":491,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15895,"byte_end":15898,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ [`async-net`]: https://github.com/smol-rs/async-net","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15899,"byte_end":15954,"line_start":493,"line_end":493,"column_start":1,"column_end":56}},{"value":"/ [`async-process`]: https://github.com/smol-rs/async-process","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":15955,"byte_end":16018,"line_start":494,"line_end":494,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16019,"byte_end":16022,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ ### Supported types","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16023,"byte_end":16046,"line_start":496,"line_end":496,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16047,"byte_end":16050,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ [`Async`] supports all networking types, as well as some OS-specific file descriptors like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16051,"byte_end":16145,"line_start":498,"line_end":498,"column_start":1,"column_end":95}},{"value":"/ [timerfd] and [inotify].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16146,"byte_end":16174,"line_start":499,"line_end":499,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16175,"byte_end":16178,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ However, do not use [`Async`] with types like [`File`][`std::fs::File`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16179,"byte_end":16255,"line_start":501,"line_end":501,"column_start":1,"column_end":77}},{"value":"/ [`Stdin`][`std::io::Stdin`], [`Stdout`][`std::io::Stdout`], or [`Stderr`][`std::io::Stderr`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16256,"byte_end":16352,"line_start":502,"line_end":502,"column_start":1,"column_end":97}},{"value":"/ because all operating systems have issues with them when put in non-blocking mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16353,"byte_end":16439,"line_start":503,"line_end":503,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16440,"byte_end":16443,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ [timerfd]: https://github.com/smol-rs/async-io/blob/master/examples/linux-timerfd.rs","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16444,"byte_end":16532,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/ [inotify]: https://github.com/smol-rs/async-io/blob/master/examples/linux-inotify.rs","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16533,"byte_end":16621,"line_start":506,"line_end":506,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16622,"byte_end":16625,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ ### Concurrent I/O","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16626,"byte_end":16648,"line_start":508,"line_end":508,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16649,"byte_end":16652,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ Note that [`&Async<T>`][`Async`] implements [`AsyncRead`] and [`AsyncWrite`] if `&T`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16653,"byte_end":16741,"line_start":510,"line_end":510,"column_start":1,"column_end":89}},{"value":"/ implements those traits, which means tasks can concurrently read and write using shared","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16742,"byte_end":16833,"line_start":511,"line_end":511,"column_start":1,"column_end":92}},{"value":"/ references.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16834,"byte_end":16849,"line_start":512,"line_end":512,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16850,"byte_end":16853,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ But there is a catch: only one task can read a time, and only one task can write at a time. It","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16854,"byte_end":16952,"line_start":514,"line_end":514,"column_start":1,"column_end":99}},{"value":"/ is okay to have two tasks where one is reading and the other is writing at the same time, but","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":16953,"byte_end":17050,"line_start":515,"line_end":515,"column_start":1,"column_end":98}},{"value":"/ it is not okay to have two tasks reading at the same time or writing at the same time. If you","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17051,"byte_end":17148,"line_start":516,"line_end":516,"column_start":1,"column_end":98}},{"value":"/ try to do that, conflicting tasks will just keep waking each other in turn, thus wasting CPU","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17149,"byte_end":17245,"line_start":517,"line_end":517,"column_start":1,"column_end":97}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17246,"byte_end":17255,"line_start":518,"line_end":518,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17256,"byte_end":17259,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ Besides [`AsyncRead`] and [`AsyncWrite`], this caveat also applies to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17260,"byte_end":17333,"line_start":520,"line_end":520,"column_start":1,"column_end":74}},{"value":"/ [`poll_readable()`][`Async::poll_readable()`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17334,"byte_end":17387,"line_start":521,"line_end":521,"column_start":1,"column_end":54}},{"value":"/ [`poll_writable()`][`Async::poll_writable()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17388,"byte_end":17438,"line_start":522,"line_end":522,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17439,"byte_end":17442,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ However, any number of tasks can be concurrently calling other methods like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17443,"byte_end":17522,"line_start":524,"line_end":524,"column_start":1,"column_end":80}},{"value":"/ [`readable()`][`Async::readable()`] or [`read_with()`][`Async::read_with()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17523,"byte_end":17604,"line_start":525,"line_end":525,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17605,"byte_end":17608,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ ### Closing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17609,"byte_end":17624,"line_start":527,"line_end":527,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17625,"byte_end":17628,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Closing the write side of [`Async`] with [`close()`][`futures_lite::AsyncWriteExt::close()`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17629,"byte_end":17725,"line_start":529,"line_end":529,"column_start":1,"column_end":97}},{"value":"/ simply flushes. If you want to shutdown a TCP or Unix socket, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17726,"byte_end":17795,"line_start":530,"line_end":530,"column_start":1,"column_end":70}},{"value":"/ [`Shutdown`][`std::net::Shutdown`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17796,"byte_end":17835,"line_start":531,"line_end":531,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17836,"byte_end":17839,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17840,"byte_end":17854,"line_start":533,"line_end":533,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17855,"byte_end":17858,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ Connect to a server and echo incoming messages back to the server:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17859,"byte_end":17929,"line_start":535,"line_end":535,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17930,"byte_end":17933,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17934,"byte_end":17947,"line_start":537,"line_end":537,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17948,"byte_end":17972,"line_start":538,"line_end":538,"column_start":1,"column_end":25}},{"value":"/ use futures_lite::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17973,"byte_end":17998,"line_start":539,"line_end":539,"column_start":1,"column_end":26}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":17999,"byte_end":18027,"line_start":540,"line_end":540,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18028,"byte_end":18031,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18032,"byte_end":18076,"line_start":542,"line_end":542,"column_start":1,"column_end":45}},{"value":"/ // Connect to a local server.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18077,"byte_end":18110,"line_start":543,"line_end":543,"column_start":1,"column_end":34}},{"value":"/ let stream = Async::<TcpStream>::connect(([127, 0, 0, 1], 8000)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18111,"byte_end":18187,"line_start":544,"line_end":544,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18188,"byte_end":18191,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ // Echo all messages from the read side of the stream into the write side.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18192,"byte_end":18270,"line_start":546,"line_end":546,"column_start":1,"column_end":79}},{"value":"/ io::copy(&stream, &stream).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18271,"byte_end":18309,"line_start":547,"line_end":547,"column_start":1,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18310,"byte_end":18343,"line_start":548,"line_end":548,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18344,"byte_end":18351,"line_start":549,"line_end":549,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18352,"byte_end":18355,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ You can use either predefined async methods or wrap blocking I/O operations in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18356,"byte_end":18438,"line_start":551,"line_end":551,"column_start":1,"column_end":83}},{"value":"/ [`Async::read_with()`], [`Async::read_with_mut()`], [`Async::write_with()`], and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18439,"byte_end":18523,"line_start":552,"line_end":552,"column_start":1,"column_end":85}},{"value":"/ [`Async::write_with_mut()`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18524,"byte_end":18556,"line_start":553,"line_end":553,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18557,"byte_end":18560,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18561,"byte_end":18574,"line_start":555,"line_end":555,"column_start":1,"column_end":14}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18575,"byte_end":18599,"line_start":556,"line_end":556,"column_start":1,"column_end":25}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18600,"byte_end":18630,"line_start":557,"line_end":557,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18631,"byte_end":18634,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18635,"byte_end":18679,"line_start":559,"line_end":559,"column_start":1,"column_end":45}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18680,"byte_end":18748,"line_start":560,"line_end":560,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18749,"byte_end":18752,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ // These two lines are equivalent:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18753,"byte_end":18791,"line_start":562,"line_end":562,"column_start":1,"column_end":39}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18792,"byte_end":18842,"line_start":563,"line_end":563,"column_start":1,"column_end":51}},{"value":"/ let (stream, addr) = listener.read_with(|inner| inner.accept()).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18843,"byte_end":18918,"line_start":564,"line_end":564,"column_start":1,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18919,"byte_end":18952,"line_start":565,"line_end":565,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":18953,"byte_end":18960,"line_start":566,"line_end":566,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22370,"byte_end":22373,"line_start":683,"line_end":683,"column_start":12,"column_end":15},"name":"new","qualname":"<Async<T>>::new","value":"fn new(T) -> io::Result<Async<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an async I/O handle.","sig":null,"attributes":[{"value":"/ Creates an async I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21469,"byte_end":21501,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21506,"byte_end":21509,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This method will put the handle in non-blocking mode and register it in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21514,"byte_end":21589,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ [epoll]/[kqueue]/[event ports]/[wepoll].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21594,"byte_end":21638,"line_start":662,"line_end":662,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21643,"byte_end":21646,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ On Unix systems, the handle must implement `AsRawFd`, while on Windows it must implement","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21651,"byte_end":21743,"line_start":664,"line_end":664,"column_start":5,"column_end":97}},{"value":"/ `AsRawSocket`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21748,"byte_end":21766,"line_start":665,"line_end":665,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21771,"byte_end":21774,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ [epoll]: https://en.wikipedia.org/wiki/Epoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21779,"byte_end":21827,"line_start":667,"line_end":667,"column_start":5,"column_end":53}},{"value":"/ [kqueue]: https://en.wikipedia.org/wiki/Kqueue","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21832,"byte_end":21882,"line_start":668,"line_end":668,"column_start":5,"column_end":55}},{"value":"/ [event ports]: https://illumos.org/man/port_create","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21887,"byte_end":21941,"line_start":669,"line_end":669,"column_start":5,"column_end":59}},{"value":"/ [wepoll]: https://github.com/piscisaureus/wepoll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21946,"byte_end":21998,"line_start":670,"line_end":670,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22003,"byte_end":22006,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22011,"byte_end":22025,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22030,"byte_end":22033,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22038,"byte_end":22045,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22050,"byte_end":22074,"line_start":675,"line_end":675,"column_start":5,"column_end":29}},{"value":"/ use std::net::{SocketAddr, TcpListener};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22079,"byte_end":22123,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22128,"byte_end":22131,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22136,"byte_end":22180,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ let listener = TcpListener::bind(SocketAddr::from(([127, 0, 0, 1], 0)))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22185,"byte_end":22262,"line_start":679,"line_end":679,"column_start":5,"column_end":82}},{"value":"/ let listener = Async::new(listener)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22267,"byte_end":22308,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22313,"byte_end":22346,"line_start":681,"line_end":681,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":22351,"byte_end":22358,"line_start":682,"line_end":682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23086,"byte_end":23099,"line_start":712,"line_end":712,"column_start":8,"column_end":21},"name":"as_raw_socket","qualname":"<Async<T> as std::os::windows::io::AsRawSocket>::as_raw_socket","value":"fn as_raw_socket(&Self) -> RawSocket","parent":{"krate":1,"index":5822},"children":[],"decl_id":{"krate":1,"index":5823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24270,"byte_end":24277,"line_start":756,"line_end":756,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Async<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a reference to the inner I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23882,"byte_end":23927,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23932,"byte_end":23935,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23940,"byte_end":23954,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23959,"byte_end":23962,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23967,"byte_end":23974,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23979,"byte_end":24003,"line_start":748,"line_end":748,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24008,"byte_end":24038,"line_start":749,"line_end":749,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24043,"byte_end":24046,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24051,"byte_end":24095,"line_start":751,"line_end":751,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24100,"byte_end":24168,"line_start":752,"line_end":752,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.get_ref();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24173,"byte_end":24208,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24213,"byte_end":24246,"line_start":754,"line_end":754,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24251,"byte_end":24258,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24738,"byte_end":24745,"line_start":773,"line_end":773,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Async<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner I/O handle.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24338,"byte_end":24391,"line_start":760,"line_end":760,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24396,"byte_end":24399,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24404,"byte_end":24418,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24423,"byte_end":24426,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24431,"byte_end":24438,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24443,"byte_end":24467,"line_start":765,"line_end":765,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24472,"byte_end":24502,"line_start":766,"line_end":766,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24507,"byte_end":24510,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24515,"byte_end":24559,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24564,"byte_end":24636,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ let inner = listener.get_mut();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24641,"byte_end":24676,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24681,"byte_end":24714,"line_start":771,"line_end":771,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24719,"byte_end":24726,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25379,"byte_end":25389,"line_start":795,"line_end":795,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Async<T>>::into_inner","value":"fn into_inner(Self) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the inner I/O handle.","sig":null,"attributes":[{"value":"/ Unwraps the inner I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24814,"byte_end":24847,"line_start":777,"line_end":777,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24852,"byte_end":24855,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This method will **not** put the I/O handle back into blocking mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24860,"byte_end":24932,"line_start":779,"line_end":779,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24937,"byte_end":24940,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24945,"byte_end":24959,"line_start":781,"line_end":781,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24964,"byte_end":24967,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24972,"byte_end":24979,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":24984,"byte_end":25008,"line_start":784,"line_end":784,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25013,"byte_end":25043,"line_start":785,"line_end":785,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25048,"byte_end":25051,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25056,"byte_end":25100,"line_start":787,"line_end":787,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25105,"byte_end":25173,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ let inner = listener.into_inner()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25178,"byte_end":25217,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25222,"byte_end":25225,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // Put the listener back into blocking mode.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25230,"byte_end":25278,"line_start":791,"line_end":791,"column_start":5,"column_end":53}},{"value":"/ inner.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25283,"byte_end":25317,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25322,"byte_end":25355,"line_start":793,"line_end":793,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25360,"byte_end":25367,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26079,"byte_end":26087,"line_start":818,"line_end":818,"column_start":12,"column_end":20},"name":"readable","qualname":"<Async<T>>::readable","value":"fn readable(&Self) -> Readable<, T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25536,"byte_end":25579,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25584,"byte_end":25587,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25592,"byte_end":25674,"line_start":803,"line_end":803,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25679,"byte_end":25682,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25687,"byte_end":25701,"line_start":805,"line_end":805,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25706,"byte_end":25709,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25714,"byte_end":25727,"line_start":807,"line_end":807,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25732,"byte_end":25756,"line_start":808,"line_end":808,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25761,"byte_end":25791,"line_start":809,"line_end":809,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25796,"byte_end":25799,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25804,"byte_end":25848,"line_start":811,"line_end":811,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25853,"byte_end":25925,"line_start":812,"line_end":812,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25930,"byte_end":25933,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25938,"byte_end":25981,"line_start":814,"line_end":814,"column_start":5,"column_end":48}},{"value":"/ listener.readable().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":25986,"byte_end":26017,"line_start":815,"line_end":815,"column_start":5,"column_end":36}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26022,"byte_end":26055,"line_start":816,"line_end":816,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26060,"byte_end":26067,"line_start":817,"line_end":817,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26308,"byte_end":26322,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"readable_owned","qualname":"<Async<T>>::readable_owned","value":"fn readable_owned(Arc<Self>) -> ReadableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is readable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is readable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26158,"byte_end":26201,"line_start":822,"line_end":822,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26206,"byte_end":26209,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ This method completes when a read operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26214,"byte_end":26296,"line_start":824,"line_end":824,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27017,"byte_end":27025,"line_start":847,"line_end":847,"column_start":12,"column_end":20},"name":"writable","qualname":"<Async<T>>::writable","value":"fn writable(&Self) -> Writable<, T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26410,"byte_end":26453,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26458,"byte_end":26461,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26466,"byte_end":26549,"line_start":831,"line_end":831,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26554,"byte_end":26557,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26562,"byte_end":26576,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26581,"byte_end":26584,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26589,"byte_end":26596,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26601,"byte_end":26625,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26630,"byte_end":26675,"line_start":837,"line_end":837,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26680,"byte_end":26683,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26688,"byte_end":26732,"line_start":839,"line_end":839,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26737,"byte_end":26804,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26809,"byte_end":26867,"line_start":841,"line_end":841,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26872,"byte_end":26875,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26880,"byte_end":26921,"line_start":843,"line_end":843,"column_start":5,"column_end":46}},{"value":"/ stream.writable().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26926,"byte_end":26955,"line_start":844,"line_end":844,"column_start":5,"column_end":34}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26960,"byte_end":26993,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":26998,"byte_end":27005,"line_start":846,"line_end":846,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27247,"byte_end":27261,"line_start":854,"line_end":854,"column_start":12,"column_end":26},"name":"writable_owned","qualname":"<Async<T>>::writable_owned","value":"fn writable_owned(Arc<Self>) -> WritableOwned<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits until the I/O handle is writable.","sig":null,"attributes":[{"value":"/ Waits until the I/O handle is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27096,"byte_end":27139,"line_start":851,"line_end":851,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27144,"byte_end":27147,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This method completes when a write operation on this I/O handle wouldn't block.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27152,"byte_end":27235,"line_start":853,"line_end":853,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28382,"byte_end":28395,"line_start":885,"line_end":885,"column_start":12,"column_end":25},"name":"poll_readable","qualname":"<Async<T>>::poll_readable","value":"fn poll_readable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for readability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for readability.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27349,"byte_end":27390,"line_start":858,"line_end":858,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27395,"byte_end":27398,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27403,"byte_end":27489,"line_start":860,"line_end":860,"column_start":5,"column_end":91}},{"value":"/ indicating readability since the last time this task has called the method and received","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27494,"byte_end":27585,"line_start":861,"line_end":861,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27590,"byte_end":27612,"line_start":862,"line_end":862,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27617,"byte_end":27620,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27625,"byte_end":27638,"line_start":864,"line_end":864,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27643,"byte_end":27646,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27651,"byte_end":27745,"line_start":866,"line_end":866,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27750,"byte_end":27818,"line_start":867,"line_end":867,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27823,"byte_end":27826,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncRead`] implementation for [`Async`] also uses this method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27831,"byte_end":27914,"line_start":869,"line_end":869,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27919,"byte_end":27922,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27927,"byte_end":27941,"line_start":871,"line_end":871,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27946,"byte_end":27949,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27954,"byte_end":27967,"line_start":873,"line_end":873,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":27972,"byte_end":27996,"line_start":874,"line_end":874,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28001,"byte_end":28030,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28035,"byte_end":28065,"line_start":876,"line_end":876,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28070,"byte_end":28073,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28078,"byte_end":28122,"line_start":878,"line_end":878,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28127,"byte_end":28199,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28204,"byte_end":28207,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ // Wait until a client can be accepted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28212,"byte_end":28255,"line_start":881,"line_end":881,"column_start":5,"column_end":48}},{"value":"/ future::poll_fn(|cx| listener.poll_readable(cx)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28260,"byte_end":28320,"line_start":882,"line_end":882,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28325,"byte_end":28358,"line_start":883,"line_end":883,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28363,"byte_end":28370,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29597,"byte_end":29610,"line_start":917,"line_end":917,"column_start":12,"column_end":25},"name":"poll_writable","qualname":"<Async<T>>::poll_writable","value":"fn poll_writable(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the I/O handle for writability.","sig":null,"attributes":[{"value":"/ Polls the I/O handle for writability.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28500,"byte_end":28541,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28546,"byte_end":28549,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ When this method returns [`Poll::Ready`], that means the OS has delivered an event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28554,"byte_end":28640,"line_start":891,"line_end":891,"column_start":5,"column_end":91}},{"value":"/ indicating writability since the last time this task has called the method and received","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28645,"byte_end":28736,"line_start":892,"line_end":892,"column_start":5,"column_end":96}},{"value":"/ [`Poll::Pending`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28741,"byte_end":28763,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28768,"byte_end":28771,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28776,"byte_end":28789,"line_start":895,"line_end":895,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28794,"byte_end":28797,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ Two different tasks should not call this method concurrently. Otherwise, conflicting tasks","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28802,"byte_end":28896,"line_start":897,"line_end":897,"column_start":5,"column_end":99}},{"value":"/ will just keep waking each other in turn, thus wasting CPU time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28901,"byte_end":28969,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28974,"byte_end":28977,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Note that the [`AsyncWrite`] implementation for [`Async`] also uses this method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":28982,"byte_end":29066,"line_start":900,"line_end":900,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29071,"byte_end":29074,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29079,"byte_end":29093,"line_start":902,"line_end":902,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29098,"byte_end":29101,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29106,"byte_end":29113,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29118,"byte_end":29142,"line_start":905,"line_end":905,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::future;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29147,"byte_end":29176,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29181,"byte_end":29226,"line_start":907,"line_end":907,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29231,"byte_end":29234,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29239,"byte_end":29283,"line_start":909,"line_end":909,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29288,"byte_end":29355,"line_start":910,"line_end":910,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29360,"byte_end":29418,"line_start":911,"line_end":911,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29423,"byte_end":29426,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29431,"byte_end":29472,"line_start":913,"line_end":913,"column_start":5,"column_end":46}},{"value":"/ future::poll_fn(|cx| stream.poll_writable(cx)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29477,"byte_end":29535,"line_start":914,"line_end":914,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29540,"byte_end":29573,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29578,"byte_end":29585,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30629,"byte_end":30638,"line_start":943,"line_end":943,"column_start":18,"column_end":27},"name":"read_with","qualname":"<Async<T>>::read_with","value":"async fn read_with<R, '_,\nimpl FnMut(&T) -> io::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/ where impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\nio::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29715,"byte_end":29760,"line_start":921,"line_end":921,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29765,"byte_end":29768,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29773,"byte_end":29862,"line_start":923,"line_end":923,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29867,"byte_end":29954,"line_start":924,"line_end":924,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":29959,"byte_end":30050,"line_start":925,"line_end":925,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30055,"byte_end":30112,"line_start":926,"line_end":926,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30117,"byte_end":30120,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30125,"byte_end":30187,"line_start":928,"line_end":928,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30192,"byte_end":30195,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30200,"byte_end":30214,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30219,"byte_end":30222,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30227,"byte_end":30240,"line_start":932,"line_end":932,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30245,"byte_end":30269,"line_start":933,"line_end":933,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30274,"byte_end":30304,"line_start":934,"line_end":934,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30309,"byte_end":30312,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30317,"byte_end":30361,"line_start":936,"line_end":936,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30366,"byte_end":30434,"line_start":937,"line_end":937,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30439,"byte_end":30442,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30447,"byte_end":30489,"line_start":939,"line_end":939,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with(|l| l.accept()).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30494,"byte_end":30561,"line_start":940,"line_end":940,"column_start":5,"column_end":72}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30566,"byte_end":30599,"line_start":941,"line_end":941,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30604,"byte_end":30611,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31899,"byte_end":31912,"line_start":976,"line_end":976,"column_start":18,"column_end":31},"name":"read_with_mut","qualname":"<Async<T>>::read_with_mut","value":"async fn read_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>>(&'_ mut Self,\nimpl FnMut(&mut T) -> io::Result<R>) -> /*impl Trait*/ where\nimpl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a read operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a read operation asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":30976,"byte_end":31021,"line_start":954,"line_end":954,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31026,"byte_end":31029,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31034,"byte_end":31123,"line_start":956,"line_end":956,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31128,"byte_end":31215,"line_start":957,"line_end":957,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31220,"byte_end":31311,"line_start":958,"line_end":958,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is readable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31316,"byte_end":31373,"line_start":959,"line_end":959,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31378,"byte_end":31381,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31386,"byte_end":31449,"line_start":961,"line_end":961,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31454,"byte_end":31457,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31462,"byte_end":31476,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31481,"byte_end":31484,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31489,"byte_end":31502,"line_start":965,"line_end":965,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31507,"byte_end":31531,"line_start":966,"line_end":966,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31536,"byte_end":31566,"line_start":967,"line_end":967,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31571,"byte_end":31574,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31579,"byte_end":31623,"line_start":969,"line_end":969,"column_start":5,"column_end":49}},{"value":"/ let mut listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31628,"byte_end":31700,"line_start":970,"line_end":970,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31705,"byte_end":31708,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ // Accept a new client asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31713,"byte_end":31755,"line_start":972,"line_end":972,"column_start":5,"column_end":47}},{"value":"/ let (stream, addr) = listener.read_with_mut(|l| l.accept()).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31760,"byte_end":31831,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31836,"byte_end":31869,"line_start":974,"line_end":974,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":31874,"byte_end":31881,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33216,"byte_end":33226,"line_start":1013,"line_end":1013,"column_start":18,"column_end":28},"name":"write_with","qualname":"<Async<T>>::write_with","value":"async fn write_with<R, '_,\nimpl FnMut(&T) -> io::Result<R>>(&'_ Self, impl FnMut(&T) -> io::Result<R>)\n-> /*impl Trait*/ where impl FnMut(&T) -> io::Result<R>: FnMut(&T) ->\nio::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32281,"byte_end":32327,"line_start":990,"line_end":990,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32332,"byte_end":32335,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32340,"byte_end":32429,"line_start":992,"line_end":992,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32434,"byte_end":32521,"line_start":993,"line_end":993,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32526,"byte_end":32617,"line_start":994,"line_end":994,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32622,"byte_end":32679,"line_start":995,"line_end":995,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32684,"byte_end":32687,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The closure receives a shared reference to the I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32692,"byte_end":32754,"line_start":997,"line_end":997,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32759,"byte_end":32762,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32767,"byte_end":32781,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32786,"byte_end":32789,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32794,"byte_end":32807,"line_start":1001,"line_end":1001,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32812,"byte_end":32836,"line_start":1002,"line_end":1002,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32841,"byte_end":32869,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32874,"byte_end":32877,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32882,"byte_end":32926,"line_start":1005,"line_end":1005,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":32931,"byte_end":32998,"line_start":1006,"line_end":1006,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33003,"byte_end":33051,"line_start":1007,"line_end":1007,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33056,"byte_end":33059,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33064,"byte_end":33087,"line_start":1009,"line_end":1009,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with(|s| s.send(msg)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33092,"byte_end":33148,"line_start":1010,"line_end":1010,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33153,"byte_end":33186,"line_start":1011,"line_end":1011,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33191,"byte_end":33198,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34508,"byte_end":34522,"line_start":1047,"line_end":1047,"column_start":18,"column_end":32},"name":"write_with_mut","qualname":"<Async<T>>::write_with_mut","value":"async fn write_with_mut<R, '_,\nimpl FnMut(&mut T) -> io::Result<R>>(&'_ mut Self,\nimpl FnMut(&mut T) -> io::Result<R>) -> /*impl Trait*/ where\nimpl FnMut(&mut T) -> io::Result<R>: FnMut(&mut T) -> io::Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Performs a write operation asynchronously.","sig":null,"attributes":[{"value":"/ Performs a write operation asynchronously.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33564,"byte_end":33610,"line_start":1024,"line_end":1024,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33615,"byte_end":33618,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ The I/O handle is registered in the reactor and put in non-blocking mode. This method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33623,"byte_end":33712,"line_start":1026,"line_end":1026,"column_start":5,"column_end":94}},{"value":"/ invokes the `op` closure in a loop until it succeeds or returns an error other than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33717,"byte_end":33804,"line_start":1027,"line_end":1027,"column_start":5,"column_end":92}},{"value":"/ [`io::ErrorKind::WouldBlock`]. In between iterations of the loop, it waits until the OS","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33809,"byte_end":33900,"line_start":1028,"line_end":1028,"column_start":5,"column_end":96}},{"value":"/ sends a notification that the I/O handle is writable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33905,"byte_end":33962,"line_start":1029,"line_end":1029,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33967,"byte_end":33970,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The closure receives a mutable reference to the I/O handle.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":33975,"byte_end":34038,"line_start":1031,"line_end":1031,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34043,"byte_end":34046,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34051,"byte_end":34065,"line_start":1033,"line_end":1033,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34070,"byte_end":34073,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34078,"byte_end":34091,"line_start":1035,"line_end":1035,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34096,"byte_end":34120,"line_start":1036,"line_end":1036,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34125,"byte_end":34153,"line_start":1037,"line_end":1037,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34158,"byte_end":34161,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34166,"byte_end":34210,"line_start":1039,"line_end":1039,"column_start":5,"column_end":49}},{"value":"/ let mut socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34215,"byte_end":34286,"line_start":1040,"line_end":1040,"column_start":5,"column_end":76}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34291,"byte_end":34339,"line_start":1041,"line_end":1041,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34344,"byte_end":34347,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34352,"byte_end":34375,"line_start":1043,"line_end":1043,"column_start":5,"column_end":28}},{"value":"/ let len = socket.write_with_mut(|s| s.send(msg)).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34380,"byte_end":34440,"line_start":1044,"line_end":1044,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34445,"byte_end":34478,"line_start":1045,"line_end":1045,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34483,"byte_end":34490,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34928,"byte_end":34934,"line_start":1063,"line_end":1063,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Async<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35021,"byte_end":35027,"line_start":1069,"line_end":1069,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Async<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3050},"children":[],"decl_id":{"krate":2,"index":3052},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35118,"byte_end":35122,"line_start":1075,"line_end":1075,"column_start":8,"column_end":12},"name":"drop","qualname":"<Async<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35448,"byte_end":35457,"line_start":1087,"line_end":1087,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Async<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35855,"byte_end":35873,"line_start":1101,"line_end":1101,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Async<T> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":36361,"byte_end":36370,"line_start":1120,"line_end":1120,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ Async<T> as futures_lite::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":36759,"byte_end":36777,"line_start":1134,"line_end":1134,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<&'_ Async<T> as futures_lite::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored(Pin<&mut Self>, &mut Context, &mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":39},"children":[],"decl_id":{"krate":21,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":37232,"byte_end":37242,"line_start":1150,"line_end":1150,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":37637,"byte_end":37656,"line_start":1164,"line_end":1164,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":38071,"byte_end":38081,"line_start":1178,"line_end":1178,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":38427,"byte_end":38437,"line_start":1188,"line_end":1188,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Async<T> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":38619,"byte_end":38629,"line_start":1197,"line_end":1197,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39015,"byte_end":39034,"line_start":1211,"line_end":1211,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39440,"byte_end":39450,"line_start":1225,"line_end":1225,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39787,"byte_end":39797,"line_start":1235,"line_end":1235,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<&'_ Async<T> as futures_lite::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":21,"index":42},"children":[],"decl_id":{"krate":21,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40454,"byte_end":40458,"line_start":1256,"line_end":1256,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<TcpListener>>::bind","value":"fn bind<A>(A) -> io::Result<Async<TcpListener>> where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP listener bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP listener bound to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39935,"byte_end":39993,"line_start":1241,"line_end":1241,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39998,"byte_end":40001,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40006,"byte_end":40080,"line_start":1243,"line_end":1243,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40085,"byte_end":40088,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40093,"byte_end":40107,"line_start":1245,"line_end":1245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40112,"byte_end":40115,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40120,"byte_end":40127,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40132,"byte_end":40156,"line_start":1248,"line_end":1248,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40161,"byte_end":40191,"line_start":1249,"line_end":1249,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40196,"byte_end":40199,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40204,"byte_end":40248,"line_start":1251,"line_end":1251,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40253,"byte_end":40321,"line_start":1252,"line_end":1252,"column_start":5,"column_end":73}},{"value":"/ println!(\"Listening on {}\", listener.get_ref().local_addr()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40326,"byte_end":40392,"line_start":1253,"line_end":1253,"column_start":5,"column_end":71}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40397,"byte_end":40430,"line_start":1254,"line_end":1254,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40435,"byte_end":40442,"line_start":1255,"line_end":1255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41203,"byte_end":41209,"line_start":1278,"line_end":1278,"column_start":18,"column_end":24},"name":"accept","qualname":"<Async<TcpListener>>::accept","value":"async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming TCP connection.","sig":null,"attributes":[{"value":"/ Accepts a new incoming TCP connection.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40613,"byte_end":40655,"line_start":1261,"line_end":1261,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40660,"byte_end":40663,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, it will be returned as a TCP stream together with its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40668,"byte_end":40759,"line_start":1263,"line_end":1263,"column_start":5,"column_end":96}},{"value":"/ remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40764,"byte_end":40783,"line_start":1264,"line_end":1264,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40788,"byte_end":40791,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40796,"byte_end":40810,"line_start":1266,"line_end":1266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40815,"byte_end":40818,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40823,"byte_end":40836,"line_start":1268,"line_end":1268,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40841,"byte_end":40865,"line_start":1269,"line_end":1269,"column_start":5,"column_end":29}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40870,"byte_end":40900,"line_start":1270,"line_end":1270,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40905,"byte_end":40908,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40913,"byte_end":40957,"line_start":1272,"line_end":1272,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":40962,"byte_end":41033,"line_start":1273,"line_end":1273,"column_start":5,"column_end":76}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41038,"byte_end":41088,"line_start":1274,"line_end":1274,"column_start":5,"column_end":55}},{"value":"/ println!(\"Accepted client: {}\", addr);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41093,"byte_end":41135,"line_start":1275,"line_end":1275,"column_start":5,"column_end":47}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41140,"byte_end":41173,"line_start":1276,"line_end":1276,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41178,"byte_end":41185,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42129,"byte_end":42137,"line_start":1305,"line_end":1305,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Async<TcpListener>>::incoming","value":"fn incoming(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41386,"byte_end":41435,"line_start":1283,"line_end":1283,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41440,"byte_end":41443,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ The stream is infinite, i.e. it never stops with a [`None`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41448,"byte_end":41512,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41517,"byte_end":41520,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41525,"byte_end":41539,"line_start":1287,"line_end":1287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41544,"byte_end":41547,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41552,"byte_end":41565,"line_start":1289,"line_end":1289,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41570,"byte_end":41594,"line_start":1290,"line_end":1290,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{pin, stream::StreamExt};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41599,"byte_end":41646,"line_start":1291,"line_end":1291,"column_start":5,"column_end":52}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41651,"byte_end":41681,"line_start":1292,"line_end":1292,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41686,"byte_end":41689,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41694,"byte_end":41738,"line_start":1294,"line_end":1294,"column_start":5,"column_end":49}},{"value":"/ let listener = Async::<TcpListener>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41743,"byte_end":41814,"line_start":1295,"line_end":1295,"column_start":5,"column_end":76}},{"value":"/ let incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41819,"byte_end":41858,"line_start":1296,"line_end":1296,"column_start":5,"column_end":44}},{"value":"/ pin!(incoming);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41863,"byte_end":41882,"line_start":1297,"line_end":1297,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41887,"byte_end":41890,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41895,"byte_end":41947,"line_start":1299,"line_end":1299,"column_start":5,"column_end":57}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41952,"byte_end":41981,"line_start":1300,"line_end":1300,"column_start":5,"column_end":34}},{"value":"/     println!(\"Accepted client: {}\", stream.get_ref().peer_addr()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":41986,"byte_end":42057,"line_start":1301,"line_end":1301,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42062,"byte_end":42067,"line_start":1302,"line_end":1302,"column_start":5,"column_end":10}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42072,"byte_end":42105,"line_start":1303,"line_end":1303,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42110,"byte_end":42117,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42498,"byte_end":42506,"line_start":1316,"line_end":1316,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::TcpListener> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpListener) -> io::Result<Self>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43068,"byte_end":43075,"line_start":1335,"line_end":1335,"column_start":18,"column_end":25},"name":"connect","qualname":"<Async<TcpStream>>::connect","value":"async fn connect<A>(A) -> /*impl Trait*/ where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a TCP connection to the specified address.","sig":null,"attributes":[{"value":"/ Creates a TCP connection to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42628,"byte_end":42682,"line_start":1322,"line_end":1322,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42687,"byte_end":42690,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42695,"byte_end":42709,"line_start":1324,"line_end":1324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42714,"byte_end":42717,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42722,"byte_end":42729,"line_start":1326,"line_end":1326,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42734,"byte_end":42758,"line_start":1327,"line_end":1327,"column_start":5,"column_end":29}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42763,"byte_end":42808,"line_start":1328,"line_end":1328,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42813,"byte_end":42816,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42821,"byte_end":42865,"line_start":1330,"line_end":1330,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42870,"byte_end":42937,"line_start":1331,"line_end":1331,"column_start":5,"column_end":72}},{"value":"/ let stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42942,"byte_end":43000,"line_start":1332,"line_end":1332,"column_start":5,"column_end":63}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43005,"byte_end":43038,"line_start":1333,"line_end":1333,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43043,"byte_end":43050,"line_start":1334,"line_end":1334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44498,"byte_end":44502,"line_start":1375,"line_end":1375,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<TcpStream>>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads data from the stream without removing it from the buffer.","sig":null,"attributes":[{"value":"/ Reads data from the stream without removing it from the buffer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43667,"byte_end":43734,"line_start":1352,"line_end":1352,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43739,"byte_end":43742,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read. Successive calls of this method read the same data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43747,"byte_end":43836,"line_start":1354,"line_end":1354,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43841,"byte_end":43844,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43849,"byte_end":43863,"line_start":1356,"line_end":1356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43868,"byte_end":43871,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43876,"byte_end":43883,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43888,"byte_end":43912,"line_start":1359,"line_end":1359,"column_start":5,"column_end":29}},{"value":"/ use futures_lite::{io::AsyncWriteExt, stream::StreamExt};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43917,"byte_end":43978,"line_start":1360,"line_end":1360,"column_start":5,"column_end":66}},{"value":"/ use std::net::{TcpStream, ToSocketAddrs};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":43983,"byte_end":44028,"line_start":1361,"line_end":1361,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44033,"byte_end":44036,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44041,"byte_end":44085,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"/ let addr = \"example.com:80\".to_socket_addrs()?.next().unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44090,"byte_end":44157,"line_start":1364,"line_end":1364,"column_start":5,"column_end":72}},{"value":"/ let mut stream = Async::<TcpStream>::connect(addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44162,"byte_end":44224,"line_start":1365,"line_end":1365,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44229,"byte_end":44232,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ stream","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44237,"byte_end":44247,"line_start":1367,"line_end":1367,"column_start":5,"column_end":15}},{"value":"/     .write_all(b\"GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44252,"byte_end":44318,"line_start":1368,"line_end":1368,"column_start":5,"column_end":71}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44323,"byte_end":44339,"line_start":1369,"line_end":1369,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44344,"byte_end":44347,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44352,"byte_end":44382,"line_start":1371,"line_end":1371,"column_start":5,"column_end":35}},{"value":"/ let len = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44387,"byte_end":44430,"line_start":1372,"line_end":1372,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44435,"byte_end":44468,"line_start":1373,"line_end":1373,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44473,"byte_end":44480,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44709,"byte_end":44717,"line_start":1383,"line_end":1383,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::TcpStream> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::TcpStream) -> io::Result<Self>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45338,"byte_end":45342,"line_start":1404,"line_end":1404,"column_start":12,"column_end":16},"name":"bind","qualname":"<Async<UdpSocket>>::bind","value":"fn bind<A>(A) -> io::Result<Async<UdpSocket>> where A: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket bound to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44833,"byte_end":44889,"line_start":1389,"line_end":1389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44894,"byte_end":44897,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ Binding with port number 0 will request an available port from the OS.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44902,"byte_end":44976,"line_start":1391,"line_end":1391,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44981,"byte_end":44984,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44989,"byte_end":45003,"line_start":1393,"line_end":1393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45008,"byte_end":45011,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45016,"byte_end":45023,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45028,"byte_end":45052,"line_start":1396,"line_end":1396,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45057,"byte_end":45085,"line_start":1397,"line_end":1397,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45090,"byte_end":45093,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45098,"byte_end":45142,"line_start":1399,"line_end":1399,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45147,"byte_end":45211,"line_start":1400,"line_end":1400,"column_start":5,"column_end":69}},{"value":"/ println!(\"Bound to {}\", socket.get_ref().local_addr()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45216,"byte_end":45276,"line_start":1401,"line_end":1401,"column_start":5,"column_end":65}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45281,"byte_end":45314,"line_start":1402,"line_end":1402,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45319,"byte_end":45326,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46218,"byte_end":46227,"line_start":1429,"line_end":1429,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<Async<UdpSocket>>::recv_from","value":"async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message.","sig":null,"attributes":[{"value":"/ Receives a single datagram message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45493,"byte_end":45532,"line_start":1409,"line_end":1409,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45537,"byte_end":45540,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45545,"byte_end":45620,"line_start":1411,"line_end":1411,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45625,"byte_end":45628,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45633,"byte_end":45727,"line_start":1413,"line_end":1413,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45732,"byte_end":45802,"line_start":1414,"line_end":1414,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45807,"byte_end":45810,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45815,"byte_end":45829,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45834,"byte_end":45837,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45842,"byte_end":45855,"line_start":1418,"line_end":1418,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45860,"byte_end":45884,"line_start":1419,"line_end":1419,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45889,"byte_end":45917,"line_start":1420,"line_end":1420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45922,"byte_end":45925,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45930,"byte_end":45974,"line_start":1422,"line_end":1422,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":45979,"byte_end":46046,"line_start":1423,"line_end":1423,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46051,"byte_end":46054,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46059,"byte_end":46089,"line_start":1425,"line_end":1425,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46094,"byte_end":46150,"line_start":1426,"line_end":1426,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46155,"byte_end":46188,"line_start":1427,"line_end":1427,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46193,"byte_end":46200,"line_start":1428,"line_end":1428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47112,"byte_end":47121,"line_start":1453,"line_end":1453,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<Async<UdpSocket>>::peek_from","value":"async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message without removing it from the queue.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46352,"byte_end":46426,"line_start":1433,"line_end":1433,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46431,"byte_end":46434,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46439,"byte_end":46514,"line_start":1435,"line_end":1435,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46519,"byte_end":46522,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46527,"byte_end":46621,"line_start":1437,"line_end":1437,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46626,"byte_end":46696,"line_start":1438,"line_end":1438,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46701,"byte_end":46704,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46709,"byte_end":46723,"line_start":1440,"line_end":1440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46728,"byte_end":46731,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46736,"byte_end":46749,"line_start":1442,"line_end":1442,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46754,"byte_end":46778,"line_start":1443,"line_end":1443,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46783,"byte_end":46811,"line_start":1444,"line_end":1444,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46816,"byte_end":46819,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46824,"byte_end":46868,"line_start":1446,"line_end":1446,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46873,"byte_end":46940,"line_start":1447,"line_end":1447,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46945,"byte_end":46948,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46953,"byte_end":46983,"line_start":1449,"line_end":1449,"column_start":5,"column_end":35}},{"value":"/ let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":46988,"byte_end":47044,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47049,"byte_end":47082,"line_start":1451,"line_end":1451,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47087,"byte_end":47094,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47786,"byte_end":47793,"line_start":1475,"line_end":1475,"column_start":18,"column_end":25},"name":"send_to","qualname":"<Async<UdpSocket>>::send_to","value":"async fn send_to<A, '_, '_>(&'_ Self, &'_ [u8], A) -> /*impl Trait*/ where\nA: Into<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the specified address.","sig":null,"attributes":[{"value":"/ Sends data to the specified address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47246,"byte_end":47286,"line_start":1457,"line_end":1457,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47291,"byte_end":47294,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes writen.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47299,"byte_end":47338,"line_start":1459,"line_end":1459,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47343,"byte_end":47346,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47351,"byte_end":47365,"line_start":1461,"line_end":1461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47370,"byte_end":47373,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47378,"byte_end":47391,"line_start":1463,"line_end":1463,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47396,"byte_end":47420,"line_start":1464,"line_end":1464,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47425,"byte_end":47453,"line_start":1465,"line_end":1465,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47458,"byte_end":47461,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47466,"byte_end":47510,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 0))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47515,"byte_end":47579,"line_start":1468,"line_end":1468,"column_start":5,"column_end":69}},{"value":"/ let addr = socket.get_ref().local_addr()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47584,"byte_end":47630,"line_start":1469,"line_end":1469,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47635,"byte_end":47638,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47643,"byte_end":47666,"line_start":1471,"line_end":1471,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send_to(msg, addr).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47671,"byte_end":47718,"line_start":1472,"line_end":1472,"column_start":5,"column_end":52}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47723,"byte_end":47756,"line_start":1473,"line_end":1473,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47761,"byte_end":47768,"line_start":1474,"line_end":1474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48885,"byte_end":48889,"line_start":1504,"line_end":1504,"column_start":18,"column_end":22},"name":"recv","qualname":"<Async<UdpSocket>>::recv","value":"async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":47967,"byte_end":48030,"line_start":1480,"line_end":1480,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48035,"byte_end":48038,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48043,"byte_end":48080,"line_start":1482,"line_end":1482,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48085,"byte_end":48088,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48093,"byte_end":48187,"line_start":1484,"line_end":1484,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48192,"byte_end":48262,"line_start":1485,"line_end":1485,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48267,"byte_end":48270,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48275,"byte_end":48367,"line_start":1487,"line_end":1487,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48372,"byte_end":48429,"line_start":1488,"line_end":1488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48434,"byte_end":48437,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48442,"byte_end":48456,"line_start":1490,"line_end":1490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48461,"byte_end":48464,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48469,"byte_end":48482,"line_start":1492,"line_end":1492,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48487,"byte_end":48511,"line_start":1493,"line_end":1493,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48516,"byte_end":48544,"line_start":1494,"line_end":1494,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48549,"byte_end":48552,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48557,"byte_end":48601,"line_start":1496,"line_end":1496,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48606,"byte_end":48673,"line_start":1497,"line_end":1497,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48678,"byte_end":48726,"line_start":1498,"line_end":1498,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48731,"byte_end":48734,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48739,"byte_end":48769,"line_start":1500,"line_end":1500,"column_start":5,"column_end":35}},{"value":"/ let len = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48774,"byte_end":48817,"line_start":1501,"line_end":1501,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48822,"byte_end":48855,"line_start":1502,"line_end":1502,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48860,"byte_end":48867,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49994,"byte_end":49998,"line_start":1533,"line_end":1533,"column_start":18,"column_end":22},"name":"peek","qualname":"<Async<UdpSocket>>::peek","value":"async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message from the connected peer without removing it from the\n queue.","sig":null,"attributes":[{"value":"/ Receives a single datagram message from the connected peer without removing it from the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":48995,"byte_end":49086,"line_start":1508,"line_end":1508,"column_start":5,"column_end":96}},{"value":"/ queue.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49091,"byte_end":49101,"line_start":1509,"line_end":1509,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49106,"byte_end":49109,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes read and the address the message came from.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49114,"byte_end":49189,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49194,"byte_end":49197,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ This method must be called with a valid byte slice of sufficient size to hold the message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49202,"byte_end":49296,"line_start":1513,"line_end":1513,"column_start":5,"column_end":99}},{"value":"/ If the message is too long to fit, excess bytes may get discarded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49301,"byte_end":49371,"line_start":1514,"line_end":1514,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49376,"byte_end":49379,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49384,"byte_end":49476,"line_start":1516,"line_end":1516,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49481,"byte_end":49538,"line_start":1517,"line_end":1517,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49543,"byte_end":49546,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49551,"byte_end":49565,"line_start":1519,"line_end":1519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49570,"byte_end":49573,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49578,"byte_end":49591,"line_start":1521,"line_end":1521,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49596,"byte_end":49620,"line_start":1522,"line_end":1522,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49625,"byte_end":49653,"line_start":1523,"line_end":1523,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49658,"byte_end":49661,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49666,"byte_end":49710,"line_start":1525,"line_end":1525,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49715,"byte_end":49782,"line_start":1526,"line_end":1526,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49787,"byte_end":49835,"line_start":1527,"line_end":1527,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49840,"byte_end":49843,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0u8; 1024];","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49848,"byte_end":49878,"line_start":1529,"line_end":1529,"column_start":5,"column_end":35}},{"value":"/ let len = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49883,"byte_end":49926,"line_start":1530,"line_end":1530,"column_start":5,"column_end":48}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49931,"byte_end":49964,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":49969,"byte_end":49976,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50805,"byte_end":50809,"line_start":1558,"line_end":1558,"column_start":18,"column_end":22},"name":"send","qualname":"<Async<UdpSocket>>::send","value":"async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data to the connected peer.","sig":null,"attributes":[{"value":"/ Sends data to the connected peer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50104,"byte_end":50141,"line_start":1537,"line_end":1537,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50146,"byte_end":50149,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50154,"byte_end":50194,"line_start":1539,"line_end":1539,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50199,"byte_end":50202,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ The [`connect`][`UdpSocket::connect()`] method connects this socket to a remote address.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50207,"byte_end":50299,"line_start":1541,"line_end":1541,"column_start":5,"column_end":97}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50304,"byte_end":50361,"line_start":1542,"line_end":1542,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50366,"byte_end":50369,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50374,"byte_end":50388,"line_start":1544,"line_end":1544,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50393,"byte_end":50396,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50401,"byte_end":50414,"line_start":1546,"line_end":1546,"column_start":5,"column_end":18}},{"value":"/ use async_io::Async;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50419,"byte_end":50443,"line_start":1547,"line_end":1547,"column_start":5,"column_end":29}},{"value":"/ use std::net::UdpSocket;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50448,"byte_end":50476,"line_start":1548,"line_end":1548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50481,"byte_end":50484,"line_start":1549,"line_end":1549,"column_start":5,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50489,"byte_end":50533,"line_start":1550,"line_end":1550,"column_start":5,"column_end":49}},{"value":"/ let socket = Async::<UdpSocket>::bind(([127, 0, 0, 1], 8000))?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50538,"byte_end":50605,"line_start":1551,"line_end":1551,"column_start":5,"column_end":72}},{"value":"/ socket.get_ref().connect(\"127.0.0.1:9000\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50610,"byte_end":50658,"line_start":1552,"line_end":1552,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50663,"byte_end":50666,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ let msg = b\"hello\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50671,"byte_end":50694,"line_start":1554,"line_end":1554,"column_start":5,"column_end":28}},{"value":"/ let len = socket.send(msg).await?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50699,"byte_end":50737,"line_start":1555,"line_end":1555,"column_start":5,"column_end":43}},{"value":"/ # std::io::Result::Ok(()) });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50742,"byte_end":50775,"line_start":1556,"line_end":1556,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50780,"byte_end":50787,"line_start":1557,"line_end":1557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":51013,"byte_end":51021,"line_start":1566,"line_end":1566,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Async<std::net::UdpSocket> as std::convert::TryFrom>::try_from","value":"fn try_from(std::net::UdpSocket) -> io::Result<Self>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":70194,"byte_end":70204,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":72486,"byte_end":72493,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":78381,"byte_end":78392,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":82854,"byte_end":82863,"line_start":376,"line_end":376,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":83393,"byte_end":83399,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86665,"byte_end":86673,"line_start":487,"line_end":487,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86977,"byte_end":86985,"line_start":497,"line_end":497,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87332,"byte_end":87345,"line_start":507,"line_end":507,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87651,"byte_end":87664,"line_start":517,"line_end":517,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87998,"byte_end":88006,"line_start":527,"line_end":527,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88310,"byte_end":88318,"line_start":537,"line_end":537,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88665,"byte_end":88678,"line_start":547,"line_end":547,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88984,"byte_end":88997,"line_start":557,"line_end":557,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":89351,"byte_end":89356,"line_start":571,"line_end":571,"column_start":47,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":89422,"byte_end":89427,"line_start":573,"line_end":573,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":91466,"byte_end":91478,"line_start":641,"line_end":641,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5022,"byte_end":5027,"line_start":158,"line_end":158,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12803,"byte_end":12808,"line_start":410,"line_end":410,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13061,"byte_end":13066,"line_start":419,"line_end":419,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13398,"byte_end":13403,"line_start":431,"line_end":431,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":19140,"byte_end":19145,"line_start":576,"line_end":576,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21454,"byte_end":21459,"line_start":658,"line_end":658,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23068,"byte_end":23073,"line_start":711,"line_end":711,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23867,"byte_end":23872,"line_start":742,"line_end":742,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":479},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34910,"byte_end":34915,"line_start":1062,"line_end":1062,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35003,"byte_end":35008,"line_start":1068,"line_end":1068,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35100,"byte_end":35105,"line_start":1074,"line_end":1074,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35430,"byte_end":35435,"line_start":1086,"line_end":1086,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":37214,"byte_end":37219,"line_start":1149,"line_end":1149,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39910,"byte_end":39915,"line_start":1240,"line_end":1240,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42431,"byte_end":42436,"line_start":1313,"line_end":1313,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42605,"byte_end":42610,"line_start":1321,"line_end":1321,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44644,"byte_end":44649,"line_start":1380,"line_end":1380,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44810,"byte_end":44815,"line_start":1388,"line_end":1388,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50948,"byte_end":50953,"line_start":1563,"line_end":1563,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\driver.rs","byte_start":70194,"byte_end":70204,"line_start":226,"line_end":226,"column_start":24,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":72486,"byte_end":72493,"line_start":67,"line_end":67,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":78381,"byte_end":78392,"line_start":244,"line_end":244,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":82854,"byte_end":82863,"line_start":376,"line_end":376,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":83393,"byte_end":83399,"line_start":395,"line_end":395,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86665,"byte_end":86673,"line_start":487,"line_end":487,"column_start":20,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":86977,"byte_end":86985,"line_start":497,"line_end":497,"column_start":24,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87332,"byte_end":87345,"line_start":507,"line_end":507,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87651,"byte_end":87664,"line_start":517,"line_end":517,"column_start":24,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":87998,"byte_end":88006,"line_start":527,"line_end":527,"column_start":20,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88310,"byte_end":88318,"line_start":537,"line_end":537,"column_start":24,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88665,"byte_end":88678,"line_start":547,"line_end":547,"column_start":20,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":88984,"byte_end":88997,"line_start":557,"line_end":557,"column_start":24,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":89351,"byte_end":89356,"line_start":571,"line_end":571,"column_start":47,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":89422,"byte_end":89427,"line_start":573,"line_end":573,"column_start":56,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\reactor.rs","byte_start":91466,"byte_end":91478,"line_start":641,"line_end":641,"column_start":46,"column_end":58},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":397},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":5022,"byte_end":5027,"line_start":158,"line_end":158,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":12803,"byte_end":12808,"line_start":410,"line_end":410,"column_start":15,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13061,"byte_end":13066,"line_start":419,"line_end":419,"column_start":17,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":13398,"byte_end":13403,"line_start":431,"line_end":431,"column_start":17,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":605},"to":{"krate":20,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":19140,"byte_end":19145,"line_start":576,"line_end":576,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":21454,"byte_end":21459,"line_start":658,"line_end":658,"column_start":22,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23068,"byte_end":23073,"line_start":711,"line_end":711,"column_start":38,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":611},"to":{"krate":1,"index":5822}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":23867,"byte_end":23872,"line_start":742,"line_end":742,"column_start":9,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":34910,"byte_end":34915,"line_start":1062,"line_end":1062,"column_start":22,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35003,"byte_end":35008,"line_start":1068,"line_end":1068,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35100,"byte_end":35105,"line_start":1074,"line_end":1074,"column_start":18,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":35430,"byte_end":35435,"line_start":1086,"line_end":1086,"column_start":29,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":611},"to":{"krate":21,"index":39}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":37214,"byte_end":37219,"line_start":1149,"line_end":1149,"column_start":31,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":611},"to":{"krate":21,"index":42}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":39910,"byte_end":39915,"line_start":1240,"line_end":1240,"column_start":6,"column_end":11},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42431,"byte_end":42436,"line_start":1313,"line_end":1313,"column_start":41,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":42605,"byte_end":42610,"line_start":1321,"line_end":1321,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44644,"byte_end":44649,"line_start":1380,"line_end":1380,"column_start":39,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3063}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":44810,"byte_end":44815,"line_start":1388,"line_end":1388,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-io-1.9.0\\src\\lib.rs","byte_start":50948,"byte_end":50953,"line_start":1563,"line_end":1563,"column_start":39,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3063}}]}