{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tracing_subscriber","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"ansi\"","--cfg","feature=\"ansi_term\"","--cfg","feature=\"default\"","--cfg","feature=\"env-filter\"","--cfg","feature=\"fmt\"","--cfg","feature=\"matchers\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"regex\"","--cfg","feature=\"registry\"","--cfg","feature=\"sharded-slab\"","--cfg","feature=\"smallvec\"","--cfg","feature=\"std\"","--cfg","feature=\"thread_local\"","--cfg","feature=\"tracing\"","--cfg","feature=\"tracing-log\"","-C","metadata=8d5e953b9cf56e69","-C","extra-filename=-8d5e953b9cf56e69","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","ansi_term=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libansi_term-8921df43db6f037d.rmeta","--extern","matchers=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libmatchers-6980aeacf0b6d769.rmeta","--extern","once_cell=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libonce_cell-819ed08e05e0f985.rmeta","--extern","regex=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libregex-aaad0673fa62be6b.rmeta","--extern","sharded_slab=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libsharded_slab-79e5a9c56a778982.rmeta","--extern","smallvec=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libsmallvec-1213ea5d548c828b.rmeta","--extern","thread_local=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libthread_local-5f64dc4ac2a62e26.rmeta","--extern","tracing=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libtracing-99caae33e14c487e.rmeta","--extern","tracing_core=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libtracing_core-8d370ba801a090d2.rmeta","--extern","tracing_log=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libtracing_log-b001636174c47bd2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libtracing_subscriber-8d5e953b9cf56e69.rmeta"},"prelude":{"crate_id":{"name":"tracing_subscriber","disambiguator":[10182637258924141174,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","num":16,"id":{"name":"tracing_core","disambiguator":[14320103897247670138,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","num":17,"id":{"name":"once_cell","disambiguator":[10678987216154076725,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":18,"id":{"name":"tracing_log","disambiguator":[2538516416476748576,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":19,"id":{"name":"lazy_static","disambiguator":[13527234299353432182,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":20,"id":{"name":"log","disambiguator":[2643609071996618890,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":21,"id":{"name":"cfg_if","disambiguator":[9011972299413683491,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":22,"id":{"name":"value_bag","disambiguator":[4509803819817264786,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","num":23,"id":{"name":"ctor","disambiguator":[5086943377281928300,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":24,"id":{"name":"thread_local","disambiguator":[3550919066037839299,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":25,"id":{"name":"tracing","disambiguator":[9930591200534269220,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":26,"id":{"name":"tracing_attributes","disambiguator":[715141749880889932,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[1441963753095972349,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":28,"id":{"name":"ansi_term","disambiguator":[4009649514404740118,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","num":29,"id":{"name":"winapi","disambiguator":[12804740736339557305,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","num":30,"id":{"name":"regex","disambiguator":[1455299461503157452,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","num":31,"id":{"name":"regex_syntax","disambiguator":[11276052992375165116,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[17167031597439143181,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","num":33,"id":{"name":"memchr","disambiguator":[3764855290657491244,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","num":34,"id":{"name":"matchers","disambiguator":[8791976195216936010,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","num":35,"id":{"name":"regex_automata","disambiguator":[1637208244421321381,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","num":36,"id":{"name":"sharded_slab","disambiguator":[2445887004864779109,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","num":37,"id":{"name":"smallvec","disambiguator":[15786261349249384834,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":9430,"line_start":1,"line_end":252,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":387},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10191,"byte_end":10196,"line_start":6,"line_end":6,"column_start":30,"column_end":35},"alias_span":null,"name":"Visit","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124359,"byte_end":14124366,"line_start":7,"line_end":7,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":865}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124379,"byte_end":14124388,"line_start":7,"line_end":7,"column_start":45,"column_end":54},"alias_span":null,"name":"Directive","value":"","parent":{"krate":0,"index":865}},{"kind":"Use","ref_id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124397,"byte_end":14124404,"line_start":7,"line_end":7,"column_start":63,"column_end":70},"alias_span":null,"name":"BadFieldName","value":"","parent":{"krate":0,"index":865}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31330,"byte_end":31331,"line_start":16,"line_end":16,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"EnvFilter","parent":{"krate":0,"index":235}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31454,"byte_end":31455,"line_start":22,"line_end":22,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"FilterMap, FILTERING, layer_has_plf, subscriber_has_plf, is_plf_downcast_marker, FilterState, Filtered, FilterId","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":16,"index":1267},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":57738,"byte_end":57749,"line_start":7,"line_end":7,"column_start":34,"column_end":45},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":16,"index":1283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":57751,"byte_end":57772,"line_start":7,"line_end":7,"column_start":47,"column_end":68},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":346}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31497,"byte_end":31498,"line_start":27,"line_end":27,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":16,"index":1267},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31522,"byte_end":31533,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":16,"index":1283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31535,"byte_end":31545,"line_start":28,"line_end":28,"column_start":36,"column_end":46},"alias_span":null,"name":"LevelParseError","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31771,"byte_end":31778,"line_start":36,"line_end":36,"column_start":28,"column_end":35},"alias_span":null,"name":"Targets","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31829,"byte_end":31839,"line_start":39,"line_end":39,"column_start":30,"column_end":40},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":235}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58497,"byte_end":58504,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"alias_span":null,"name":"__tracing_subscriber_field_MakeExt","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58548,"byte_end":58560,"line_start":8,"line_end":8,"column_start":5,"column_end":17},"alias_span":null,"name":"__tracing_subscriber_field_RecordFields","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58636,"byte_end":58641,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"alias_span":null,"name":"__tracing_subscriber_Layer","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58673,"byte_end":58686,"line_start":11,"line_end":11,"column_start":42,"column_end":55},"alias_span":null,"name":"__tracing_subscriber_SubscriberExt","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58751,"byte_end":58768,"line_start":14,"line_end":14,"column_start":22,"column_end":39},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58865,"byte_end":58878,"line_start":18,"line_end":18,"column_start":33,"column_end":46},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":378}},{"kind":"Use","ref_id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61254,"byte_end":61264,"line_start":67,"line_end":67,"column_start":26,"column_end":36},"alias_span":null,"name":"Extensions","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61266,"byte_end":61279,"line_start":67,"line_end":67,"column_start":38,"column_end":51},"alias_span":null,"name":"ExtensionsMut","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61403,"byte_end":61407,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":396}},{"kind":"Use","ref_id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61430,"byte_end":61438,"line_start":78,"line_end":78,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":396}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106074,"byte_end":106075,"line_start":694,"line_end":694,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Context","parent":{"krate":0,"index":440}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106086,"byte_end":106087,"line_start":694,"line_end":694,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"Layered","parent":{"krate":0,"index":440}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459676,"byte_end":14459677,"line_start":61,"line_end":61,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Pretty","parent":{"krate":0,"index":3058}},{"kind":"Use","ref_id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373489,"byte_end":14373499,"line_start":203,"line_end":203,"column_start":21,"column_end":31},"alias_span":null,"name":"FmtContext","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373501,"byte_end":14373516,"line_start":203,"line_end":203,"column_start":33,"column_end":48},"alias_span":null,"name":"FormattedFields","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373518,"byte_end":14373523,"line_start":203,"line_end":203,"column_start":50,"column_end":55},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373728,"byte_end":14373734,"line_start":215,"line_end":215,"column_start":14,"column_end":20},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373736,"byte_end":14373747,"line_start":215,"line_end":215,"column_start":22,"column_end":33},"alias_span":null,"name":"FormatEvent","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373749,"byte_end":14373761,"line_start":215,"line_end":215,"column_start":35,"column_end":47},"alias_span":null,"name":"FormatFields","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373774,"byte_end":14373778,"line_start":216,"line_end":216,"column_start":11,"column_end":15},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373793,"byte_end":14373803,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"alias_span":null,"name":"MakeWriter","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373805,"byte_end":14373815,"line_start":217,"line_end":217,"column_start":26,"column_end":36},"alias_span":null,"name":"TestWriter","value":"","parent":{"krate":0,"index":2782}},{"kind":"Use","ref_id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9033,"byte_end":9036,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9055,"byte_end":9065,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"alias_span":null,"name":"FmtSubscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9171,"byte_end":9180,"line_start":235,"line_end":235,"column_start":21,"column_end":30},"alias_span":null,"name":"EnvFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9200,"byte_end":9205,"line_start":238,"line_end":238,"column_start":16,"column_end":21},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9292,"byte_end":9300,"line_start":242,"line_end":242,"column_start":23,"column_end":31},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":9430,"line_start":1,"line_end":252,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":235},{"krate":0,"index":378},{"krate":0,"index":396},{"krate":0,"index":440},{"krate":0,"index":725},{"krate":0,"index":2630},{"krate":0,"index":2732},{"krate":0,"index":2782},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":4260},{"krate":0,"index":759},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":762}],"decl_id":null,"docs":" Utilities for implementing and composing [`tracing`] subscribers.","sig":null,"attributes":[{"value":"/ Utilities for implementing and composing [`tracing`] subscribers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":70,"byte_end":73,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":74,"byte_end":147,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ scoped, structured, and async-aware diagnostics. The [`Subscriber`] trait","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":148,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ represents the functionality necessary to collect this trace data. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":226,"byte_end":301,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ crate contains tools for composing subscribers out of smaller units of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":302,"byte_end":376,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ behaviour, and batteries-included implementations of common subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":377,"byte_end":451,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":452,"byte_end":470,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":471,"byte_end":474,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `tracing-subscriber` is intended for use by both `Subscriber` authors and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":475,"byte_end":552,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ application authors using `tracing` to instrument their applications.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":553,"byte_end":626,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":627,"byte_end":630,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":631,"byte_end":685,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":686,"byte_end":689,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":690,"byte_end":726,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":727,"byte_end":730,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## `Layer`s and `Filter`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":731,"byte_end":760,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":761,"byte_end":764,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The most important component of the `tracing-subscriber` API is the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":765,"byte_end":836,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`Layer`] trait, which provides a composable abstraction for building","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":837,"byte_end":910,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ [`Subscriber`]s. Like the [`Subscriber`] trait, a [`Layer`] defines a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":911,"byte_end":984,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ particular behavior for collecting trace data. Unlike [`Subscriber`]s,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":985,"byte_end":1059,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ which implement a *complete* strategy for how trace data is collected,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1060,"byte_end":1134,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ [`Layer`]s provide *modular* implementations of specific behaviors.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1135,"byte_end":1206,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ Therefore, they can be [composed together] to form a [`Subscriber`] which is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1207,"byte_end":1287,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ capable of recording traces in a variety of ways. See the [`layer` module's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1288,"byte_end":1367,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ documentation][layer] for details on using [`Layer`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1368,"byte_end":1426,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1427,"byte_end":1430,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`Filter`] trait defines an interface for filtering what","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1431,"byte_end":1508,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ spans and events are recorded by a particular layer. This allows different","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1509,"byte_end":1587,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [`Layer`]s to handle separate subsets of the trace data emitted by a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1588,"byte_end":1660,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ program. See the [documentation on per-layer filtering][plf] for more","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1661,"byte_end":1734,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ information on using [`Filter`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1735,"byte_end":1772,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1773,"byte_end":1776,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1777,"byte_end":1811,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [composed together]: crate::layer#composing-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1812,"byte_end":1866,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ [layer]: crate::layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1867,"byte_end":1892,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1893,"byte_end":1929,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1930,"byte_end":1973,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1974,"byte_end":1977,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## Included Subscribers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":1978,"byte_end":2005,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2006,"byte_end":2009,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The following `Subscriber`s are provided for application authors:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2010,"byte_end":2079,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2080,"byte_end":2083,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - [`fmt`] - Formats and logs tracing data (requires the `fmt` feature flag)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2084,"byte_end":2163,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2164,"byte_end":2167,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2168,"byte_end":2188,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2189,"byte_end":2192,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - `std`: Enables APIs that depend on the on the Rust standard library","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2193,"byte_end":2266,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/   (enabled by default).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2267,"byte_end":2294,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ - `alloc`: Depend on [`liballoc`] (enabled by \"std\").","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2295,"byte_end":2352,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ - `env-filter`: Enables the [`EnvFilter`] type, which implements filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2353,"byte_end":2431,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/   similar to the [`env_logger` crate]. **Requires \"std\"**.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2432,"byte_end":2494,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"/ - `fmt`: Enables the [`fmt`] module, which provides a subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2495,"byte_end":2563,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/   implementation for printing formatted representations of trace events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2564,"byte_end":2640,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/   Enabled by default. **Requires \"std\"**.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2641,"byte_end":2686,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ - `ansi`: Enables `fmt` support for ANSI terminal colors. Enabled by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2687,"byte_end":2759,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/   default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2760,"byte_end":2774,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ - `registry`: enables the [`registry`] module. Enabled by default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2775,"byte_end":2845,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/   **Requires \"std\"**.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2846,"byte_end":2871,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ - `json`: Enables `fmt` support for JSON output. In JSON output, the ANSI","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2872,"byte_end":2949,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/   feature does nothing. **Requires \"fmt\" and \"std\"**.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":2950,"byte_end":3007,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ - `local-time`: Enables local time formatting when using the [`time`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3008,"byte_end":3080,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/   crate]'s timestamp formatters with the `fmt` subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3081,"byte_end":3143,"line_start":64,"line_end":64,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3144,"byte_end":3147,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`registry`]: mod@registry","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3148,"byte_end":3178,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3179,"byte_end":3182,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ### Optional Dependencies","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3183,"byte_end":3212,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3213,"byte_end":3216,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ - [`tracing-log`]: Enables better formatting for events emitted by `log`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3217,"byte_end":3293,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/   macros in the `fmt` subscriber. Enabled by default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3294,"byte_end":3351,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/ - [`time`][`time` crate]: Enables support for using the [`time` crate] for timestamp","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3352,"byte_end":3440,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/   formatting in the `fmt` subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3441,"byte_end":3482,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ - [`smallvec`]: Causes the `EnvFilter` type to use the `smallvec` crate (rather","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3483,"byte_end":3566,"line_start":74,"line_end":74,"column_start":1,"column_end":84}},{"value":"/   than `Vec`) as a performance optimization. Enabled by default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3567,"byte_end":3635,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"/ - [`parking_lot`]: Use the `parking_lot` crate's `RwLock` implementation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3636,"byte_end":3712,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/   rather than the Rust standard library's implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3713,"byte_end":3774,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3775,"byte_end":3778,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ### `no_std` Support","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3779,"byte_end":3803,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3804,"byte_end":3807,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ In embedded systems and other bare-metal applications, `tracing` can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3808,"byte_end":3883,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ used without requiring the Rust standard library, although some features are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3884,"byte_end":3964,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/ disabled. Although most of the APIs provided by `tracing-subscriber`, such","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":3965,"byte_end":4043,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ as [`fmt`] and [`EnvFilter`], require the standard library, some","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4044,"byte_end":4112,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ functionality, such as the [`Layer`] trait, can still be used in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4113,"byte_end":4181,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ `no_std` environments.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4182,"byte_end":4208,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4209,"byte_end":4212,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The dependency on the standard library is controlled by two crate feature","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4213,"byte_end":4290,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ flags, \"std\", which enables the dependency on [`libstd`], and \"alloc\", which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4291,"byte_end":4371,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ enables the dependency on [`liballoc`] (and is enabled by the \"std\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4372,"byte_end":4443,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ feature). These features are enabled by default, but `no_std` users can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4444,"byte_end":4519,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ disable them using:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4520,"byte_end":4543,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4544,"byte_end":4547,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4548,"byte_end":4559,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ # Cargo.toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4560,"byte_end":4576,"line_start":95,"line_end":95,"column_start":1,"column_end":17}},{"value":"/ tracing-subscriber = { version = \"0.3\", default-features = false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4577,"byte_end":4647,"line_start":96,"line_end":96,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4648,"byte_end":4655,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4656,"byte_end":4659,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Additional APIs are available when [`liballoc`] is available. To enable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4660,"byte_end":4735,"line_start":99,"line_end":99,"column_start":1,"column_end":76}},{"value":"/ `liballoc` but not `std`, use:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4736,"byte_end":4770,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4771,"byte_end":4774,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4775,"byte_end":4786,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ # Cargo.toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4787,"byte_end":4803,"line_start":103,"line_end":103,"column_start":1,"column_end":17}},{"value":"/ tracing-subscriber = { version = \"0.3\", default-features = false, features = [\"alloc\"] }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4804,"byte_end":4896,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4897,"byte_end":4904,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4905,"byte_end":4908,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4909,"byte_end":4934,"line_start":107,"line_end":107,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4935,"byte_end":4938,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":4939,"byte_end":5026,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5027,"byte_end":5113,"line_start":110,"line_end":110,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5114,"byte_end":5141,"line_start":111,"line_end":111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5142,"byte_end":5145,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5146,"byte_end":5211,"line_start":113,"line_end":113,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5212,"byte_end":5215,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for serializing values recorded using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5216,"byte_end":5291,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/   [`valuable`] crate as structured JSON in the [`format::Json`] formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5292,"byte_end":5370,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5371,"byte_end":5374,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5375,"byte_end":5410,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5411,"byte_end":5414,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5415,"byte_end":5494,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5495,"byte_end":5542,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5543,"byte_end":5546,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5547,"byte_end":5559,"line_start":123,"line_end":123,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5560,"byte_end":5610,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5611,"byte_end":5618,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5619,"byte_end":5697,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5698,"byte_end":5764,"line_start":127,"line_end":127,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5765,"byte_end":5768,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5769,"byte_end":5780,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5781,"byte_end":5792,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5793,"byte_end":5838,"line_start":131,"line_end":131,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5839,"byte_end":5846,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5847,"byte_end":5850,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5851,"byte_end":5948,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":5949,"byte_end":6000,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/ [`format::Json`]: crate::fmt::format::Json","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6001,"byte_end":6047,"line_start":136,"line_end":136,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6048,"byte_end":6051,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6052,"byte_end":6082,"line_start":138,"line_end":138,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6083,"byte_end":6086,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6087,"byte_end":6164,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6165,"byte_end":6243,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6244,"byte_end":6305,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6306,"byte_end":6309,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6310,"byte_end":6389,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6390,"byte_end":6467,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6468,"byte_end":6544,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6545,"byte_end":6623,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6624,"byte_end":6699,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6700,"byte_end":6776,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6777,"byte_end":6824,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6825,"byte_end":6828,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::subscriber::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6829,"byte_end":6885,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/ [`tracing`]: https://docs.rs/tracing/latest/tracing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6886,"byte_end":6941,"line_start":153,"line_end":153,"column_start":1,"column_end":56}},{"value":"/ [`EnvFilter`]: filter::EnvFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6942,"byte_end":6978,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/ [`fmt`]: mod@fmt","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":6979,"byte_end":6999,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7000,"byte_end":7057,"line_start":156,"line_end":156,"column_start":1,"column_end":58}},{"value":"/ [`smallvec`]: https://crates.io/crates/smallvec","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7058,"byte_end":7109,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/ [`env_logger` crate]: https://crates.io/crates/env_logger","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7110,"byte_end":7171,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ [`parking_lot`]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7172,"byte_end":7229,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ [`time` crate]: https://crates.io/crates/time","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7230,"byte_end":7279,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ [`libstd`]: std","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7280,"byte_end":7299,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/ [`liballoc`]: alloc","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7300,"byte_end":7323,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\nnon_shorthand_field_patterns, no_mangle_generic_items, overflowing_literals,\npath_statements, patterns_in_fns_without_body, private_in_public,\nunconditional_recursion, unused, unused_allocation, unused_comparisons,\nunused_parens, while_true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":7900,"byte_end":8362,"line_start":177,"line_end":198,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_update)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8610,"byte_end":8644,"line_start":203,"line_end":203,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":73},{"krate":0,"index":125},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":840}],"decl_id":null,"docs":" Utilities for working with [fields] and [field visitors].","sig":null,"attributes":[{"value":"/ Utilities for working with [fields] and [field visitors].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":9975,"byte_end":10036,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10037,"byte_end":10040,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10041,"byte_end":10074,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"/ [field visitors]: tracing_core::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10075,"byte_end":10123,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"debug","qualname":"::field::debug","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":70}],"decl_id":null,"docs":" `MakeVisitor` wrappers for working with `fmt::Debug` fields.\n","sig":null,"attributes":[{"value":"/ `MakeVisitor` wrappers for working with `fmt::Debug` fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":20876,"byte_end":20940,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21198,"byte_end":21201,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Alt","qualname":"::field::debug::Alt","value":"","parent":null,"children":[],"decl_id":null,"docs":" A visitor wrapper that ensures any `fmt::Debug` fields are formatted using\n the alternate (`:#`) formatter.\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that ensures any `fmt::Debug` fields are formatted using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21048,"byte_end":21126,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ the alternate (`:#`) formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21127,"byte_end":21162,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21487,"byte_end":21490,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Alt<V>>::new","value":"fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided visitor so that any `fmt::Debug` fields are formatted\n using the alternative (`:#`) formatter.\n","sig":null,"attributes":[{"value":"/ Wraps the provided visitor so that any `fmt::Debug` fields are formatted","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21351,"byte_end":21427,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ using the alternative (`:#`) formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21432,"byte_end":21475,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21665,"byte_end":21677,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<Alt<V> as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21648,"byte_end":21657,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21833,"byte_end":21843,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"record_f64","qualname":"<Alt<V> as tracing_core::field::Visit>::record_f64","value":"fn record_f64(&mut Self, &Field, f64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":388},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21816,"byte_end":21825,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21952,"byte_end":21962,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"record_i64","qualname":"<Alt<V> as tracing_core::field::Visit>::record_i64","value":"fn record_i64(&mut Self, &Field, i64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":389},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21935,"byte_end":21944,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22071,"byte_end":22081,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"record_u64","qualname":"<Alt<V> as tracing_core::field::Visit>::record_u64","value":"fn record_u64(&mut Self, &Field, u64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":390},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22054,"byte_end":22063,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22190,"byte_end":22201,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"record_bool","qualname":"<Alt<V> as tracing_core::field::Visit>::record_bool","value":"fn record_bool(&mut Self, &Field, bool)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":393},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22173,"byte_end":22182,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22328,"byte_end":22338,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"record_str","qualname":"<Alt<V> as tracing_core::field::Visit>::record_str","value":"fn record_str(&mut Self, &Field, &str)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":394},"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22295,"byte_end":22320,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22664,"byte_end":22676,"line_start":72,"line_end":72,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<Alt<V> as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22647,"byte_end":22656,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22893,"byte_end":22899,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"finish","qualname":"<Alt<V> as field::VisitOutput>::finish","value":"fn finish(Self) -> O","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22876,"byte_end":22885,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23128,"byte_end":23134,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"writer","qualname":"<Alt<V> as field::VisitWrite>::writer","value":"fn writer(&mut Self) -> &mut dyn io::Write","parent":{"krate":0,"index":830},"children":[],"decl_id":{"krate":0,"index":831},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23107,"byte_end":23116,"line_start":96,"line_end":96,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23291,"byte_end":23297,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"writer","qualname":"<Alt<V> as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23274,"byte_end":23283,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delimited","qualname":"::field::delimited","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":784},{"krate":0,"index":789},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":804},{"krate":0,"index":94},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":109},{"krate":0,"index":117},{"krate":0,"index":121}],"decl_id":null,"docs":" A `MakeVisitor` wrapper that separates formatted fields with a delimiter.\n","sig":null,"attributes":[{"value":"/ A `MakeVisitor` wrapper that separates formatted fields with a delimiter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23367,"byte_end":23444,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23741,"byte_end":23750,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"Delimited","qualname":"::field::delimited::Delimited","value":"Delimited {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"decl_id":null,"docs":" A `MakeVisitor` wrapper that wraps a visitor that writes formatted output so\n that a delimiter is inserted between writing formatted field values.\n","sig":null,"attributes":[{"value":"/ A `MakeVisitor` wrapper that wraps a visitor that writes formatted output so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23552,"byte_end":23632,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ that a delimiter is inserted between writing formatted field values.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23633,"byte_end":23705,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23922,"byte_end":23936,"line_start":18,"line_end":18,"column_start":12,"column_end":26},"name":"VisitDelimited","qualname":"::field::delimited::VisitDelimited","value":"VisitDelimited {  }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"decl_id":null,"docs":" A visitor wrapper that inserts a delimiter after the wrapped visitor formats\n a field value.\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that inserts a delimiter after the wrapped visitor formats","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23794,"byte_end":23874,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ a field value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":23875,"byte_end":23893,"line_start":16,"line_end":16,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24235,"byte_end":24247,"line_start":34,"line_end":34,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<Delimited<D, V> as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24659,"byte_end":24662,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Delimited<D, V>>::new","value":"fn new(D, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`MakeVisitor`] implementation that wraps `inner` so that\n it will format each visited field separated by the provided `delimiter`.","sig":null,"attributes":[{"value":"/ Returns a new [`MakeVisitor`] implementation that wraps `inner` so that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24439,"byte_end":24514,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ it will format each visited field separated by the provided `delimiter`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24519,"byte_end":24595,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24600,"byte_end":24603,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`MakeVisitor`]: super::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24608,"byte_end":24647,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25016,"byte_end":25019,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<VisitDelimited<D, V>>::new","value":"fn new(D, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Visit`] implementation that wraps `inner` so that\n each formatted field is separated by the provided `delimiter`.","sig":null,"attributes":[{"value":"/ Returns a new [`Visit`] implementation that wraps `inner` so that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24810,"byte_end":24879,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ each formatted field is separated by the provided `delimiter`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24884,"byte_end":24950,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24955,"byte_end":24958,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`Visit`]: tracing_core::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24963,"byte_end":25004,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25567,"byte_end":25577,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"record_i64","qualname":"<VisitDelimited<D, V> as tracing_core::field::Visit>::record_i64","value":"fn record_i64(&mut Self, &Field, i64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25701,"byte_end":25711,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"record_u64","qualname":"<VisitDelimited<D, V> as tracing_core::field::Visit>::record_u64","value":"fn record_u64(&mut Self, &Field, u64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":390},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25835,"byte_end":25846,"line_start":98,"line_end":98,"column_start":8,"column_end":19},"name":"record_bool","qualname":"<VisitDelimited<D, V> as tracing_core::field::Visit>::record_bool","value":"fn record_bool(&mut Self, &Field, bool)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25972,"byte_end":25982,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"record_str","qualname":"<VisitDelimited<D, V> as tracing_core::field::Visit>::record_str","value":"fn record_str(&mut Self, &Field, &str)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26107,"byte_end":26119,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<VisitDelimited<D, V> as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26364,"byte_end":26370,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"finish","qualname":"<VisitDelimited<D, V> as field::VisitOutput>::finish","value":"fn finish(Self) -> fmt::Result","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26546,"byte_end":26552,"line_start":130,"line_end":130,"column_start":8,"column_end":14},"name":"writer","qualname":"<VisitDelimited<D, V> as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::field::display","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":808},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":162},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":166}],"decl_id":null,"docs":" `MakeVisitor` wrappers for working with `fmt::Display` fields.\n","sig":null,"attributes":[{"value":"/ `MakeVisitor` wrappers for working with `fmt::Display` fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28026,"byte_end":28092,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28337,"byte_end":28345,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Messages","qualname":"::field::display::Messages","value":"","parent":null,"children":[],"decl_id":null,"docs":" A visitor wrapper that ensures any strings named \"message\" are formatted\n using `fmt::Display`\n","sig":null,"attributes":[{"value":"/ A visitor wrapper that ensures any strings named \"message\" are formatted","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28200,"byte_end":28276,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ using `fmt::Display`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28277,"byte_end":28301,"line_start":8,"line_end":8,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28720,"byte_end":28723,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Messages<V>>::new","value":"fn new(V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`MakeVisitor`] implementation that will wrap `inner` so\n that any strings named `message` are formatted using `fmt::Display`.","sig":null,"attributes":[{"value":"/ Returns a new [`MakeVisitor`] implementation that will wrap `inner` so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28505,"byte_end":28579,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ that any strings named `message` are formatted using `fmt::Display`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28584,"byte_end":28656,"line_start":19,"line_end":19,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28661,"byte_end":28664,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`MakeVisitor`]: super::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28669,"byte_end":28708,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28913,"byte_end":28925,"line_start":34,"line_end":34,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<Messages<V> as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28896,"byte_end":28905,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29091,"byte_end":29101,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"record_f64","qualname":"<Messages<V> as tracing_core::field::Visit>::record_f64","value":"fn record_f64(&mut Self, &Field, f64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":388},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29074,"byte_end":29083,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29210,"byte_end":29220,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"record_i64","qualname":"<Messages<V> as tracing_core::field::Visit>::record_i64","value":"fn record_i64(&mut Self, &Field, i64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":389},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29193,"byte_end":29202,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29329,"byte_end":29339,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"record_u64","qualname":"<Messages<V> as tracing_core::field::Visit>::record_u64","value":"fn record_u64(&mut Self, &Field, u64)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":390},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29312,"byte_end":29321,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29448,"byte_end":29459,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"record_bool","qualname":"<Messages<V> as tracing_core::field::Visit>::record_bool","value":"fn record_bool(&mut Self, &Field, bool)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":393},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29431,"byte_end":29440,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29586,"byte_end":29596,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"record_str","qualname":"<Messages<V> as tracing_core::field::Visit>::record_str","value":"fn record_str(&mut Self, &Field, &str)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":394},"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29553,"byte_end":29578,"line_start":63,"line_end":63,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30059,"byte_end":30071,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<Messages<V> as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30042,"byte_end":30051,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30269,"byte_end":30275,"line_start":88,"line_end":88,"column_start":8,"column_end":14},"name":"finish","qualname":"<Messages<V> as field::VisitOutput>::finish","value":"fn finish(Self) -> O","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30252,"byte_end":30261,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30509,"byte_end":30515,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"writer","qualname":"<Messages<V> as field::VisitWrite>::writer","value":"fn writer(&mut Self) -> &mut dyn io::Write","parent":{"krate":0,"index":830},"children":[],"decl_id":{"krate":0,"index":831},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30488,"byte_end":30497,"line_start":102,"line_end":102,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30677,"byte_end":30683,"line_start":114,"line_end":114,"column_start":8,"column_end":14},"name":"writer","qualname":"<Messages<V> as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30660,"byte_end":30669,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10940,"byte_end":10951,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"MakeVisitor","qualname":"::field::MakeVisitor","value":"MakeVisitor<T>","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"decl_id":null,"docs":" Creates new [visitors].","sig":null,"attributes":[{"value":"/ Creates new [visitors].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10316,"byte_end":10343,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10344,"byte_end":10347,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A type implementing `MakeVisitor` represents a composable factory for types","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10348,"byte_end":10427,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ implementing the [`Visit` trait][visitors]. The `MakeVisitor` trait defines","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10428,"byte_end":10507,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a single function, `make_visitor`, which takes in a `T`-typed `target` and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10508,"byte_end":10586,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ returns a type implementing `Visit` configured for that target. A target may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10587,"byte_end":10667,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ be a string, output stream, or data structure that the visitor will record","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10668,"byte_end":10746,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ data to, configuration variables that determine the visitor's behavior, or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10747,"byte_end":10825,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ `()` when no input is required to produce a visitor.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10826,"byte_end":10882,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10883,"byte_end":10886,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [visitors]: tracing_core::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10887,"byte_end":10929,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11023,"byte_end":11030,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"Visitor","qualname":"::field::MakeVisitor::Visitor","value":"type Visitor: Visit;","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" The visitor type produced by this `MakeVisitor`.\n","sig":null,"attributes":[{"value":"/ The visitor type produced by this `MakeVisitor`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10961,"byte_end":11013,"line_start":27,"line_end":27,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11101,"byte_end":11113,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"::field::MakeVisitor::make_visitor","value":"fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Make a new visitor for the provided `target`.\n","sig":null,"attributes":[{"value":"/ Make a new visitor for the provided `target`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11044,"byte_end":11093,"line_start":30,"line_end":30,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11283,"byte_end":11294,"line_start":37,"line_end":37,"column_start":11,"column_end":22},"name":"VisitOutput","qualname":"::field::VisitOutput","value":"VisitOutput<Out>: Visit","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" A [visitor] that produces output once it has visited a set of fields.","sig":null,"attributes":[{"value":"/ A [visitor] that produces output once it has visited a set of fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11153,"byte_end":11226,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11227,"byte_end":11230,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [visitor]: tracing_core::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11231,"byte_end":11272,"line_start":36,"line_end":36,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11444,"byte_end":11450,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"finish","qualname":"::field::VisitOutput::finish","value":"fn finish(Self) -> Out","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Completes the visitor, returning any output.","sig":null,"attributes":[{"value":"/ Completes the visitor, returning any output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11313,"byte_end":11361,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11366,"byte_end":11369,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This is called once a full set of fields has been visited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11374,"byte_end":11436,"line_start":40,"line_end":40,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11594,"byte_end":11599,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"visit","qualname":"::field::VisitOutput::visit","value":"fn visit<R>(Self, &R) -> Out where R: RecordFields, Self: Sized","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Visit a set of fields, and return the output of finishing the visitor\n once the fields have been visited.\n","sig":null,"attributes":[{"value":"/ Visit a set of fields, and return the output of finishing the visitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11470,"byte_end":11543,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ once the fields have been visited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11548,"byte_end":11586,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12904,"byte_end":12916,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"RecordFields","qualname":"::field::RecordFields","value":"RecordFields: crate::sealed::Sealed<RecordFieldsMarker>","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" Extension trait implemented by types which can be recorded by a [visitor].","sig":null,"attributes":[{"value":"/ Extension trait implemented by types which can be recorded by a [visitor].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11759,"byte_end":11837,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11838,"byte_end":11841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This allows writing code that is generic over `tracing_core`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11842,"byte_end":11908,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [`span::Attributes`][attr], [`span::Record`][rec], and [`Event`][event]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11909,"byte_end":11984,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ types. These types all provide inherent `record` methods that allow a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11985,"byte_end":12058,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ visitor to record their fields, but there is no common trait representing this.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12059,"byte_end":12142,"line_start":60,"line_end":60,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12143,"byte_end":12146,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ With `RecordFields`, we can write code like this:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12147,"byte_end":12200,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12201,"byte_end":12208,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::field::Visit;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12209,"byte_end":12244,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/ # use tracing_core::field::Field;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12245,"byte_end":12282,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/ use tracing_subscriber::field::RecordFields;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12283,"byte_end":12331,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12332,"byte_end":12335,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct MyVisitor {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12336,"byte_end":12358,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12359,"byte_end":12373,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12374,"byte_end":12379,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ # impl MyVisitor { fn new() -> Self { Self{} } }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12380,"byte_end":12432,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ impl Visit for MyVisitor {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12433,"byte_end":12463,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12464,"byte_end":12478,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/ # fn record_debug(&mut self, _: &Field, _: &dyn std::fmt::Debug) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12479,"byte_end":12550,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12551,"byte_end":12556,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12557,"byte_end":12560,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ fn record_with_my_visitor<R>(r: R)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12561,"byte_end":12599,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12600,"byte_end":12609,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/     R: RecordFields,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12610,"byte_end":12634,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12635,"byte_end":12640,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/     let mut visitor = MyVisitor::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12641,"byte_end":12684,"line_start":81,"line_end":81,"column_start":1,"column_end":44}},{"value":"/     r.record(&mut visitor);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12685,"byte_end":12716,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12717,"byte_end":12722,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12723,"byte_end":12730,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ [visitor]: tracing_core::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12731,"byte_end":12772,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/ [attr]: tracing_core::span::Attributes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12773,"byte_end":12815,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/ [rec]: tracing_core::span::Record","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12816,"byte_end":12853,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ [event]: tracing_core::event::Event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12854,"byte_end":12893,"line_start":88,"line_end":88,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13038,"byte_end":13044,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"record","qualname":"::field::RecordFields::record","value":"fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Record all the fields in `self` with the provided `visitor`.\n","sig":null,"attributes":[{"value":"/ Record all the fields in `self` with the provided `visitor`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12966,"byte_end":13030,"line_start":90,"line_end":90,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13216,"byte_end":13226,"line_start":96,"line_end":96,"column_start":11,"column_end":21},"name":"MakeOutput","qualname":"::field::MakeOutput","value":"MakeOutput<T, Out>","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" Extension trait implemented for all `MakeVisitor` implementations that\n produce a visitor implementing `VisitOutput`.\n","sig":null,"attributes":[{"value":"/ Extension trait implemented for all `MakeVisitor` implementations that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13081,"byte_end":13155,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ produce a visitor implementing `VisitOutput`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13156,"byte_end":13205,"line_start":95,"line_end":95,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13439,"byte_end":13449,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"visit_with","qualname":"::field::MakeOutput::visit_with","value":"fn visit_with<F>(&Self, T, &F) -> Out where F: RecordFields","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Visits all fields in `fields` with a new visitor constructed from\n `target`.\n","sig":null,"attributes":[{"value":"/ Visits all fields in `fields` with a new visitor constructed from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13344,"byte_end":13413,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ `target`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13418,"byte_end":13431,"line_start":102,"line_end":102,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13800,"byte_end":13810,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"VisitWrite","qualname":"::field::VisitWrite","value":"VisitWrite: VisitOutput<Result<(), io::Error>>","parent":null,"children":[{"krate":0,"index":831}],"decl_id":null,"docs":" Extension trait implemented by visitors to indicate that they write to an\n `io::Write` instance, and allow access to that writer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13920,"byte_end":13926,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"writer","qualname":"::field::VisitWrite::writer","value":"fn writer(&mut Self) -> &mut dyn io::Write","parent":{"krate":0,"index":830},"children":[],"decl_id":null,"docs":" Returns the writer that this visitor writes to.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14117,"byte_end":14125,"line_start":125,"line_end":125,"column_start":11,"column_end":19},"name":"VisitFmt","qualname":"::field::VisitFmt","value":"VisitFmt: VisitOutput<fmt::Result>","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Extension trait implemented by visitors to indicate that they write to a\n `fmt::Write` instance, and allow access to that writer.\n","sig":null,"attributes":[{"value":"/ Extension trait implemented by visitors to indicate that they write to a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13970,"byte_end":14046,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ `fmt::Write` instance, and allow access to that writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14047,"byte_end":14106,"line_start":124,"line_end":124,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14220,"byte_end":14226,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"writer","qualname":"::field::VisitFmt::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Returns the formatter that this visitor writes to.\n","sig":null,"attributes":[{"value":"/ Returns the formatter that this visitor writes to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14158,"byte_end":14212,"line_start":126,"line_end":126,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14332,"byte_end":14339,"line_start":131,"line_end":131,"column_start":11,"column_end":18},"name":"MakeExt","qualname":"::field::MakeExt","value":"MakeExt<T>","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" Extension trait providing `MakeVisitor` combinators.\n","sig":null,"attributes":[{"value":"/ Extension trait providing `MakeVisitor` combinators.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14265,"byte_end":14321,"line_start":130,"line_end":130,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14558,"byte_end":14567,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"debug_alt","qualname":"::field::MakeExt::debug_alt","value":"fn debug_alt(Self) -> debug::Alt<Self>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that any `fmt::Debug` fields are recorded using the\n alternate formatter (`{:#?}`).\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that any `fmt::Debug` fields are recorded using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14440,"byte_end":14511,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ alternate formatter (`{:#?}`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14516,"byte_end":14550,"line_start":137,"line_end":137,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14746,"byte_end":14762,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"display_messages","qualname":"::field::MakeExt::display_messages","value":"fn display_messages(Self) -> display::Messages<Self>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that any string fields named \"message\" are recorded\n using `fmt::Display`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that any string fields named \"message\" are recorded","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14637,"byte_end":14708,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ using `fmt::Display`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14713,"byte_end":14738,"line_start":143,"line_end":143,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14973,"byte_end":14982,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"delimited","qualname":"::field::MakeExt::delimited","value":"fn delimited<D>(Self, D) -> delimited::Delimited<D, Self> where\nD: AsRef<str> + Clone, Self::Visitor: VisitFmt","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Wraps `self` so that when fields are formatted to a writer, they are\n separated by the provided `delimiter`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` so that when fields are formatted to a writer, they are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14846,"byte_end":14918,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ separated by the provided `delimiter`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14923,"byte_end":14965,"line_start":149,"line_end":149,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15322,"byte_end":15328,"line_start":163,"line_end":163,"column_start":8,"column_end":14},"name":"record","qualname":"<Event as field::RecordFields>::record","value":"fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15532,"byte_end":15538,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"record","qualname":"<Attributes as field::RecordFields>::record","value":"fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15739,"byte_end":15745,"line_start":177,"line_end":177,"column_start":8,"column_end":14},"name":"record","qualname":"<Record as field::RecordFields>::record","value":"fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15987,"byte_end":15993,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"record","qualname":"<&'a F as field::RecordFields>::record","value":"fn record(&Self, &mut dyn Visit)","parent":{"krate":0,"index":178},"children":[],"decl_id":{"krate":0,"index":179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16202,"byte_end":16214,"line_start":200,"line_end":200,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<F as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, T) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16769,"byte_end":16782,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"MakeExtMarker","qualname":"::field::MakeExtMarker","value":"MakeExtMarker {  }","parent":null,"children":[{"krate":0,"index":834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16858,"byte_end":16876,"line_start":236,"line_end":236,"column_start":12,"column_end":30},"name":"RecordFieldsMarker","qualname":"::field::RecordFieldsMarker","value":"RecordFieldsMarker {  }","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filter","qualname":"::filter","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":865},{"krate":0,"index":1334},{"krate":0,"index":1489},{"krate":0,"index":1789},{"krate":0,"index":346},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":1848},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":2073}],"decl_id":null,"docs":" [`Layer`]s that control which spans and events are enabled by the wrapped\n subscriber.","sig":null,"attributes":[{"value":"/ [`Layer`]s that control which spans and events are enabled by the wrapped","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":30753,"byte_end":30830,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":30831,"byte_end":30846,"line_start":2,"line_end":2,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":30847,"byte_end":30850,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of types that provide implementations of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":30851,"byte_end":30925,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ various strategies for filtering which spans and events are enabled. For","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":30926,"byte_end":31002,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ details on filtering spans and events using [`Layer`]s, see the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31003,"byte_end":31070,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ [`layer` module's documentation].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31071,"byte_end":31108,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31109,"byte_end":31112,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`layer` module's documentation]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31113,"byte_end":31185,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`Layer`]: crate::layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31186,"byte_end":31213,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33442,"byte_end":33450,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"FilterFn","qualname":"::filter::filter_fn::FilterFn","value":"FilterFn {  }","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" A filter implemented by a closure or function pointer that\n determines whether a given span or event is enabled, based on its\n [`Metadata`].","sig":null,"attributes":[{"value":"/ A filter implemented by a closure or function pointer that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32744,"byte_end":32806,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ determines whether a given span or event is enabled, based on its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32807,"byte_end":32876,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ [`Metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32877,"byte_end":32894,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32895,"byte_end":32898,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32899,"byte_end":32971,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":32972,"byte_end":33044,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33045,"byte_end":33075,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33076,"byte_end":33079,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33080,"byte_end":33156,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33157,"byte_end":33160,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33161,"byte_end":33201,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33202,"byte_end":33238,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33239,"byte_end":33273,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33274,"byte_end":33317,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33318,"byte_end":33361,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33362,"byte_end":33413,"line_start":23,"line_end":23,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34262,"byte_end":34273,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"DynFilterFn","qualname":"::filter::filter_fn::DynFilterFn","value":"DynFilterFn {  }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" A filter implemented by a closure or function pointer that\n determines whether a given span or event is enabled _dynamically_,\n potentially based on the current [span context].","sig":null,"attributes":[{"value":"/ A filter implemented by a closure or function pointer that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33544,"byte_end":33606,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ determines whether a given span or event is enabled _dynamically_,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33607,"byte_end":33677,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ potentially based on the current [span context].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33678,"byte_end":33730,"line_start":32,"line_end":32,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33731,"byte_end":33734,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33735,"byte_end":33807,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33808,"byte_end":33880,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33881,"byte_end":33911,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33912,"byte_end":33915,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33916,"byte_end":33992,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33993,"byte_end":33996,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [span context]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":33997,"byte_end":34038,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34039,"byte_end":34075,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34076,"byte_end":34110,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34111,"byte_end":34154,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34155,"byte_end":34198,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34199,"byte_end":34250,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36094,"byte_end":36103,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"filter_fn","qualname":"::filter::filter_fn::filter_fn","value":"fn filter_fn<F>(F) -> FilterFn<F> where F: Fn(&Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`FilterFn`], from a function or closure that returns `true` if\n a span or event should be enabled, based on its [`Metadata`].","sig":null,"attributes":[{"value":"/ Constructs a [`FilterFn`], from a function or closure that returns `true` if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34596,"byte_end":34676,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ a span or event should be enabled, based on its [`Metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34677,"byte_end":34742,"line_start":61,"line_end":61,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34743,"byte_end":34746,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The returned [`FilterFn`] can be used for both [per-layer filtering][plf]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34747,"byte_end":34824,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ (using its [`Filter`] implementation) and [global filtering][global] (using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34825,"byte_end":34904,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ its  [`Layer`] implementation).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34905,"byte_end":34940,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34941,"byte_end":34944,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":34945,"byte_end":35021,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35022,"byte_end":35025,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling [`FilterFn::new`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35026,"byte_end":35078,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35079,"byte_end":35082,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35083,"byte_end":35123,"line_start":71,"line_end":71,"column_start":1,"column_end":41}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35124,"byte_end":35160,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35161,"byte_end":35195,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35196,"byte_end":35239,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35240,"byte_end":35283,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35284,"byte_end":35335,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35336,"byte_end":35339,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35340,"byte_end":35354,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35355,"byte_end":35358,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35359,"byte_end":35366,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35367,"byte_end":35396,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35397,"byte_end":35435,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/     filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35436,"byte_end":35451,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35452,"byte_end":35484,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35485,"byte_end":35491,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35492,"byte_end":35495,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let my_filter = filter::filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35496,"byte_end":35546,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/     // Only enable spans or events with the target \"interesting_things\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35547,"byte_end":35622,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/     metadata.target() == \"interesting_things\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35623,"byte_end":35672,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35673,"byte_end":35680,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35681,"byte_end":35684,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35685,"byte_end":35737,"line_start":92,"line_end":92,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35738,"byte_end":35741,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35742,"byte_end":35776,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35777,"byte_end":35823,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35824,"byte_end":35840,"line_start":96,"line_end":96,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35841,"byte_end":35844,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // This event will not be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35845,"byte_end":35883,"line_start":98,"line_end":98,"column_start":1,"column_end":39}},{"value":"/ tracing::warn!(\"something important but uninteresting happened!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35884,"byte_end":35954,"line_start":99,"line_end":99,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35955,"byte_end":35958,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // This event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35959,"byte_end":35993,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/ tracing::debug!(target: \"interesting_things\", \"an interesting minor detail...\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":35994,"byte_end":36078,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36079,"byte_end":36086,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38481,"byte_end":38498,"line_start":175,"line_end":175,"column_start":8,"column_end":25},"name":"dynamic_filter_fn","qualname":"::filter::filter_fn::dynamic_filter_fn","value":"fn dynamic_filter_fn<S, F>(F) -> DynFilterFn<S, F> where\nF: Fn(&Metadata, &Context<, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`DynFilterFn`] from a function or closure that returns `true`\n if a span or event should be enabled within a particular [span context][`Context`].","sig":null,"attributes":[{"value":"/ Constructs a [`DynFilterFn`] from a function or closure that returns `true`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36194,"byte_end":36273,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ if a span or event should be enabled within a particular [span context][`Context`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36274,"byte_end":36361,"line_start":112,"line_end":112,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36362,"byte_end":36365,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling [`DynFilterFn::new`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36366,"byte_end":36421,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36422,"byte_end":36425,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Unlike [`filter_fn`], this function takes a closure or function pointer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36426,"byte_end":36501,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ taking the [`Metadata`] for a span or event *and* the current [`Context`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36502,"byte_end":36580,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ This means that a [`DynFilterFn`] can choose whether to enable spans or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36581,"byte_end":36656,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/ events based on information about the _current_ span (or its parents).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36657,"byte_end":36731,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36732,"byte_end":36735,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ If this is *not* necessary, use [`filter_fn`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36736,"byte_end":36794,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36795,"byte_end":36798,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The returned [`DynFilterFn`] can be used for both [per-layer filtering][plf]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36799,"byte_end":36879,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ (using its [`Filter`] implementation) and [global filtering][global] (using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36880,"byte_end":36959,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ its  [`Layer`] implementation).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36960,"byte_end":36995,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":36996,"byte_end":36999,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37000,"byte_end":37076,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37077,"byte_end":37080,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37081,"byte_end":37095,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37096,"byte_end":37099,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37100,"byte_end":37107,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37108,"byte_end":37137,"line_start":132,"line_end":132,"column_start":1,"column_end":30}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37138,"byte_end":37176,"line_start":133,"line_end":133,"column_start":1,"column_end":39}},{"value":"/     filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37177,"byte_end":37192,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37193,"byte_end":37225,"line_start":135,"line_end":135,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37226,"byte_end":37232,"line_start":136,"line_end":136,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37233,"byte_end":37236,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37237,"byte_end":37311,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/ let my_filter = filter::dynamic_filter_fn(|metadata, cx| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37312,"byte_end":37374,"line_start":139,"line_end":139,"column_start":1,"column_end":63}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37375,"byte_end":37442,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37443,"byte_end":37515,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/         return true;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37516,"byte_end":37540,"line_start":142,"line_end":142,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37541,"byte_end":37550,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37551,"byte_end":37554,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37555,"byte_end":37607,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37608,"byte_end":37665,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37666,"byte_end":37727,"line_start":147,"line_end":147,"column_start":1,"column_end":62}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37728,"byte_end":37737,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37738,"byte_end":37741,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37742,"byte_end":37755,"line_start":150,"line_end":150,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37756,"byte_end":37763,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37764,"byte_end":37767,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37768,"byte_end":37820,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37821,"byte_end":37824,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37825,"byte_end":37859,"line_start":155,"line_end":155,"column_start":1,"column_end":35}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37860,"byte_end":37906,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37907,"byte_end":37923,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37924,"byte_end":37927,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ // This event will not be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37928,"byte_end":37966,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ tracing::info!(\"something happened\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":37967,"byte_end":38008,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38009,"byte_end":38012,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ tracing::info_span!(\"interesting_span\").in_scope(|| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38013,"byte_end":38070,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/     // This event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38071,"byte_end":38109,"line_start":163,"line_end":163,"column_start":1,"column_end":39}},{"value":"/     tracing::debug!(\"something else happened\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38110,"byte_end":38161,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38162,"byte_end":38169,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38170,"byte_end":38177,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38178,"byte_end":38181,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38182,"byte_end":38218,"line_start":168,"line_end":168,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38219,"byte_end":38253,"line_start":169,"line_end":169,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38254,"byte_end":38297,"line_start":170,"line_end":170,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38298,"byte_end":38341,"line_start":171,"line_end":171,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38342,"byte_end":38393,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/ [`Context`]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38394,"byte_end":38432,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38433,"byte_end":38473,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40130,"byte_end":40133,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"new","qualname":"<FilterFn<F>>::new","value":"fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`FilterFn`] from a function or closure that returns `true`\n if a span or event should be enabled, based on its [`Metadata`].","sig":null,"attributes":[{"value":"/ Constructs a [`FilterFn`] from a function or closure that returns `true`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38684,"byte_end":38760,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ if a span or event should be enabled, based on its [`Metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38765,"byte_end":38833,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38838,"byte_end":38841,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If determining whether a span or event should be enabled also requires","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38846,"byte_end":38920,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ information about the current span context, use [`DynFilterFn`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38925,"byte_end":39001,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39006,"byte_end":39009,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details on using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39014,"byte_end":39090,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ [`Filter`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39095,"byte_end":39111,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39116,"byte_end":39119,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39124,"byte_end":39160,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39165,"byte_end":39208,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39213,"byte_end":39253,"line_start":197,"line_end":197,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39258,"byte_end":39261,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39266,"byte_end":39280,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39285,"byte_end":39288,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39293,"byte_end":39300,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39305,"byte_end":39334,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39339,"byte_end":39377,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"/     filter::FilterFn,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39382,"byte_end":39407,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39412,"byte_end":39444,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39449,"byte_end":39455,"line_start":206,"line_end":206,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39460,"byte_end":39463,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let my_filter = FilterFn::new(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39468,"byte_end":39514,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     // Only enable spans or events with the target \"interesting_things\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39519,"byte_end":39594,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/     metadata.target() == \"interesting_things\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39599,"byte_end":39648,"line_start":210,"line_end":210,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39653,"byte_end":39660,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39665,"byte_end":39668,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39673,"byte_end":39725,"line_start":213,"line_end":213,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39730,"byte_end":39733,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39738,"byte_end":39772,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39777,"byte_end":39823,"line_start":216,"line_end":216,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39828,"byte_end":39844,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39849,"byte_end":39852,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ // This event will not be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39857,"byte_end":39895,"line_start":219,"line_end":219,"column_start":5,"column_end":43}},{"value":"/ tracing::warn!(\"something important but uninteresting happened!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39900,"byte_end":39970,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39975,"byte_end":39978,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // This event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":39983,"byte_end":40017,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/ tracing::debug!(target: \"interesting_things\", \"an interesting minor detail...\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40022,"byte_end":40106,"line_start":223,"line_end":223,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40111,"byte_end":40118,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41670,"byte_end":41689,"line_start":269,"line_end":269,"column_start":12,"column_end":31},"name":"with_max_level_hint","qualname":"<FilterFn<F>>::with_max_level_hint","value":"fn with_max_level_hint<impl Into<LevelFilter>>(Self, impl Into<LevelFilter>)\n-> Self where impl Into<LevelFilter>: Into<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Sets the highest verbosity [`Level`] the filter function will enable.","sig":null,"attributes":[{"value":"/ Sets the highest verbosity [`Level`] the filter function will enable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40247,"byte_end":40320,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40325,"byte_end":40328,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The value passed to this method will be returned by this `FilterFn`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40333,"byte_end":40406,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ [`Filter::max_level_hint`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40411,"byte_end":40449,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40454,"byte_end":40457,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ If the provided function will not enable all levels, it is recommended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40462,"byte_end":40536,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ to call this method to configure it with the most verbose level it will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40541,"byte_end":40616,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ enable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40621,"byte_end":40632,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40637,"byte_end":40640,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40645,"byte_end":40659,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40664,"byte_end":40667,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40672,"byte_end":40679,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40684,"byte_end":40713,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40718,"byte_end":40756,"line_start":245,"line_end":245,"column_start":5,"column_end":43}},{"value":"/     filter::{filter_fn, LevelFilter},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40761,"byte_end":40802,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40807,"byte_end":40839,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40844,"byte_end":40850,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40855,"byte_end":40883,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40888,"byte_end":40891,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let my_filter = filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40896,"byte_end":40938,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/     // Only enable spans or events with targets starting with `my_crate`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":40943,"byte_end":41019,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/     // and levels at or below `INFO`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41024,"byte_end":41065,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     metadata.level() <= &Level::INFO && metadata.target().starts_with(\"my_crate\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41070,"byte_end":41155,"line_start":254,"line_end":254,"column_start":5,"column_end":90}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41160,"byte_end":41166,"line_start":255,"line_end":255,"column_start":5,"column_end":11}},{"value":"/     // Since the filter closure will only enable the `INFO` level and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41171,"byte_end":41244,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/     // below, set the max level hint","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41249,"byte_end":41289,"line_start":257,"line_end":257,"column_start":5,"column_end":45}},{"value":"/     .with_max_level_hint(LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41294,"byte_end":41342,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41347,"byte_end":41350,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41355,"byte_end":41407,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41412,"byte_end":41415,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41420,"byte_end":41454,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41459,"byte_end":41505,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41510,"byte_end":41526,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41531,"byte_end":41538,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41543,"byte_end":41546,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41551,"byte_end":41585,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ [`Filter::max_level_hint`]: crate::layer::Filter::max_level_hint","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":41590,"byte_end":41658,"line_start":268,"line_end":268,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43580,"byte_end":43587,"line_start":329,"line_end":329,"column_start":8,"column_end":15},"name":"enabled","qualname":"<FilterFn<F> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43697,"byte_end":43714,"line_start":333,"line_end":333,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<FilterFn<F> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43831,"byte_end":43845,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<FilterFn<F> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43996,"byte_end":44000,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"from","qualname":"<FilterFn<F> as std::convert::From>::from","value":"fn from(F) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44103,"byte_end":44106,"line_start":352,"line_end":352,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterFn<F> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46642,"byte_end":46645,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<DynFilterFn<S, F>>::new","value":"fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Filter`] from a function or closure that returns `true`\n if a span or event should be enabled in the current [span\n context][`Context`].","sig":null,"attributes":[{"value":"/ Constructs a [`Filter`] from a function or closure that returns `true`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44473,"byte_end":44547,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ if a span or event should be enabled in the current [span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44552,"byte_end":44613,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/ context][`Context`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44618,"byte_end":44642,"line_start":368,"line_end":368,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44647,"byte_end":44650,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Unlike [`FilterFn`], a `DynFilterFn` is constructed from a closure or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44655,"byte_end":44728,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ function pointer that takes both the [`Metadata`] for a span or event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44733,"byte_end":44806,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ *and* the current [`Context`]. This means that a [`DynFilterFn`] can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44811,"byte_end":44883,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ choose whether to enable spans or events based on information about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44888,"byte_end":44963,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ _current_ span (or its parents).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44968,"byte_end":45004,"line_start":374,"line_end":374,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45009,"byte_end":45012,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If this is *not* necessary, use [`FilterFn`] instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45017,"byte_end":45074,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45079,"byte_end":45082,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details on using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45087,"byte_end":45163,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ [`Filter`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45168,"byte_end":45184,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45189,"byte_end":45192,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45197,"byte_end":45233,"line_start":381,"line_end":381,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45238,"byte_end":45281,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ [`Context`]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45286,"byte_end":45324,"line_start":383,"line_end":383,"column_start":5,"column_end":43}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45329,"byte_end":45369,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45374,"byte_end":45377,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45382,"byte_end":45396,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45401,"byte_end":45404,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45409,"byte_end":45416,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45421,"byte_end":45450,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45455,"byte_end":45493,"line_start":390,"line_end":390,"column_start":5,"column_end":43}},{"value":"/     filter::DynFilterFn,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45498,"byte_end":45526,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45531,"byte_end":45563,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45568,"byte_end":45574,"line_start":393,"line_end":393,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45579,"byte_end":45582,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45587,"byte_end":45661,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45666,"byte_end":45719,"line_start":396,"line_end":396,"column_start":5,"column_end":58}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45724,"byte_end":45791,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45796,"byte_end":45868,"line_start":398,"line_end":398,"column_start":5,"column_end":77}},{"value":"/         return true;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45873,"byte_end":45897,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45902,"byte_end":45911,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45916,"byte_end":45919,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45924,"byte_end":45976,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":45981,"byte_end":46038,"line_start":403,"line_end":403,"column_start":5,"column_end":62}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46043,"byte_end":46104,"line_start":404,"line_end":404,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46109,"byte_end":46118,"line_start":405,"line_end":405,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46123,"byte_end":46126,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/     false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46131,"byte_end":46144,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46149,"byte_end":46156,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46161,"byte_end":46164,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46169,"byte_end":46221,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46226,"byte_end":46229,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46234,"byte_end":46268,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46273,"byte_end":46319,"line_start":413,"line_end":413,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46324,"byte_end":46340,"line_start":414,"line_end":414,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46345,"byte_end":46348,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ // This event will not be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46353,"byte_end":46391,"line_start":416,"line_end":416,"column_start":5,"column_end":43}},{"value":"/ tracing::info!(\"something happened\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46396,"byte_end":46437,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46442,"byte_end":46445,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ tracing::info_span!(\"interesting_span\").in_scope(|| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46450,"byte_end":46507,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"/     // This event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46512,"byte_end":46550,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/     tracing::debug!(\"something else happened\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46555,"byte_end":46606,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46611,"byte_end":46618,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46623,"byte_end":46630,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48826,"byte_end":48845,"line_start":489,"line_end":489,"column_start":12,"column_end":31},"name":"with_max_level_hint","qualname":"<DynFilterFn<S, F, R>>::with_max_level_hint","value":"fn with_max_level_hint<impl Into<LevelFilter>>(Self, impl Into<LevelFilter>)\n-> Self where impl Into<LevelFilter>: Into<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Sets the highest verbosity [`Level`] the filter function will enable.","sig":null,"attributes":[{"value":"/ Sets the highest verbosity [`Level`] the filter function will enable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46921,"byte_end":46994,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46999,"byte_end":47002,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The value passed to this method will be returned by this `DynFilterFn`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47007,"byte_end":47083,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ [`Filter::max_level_hint`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47088,"byte_end":47126,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47131,"byte_end":47134,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ If the provided function will not enable all levels, it is recommended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47139,"byte_end":47213,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ to call this method to configure it with the most verbose level it will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47218,"byte_end":47293,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ enable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47298,"byte_end":47309,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47314,"byte_end":47317,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47322,"byte_end":47336,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47341,"byte_end":47344,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47349,"byte_end":47356,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47361,"byte_end":47390,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47395,"byte_end":47433,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/     filter::{DynFilterFn, LevelFilter},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47438,"byte_end":47481,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47486,"byte_end":47518,"line_start":453,"line_end":453,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47523,"byte_end":47529,"line_start":454,"line_end":454,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47534,"byte_end":47562,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47567,"byte_end":47570,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events with levels at or below `INFO`, if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47575,"byte_end":47644,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"/ // we are inside a span called \"interesting_span\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47649,"byte_end":47703,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47708,"byte_end":47761,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/     // If the level is greater than INFO, disable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47766,"byte_end":47823,"line_start":460,"line_end":460,"column_start":5,"column_end":62}},{"value":"/     if metadata.level() > &Level::INFO {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47828,"byte_end":47872,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/         return false;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47877,"byte_end":47902,"line_start":462,"line_end":462,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47907,"byte_end":47916,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47921,"byte_end":47924,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     // If any span in the current scope is named \"interesting_span\",","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":47929,"byte_end":48001,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/     // enable this span or event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48006,"byte_end":48043,"line_start":466,"line_end":466,"column_start":5,"column_end":42}},{"value":"/     for span in cx.lookup_current().iter().flat_map(|span| span.scope()) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48048,"byte_end":48126,"line_start":467,"line_end":467,"column_start":5,"column_end":83}},{"value":"/         if span.name() == \"interesting_span\" {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48131,"byte_end":48181,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/             return true;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48186,"byte_end":48214,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/          }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48219,"byte_end":48233,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48238,"byte_end":48247,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48252,"byte_end":48255,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, disable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48260,"byte_end":48293,"line_start":473,"line_end":473,"column_start":5,"column_end":38}},{"value":"/     false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48298,"byte_end":48311,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48316,"byte_end":48322,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/     // Since the filter closure will only enable the `INFO` level and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48327,"byte_end":48400,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/     // below, set the max level hint","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48405,"byte_end":48445,"line_start":477,"line_end":477,"column_start":5,"column_end":45}},{"value":"/     .with_max_level_hint(LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48450,"byte_end":48498,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48503,"byte_end":48506,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48511,"byte_end":48563,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48568,"byte_end":48571,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48576,"byte_end":48610,"line_start":482,"line_end":482,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48615,"byte_end":48661,"line_start":483,"line_end":483,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48666,"byte_end":48682,"line_start":484,"line_end":484,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48687,"byte_end":48694,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48699,"byte_end":48702,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48707,"byte_end":48741,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/ [`Filter::max_level_hint`]: crate::layer::Filter::max_level_hint","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":48746,"byte_end":48814,"line_start":488,"line_end":488,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51696,"byte_end":51716,"line_start":558,"line_end":558,"column_start":12,"column_end":32},"name":"with_callsite_filter","qualname":"<DynFilterFn<S, F, R>>::with_callsite_filter","value":"fn with_callsite_filter<R2>(Self, R2) -> DynFilterFn<S, F, R2> where\nR2: Fn(&'static Metadata) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Adds a function for filtering callsites to this filter.","sig":null,"attributes":[{"value":"/ Adds a function for filtering callsites to this filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49014,"byte_end":49073,"line_start":496,"line_end":496,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49078,"byte_end":49081,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ When this filter's [`Filter::callsite_enabled`][cse] method is called,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49086,"byte_end":49160,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ the provided function will be used rather than the default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49165,"byte_end":49228,"line_start":499,"line_end":499,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49233,"byte_end":49236,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ By default, `DynFilterFn` assumes that, because the filter _may_ depend","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49241,"byte_end":49316,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ dynamically on the current [span context], its result should never be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49321,"byte_end":49394,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ cached. However, some filtering strategies may require dynamic information","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49399,"byte_end":49477,"line_start":503,"line_end":503,"column_start":5,"column_end":83}},{"value":"/ from the current span context in *some* cases, but are able to make","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49482,"byte_end":49553,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ static filtering decisions from [`Metadata`] alone in others.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49558,"byte_end":49623,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49628,"byte_end":49631,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ For example, consider the filter given in the example for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49636,"byte_end":49697,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ [`DynFilterFn::new`]. That filter enables all spans named","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49702,"byte_end":49763,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ \"interesting_span\", and any events and spans that occur inside of an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49768,"byte_end":49840,"line_start":509,"line_end":509,"column_start":5,"column_end":77}},{"value":"/ interesting span. Since the span's name is part of its static","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49845,"byte_end":49910,"line_start":510,"line_end":510,"column_start":5,"column_end":70}},{"value":"/ [`Metadata`], the \"interesting_span\" can be enabled in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49915,"byte_end":49973,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/ [`callsite_enabled`][cse]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":49978,"byte_end":50008,"line_start":512,"line_end":512,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50013,"byte_end":50016,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50021,"byte_end":50028,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50033,"byte_end":50062,"line_start":515,"line_end":515,"column_start":5,"column_end":34}},{"value":"/     layer::{Layer, SubscriberExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50067,"byte_end":50105,"line_start":516,"line_end":516,"column_start":5,"column_end":43}},{"value":"/     filter::DynFilterFn,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50110,"byte_end":50138,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/     util::SubscriberInitExt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50143,"byte_end":50175,"line_start":518,"line_end":518,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50180,"byte_end":50186,"line_start":519,"line_end":519,"column_start":5,"column_end":11}},{"value":"/ use tracing_core::subscriber::Interest;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50191,"byte_end":50234,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50239,"byte_end":50242,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ // Only enable spans or events within a span named \"interesting_span\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50247,"byte_end":50321,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ let my_filter = DynFilterFn::new(|metadata, cx| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50326,"byte_end":50379,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/     // If this *is* \"interesting_span\", make sure to enable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50384,"byte_end":50451,"line_start":524,"line_end":524,"column_start":5,"column_end":72}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50456,"byte_end":50528,"line_start":525,"line_end":525,"column_start":5,"column_end":77}},{"value":"/         return true;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50533,"byte_end":50557,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50562,"byte_end":50571,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50576,"byte_end":50579,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, are we in an interesting span?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50584,"byte_end":50636,"line_start":529,"line_end":529,"column_start":5,"column_end":57}},{"value":"/     if let Some(current_span) = cx.lookup_current() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50641,"byte_end":50698,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"/         return current_span.name() == \"interesting_span\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50703,"byte_end":50764,"line_start":531,"line_end":531,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50769,"byte_end":50778,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50783,"byte_end":50786,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     false","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50791,"byte_end":50804,"line_start":534,"line_end":534,"column_start":5,"column_end":18}},{"value":"/ }).with_callsite_filter(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50809,"byte_end":50849,"line_start":535,"line_end":535,"column_start":5,"column_end":45}},{"value":"/     // If this is an \"interesting_span\", we know we will always","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50854,"byte_end":50921,"line_start":536,"line_end":536,"column_start":5,"column_end":72}},{"value":"/     // enable it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50926,"byte_end":50947,"line_start":537,"line_end":537,"column_start":5,"column_end":26}},{"value":"/     if metadata.is_span() && metadata.name() == \"interesting_span\" {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":50952,"byte_end":51024,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/         return Interest::always();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51029,"byte_end":51067,"line_start":539,"line_end":539,"column_start":5,"column_end":43}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51072,"byte_end":51081,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51086,"byte_end":51089,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, it depends on whether or not we're in an interesting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51094,"byte_end":51168,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/     // span. You'll have to ask us again for each span/event!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51173,"byte_end":51238,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/     Interest::sometimes()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51243,"byte_end":51272,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51277,"byte_end":51284,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51289,"byte_end":51292,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ let my_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51297,"byte_end":51349,"line_start":547,"line_end":547,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51354,"byte_end":51357,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51362,"byte_end":51396,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/     .with(my_layer.with_filter(my_filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51401,"byte_end":51447,"line_start":550,"line_end":550,"column_start":5,"column_end":51}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51452,"byte_end":51468,"line_start":551,"line_end":551,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51473,"byte_end":51480,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51485,"byte_end":51488,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ [cse]: crate::layer::Filter::callsite_enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51493,"byte_end":51542,"line_start":554,"line_end":554,"column_start":5,"column_end":54}},{"value":"/ [`enabled`]: crate::layer::Filter::enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51547,"byte_end":51593,"line_start":555,"line_end":555,"column_start":5,"column_end":51}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51598,"byte_end":51638,"line_start":556,"line_end":556,"column_start":5,"column_end":45}},{"value":"/ [span context]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":51643,"byte_end":51684,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":54806,"byte_end":54813,"line_start":649,"line_end":649,"column_start":8,"column_end":15},"name":"enabled","qualname":"<DynFilterFn<S, F, R> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":54929,"byte_end":54946,"line_start":653,"line_end":653,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<DynFilterFn<S, F, R> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55063,"byte_end":55077,"line_start":657,"line_end":657,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<DynFilterFn<S, F, R> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55206,"byte_end":55209,"line_start":663,"line_end":663,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DynFilterFn<S, F, R> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55815,"byte_end":55820,"line_start":684,"line_end":684,"column_start":8,"column_end":13},"name":"clone","qualname":"<DynFilterFn<S, F, R> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56163,"byte_end":56167,"line_start":698,"line_end":698,"column_start":8,"column_end":12},"name":"from","qualname":"<DynFilterFn<S, F> as std::convert::From>::from","value":"fn from(F) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56435,"byte_end":56442,"line_start":713,"line_end":713,"column_start":12,"column_end":19},"name":"enabled","qualname":"<FilterFn<F> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56565,"byte_end":56581,"line_start":717,"line_end":717,"column_start":12,"column_end":28},"name":"callsite_enabled","qualname":"<FilterFn<F> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56710,"byte_end":56724,"line_start":721,"line_end":721,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"<FilterFn<F> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56996,"byte_end":57003,"line_start":731,"line_end":731,"column_start":12,"column_end":19},"name":"enabled","qualname":"<DynFilterFn<S, F, R> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":57131,"byte_end":57147,"line_start":735,"line_end":735,"column_start":12,"column_end":28},"name":"callsite_enabled","qualname":"<DynFilterFn<S, F, R> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":57276,"byte_end":57290,"line_start":739,"line_end":739,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"<DynFilterFn<S, F, R> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159370,"byte_end":14159377,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Builder","qualname":"::filter::env::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":" A [builder] for constructing new [`EnvFilter`]s.","sig":null,"attributes":[{"value":"/ A [builder] for constructing new [`EnvFilter`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159187,"byte_end":14159239,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159240,"byte_end":14159243,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [builder]: https://rust-unofficial.github.io/patterns/patterns/creational/builder.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159244,"byte_end":14159334,"line_start":12,"line_end":12,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160097,"byte_end":14160107,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"with_regex","qualname":"<Builder>::with_regex","value":"fn with_regex(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether span field values can be matched with regular expressions.","sig":null,"attributes":[{"value":"/ Sets whether span field values can be matched with regular expressions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159486,"byte_end":14159561,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159566,"byte_end":14159569,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If this is `true`, field filter directives will be interpreted as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159574,"byte_end":14159643,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ regular expressions if they are not able to be interpreted as a `bool`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159648,"byte_end":14159723,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ `i64`, `u64`, or `f64` literal. If this is `false,` those field values","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159728,"byte_end":14159802,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ will be interpreted as literal [`std::fmt::Debug`] output instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159807,"byte_end":14159877,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159882,"byte_end":14159885,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ By default, regular expressions are enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159890,"byte_end":14159938,"line_start":28,"line_end":28,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159943,"byte_end":14159946,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ **Note**: when [`EnvFilter`]s are constructed from untrusted inputs,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159951,"byte_end":14160023,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ disabling regular expressions is strongly encouraged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160028,"byte_end":14160085,"line_start":31,"line_end":31,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162863,"byte_end":14162885,"line_start":110,"line_end":110,"column_start":12,"column_end":34},"name":"with_default_directive","qualname":"<Builder>::with_default_directive","value":"fn with_default_directive(Self, Directive) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a default [filtering directive] that will be added to the filter if\n the parsed string or environment variable contains no filter directives.","sig":null,"attributes":[{"value":"/ Sets a default [filtering directive] that will be added to the filter if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160179,"byte_end":14160255,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ the parsed string or environment variable contains no filter directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160260,"byte_end":14160336,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160341,"byte_end":14160344,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ By default, there is no default directive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160349,"byte_end":14160395,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160400,"byte_end":14160403,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160408,"byte_end":14160422,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160427,"byte_end":14160430,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If [`parse`], [`parse_lossy`], [`from_env`], or [`from_env_lossy`] are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160435,"byte_end":14160509,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ called with an empty string or environment variable, the default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160514,"byte_end":14160582,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/ directive is used instead:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160587,"byte_end":14160617,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160622,"byte_end":14160625,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160630,"byte_end":14160641,"line_start":47,"line_end":47,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160646,"byte_end":14160705,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160710,"byte_end":14160771,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160776,"byte_end":14160779,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let filter = EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160784,"byte_end":14160821,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     .with_default_directive(LevelFilter::INFO.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160826,"byte_end":14160883,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/     .parse(\"\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160888,"byte_end":14160908,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160913,"byte_end":14160916,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{}\", filter), \"info\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160921,"byte_end":14160967,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160972,"byte_end":14160986,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14160991,"byte_end":14160998,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161003,"byte_end":14161006,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the `lossy` variants ([`parse_lossy`] and [`from_env_lossy`])","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161011,"byte_end":14161086,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will ignore any invalid directives. If all directives in a filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161091,"byte_end":14161160,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ string or environment variable are invalid, those methods will also use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161165,"byte_end":14161240,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ the default directive:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161245,"byte_end":14161271,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161276,"byte_end":14161279,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161284,"byte_end":14161295,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161300,"byte_end":14161361,"line_start":65,"line_end":65,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161366,"byte_end":14161369,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let filter = EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161374,"byte_end":14161411,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/     .with_default_directive(LevelFilter::INFO.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161416,"byte_end":14161473,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/     .parse_lossy(\"some_target=fake level,foo::bar=lolwut\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161478,"byte_end":14161541,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161546,"byte_end":14161549,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{}\", filter), \"info\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161554,"byte_end":14161600,"line_start":71,"line_end":71,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161605,"byte_end":14161612,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161617,"byte_end":14161620,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161625,"byte_end":14161628,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If the string or environment variable contains valid filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161633,"byte_end":14161699,"line_start":75,"line_end":75,"column_start":5,"column_end":71}},{"value":"/ directives, the default directive is not used:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161704,"byte_end":14161754,"line_start":76,"line_end":76,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161759,"byte_end":14161762,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161767,"byte_end":14161778,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161783,"byte_end":14161844,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161849,"byte_end":14161852,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let filter = EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161857,"byte_end":14161894,"line_start":81,"line_end":81,"column_start":5,"column_end":42}},{"value":"/     .with_default_directive(LevelFilter::INFO.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161899,"byte_end":14161956,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/     .parse_lossy(\"foo=trace\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14161961,"byte_end":14161995,"line_start":83,"line_end":83,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162000,"byte_end":14162003,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ // The default directive is *not* used:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162008,"byte_end":14162051,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(format!(\"{}\", filter), \"foo=trace\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162056,"byte_end":14162107,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162112,"byte_end":14162119,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162124,"byte_end":14162127,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Parsing a more complex default directive from a string:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162132,"byte_end":14162191,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162196,"byte_end":14162199,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162204,"byte_end":14162215,"line_start":91,"line_end":91,"column_start":5,"column_end":16}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162220,"byte_end":14162279,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162284,"byte_end":14162345,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162350,"byte_end":14162353,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let default = \"myapp=debug\".parse()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162358,"byte_end":14162397,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/     .expect(\"hard-coded default directive should be valid\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162402,"byte_end":14162466,"line_start":96,"line_end":96,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162471,"byte_end":14162474,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let filter = EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162479,"byte_end":14162516,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/     .with_default_directive(default)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162521,"byte_end":14162561,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/     .parse(\"\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162566,"byte_end":14162586,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162591,"byte_end":14162594,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(format!(\"{}\", filter), \"myapp=debug\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162599,"byte_end":14162652,"line_start":102,"line_end":102,"column_start":5,"column_end":58}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162657,"byte_end":14162671,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162676,"byte_end":14162683,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162688,"byte_end":14162691,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`parse_lossy`]: Self::parse_lossy","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162696,"byte_end":14162734,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ [`from_env_lossy`]: Self::from_env_lossy","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162739,"byte_end":14162783,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/ [`parse`]: Self::parse","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162788,"byte_end":14162814,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/ [`from_env`]: Self::from_env","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14162819,"byte_end":14162851,"line_start":109,"line_end":109,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163421,"byte_end":14163433,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"with_env_var","qualname":"<Builder>::with_env_var","value":"fn with_env_var<impl ToString>(Self, impl ToString) -> Self where\nimpl ToString: ToString","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the environment variable used by the [`from_env`],\n [`from_env_lossy`], and [`try_from_env`] methods.","sig":null,"attributes":[{"value":"/ Sets the name of the environment variable used by the [`from_env`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163043,"byte_end":14163114,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/ [`from_env_lossy`], and [`try_from_env`] methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163119,"byte_end":14163172,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163177,"byte_end":14163180,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ By default, this is the value of [`EnvFilter::DEFAULT_ENV`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163185,"byte_end":14163248,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ (`RUST_LOG`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163253,"byte_end":14163270,"line_start":121,"line_end":121,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163275,"byte_end":14163278,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`from_env`]: Self::from_env","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163283,"byte_end":14163315,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ [`from_env_lossy`]: Self::from_env_lossy","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163320,"byte_end":14163364,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ [`try_from_env`]: Self::try_from_env","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163369,"byte_end":14163409,"line_start":125,"line_end":125,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163690,"byte_end":14163701,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"parse_lossy","qualname":"<Builder>::parse_lossy","value":"fn parse_lossy<S>(&Self, S) -> EnvFilter where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`EnvFilter`] from the directives in the given string,\n *ignoring* any that are invalid.\n","sig":null,"attributes":[{"value":"/ Returns a new [`EnvFilter`] from the directives in the given string,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163565,"byte_end":14163637,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ *ignoring* any that are invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14163642,"byte_end":14163678,"line_start":134,"line_end":134,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164290,"byte_end":14164295,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"parse","qualname":"<Builder>::parse","value":"fn parse<S>(&Self, S) -> Result<EnvFilter, directive::ParseError> where\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`EnvFilter`] from the directives in the given string,\n or an error if any are invalid.\n","sig":null,"attributes":[{"value":"/ Returns a new [`EnvFilter`] from the directives in the given string,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164166,"byte_end":14164238,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ or an error if any are invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164243,"byte_end":14164278,"line_start":151,"line_end":151,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164913,"byte_end":14164927,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"from_env_lossy","qualname":"<Builder>::from_env_lossy","value":"fn from_env_lossy(&Self) -> EnvFilter","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`EnvFilter`] from the directives in the configured\n environment variable, ignoring any directives that are invalid.\n","sig":null,"attributes":[{"value":"/ Returns a new [`EnvFilter`] from the directives in the configured","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164760,"byte_end":14164829,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ environment variable, ignoring any directives that are invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14164834,"byte_end":14164901,"line_start":166,"line_end":166,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165269,"byte_end":14165277,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"from_env","qualname":"<Builder>::from_env","value":"fn from_env(&Self) -> Result<EnvFilter, FromEnvError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`EnvFilter`] from the directives in the in the configured\n environment variable, or an error if the environment variable is not set\n or contains invalid directives.\n","sig":null,"attributes":[{"value":"/ Returns a new [`EnvFilter`] from the directives in the in the configured","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165060,"byte_end":14165136,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ environment variable, or an error if the environment variable is not set","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165141,"byte_end":14165217,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ or contains invalid directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165222,"byte_end":14165257,"line_start":174,"line_end":174,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165655,"byte_end":14165667,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"try_from_env","qualname":"<Builder>::try_from_env","value":"fn try_from_env(&Self) -> Result<EnvFilter, FromEnvError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`EnvFilter`] from the directives in the in the configured\n environment variable, or an error if the environment variable is not set\n or contains invalid directives.\n","sig":null,"attributes":[{"value":"/ Returns a new [`EnvFilter`] from the directives in the in the configured","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165446,"byte_end":14165522,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ environment variable, or an error if the environment variable is not set","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165527,"byte_end":14165603,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ or contains invalid directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14165608,"byte_end":14165643,"line_start":182,"line_end":182,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14171185,"byte_end":14171192,"line_start":317,"line_end":317,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14171889,"byte_end":14171898,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Directive","qualname":"::filter::env::directive::Directive","value":"Directive {  }","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" A single filtering directive.\n","sig":null,"attributes":[{"value":"/ A single filtering directive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14171675,"byte_end":14171708,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179425,"byte_end":14179433,"line_start":249,"line_end":249,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Directive as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179557,"byte_end":14179564,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"default","qualname":"<Directive as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179777,"byte_end":14179788,"line_start":266,"line_end":266,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Directive as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Directive) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179908,"byte_end":14179911,"line_start":272,"line_end":272,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Directive as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Directive) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14182072,"byte_end":14182075,"line_start":324,"line_end":324,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Directive as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183028,"byte_end":14183032,"line_start":360,"line_end":360,"column_start":8,"column_end":12},"name":"from","qualname":"<Directive as std::convert::From>::from","value":"fn from(LevelFilter) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183186,"byte_end":14183190,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"from","qualname":"<Directive as std::convert::From>::from","value":"fn from(Level) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14204790,"byte_end":14204797,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"BadName","qualname":"::filter::env::field::BadName","value":"BadName {  }","parent":null,"children":[{"krate":0,"index":1448}],"decl_id":null,"docs":" Indicates that a field name specified in a filter directive was invalid.\n","sig":null,"attributes":[{"value":"/ Indicates that a field name specified in a filter directive was invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14204624,"byte_end":14204700,"line_start":141,"line_end":141,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213946,"byte_end":14213949,"line_start":448,"line_end":448,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BadName as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132566,"byte_end":14132575,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"EnvFilter","qualname":"::filter::env::EnvFilter","value":"EnvFilter {  }","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"decl_id":null,"docs":" A [`Layer`] which filters spans and events based on a set of filter\n directives.","sig":null,"attributes":[{"value":"/ A [`Layer`] which filters spans and events based on a set of filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124815,"byte_end":14124886,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124887,"byte_end":14124902,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124903,"byte_end":14124906,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `EnvFilter` implements both the [`Layer`](#impl-Layer<S>) and [`Filter`] traits, so it may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14124907,"byte_end":14125001,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ be used for both [global filtering][global] and [per-layer filtering][plf],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125002,"byte_end":14125081,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ respectively. See [the documentation on filtering with `Layer`s][filtering]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125082,"byte_end":14125161,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125162,"byte_end":14125178,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125179,"byte_end":14125182,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The [`Targets`] type implements a similar form of filtering, but without the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125183,"byte_end":14125263,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ ability to dynamically enable events based on the current span context, and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125264,"byte_end":14125343,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ without filtering on field values. When these features are not required,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125344,"byte_end":14125420,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ [`Targets`] provides a lighter-weight alternative to [`EnvFilter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125421,"byte_end":14125492,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125493,"byte_end":14125496,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Directives","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125497,"byte_end":14125513,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125514,"byte_end":14125517,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ A filter consists of one or more comma-separated directives which match on [`Span`]s and [`Event`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125518,"byte_end":14125622,"line_start":43,"line_end":43,"column_start":1,"column_end":105}},{"value":"/ Each directive may have a corresponding maximum verbosity [`level`] which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125623,"byte_end":14125700,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ enables (e.g., _selects for_) spans and events that match. Like `log`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125701,"byte_end":14125775,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ `tracing` considers less exclusive levels (like `trace` or `info`) to be more","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125776,"byte_end":14125857,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ verbose than more exclusive levels (like `error` or `warn`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125858,"byte_end":14125922,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125923,"byte_end":14125926,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The directive syntax is similar to that of [`env_logger`]'s. At a high level, the syntax for directives","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14125927,"byte_end":14126034,"line_start":49,"line_end":49,"column_start":1,"column_end":108}},{"value":"/ consists of several parts:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126035,"byte_end":14126065,"line_start":50,"line_end":50,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126066,"byte_end":14126069,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126070,"byte_end":14126081,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ target[span{field=value}]=level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126082,"byte_end":14126117,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126118,"byte_end":14126125,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126126,"byte_end":14126129,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Each component (`target`, `span`, `field`, `value`, and `level`) will be covered in turn.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126130,"byte_end":14126223,"line_start":56,"line_end":56,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126224,"byte_end":14126227,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - `target` matches the event or span's target. In general, this is the module path and/or crate name.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126228,"byte_end":14126333,"line_start":58,"line_end":58,"column_start":1,"column_end":106}},{"value":"/    Examples of targets `h2`, `tokio::net`, or `tide::server`. For more information on targets,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126334,"byte_end":14126432,"line_start":59,"line_end":59,"column_start":1,"column_end":99}},{"value":"/    please refer to [`Metadata`]'s documentation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126433,"byte_end":14126485,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/ - `span` matches on the span's name. If a `span` directive is provided alongside a `target`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126486,"byte_end":14126582,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"/    the `span` directive will match on spans _within_ the `target`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126583,"byte_end":14126653,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ - `field` matches on [fields] within spans. Field names can also be supplied without a `value`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126654,"byte_end":14126752,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/    and will match on any [`Span`] or [`Event`] that has a field with that name.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126753,"byte_end":14126836,"line_start":64,"line_end":64,"column_start":1,"column_end":84}},{"value":"/    For example: `[span{field=\\\"value\\\"}]=debug`, `[{field}]=trace`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126837,"byte_end":14126908,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ - `value` matches on the value of a span's field. If a value is a numeric literal or a bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14126909,"byte_end":14127005,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/    it will match _only_ on that value. Otherwise, this filter matches the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127006,"byte_end":14127083,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/    [`std::fmt::Debug`] output from the value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127084,"byte_end":14127133,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/ - `level` sets a maximum verbosity level accepted by this directive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127134,"byte_end":14127206,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127207,"byte_end":14127210,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a field value directive (`[{<FIELD NAME>=<FIELD_VALUE>}]=...`) matches a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127211,"byte_end":14127292,"line_start":71,"line_end":71,"column_start":1,"column_end":82}},{"value":"/ value's [`std::fmt::Debug`] output (i.e., the field value in the directive","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127293,"byte_end":14127371,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ is not a `bool`, `i64`, `u64`, or `f64` literal), the matched pattern may be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127372,"byte_end":14127452,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ interpreted as either a regular expression or as the precise expected","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127453,"byte_end":14127526,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ output of the field's [`std::fmt::Debug`] implementation. By default, these","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127527,"byte_end":14127606,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ filters are interpreted as regular expressions, but this can be disabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127607,"byte_end":14127683,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ using the [`Builder::with_regex`] builder method to use precise matching","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127684,"byte_end":14127760,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127761,"byte_end":14127773,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127774,"byte_end":14127777,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ When field value filters are interpreted as regular expressions, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127778,"byte_end":14127850,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ [`regex-automata` crate's regular expression syntax][re-syntax] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127851,"byte_end":14127921,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/ supported.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127922,"byte_end":14127936,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127937,"byte_end":14127940,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ **Note**: When filters are constructed from potentially untrusted inputs,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14127941,"byte_end":14128018,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ [disabling regular expression matching](Builder::with_regex) is strongly","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128019,"byte_end":14128095,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ recommended.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128096,"byte_end":14128112,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128113,"byte_end":14128116,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ## Usage Notes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128117,"byte_end":14128135,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128136,"byte_end":14128139,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - The portion of the directive which is included within the square brackets is `tracing`-specific.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128140,"byte_end":14128242,"line_start":90,"line_end":90,"column_start":1,"column_end":103}},{"value":"/ - Any portion of the directive can be omitted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128243,"byte_end":14128293,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/     - The sole exception are the `field` and `value` directives. If a `value` is provided,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128294,"byte_end":14128388,"line_start":92,"line_end":92,"column_start":1,"column_end":95}},{"value":"/       a `field` must _also_ be provided. However, the converse does not hold, as fields can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128389,"byte_end":14128484,"line_start":93,"line_end":93,"column_start":1,"column_end":96}},{"value":"/       be matched without a value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128485,"byte_end":14128522,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/ - If only a level is provided, it will set the maximum level for all `Span`s and `Event`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128523,"byte_end":14128616,"line_start":95,"line_end":95,"column_start":1,"column_end":94}},{"value":"/   that are not enabled by other filters.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128617,"byte_end":14128661,"line_start":96,"line_end":96,"column_start":1,"column_end":45}},{"value":"/ - A directive without a level will enable anything that it matches. This is equivalent to `=trace`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128662,"byte_end":14128765,"line_start":97,"line_end":97,"column_start":1,"column_end":104}},{"value":"/ - When a crate has a dash in its name, the default target for events will be the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128766,"byte_end":14128850,"line_start":98,"line_end":98,"column_start":1,"column_end":85}},{"value":"/   crate's module path as it appears in Rust. This means every dash will be replaced","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128851,"byte_end":14128938,"line_start":99,"line_end":99,"column_start":1,"column_end":88}},{"value":"/   with an underscore.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128939,"byte_end":14128964,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/ - A dash in a target will only appear when being specified explicitly:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14128965,"byte_end":14129039,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/   `tracing::info!(target: \"target-name\", ...);`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129040,"byte_end":14129091,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129092,"byte_end":14129095,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ## Example Syntax","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129096,"byte_end":14129117,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129118,"byte_end":14129121,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ - `tokio::net=info` will enable all spans or events that:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129122,"byte_end":14129183,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"/    - have the `tokio::net` target,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129184,"byte_end":14129222,"line_start":107,"line_end":107,"column_start":1,"column_end":39}},{"value":"/    - at the level `info` or above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129223,"byte_end":14129261,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/ - `warn,tokio::net=info` will enable all spans and events that:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129262,"byte_end":14129329,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/    - are at the level `warn` or above, *or*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129330,"byte_end":14129377,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/    - have the `tokio::net` target at the level `info` or above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129378,"byte_end":14129445,"line_start":111,"line_end":111,"column_start":1,"column_end":68}},{"value":"/ - `my_crate[span_a]=trace` will enable all spans and events that:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129446,"byte_end":14129515,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/    - are within the `span_a` span or named `span_a` _if_ `span_a` has the target `my_crate`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129516,"byte_end":14129612,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/    - at the level `trace` or above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129613,"byte_end":14129652,"line_start":114,"line_end":114,"column_start":1,"column_end":40}},{"value":"/ - `[span_b{name=\\\"bob\\\"}]` will enable all spans or event that:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129653,"byte_end":14129720,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"/    - have _any_ target,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129721,"byte_end":14129748,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/    - are inside a span named `span_b`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129749,"byte_end":14129791,"line_start":117,"line_end":117,"column_start":1,"column_end":43}},{"value":"/    - which has a field named `name` with value `bob`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129792,"byte_end":14129849,"line_start":118,"line_end":118,"column_start":1,"column_end":58}},{"value":"/    - at _any_ level.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129850,"byte_end":14129874,"line_start":119,"line_end":119,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129875,"byte_end":14129878,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129879,"byte_end":14129893,"line_start":121,"line_end":121,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129894,"byte_end":14129897,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Parsing an `EnvFilter` from the [default environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129898,"byte_end":14129954,"line_start":123,"line_end":123,"column_start":1,"column_end":57}},{"value":"/ variable](EnvFilter::from_default_env) (`RUST_LOG`):","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14129955,"byte_end":14130011,"line_start":124,"line_end":124,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130012,"byte_end":14130015,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130016,"byte_end":14130023,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{EnvFilter, fmt, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130024,"byte_end":14130081,"line_start":127,"line_end":127,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130082,"byte_end":14130085,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130086,"byte_end":14130120,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/     .with(fmt::layer())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130121,"byte_end":14130148,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/     .with(EnvFilter::from_default_env())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130149,"byte_end":14130193,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130194,"byte_end":14130210,"line_start":132,"line_end":132,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130211,"byte_end":14130218,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130219,"byte_end":14130222,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Parsing an `EnvFilter` [from a user-provided environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130223,"byte_end":14130283,"line_start":135,"line_end":135,"column_start":1,"column_end":61}},{"value":"/ variable](EnvFilter::from_env):","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130284,"byte_end":14130319,"line_start":136,"line_end":136,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130320,"byte_end":14130323,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130324,"byte_end":14130331,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{EnvFilter, fmt, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130332,"byte_end":14130389,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130390,"byte_end":14130393,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130394,"byte_end":14130428,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/     .with(fmt::layer())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130429,"byte_end":14130456,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/     .with(EnvFilter::from_env(\"MYAPP_LOG\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130457,"byte_end":14130504,"line_start":143,"line_end":143,"column_start":1,"column_end":48}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130505,"byte_end":14130521,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130522,"byte_end":14130529,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130530,"byte_end":14130533,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Using `EnvFilter` as a [per-layer filter][plf] to filter only a single","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130534,"byte_end":14130608,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ [`Layer`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130609,"byte_end":14130623,"line_start":148,"line_end":148,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130624,"byte_end":14130627,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130628,"byte_end":14130635,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{EnvFilter, fmt, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130636,"byte_end":14130693,"line_start":151,"line_end":151,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130694,"byte_end":14130697,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ // Parse an `EnvFilter` configuration from the `RUST_LOG`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130698,"byte_end":14130759,"line_start":153,"line_end":153,"column_start":1,"column_end":62}},{"value":"/ // environment variable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130760,"byte_end":14130788,"line_start":154,"line_end":154,"column_start":1,"column_end":29}},{"value":"/ let filter = EnvFilter::from_default_env();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130789,"byte_end":14130836,"line_start":155,"line_end":155,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130837,"byte_end":14130840,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // Apply the filter to this layer *only*.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130841,"byte_end":14130886,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"/ let filtered_layer = fmt::layer().with_filter(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130887,"byte_end":14130945,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130946,"byte_end":14130949,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // Some other layer, whose output we don't want to filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14130950,"byte_end":14131012,"line_start":160,"line_end":160,"column_start":1,"column_end":63}},{"value":"/ let unfiltered_layer = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131013,"byte_end":14131046,"line_start":161,"line_end":161,"column_start":1,"column_end":34}},{"value":"/     # fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131047,"byte_end":14131070,"line_start":162,"line_end":162,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131071,"byte_end":14131074,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131075,"byte_end":14131109,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/     .with(filtered_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131110,"byte_end":14131139,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/     .with(unfiltered_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131140,"byte_end":14131171,"line_start":166,"line_end":166,"column_start":1,"column_end":32}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131172,"byte_end":14131188,"line_start":167,"line_end":167,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131189,"byte_end":14131196,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ # Constructing `EnvFilter`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131197,"byte_end":14131228,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131229,"byte_end":14131232,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ An `EnvFilter` is be constructed by parsing a string containing one or more","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131233,"byte_end":14131312,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ directives. The [`EnvFilter::new`] constructor parses an `EnvFilter` from a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131313,"byte_end":14131392,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ string, ignoring any invalid directives, while [`EnvFilter::try_new`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131393,"byte_end":14131466,"line_start":173,"line_end":173,"column_start":1,"column_end":74}},{"value":"/ returns an error if invalid directives are encountered. Similarly, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131467,"byte_end":14131541,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ [`EnvFilter::from_env`] and [`EnvFilter::try_from_env`] constructors parse","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131542,"byte_end":14131620,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ an `EnvFilter` from the value of the provided environment variable, with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131621,"byte_end":14131697,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ lossy and strict validation, respectively.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131698,"byte_end":14131744,"line_start":177,"line_end":177,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131745,"byte_end":14131748,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A [builder](EnvFilter::builder) interface is available to set additional","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131749,"byte_end":14131825,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ configuration options prior to parsing an `EnvFilter`. See the [`Builder`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131826,"byte_end":14131903,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/ type's documentation](Builder) for details on the options that can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131904,"byte_end":14131977,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/ configured using the builder.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14131978,"byte_end":14132011,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132012,"byte_end":14132015,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: tracing_core::span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132016,"byte_end":14132048,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ [fields]: tracing_core::Field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132049,"byte_end":14132082,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/ [`Event`]: tracing_core::Event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132083,"byte_end":14132117,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/ [`level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132118,"byte_end":14132152,"line_start":187,"line_end":187,"column_start":1,"column_end":35}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132153,"byte_end":14132193,"line_start":188,"line_end":188,"column_start":1,"column_end":41}},{"value":"/ [`Targets`]: crate::filter::Targets","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132194,"byte_end":14132233,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132234,"byte_end":14132289,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ [`Filter`]: #impl-Filter<S>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132290,"byte_end":14132321,"line_start":191,"line_end":191,"column_start":1,"column_end":32}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132322,"byte_end":14132365,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132366,"byte_end":14132409,"line_start":193,"line_end":193,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132410,"byte_end":14132461,"line_start":194,"line_end":194,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133123,"byte_end":14133135,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"FromEnvError","qualname":"::filter::env::FromEnvError","value":"FromEnvError {  }","parent":null,"children":[{"krate":0,"index":1464}],"decl_id":null,"docs":" Indicates that an error occurred while parsing a `EnvFilter` from an\n environment variable.\n","sig":null,"attributes":[{"value":"/ Indicates that an error occurred while parsing a `EnvFilter` from an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132920,"byte_end":14132992,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ environment variable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14132993,"byte_end":14133018,"line_start":210,"line_end":210,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133579,"byte_end":14133590,"line_start":229,"line_end":229,"column_start":15,"column_end":26},"name":"DEFAULT_ENV","qualname":"::filter::env::EnvFilter::DEFAULT_ENV","value":"&'static str","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":" `RUST_LOG` is the default environment variable used by\n [`EnvFilter::from_default_env`] and [`EnvFilter::try_from_default_env`].","sig":null,"attributes":[{"value":"/ `RUST_LOG` is the default environment variable used by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133267,"byte_end":14133325,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/ [`EnvFilter::from_default_env`] and [`EnvFilter::try_from_default_env`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133330,"byte_end":14133406,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133411,"byte_end":14133414,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`EnvFilter::from_default_env`]: EnvFilter::from_default_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133419,"byte_end":14133485,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ [`EnvFilter::try_from_default_env`]: EnvFilter::try_from_default_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133490,"byte_end":14133564,"line_start":228,"line_end":228,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134169,"byte_end":14134176,"line_start":242,"line_end":242,"column_start":12,"column_end":19},"name":"builder","qualname":"<EnvFilter>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a [builder] that can be used to configure a new [`EnvFilter`]\n instance.","sig":null,"attributes":[{"value":"/ Returns a [builder] that can be used to configure a new [`EnvFilter`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133658,"byte_end":14133731,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ instance.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133736,"byte_end":14133749,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133754,"byte_end":14133757,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The [`Builder`] type is used to set additional configurations, such as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133762,"byte_end":14133836,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ [whether regular expressions are enabled](Builder::with_regex) or [the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133841,"byte_end":14133915,"line_start":237,"line_end":237,"column_start":5,"column_end":79}},{"value":"/ default directive](Builder::with_default_directive) before parsing an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133920,"byte_end":14133993,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ [`EnvFilter`] from a string or environment variable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133998,"byte_end":14134054,"line_start":239,"line_end":239,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134059,"byte_end":14134062,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [builder]: https://rust-unofficial.github.io/patterns/patterns/creational/builder.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134067,"byte_end":14134157,"line_start":241,"line_end":241,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135074,"byte_end":14135090,"line_start":269,"line_end":269,"column_start":12,"column_end":28},"name":"from_default_env","qualname":"<EnvFilter>::from_default_env","value":"fn from_default_env() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the value of the `RUST_LOG` environment\n variable, ignoring any invalid filter directives.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the value of the `RUST_LOG` environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134230,"byte_end":14134304,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/ variable, ignoring any invalid filter directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134309,"byte_end":14134362,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134367,"byte_end":14134370,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If the environment variable is empty or not set, or if it contains only","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134375,"byte_end":14134450,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ invalid directives, a default directive enabling the [`ERROR`] level is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134455,"byte_end":14134530,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ added.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134535,"byte_end":14134545,"line_start":251,"line_end":251,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134550,"byte_end":14134553,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134558,"byte_end":14134634,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134639,"byte_end":14134672,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134677,"byte_end":14134680,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134685,"byte_end":14134734,"line_start":256,"line_end":256,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134739,"byte_end":14134742,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134747,"byte_end":14134758,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134763,"byte_end":14134824,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134829,"byte_end":14134832,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> EnvFilter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134837,"byte_end":14134867,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134872,"byte_end":14134896,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/     .with_default_directive(LevelFilter::ERROR.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134901,"byte_end":14134959,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/     .from_env_lossy()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134964,"byte_end":14134989,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14134994,"byte_end":14135001,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135006,"byte_end":14135013,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135018,"byte_end":14135021,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`ERROR`]: tracing::Level::ERROR","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135026,"byte_end":14135062,"line_start":268,"line_end":268,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136125,"byte_end":14136133,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"from_env","qualname":"<EnvFilter>::from_env","value":"fn from_env<A>(A) -> Self where A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the value of the given environment\n variable, ignoring any invalid filter directives.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the value of the given environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135231,"byte_end":14135300,"line_start":275,"line_end":275,"column_start":5,"column_end":74}},{"value":"/ variable, ignoring any invalid filter directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135305,"byte_end":14135358,"line_start":276,"line_end":276,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135363,"byte_end":14135366,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the environment variable is empty or not set, or if it contains only","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135371,"byte_end":14135446,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ invalid directives, a default directive enabling the [`ERROR`] level is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135451,"byte_end":14135526,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ added.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135531,"byte_end":14135541,"line_start":280,"line_end":280,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135546,"byte_end":14135549,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135554,"byte_end":14135630,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135635,"byte_end":14135668,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135673,"byte_end":14135676,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135681,"byte_end":14135730,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135735,"byte_end":14135738,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135743,"byte_end":14135754,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135759,"byte_end":14135820,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135825,"byte_end":14135828,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> EnvFilter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135833,"byte_end":14135863,"line_start":290,"line_end":290,"column_start":5,"column_end":35}},{"value":"/ # let env = \"\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135868,"byte_end":14135887,"line_start":291,"line_end":291,"column_start":5,"column_end":24}},{"value":"/ EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135892,"byte_end":14135916,"line_start":292,"line_end":292,"column_start":5,"column_end":29}},{"value":"/     .with_default_directive(LevelFilter::ERROR.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135921,"byte_end":14135979,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/     .with_env_var(env)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14135984,"byte_end":14136010,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/     .from_env_lossy()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136015,"byte_end":14136040,"line_start":295,"line_end":295,"column_start":5,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136045,"byte_end":14136052,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136057,"byte_end":14136064,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136069,"byte_end":14136072,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ [`ERROR`]: tracing::Level::ERROR","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136077,"byte_end":14136113,"line_start":299,"line_end":299,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137154,"byte_end":14137157,"line_start":330,"line_end":330,"column_start":12,"column_end":15},"name":"new","qualname":"<EnvFilter>::new","value":"fn new<S>(S) -> Self where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the directives in the given string,\n ignoring any that are invalid.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the directives in the given string,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136335,"byte_end":14136405,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ ignoring any that are invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136410,"byte_end":14136444,"line_start":308,"line_end":308,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136449,"byte_end":14136452,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If the string is empty or contains only invalid directives, a default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136457,"byte_end":14136530,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ directive enabling the [`ERROR`] level is added.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136535,"byte_end":14136587,"line_start":311,"line_end":311,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136592,"byte_end":14136595,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136600,"byte_end":14136676,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136681,"byte_end":14136714,"line_start":314,"line_end":314,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136719,"byte_end":14136722,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136727,"byte_end":14136776,"line_start":316,"line_end":316,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136781,"byte_end":14136784,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136789,"byte_end":14136800,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136805,"byte_end":14136866,"line_start":319,"line_end":319,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136871,"byte_end":14136874,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> EnvFilter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136879,"byte_end":14136909,"line_start":321,"line_end":321,"column_start":5,"column_end":35}},{"value":"/ # let directives = \"\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136914,"byte_end":14136940,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/ EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136945,"byte_end":14136969,"line_start":323,"line_end":323,"column_start":5,"column_end":29}},{"value":"/     .with_default_directive(LevelFilter::ERROR.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14136974,"byte_end":14137032,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/     .parse_lossy(directives)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137037,"byte_end":14137069,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137074,"byte_end":14137081,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137086,"byte_end":14137093,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137098,"byte_end":14137101,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`ERROR`]: tracing::Level::ERROR","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137106,"byte_end":14137142,"line_start":329,"line_end":329,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138159,"byte_end":14138166,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"try_new","qualname":"<EnvFilter>::try_new","value":"fn try_new<S>(S) -> Result<Self, directive::ParseError> where S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the directives in the given string,\n or an error if any are invalid.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the directives in the given string,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137333,"byte_end":14137403,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ or an error if any are invalid.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137408,"byte_end":14137443,"line_start":337,"line_end":337,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137448,"byte_end":14137451,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the string is empty, a default directive enabling the [`ERROR`] level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137456,"byte_end":14137532,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ is added.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137537,"byte_end":14137550,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137555,"byte_end":14137558,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137563,"byte_end":14137639,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137644,"byte_end":14137677,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137682,"byte_end":14137685,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137690,"byte_end":14137739,"line_start":345,"line_end":345,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137744,"byte_end":14137747,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137752,"byte_end":14137763,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137768,"byte_end":14137829,"line_start":348,"line_end":348,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137834,"byte_end":14137837,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> Result<EnvFilter, tracing_subscriber::filter::ParseError> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137842,"byte_end":14137920,"line_start":350,"line_end":350,"column_start":5,"column_end":83}},{"value":"/ # let directives = \"\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137925,"byte_end":14137951,"line_start":351,"line_end":351,"column_start":5,"column_end":31}},{"value":"/ EnvFilter::builder()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137956,"byte_end":14137980,"line_start":352,"line_end":352,"column_start":5,"column_end":29}},{"value":"/     .with_default_directive(LevelFilter::ERROR.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14137985,"byte_end":14138043,"line_start":353,"line_end":353,"column_start":5,"column_end":63}},{"value":"/     .parse(directives)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138048,"byte_end":14138074,"line_start":354,"line_end":354,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138079,"byte_end":14138086,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138091,"byte_end":14138098,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138103,"byte_end":14138106,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`ERROR`]: tracing::Level::ERROR","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138111,"byte_end":14138147,"line_start":358,"line_end":358,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138900,"byte_end":14138920,"line_start":379,"line_end":379,"column_start":12,"column_end":32},"name":"try_from_default_env","qualname":"<EnvFilter>::try_from_default_env","value":"fn try_from_default_env() -> Result<Self, FromEnvError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the value of the `RUST_LOG` environment\n variable, or an error if the environment variable is unset or contains\n any invalid filter directives.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the value of the `RUST_LOG` environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138279,"byte_end":14138353,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ variable, or an error if the environment variable is unset or contains","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138358,"byte_end":14138432,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ any invalid filter directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138437,"byte_end":14138471,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138476,"byte_end":14138479,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138484,"byte_end":14138560,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138565,"byte_end":14138598,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138603,"byte_end":14138606,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138611,"byte_end":14138660,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138665,"byte_end":14138668,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138673,"byte_end":14138684,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::EnvFilter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138689,"byte_end":14138727,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138732,"byte_end":14138735,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> Result<EnvFilter, tracing_subscriber::filter::FromEnvError> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138740,"byte_end":14138820,"line_start":375,"line_end":375,"column_start":5,"column_end":85}},{"value":"/ EnvFilter::builder().try_from_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138825,"byte_end":14138864,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138869,"byte_end":14138876,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14138881,"byte_end":14138888,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139663,"byte_end":14139675,"line_start":400,"line_end":400,"column_start":12,"column_end":24},"name":"try_from_env","qualname":"<EnvFilter>::try_from_env","value":"fn try_from_env<A>(A) -> Result<Self, FromEnvError> where A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `EnvFilter` from the value of the given environment\n variable, or an error if the environment variable is unset or contains\n any invalid filter directives.","sig":null,"attributes":[{"value":"/ Returns a new `EnvFilter` from the value of the given environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139005,"byte_end":14139074,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ variable, or an error if the environment variable is unset or contains","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139079,"byte_end":14139153,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ any invalid filter directives.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139158,"byte_end":14139192,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139197,"byte_end":14139200,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ To set additional configuration options prior to parsing the filter, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139205,"byte_end":14139281,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ the [`Builder`] type instead.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139286,"byte_end":14139319,"line_start":388,"line_end":388,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139324,"byte_end":14139327,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139332,"byte_end":14139381,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139386,"byte_end":14139389,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139394,"byte_end":14139405,"line_start":392,"line_end":392,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::EnvFilter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139410,"byte_end":14139448,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139453,"byte_end":14139456,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # fn docs() -> Result<EnvFilter, tracing_subscriber::filter::FromEnvError> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139461,"byte_end":14139541,"line_start":395,"line_end":395,"column_start":5,"column_end":85}},{"value":"/ # let env = \"\";","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139546,"byte_end":14139565,"line_start":396,"line_end":396,"column_start":5,"column_end":24}},{"value":"/ EnvFilter::builder().with_env_var(env).try_from_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139570,"byte_end":14139627,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139632,"byte_end":14139639,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139644,"byte_end":14139651,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141958,"byte_end":14141971,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"add_directive","qualname":"<EnvFilter>::add_directive","value":"fn add_directive(Self, Directive) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a filtering directive to this `EnvFilter`.","sig":null,"attributes":[{"value":"/ Add a filtering directive to this `EnvFilter`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139808,"byte_end":14139858,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139863,"byte_end":14139866,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ The added directive will be used in addition to any previously set","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139871,"byte_end":14139941,"line_start":406,"line_end":406,"column_start":5,"column_end":75}},{"value":"/ directives, either added using this method or provided when the filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14139946,"byte_end":14140020,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/ is constructed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140025,"byte_end":14140044,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140049,"byte_end":14140052,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Filters may be created from [`LevelFilter`] or [`Level`], which will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140057,"byte_end":14140129,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ enable all traces at or below a certain verbosity level, or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140134,"byte_end":14140197,"line_start":411,"line_end":411,"column_start":5,"column_end":68}},{"value":"/ parsed from a string specifying a directive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140202,"byte_end":14140250,"line_start":412,"line_end":412,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140255,"byte_end":14140258,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If a filter directive is inserted that matches exactly the same spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140263,"byte_end":14140336,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ and events as a previous filter, but sets a different level for those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140341,"byte_end":14140414,"line_start":415,"line_end":415,"column_start":5,"column_end":78}},{"value":"/ spans and events, the previous directive is overwritten.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140419,"byte_end":14140479,"line_start":416,"line_end":416,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140484,"byte_end":14140487,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [`LevelFilter`]: super::LevelFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140492,"byte_end":14140531,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140536,"byte_end":14140570,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140575,"byte_end":14140578,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140583,"byte_end":14140597,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140602,"byte_end":14140605,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ From [`LevelFilter`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140610,"byte_end":14140635,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140640,"byte_end":14140643,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140648,"byte_end":14140659,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140664,"byte_end":14140725,"line_start":426,"line_end":426,"column_start":5,"column_end":66}},{"value":"/ let mut filter = EnvFilter::from_default_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140730,"byte_end":14140780,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/     .add_directive(LevelFilter::INFO.into());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140785,"byte_end":14140834,"line_start":428,"line_end":428,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140839,"byte_end":14140846,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140851,"byte_end":14140854,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Or from [`Level`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140859,"byte_end":14140881,"line_start":431,"line_end":431,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140886,"byte_end":14140889,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140894,"byte_end":14140905,"line_start":433,"line_end":433,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::filter::{EnvFilter, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140910,"byte_end":14140973,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14140978,"byte_end":14141003,"line_start":435,"line_end":435,"column_start":5,"column_end":30}},{"value":"/ let mut filter = EnvFilter::from_default_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141008,"byte_end":14141058,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/     .add_directive(Level::INFO.into());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141063,"byte_end":14141106,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141111,"byte_end":14141118,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141123,"byte_end":14141126,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Parsed from a string:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141131,"byte_end":14141156,"line_start":440,"line_end":440,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141161,"byte_end":14141164,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141169,"byte_end":14141180,"line_start":442,"line_end":442,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::filter::{EnvFilter, Directive};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141185,"byte_end":14141244,"line_start":443,"line_end":443,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141249,"byte_end":14141252,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # fn try_mk_filter() -> Result<(), Box<dyn ::std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141257,"byte_end":14141327,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/ let mut filter = EnvFilter::try_from_default_env()?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141332,"byte_end":14141387,"line_start":446,"line_end":446,"column_start":5,"column_end":60}},{"value":"/     .add_directive(\"my_crate::module=trace\".parse()?)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141392,"byte_end":14141449,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/     .add_directive(\"my_crate::my_other_module::something=info\".parse()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141454,"byte_end":14141531,"line_start":448,"line_end":448,"column_start":5,"column_end":82}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141536,"byte_end":14141548,"line_start":449,"line_end":449,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141553,"byte_end":14141560,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141565,"byte_end":14141572,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ In the above example, substitute `my_crate`, `module`, etc. with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141577,"byte_end":14141649,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ name your target crate/module is imported with. This might be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141654,"byte_end":14141719,"line_start":453,"line_end":453,"column_start":5,"column_end":70}},{"value":"/ different from the package name in Cargo.toml (`-` is replaced by `_`).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141724,"byte_end":14141799,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ Example, if the package name in your Cargo.toml is `MY-FANCY-LIB`, then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141804,"byte_end":14141879,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ the corresponding Rust identifier would be `MY_FANCY_LIB`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14141884,"byte_end":14141946,"line_start":456,"line_end":456,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142676,"byte_end":14142683,"line_start":478,"line_end":478,"column_start":12,"column_end":19},"name":"enabled","qualname":"<EnvFilter>::enabled","value":"fn enabled<S>(&Self, &Metadata, Context<, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `EnvFilter` would enable the provided `metadata`\n in the current context.","sig":null,"attributes":[{"value":"/ Returns `true` if this `EnvFilter` would enable the provided `metadata`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142341,"byte_end":14142416,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/ in the current context.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142421,"byte_end":14142448,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142453,"byte_end":14142456,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::enabled`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142461,"byte_end":14142520,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ [`Filter::enabled`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142525,"byte_end":14142598,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14142603,"byte_end":14142664,"line_start":477,"line_end":477,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144612,"byte_end":14144626,"line_start":530,"line_end":530,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"<EnvFilter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional hint of the highest [verbosity level][level] that\n this `EnvFilter` will enable.","sig":null,"attributes":[{"value":"/ Returns an optional hint of the highest [verbosity level][level] that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144204,"byte_end":14144277,"line_start":522,"line_end":522,"column_start":5,"column_end":78}},{"value":"/ this `EnvFilter` will enable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144282,"byte_end":14144315,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144320,"byte_end":14144323,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::max_level_hint`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144328,"byte_end":14144394,"line_start":525,"line_end":525,"column_start":5,"column_end":71}},{"value":"/ [`Filter::max_level_hint`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144399,"byte_end":14144479,"line_start":526,"line_end":526,"column_start":5,"column_end":85}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144484,"byte_end":14144545,"line_start":527,"line_end":527,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144550,"byte_end":14144553,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ [level]: tracing_core::metadata::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14144558,"byte_end":14144600,"line_start":529,"line_end":529,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145362,"byte_end":14145373,"line_start":548,"line_end":548,"column_start":12,"column_end":23},"name":"on_new_span","qualname":"<EnvFilter>::on_new_span","value":"fn on_new_span<S>(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":null,"children":[],"decl_id":null,"docs":" Informs the filter that a new span was created.","sig":null,"attributes":[{"value":"/ Informs the filter that a new span was created.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145075,"byte_end":14145126,"line_start":543,"line_end":543,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145131,"byte_end":14145134,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::on_new_span`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145139,"byte_end":14145202,"line_start":545,"line_end":545,"column_start":5,"column_end":68}},{"value":"/ [`Filter::on_new_span`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145207,"byte_end":14145284,"line_start":546,"line_end":546,"column_start":5,"column_end":82}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145289,"byte_end":14145350,"line_start":547,"line_end":547,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146007,"byte_end":14146015,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"on_enter","qualname":"<EnvFilter>::on_enter","value":"fn on_enter<S>(&Self, &span::Id, Context<, S>)","parent":null,"children":[],"decl_id":null,"docs":" Informs the filter that the span with the provided `id` was entered.","sig":null,"attributes":[{"value":"/ Informs the filter that the span with the provided `id` was entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145705,"byte_end":14145777,"line_start":556,"line_end":556,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145782,"byte_end":14145785,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::on_enter`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145790,"byte_end":14145850,"line_start":558,"line_end":558,"column_start":5,"column_end":65}},{"value":"/ [`Filter::on_enter`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145855,"byte_end":14145929,"line_start":559,"line_end":559,"column_start":5,"column_end":79}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14145934,"byte_end":14145995,"line_start":560,"line_end":560,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146732,"byte_end":14146739,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"on_exit","qualname":"<EnvFilter>::on_exit","value":"fn on_exit<S>(&Self, &span::Id, Context<, S>)","parent":null,"children":[],"decl_id":null,"docs":" Informs the filter that the span with the provided `id` was exited.","sig":null,"attributes":[{"value":"/ Informs the filter that the span with the provided `id` was exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146433,"byte_end":14146504,"line_start":570,"line_end":570,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146509,"byte_end":14146512,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::on_exit`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146517,"byte_end":14146576,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/ [`Filter::on_exit`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146581,"byte_end":14146654,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146659,"byte_end":14146720,"line_start":574,"line_end":574,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147207,"byte_end":14147215,"line_start":586,"line_end":586,"column_start":12,"column_end":20},"name":"on_close","qualname":"<EnvFilter>::on_close","value":"fn on_close<S>(&Self, span::Id, Context<, S>)","parent":null,"children":[],"decl_id":null,"docs":" Informs the filter that the span with the provided `id` was closed.","sig":null,"attributes":[{"value":"/ Informs the filter that the span with the provided `id` was closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146906,"byte_end":14146977,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146982,"byte_end":14146985,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::on_close`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14146990,"byte_end":14147050,"line_start":583,"line_end":583,"column_start":5,"column_end":65}},{"value":"/ [`Filter::on_close`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147055,"byte_end":14147129,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/ traits, but it does not require the trait to be in scope.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147134,"byte_end":14147195,"line_start":585,"line_end":585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147831,"byte_end":14147840,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"on_record","qualname":"<EnvFilter>::on_record","value":"fn on_record<S>(&Self, &span::Id, &span::Record, Context<, S>)","parent":null,"children":[],"decl_id":null,"docs":" Informs the filter that the span with the provided `id` recorded the\n provided field `values`.","sig":null,"attributes":[{"value":"/ Informs the filter that the span with the provided `id` recorded the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147495,"byte_end":14147567,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ provided field `values`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147572,"byte_end":14147600,"line_start":597,"line_end":597,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147605,"byte_end":14147608,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::on_record`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147613,"byte_end":14147674,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/ [`Filter::on_record`] methods on `EnvFilter`'s implementations of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147679,"byte_end":14147754,"line_start":600,"line_end":600,"column_start":5,"column_end":80}},{"value":"/ traits, but it does not require the trait to be in scope","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14147759,"byte_end":14147819,"line_start":601,"line_end":601,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149320,"byte_end":14149337,"line_start":644,"line_end":644,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<EnvFilter as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149303,"byte_end":14149312,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149478,"byte_end":14149492,"line_start":649,"line_end":649,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<EnvFilter as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149461,"byte_end":14149470,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149593,"byte_end":14149600,"line_start":654,"line_end":654,"column_start":8,"column_end":15},"name":"enabled","qualname":"<EnvFilter as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149576,"byte_end":14149585,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149728,"byte_end":14149739,"line_start":659,"line_end":659,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<EnvFilter as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149711,"byte_end":14149720,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149884,"byte_end":14149893,"line_start":664,"line_end":664,"column_start":8,"column_end":17},"name":"on_record","qualname":"<EnvFilter as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149867,"byte_end":14149876,"line_start":663,"line_end":663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150035,"byte_end":14150043,"line_start":669,"line_end":669,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<EnvFilter as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150018,"byte_end":14150027,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150149,"byte_end":14150156,"line_start":674,"line_end":674,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<EnvFilter as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150132,"byte_end":14150141,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150261,"byte_end":14150269,"line_start":679,"line_end":679,"column_start":8,"column_end":16},"name":"on_close","qualname":"<EnvFilter as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150244,"byte_end":14150253,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150515,"byte_end":14150522,"line_start":690,"line_end":690,"column_start":12,"column_end":19},"name":"enabled","qualname":"<EnvFilter as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150494,"byte_end":14150503,"line_start":689,"line_end":689,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150667,"byte_end":14150683,"line_start":695,"line_end":695,"column_start":12,"column_end":28},"name":"callsite_enabled","qualname":"<EnvFilter as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150646,"byte_end":14150655,"line_start":694,"line_end":694,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150820,"byte_end":14150834,"line_start":700,"line_end":700,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"<EnvFilter as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150799,"byte_end":14150808,"line_start":699,"line_end":699,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150951,"byte_end":14150962,"line_start":705,"line_end":705,"column_start":12,"column_end":23},"name":"on_new_span","qualname":"<EnvFilter as layer::Filter>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2563},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150930,"byte_end":14150939,"line_start":704,"line_end":704,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151123,"byte_end":14151132,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"on_record","qualname":"<EnvFilter as layer::Filter>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2564},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151102,"byte_end":14151111,"line_start":709,"line_end":709,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151290,"byte_end":14151298,"line_start":715,"line_end":715,"column_start":12,"column_end":20},"name":"on_enter","qualname":"<EnvFilter as layer::Filter>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2565},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151269,"byte_end":14151278,"line_start":714,"line_end":714,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151420,"byte_end":14151427,"line_start":720,"line_end":720,"column_start":12,"column_end":19},"name":"on_exit","qualname":"<EnvFilter as layer::Filter>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2566},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151399,"byte_end":14151408,"line_start":719,"line_end":719,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151548,"byte_end":14151556,"line_start":725,"line_end":725,"column_start":12,"column_end":20},"name":"on_close","qualname":"<EnvFilter as layer::Filter>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151527,"byte_end":14151536,"line_start":724,"line_end":724,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151731,"byte_end":14151739,"line_start":734,"line_end":734,"column_start":8,"column_end":16},"name":"from_str","qualname":"<EnvFilter as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151882,"byte_end":14151886,"line_start":743,"line_end":743,"column_start":8,"column_end":12},"name":"from","qualname":"<EnvFilter as std::convert::From>::from","value":"fn from(S) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151969,"byte_end":14151976,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"default","qualname":"<EnvFilter as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152102,"byte_end":14152105,"line_start":755,"line_end":755,"column_start":8,"column_end":11},"name":"fmt","qualname":"<EnvFilter as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152917,"byte_end":14152921,"line_start":784,"line_end":784,"column_start":8,"column_end":12},"name":"from","qualname":"<FromEnvError as std::convert::From>::from","value":"fn from(directive::ParseError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153082,"byte_end":14153086,"line_start":792,"line_end":792,"column_start":8,"column_end":12},"name":"from","qualname":"<FromEnvError as std::convert::From>::from","value":"fn from(env::VarError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153230,"byte_end":14153233,"line_start":800,"line_end":800,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FromEnvError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153464,"byte_end":14153470,"line_start":809,"line_end":809,"column_start":8,"column_end":14},"name":"source","qualname":"<FromEnvError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::filter::layer_filters::combinator","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1595},{"krate":0,"index":1602},{"krate":0,"index":1607},{"krate":0,"index":1612},{"krate":0,"index":1624},{"krate":0,"index":1629},{"krate":0,"index":1634},{"krate":0,"index":1639},{"krate":0,"index":1651},{"krate":0,"index":1656},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1676},{"krate":0,"index":1680}],"decl_id":null,"docs":" Filter combinators\n","sig":null,"attributes":[{"value":"/ Filter combinators","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260227,"byte_end":14260249,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260786,"byte_end":14260789,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"And","qualname":"::filter::layer_filters::combinator::And","value":"And {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if and only if\n *both* filters return `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if and only if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260442,"byte_end":14260522,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ *both* filters return `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260523,"byte_end":14260556,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260557,"byte_end":14260560,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::and`] method. See that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260561,"byte_end":14260639,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ method's documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260640,"byte_end":14260679,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260680,"byte_end":14260683,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260684,"byte_end":14260720,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::and`]: crate::filter::FilterExt::and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260721,"byte_end":14260774,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261183,"byte_end":14261185,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"Or","qualname":"::filter::layer_filters::combinator::Or","value":"Or {  }","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if *either* filter\n returns `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if *either* filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260852,"byte_end":14260936,"line_start":24,"line_end":24,"column_start":1,"column_end":85}},{"value":"/ returns `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260937,"byte_end":14260956,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260957,"byte_end":14260960,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::or`] method. See that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14260961,"byte_end":14261038,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ method's documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261039,"byte_end":14261078,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261079,"byte_end":14261082,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261083,"byte_end":14261119,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::or`]: crate::filter::FilterExt::or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261120,"byte_end":14261171,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261672,"byte_end":14261675,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Not","qualname":"::filter::layer_filters::combinator::Not","value":"Not {  }","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"decl_id":null,"docs":" Inverts the result of a [`Filter`].","sig":null,"attributes":[{"value":"/ Inverts the result of a [`Filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261248,"byte_end":14261287,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261288,"byte_end":14261291,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If the wrapped filter would enable a span or event, it will be disabled. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261292,"byte_end":14261371,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ it would disable a span or event, that span or event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261372,"byte_end":14261445,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261446,"byte_end":14261449,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This type is typically returned by the [`FilterExt::or`] method. See that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261450,"byte_end":14261527,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ method's documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261528,"byte_end":14261567,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261568,"byte_end":14261571,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261572,"byte_end":14261608,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/ [`FilterExt::or`]: crate::filter::FilterExt::or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261609,"byte_end":14261660,"line_start":47,"line_end":47,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14263606,"byte_end":14263613,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"enabled","qualname":"<And<A, B, S> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14263589,"byte_end":14263598,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14263748,"byte_end":14263764,"line_start":120,"line_end":120,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<And<A, B, S> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264059,"byte_end":14264073,"line_start":135,"line_end":135,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<And<A, B, S> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264293,"byte_end":14264304,"line_start":141,"line_end":141,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<And<A, B, S> as layer::Filter>::on_new_span","value":"fn on_new_span(&Self, &Attributes, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2563},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264276,"byte_end":14264285,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264491,"byte_end":14264500,"line_start":147,"line_end":147,"column_start":8,"column_end":17},"name":"on_record","qualname":"<And<A, B, S> as layer::Filter>::on_record","value":"fn on_record(&Self, &Id, &Record, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2564},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264474,"byte_end":14264483,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264683,"byte_end":14264691,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<And<A, B, S> as layer::Filter>::on_enter","value":"fn on_enter(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2565},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264666,"byte_end":14264675,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264835,"byte_end":14264842,"line_start":159,"line_end":159,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<And<A, B, S> as layer::Filter>::on_exit","value":"fn on_exit(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2566},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264818,"byte_end":14264827,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264984,"byte_end":14264992,"line_start":165,"line_end":165,"column_start":8,"column_end":16},"name":"on_close","qualname":"<And<A, B, S> as layer::Filter>::on_close","value":"fn on_close(&Self, Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14264967,"byte_end":14264976,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265204,"byte_end":14265209,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"clone","qualname":"<And<A, B, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265447,"byte_end":14265450,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<And<A, B, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14268793,"byte_end":14268800,"line_start":294,"line_end":294,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Or<A, B, S> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14268776,"byte_end":14268785,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14268935,"byte_end":14268951,"line_start":298,"line_end":298,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<Or<A, B, S> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14269734,"byte_end":14269748,"line_start":322,"line_end":322,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Or<A, B, S> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14269976,"byte_end":14269987,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Or<A, B, S> as layer::Filter>::on_new_span","value":"fn on_new_span(&Self, &Attributes, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2563},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14269959,"byte_end":14269968,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270174,"byte_end":14270183,"line_start":334,"line_end":334,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Or<A, B, S> as layer::Filter>::on_record","value":"fn on_record(&Self, &Id, &Record, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2564},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270157,"byte_end":14270166,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270366,"byte_end":14270374,"line_start":340,"line_end":340,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Or<A, B, S> as layer::Filter>::on_enter","value":"fn on_enter(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2565},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270349,"byte_end":14270358,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270518,"byte_end":14270525,"line_start":346,"line_end":346,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Or<A, B, S> as layer::Filter>::on_exit","value":"fn on_exit(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2566},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270501,"byte_end":14270510,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270667,"byte_end":14270675,"line_start":352,"line_end":352,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Or<A, B, S> as layer::Filter>::on_close","value":"fn on_close(&Self, Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270650,"byte_end":14270659,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270886,"byte_end":14270891,"line_start":363,"line_end":363,"column_start":8,"column_end":13},"name":"clone","qualname":"<Or<A, B, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271128,"byte_end":14271131,"line_start":377,"line_end":377,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Or<A, B, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271806,"byte_end":14271813,"line_start":407,"line_end":407,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Not<A, S> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271789,"byte_end":14271798,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271921,"byte_end":14271937,"line_start":411,"line_end":411,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<Not<A, S> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272209,"byte_end":14272223,"line_start":419,"line_end":419,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Not<A, S> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272340,"byte_end":14272351,"line_start":425,"line_end":425,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Not<A, S> as layer::Filter>::on_new_span","value":"fn on_new_span(&Self, &Attributes, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2563},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272323,"byte_end":14272332,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272487,"byte_end":14272496,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Not<A, S> as layer::Filter>::on_record","value":"fn on_record(&Self, &Id, &Record, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2564},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272470,"byte_end":14272479,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272636,"byte_end":14272644,"line_start":435,"line_end":435,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Not<A, S> as layer::Filter>::on_enter","value":"fn on_enter(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2565},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272619,"byte_end":14272628,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272746,"byte_end":14272753,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Not<A, S> as layer::Filter>::on_exit","value":"fn on_exit(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2566},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272729,"byte_end":14272738,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272854,"byte_end":14272862,"line_start":445,"line_end":445,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Not<A, S> as layer::Filter>::on_close","value":"fn on_close(&Self, Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272837,"byte_end":14272846,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14273004,"byte_end":14273009,"line_start":454,"line_end":454,"column_start":8,"column_end":13},"name":"clone","qualname":"<Not<A, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14273191,"byte_end":14273194,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Not<A, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1790},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221246,"byte_end":14221254,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"Filtered","qualname":"::filter::layer_filters::Filtered","value":"Filtered {  }","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797}],"decl_id":null,"docs":" A [`Layer`] that wraps an inner [`Layer`] and adds a [`Filter`] which\n controls what spans and events are enabled for that layer.","sig":null,"attributes":[{"value":"/ A [`Layer`] that wraps an inner [`Layer`] and adds a [`Filter`] which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14220812,"byte_end":14220885,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ controls what spans and events are enabled for that layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14220886,"byte_end":14220948,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14220949,"byte_end":14220952,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Layer::with_filter`] method. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14220953,"byte_end":14221019,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [documentation on per-layer filtering][plf] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221020,"byte_end":14221080,"line_start":55,"line_end":55,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221081,"byte_end":14221084,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221085,"byte_end":14221121,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221122,"byte_end":14221165,"line_start":58,"line_end":58,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222567,"byte_end":14222575,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"FilterId","qualname":"::filter::layer_filters::FilterId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies an individual [`Filter`] instance in the context of\n a [`Subscriber`].","sig":null,"attributes":[{"value":"/ Uniquely identifies an individual [`Filter`] instance in the context of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221358,"byte_end":14221433,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ a [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221434,"byte_end":14221455,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221456,"byte_end":14221459,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When adding a [`Filtered`] [`Layer`] to a [`Subscriber`], the [`Subscriber`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221460,"byte_end":14221540,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ generates a `FilterId` for that [`Filtered`] layer. The [`Filtered`] layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221541,"byte_end":14221619,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ will then use the generated ID to query whether a particular span was","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221620,"byte_end":14221693,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ previously enabled by that layer's [`Filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221694,"byte_end":14221744,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221745,"byte_end":14221748,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ **Note**: Currently, the [`Registry`] type provided by this crate is the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221749,"byte_end":14221825,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ **only** [`Subscriber`] implementation capable of participating in per-layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221826,"byte_end":14221906,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ filtering. Therefore, the `FilterId` type cannot currently be constructed by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221907,"byte_end":14221987,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ code outside of `tracing-subscriber`. In the future, new APIs will be added to `tracing-subscriber` to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14221988,"byte_end":14222094,"line_start":79,"line_end":79,"column_start":1,"column_end":107}},{"value":"/ allow non-Registry [`Subscriber`]s to also participate in per-layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222095,"byte_end":14222166,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ filtering. When those APIs are added, subscribers will be responsible","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222167,"byte_end":14222240,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ for generating and assigning `FilterId`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222241,"byte_end":14222286,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222287,"byte_end":14222290,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222291,"byte_end":14222327,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222328,"byte_end":14222372,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222373,"byte_end":14222407,"line_start":86,"line_end":86,"column_start":1,"column_end":35}},{"value":"/ [`Registry`]: crate::registry::Registry","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222408,"byte_end":14222451,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14222452,"byte_end":14222480,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225595,"byte_end":14225604,"line_start":167,"line_end":167,"column_start":11,"column_end":20},"name":"FilterExt","qualname":"::filter::layer_filters::FilterExt","value":"FilterExt<S>: layer::Filter<S>","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1691}],"decl_id":null,"docs":" Extension trait adding [combinators] for combining [`Filter`].","sig":null,"attributes":[{"value":"/ Extension trait adding [combinators] for combining [`Filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225432,"byte_end":14225498,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225499,"byte_end":14225502,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [combinators]: crate::filter::combinator","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225503,"byte_end":14225547,"line_start":165,"line_end":165,"column_start":1,"column_end":45}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225548,"byte_end":14225584,"line_start":166,"line_end":166,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227202,"byte_end":14227205,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"and","qualname":"::filter::layer_filters::FilterExt::and","value":"fn and<B>(Self, B) -> combinator::And<Self, B, S> where Self: Sized,\nB: layer::Filter<S>","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" Combines this [`Filter`] with another [`Filter`] s so that spans and\n events are enabled if and only if *both* filters return `true`.","sig":null,"attributes":[{"value":"/ Combines this [`Filter`] with another [`Filter`] s so that spans and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225632,"byte_end":14225704,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ events are enabled if and only if *both* filters return `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225709,"byte_end":14225776,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225781,"byte_end":14225784,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225789,"byte_end":14225803,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225808,"byte_end":14225811,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Enabling spans or events if they have both a particular target *and* are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225816,"byte_end":14225892,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ above a certain level:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225897,"byte_end":14225923,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225928,"byte_end":14225931,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225936,"byte_end":14225943,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225948,"byte_end":14225977,"line_start":177,"line_end":177,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225982,"byte_end":14226034,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226039,"byte_end":14226058,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226063,"byte_end":14226069,"line_start":180,"line_end":180,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226074,"byte_end":14226077,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with targets starting with `interesting_target`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226082,"byte_end":14226162,"line_start":182,"line_end":182,"column_start":5,"column_end":85}},{"value":"/ let target_filter = filter_fn(|meta| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226167,"byte_end":14226209,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/     meta.target().starts_with(\"interesting_target\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226214,"byte_end":14226269,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226274,"byte_end":14226281,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226286,"byte_end":14226289,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with levels `INFO` and below:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226294,"byte_end":14226355,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ let level_filter = LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226360,"byte_end":14226401,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226406,"byte_end":14226409,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // Combine the two filters together, returning a filter that only enables","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226414,"byte_end":14226491,"line_start":190,"line_end":190,"column_start":5,"column_end":82}},{"value":"/ // spans and events that *both* filters will enable:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226496,"byte_end":14226552,"line_start":191,"line_end":191,"column_start":5,"column_end":61}},{"value":"/ let filter = target_filter.and(level_filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226557,"byte_end":14226606,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226611,"byte_end":14226614,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226619,"byte_end":14226653,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226658,"byte_end":14226725,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226730,"byte_end":14226746,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226751,"byte_end":14226754,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226759,"byte_end":14226799,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ tracing::info!(\"an event with an uninteresting target\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226804,"byte_end":14226864,"line_start":199,"line_end":199,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226869,"byte_end":14226872,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226877,"byte_end":14226913,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(target: \"interesting_target\", \"a very interesting event\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14226918,"byte_end":14226995,"line_start":202,"line_end":202,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227000,"byte_end":14227003,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227008,"byte_end":14227048,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ tracing::debug!(target: \"interesting_target\", \"interesting debug event...\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227053,"byte_end":14227133,"line_start":205,"line_end":205,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227138,"byte_end":14227145,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227150,"byte_end":14227153,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227158,"byte_end":14227194,"line_start":208,"line_end":208,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230179,"byte_end":14230181,"line_start":291,"line_end":291,"column_start":8,"column_end":10},"name":"or","qualname":"::filter::layer_filters::FilterExt::or","value":"fn or<B>(Self, B) -> combinator::Or<Self, B, S> where Self: Sized,\nB: layer::Filter<S>","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" Combines two [`Filter`]s so that spans and events are enabled if *either* filter\n returns `true`.","sig":null,"attributes":[{"value":"/ Combines two [`Filter`]s so that spans and events are enabled if *either* filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227375,"byte_end":14227459,"line_start":217,"line_end":217,"column_start":5,"column_end":89}},{"value":"/ returns `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227464,"byte_end":14227483,"line_start":218,"line_end":218,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227488,"byte_end":14227491,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227496,"byte_end":14227510,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227515,"byte_end":14227518,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Enabling spans and events at the `INFO` level and above, and all spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227523,"byte_end":14227597,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ and events with a particular target:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227602,"byte_end":14227642,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227647,"byte_end":14227654,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227659,"byte_end":14227688,"line_start":225,"line_end":225,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227693,"byte_end":14227745,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227750,"byte_end":14227769,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227774,"byte_end":14227780,"line_start":228,"line_end":228,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227785,"byte_end":14227788,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with targets starting with `interesting_target`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227793,"byte_end":14227873,"line_start":230,"line_end":230,"column_start":5,"column_end":85}},{"value":"/ let target_filter = filter_fn(|meta| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227878,"byte_end":14227920,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     meta.target().starts_with(\"interesting_target\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227925,"byte_end":14227980,"line_start":232,"line_end":232,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227985,"byte_end":14227992,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14227997,"byte_end":14228000,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ // Enables spans and events with levels `INFO` and below:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228005,"byte_end":14228066,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ let level_filter = LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228071,"byte_end":14228112,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228117,"byte_end":14228120,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Combine the two filters together so that a span or event is enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228125,"byte_end":14228199,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ // if it is at INFO or lower, or if it has a target starting with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228204,"byte_end":14228273,"line_start":239,"line_end":239,"column_start":5,"column_end":74}},{"value":"/ // `interesting_target`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228278,"byte_end":14228306,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/ let filter = level_filter.or(target_filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228311,"byte_end":14228359,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228364,"byte_end":14228367,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228372,"byte_end":14228406,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228411,"byte_end":14228478,"line_start":244,"line_end":244,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228483,"byte_end":14228499,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228504,"byte_end":14228507,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ // This event will *not* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228512,"byte_end":14228552,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/ tracing::debug!(\"an uninteresting event\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228557,"byte_end":14228603,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228608,"byte_end":14228611,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228616,"byte_end":14228652,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(\"an uninteresting INFO event\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228657,"byte_end":14228707,"line_start":251,"line_end":251,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228712,"byte_end":14228715,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228720,"byte_end":14228756,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/ tracing::info!(target: \"interesting_target\", \"a very interesting event\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228761,"byte_end":14228838,"line_start":254,"line_end":254,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228843,"byte_end":14228846,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // This event *will* be enabled:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228851,"byte_end":14228887,"line_start":256,"line_end":256,"column_start":5,"column_end":41}},{"value":"/ tracing::debug!(target: \"interesting_target\", \"interesting debug event...\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228892,"byte_end":14228972,"line_start":257,"line_end":257,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228977,"byte_end":14228984,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228989,"byte_end":14228992,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Enabling a higher level for a particular target by using `or` in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14228997,"byte_end":14229065,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/ conjunction with the [`and`] combinator:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229070,"byte_end":14229114,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229119,"byte_end":14229122,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229127,"byte_end":14229134,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229139,"byte_end":14229168,"line_start":264,"line_end":264,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229173,"byte_end":14229225,"line_start":265,"line_end":265,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229230,"byte_end":14229249,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229254,"byte_end":14229260,"line_start":267,"line_end":267,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229265,"byte_end":14229268,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ // This filter will enable spans and events with targets beginning with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229273,"byte_end":14229348,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ // `my_crate`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229353,"byte_end":14229371,"line_start":270,"line_end":270,"column_start":5,"column_end":23}},{"value":"/ let my_crate = filter_fn(|meta| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229376,"byte_end":14229413,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/     meta.target().starts_with(\"my_crate\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229418,"byte_end":14229463,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229468,"byte_end":14229475,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229480,"byte_end":14229483,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let filter = my_crate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229488,"byte_end":14229513,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/     // Combine the `my_crate` filter with a `LevelFilter` to produce a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229518,"byte_end":14229592,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/     // filter that will enable the `INFO` level and lower for spans and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229597,"byte_end":14229672,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/     // events with `my_crate` targets:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229677,"byte_end":14229719,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/     .and(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229724,"byte_end":14229755,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"/     // If a span or event *doesn't* have a target beginning with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229760,"byte_end":14229828,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/     // `my_crate`, enable it if it has the `WARN` level or lower:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229833,"byte_end":14229902,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/     .or(LevelFilter::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229907,"byte_end":14229938,"line_start":282,"line_end":282,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229943,"byte_end":14229946,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229951,"byte_end":14229985,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14229990,"byte_end":14230057,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230062,"byte_end":14230078,"line_start":286,"line_end":286,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230083,"byte_end":14230090,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230095,"byte_end":14230098,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230103,"byte_end":14230139,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/ [`and`]: FilterExt::and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230144,"byte_end":14230171,"line_start":290,"line_end":290,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230473,"byte_end":14230476,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"not","qualname":"::filter::layer_filters::FilterExt::not","value":"fn not(Self) -> combinator::Not<Self, S> where Self: Sized","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" Inverts `self`, returning a filter that enables spans and events only if\n `self` would *not* enable them.\n","sig":null,"attributes":[{"value":"/ Inverts `self`, returning a filter that enables spans and events only if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230349,"byte_end":14230425,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ `self` would *not* enable them.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230430,"byte_end":14230465,"line_start":300,"line_end":300,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233185,"byte_end":14233190,"line_start":378,"line_end":378,"column_start":8,"column_end":13},"name":"boxed","qualname":"::filter::layer_filters::FilterExt::boxed","value":"fn boxed(Self) -> Box<dyn layer::Filter<S> + Send + Sync + 'static> where\nSelf: Sized + Send + Sync + 'static","parent":{"krate":0,"index":1684},"children":[],"decl_id":null,"docs":" [Boxes] `self`, erasing its concrete type.","sig":null,"attributes":[{"value":"/ [Boxes] `self`, erasing its concrete type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230594,"byte_end":14230640,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230645,"byte_end":14230648,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling [`Box::new`], but in method form, so that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230653,"byte_end":14230728,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ it can be used when chaining combinator methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230733,"byte_end":14230785,"line_start":311,"line_end":311,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230790,"byte_end":14230793,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230798,"byte_end":14230812,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230817,"byte_end":14230820,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ When different combinations of filters are used conditionally, they may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230825,"byte_end":14230900,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ have different types. For example, the following code won't compile,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230905,"byte_end":14230977,"line_start":316,"line_end":316,"column_start":5,"column_end":77}},{"value":"/ since the `if` and `else` clause produce filters of different types:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14230982,"byte_end":14231054,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231059,"byte_end":14231062,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231067,"byte_end":14231086,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231091,"byte_end":14231120,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231125,"byte_end":14231177,"line_start":321,"line_end":321,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231182,"byte_end":14231201,"line_start":322,"line_end":322,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231206,"byte_end":14231212,"line_start":323,"line_end":323,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231217,"byte_end":14231220,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let enable_bar_target: bool = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231225,"byte_end":14231265,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/ # false;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231270,"byte_end":14231282,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231287,"byte_end":14231290,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let filter = if enable_bar_target {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231295,"byte_end":14231334,"line_start":328,"line_end":328,"column_start":5,"column_end":44}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231339,"byte_end":14231397,"line_start":329,"line_end":329,"column_start":5,"column_end":63}},{"value":"/         // If `enable_bar_target` is true, add a `filter_fn` enabling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231402,"byte_end":14231475,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/         // spans and events with the target `bar`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231480,"byte_end":14231534,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/         .or(filter_fn(|meta| meta.target().starts_with(\"bar\")))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231539,"byte_end":14231606,"line_start":332,"line_end":332,"column_start":5,"column_end":72}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231611,"byte_end":14231646,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231651,"byte_end":14231663,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231668,"byte_end":14231726,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231731,"byte_end":14231766,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231771,"byte_end":14231777,"line_start":337,"line_end":337,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231782,"byte_end":14231785,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231790,"byte_end":14231824,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231829,"byte_end":14231896,"line_start":340,"line_end":340,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231901,"byte_end":14231917,"line_start":341,"line_end":341,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231922,"byte_end":14231929,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231934,"byte_end":14231937,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ By using `boxed`, the types of the two different branches can be erased,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14231942,"byte_end":14232018,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ so the assignment to the `filter` variable is valid (as both branches","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232023,"byte_end":14232096,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ have the type `Box<dyn Filter<S> + Send + Sync + 'static>`). The","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232101,"byte_end":14232169,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ following code *does* compile:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232174,"byte_end":14232208,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232213,"byte_end":14232216,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232221,"byte_end":14232228,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232233,"byte_end":14232262,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/     filter::{filter_fn, LevelFilter, FilterExt},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232267,"byte_end":14232319,"line_start":351,"line_end":351,"column_start":5,"column_end":57}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232324,"byte_end":14232343,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232348,"byte_end":14232354,"line_start":353,"line_end":353,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232359,"byte_end":14232362,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let enable_bar_target: bool = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232367,"byte_end":14232407,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/ # false;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232412,"byte_end":14232424,"line_start":356,"line_end":356,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232429,"byte_end":14232432,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ let filter = if enable_bar_target {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232437,"byte_end":14232476,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232481,"byte_end":14232539,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/         .or(filter_fn(|meta| meta.target().starts_with(\"bar\")))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232544,"byte_end":14232611,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232616,"byte_end":14232651,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/         // Boxing the filter erases its type, so both branches now","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232656,"byte_end":14232726,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/         // have the same type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232731,"byte_end":14232765,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/         .boxed()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232770,"byte_end":14232790,"line_start":364,"line_end":364,"column_start":5,"column_end":25}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232795,"byte_end":14232807,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/     filter_fn(|meta| meta.target().starts_with(\"foo\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232812,"byte_end":14232870,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         .and(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232875,"byte_end":14232910,"line_start":367,"line_end":367,"column_start":5,"column_end":40}},{"value":"/         .boxed()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232915,"byte_end":14232935,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232940,"byte_end":14232946,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232951,"byte_end":14232954,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232959,"byte_end":14232993,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/     .with(tracing_subscriber::fmt::layer().with_filter(filter))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14232998,"byte_end":14233065,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233070,"byte_end":14233086,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233091,"byte_end":14233098,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233103,"byte_end":14233106,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [Boxes]: std::boxed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233111,"byte_end":14233134,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ [`Box::new`]: std::boxed::Box::new","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233139,"byte_end":14233177,"line_start":377,"line_end":377,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233498,"byte_end":14233505,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"enabled","qualname":"<LevelFilter as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233607,"byte_end":14233623,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<LevelFilter as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233815,"byte_end":14233829,"line_start":403,"line_end":403,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<LevelFilter as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235186,"byte_end":14235189,"line_start":451,"line_end":451,"column_start":12,"column_end":15},"name":"new","qualname":"<Filtered<L, F, S>>::new","value":"fn new(L, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`Layer`] so that it is filtered by the given\n [`Filter`].","sig":null,"attributes":[{"value":"/ Wraps the provided [`Layer`] so that it is filtered by the given","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234827,"byte_end":14234895,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ [`Filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234900,"byte_end":14234915,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234920,"byte_end":14234923,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Layer::with_filter`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234928,"byte_end":14234996,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235001,"byte_end":14235004,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ See the [documentation on per-layer filtering][plf] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235009,"byte_end":14235077,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235082,"byte_end":14235085,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235090,"byte_end":14235126,"line_start":449,"line_end":449,"column_start":5,"column_end":41}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235131,"byte_end":14235174,"line_start":450,"line_end":450,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235862,"byte_end":14235868,"line_start":475,"line_end":475,"column_start":12,"column_end":18},"name":"filter","qualname":"<Filtered<L, F, S>>::filter","value":"fn filter(&Self) -> &F","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Filter`](crate::layer::Filter) used by this layer.\n","sig":null,"attributes":[{"value":"/ Borrows the [`Filter`](crate::layer::Filter) used by this layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235782,"byte_end":14235850,"line_start":474,"line_end":474,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236989,"byte_end":14236999,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"filter_mut","qualname":"<Filtered<L, F, S>>::filter_mut","value":"fn filter_mut(&mut Self) -> &mut F","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the [`Filter`](crate::layer::Filter) used by this layer.","sig":null,"attributes":[{"value":"/ Mutably borrows the [`Filter`](crate::layer::Filter) used by this layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235916,"byte_end":14235992,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14235997,"byte_end":14236000,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ When this layer can be mutably borrowed, this may be used to mutate the filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236005,"byte_end":14236088,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ Generally, this will primarily be used with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236093,"byte_end":14236144,"line_start":482,"line_end":482,"column_start":5,"column_end":56}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236149,"byte_end":14236218,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236223,"byte_end":14236226,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236231,"byte_end":14236245,"line_start":485,"line_end":485,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236250,"byte_end":14236253,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236258,"byte_end":14236265,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236270,"byte_end":14236294,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{filter,fmt,reload,Registry,prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236299,"byte_end":14236369,"line_start":489,"line_end":489,"column_start":5,"column_end":75}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236374,"byte_end":14236391,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/ let filtered_layer = fmt::Layer::default().with_filter(filter::LevelFilter::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236396,"byte_end":14236482,"line_start":491,"line_end":491,"column_start":5,"column_end":91}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236487,"byte_end":14236564,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236569,"byte_end":14236574,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236579,"byte_end":14236628,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<Registry>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236633,"byte_end":14236700,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ # filter::LevelFilter, Registry>,Registry>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236705,"byte_end":14236751,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/ # = &reload_handle;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236756,"byte_end":14236779,"line_start":497,"line_end":497,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236784,"byte_end":14236789,"line_start":498,"line_end":498,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236794,"byte_end":14236828,"line_start":499,"line_end":499,"column_start":5,"column_end":39}},{"value":"/ reload_handle.modify(|layer| *layer.filter_mut() = filter::LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236833,"byte_end":14236915,"line_start":500,"line_end":500,"column_start":5,"column_end":87}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236920,"byte_end":14236953,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236958,"byte_end":14236965,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14236970,"byte_end":14236977,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237136,"byte_end":14237141,"line_start":509,"line_end":509,"column_start":12,"column_end":17},"name":"inner","qualname":"<Filtered<L, F, S>>::inner","value":"fn inner(&Self) -> &L","parent":null,"children":[],"decl_id":null,"docs":" Borrows the inner [`Layer`] wrapped by this `Filtered` layer.\n","sig":null,"attributes":[{"value":"/ Borrows the inner [`Layer`] wrapped by this `Filtered` layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237059,"byte_end":14237124,"line_start":508,"line_end":508,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238448,"byte_end":14238457,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Filtered<L, F, S>>::inner_mut","value":"fn inner_mut(&mut Self) -> &mut L","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the inner [`Layer`] wrapped by this `Filtered` layer.","sig":null,"attributes":[{"value":"/ Mutably borrows the inner [`Layer`] wrapped by this `Filtered` layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237188,"byte_end":14237261,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237266,"byte_end":14237269,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is primarily expected to be used with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237274,"byte_end":14237331,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237336,"byte_end":14237405,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237410,"byte_end":14237413,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237418,"byte_end":14237432,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237437,"byte_end":14237440,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237445,"byte_end":14237452,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237457,"byte_end":14237481,"line_start":521,"line_end":521,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{filter,fmt,reload,Registry,prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237486,"byte_end":14237556,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ # fn non_blocking<T: std::io::Write>(writer: T) -> (fn() -> std::io::Stdout) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237561,"byte_end":14237643,"line_start":523,"line_end":523,"column_start":5,"column_end":87}},{"value":"/ #   std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237648,"byte_end":14237671,"line_start":524,"line_end":524,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237676,"byte_end":14237683,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237688,"byte_end":14237705,"line_start":526,"line_end":526,"column_start":5,"column_end":22}},{"value":"/ let filtered_layer = fmt::layer().with_writer(non_blocking(std::io::stderr())).with_filter(filter::LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237710,"byte_end":14237832,"line_start":527,"line_end":527,"column_start":5,"column_end":127}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237837,"byte_end":14237914,"line_start":528,"line_end":528,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237919,"byte_end":14237924,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237929,"byte_end":14237978,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<Registry, _, _, fn() -> std::io::Stdout>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14237983,"byte_end":14238081,"line_start":531,"line_end":531,"column_start":5,"column_end":103}},{"value":"/ # filter::LevelFilter, Registry>, Registry>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238086,"byte_end":14238133,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ # = &reload_handle;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238138,"byte_end":14238161,"line_start":533,"line_end":533,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238166,"byte_end":14238171,"line_start":534,"line_end":534,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be logged to stderr\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238176,"byte_end":14238219,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ reload_handle.modify(|layer| *layer.inner_mut().writer_mut() = non_blocking(std::io::stdout()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238224,"byte_end":14238324,"line_start":536,"line_end":536,"column_start":5,"column_end":105}},{"value":"/ info!(\"This will be logged to stdout\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238329,"byte_end":14238372,"line_start":537,"line_end":537,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238377,"byte_end":14238384,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238389,"byte_end":14238396,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238401,"byte_end":14238404,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [subscriber]: Subscribe","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238409,"byte_end":14238436,"line_start":541,"line_end":541,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238696,"byte_end":14238704,"line_start":553,"line_end":553,"column_start":8,"column_end":16},"name":"on_layer","qualname":"<Filtered<L, F, S> as layer::Layer>::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":676},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14239288,"byte_end":14239305,"line_start":566,"line_end":566,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Filtered<L, F, S> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14240561,"byte_end":14240568,"line_start":591,"line_end":591,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Filtered<L, F, S> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14241979,"byte_end":14241990,"line_start":618,"line_end":618,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Filtered<L, F, S> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14242297,"byte_end":14242311,"line_start":627,"line_end":627,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Filtered<L, F, S> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14242395,"byte_end":14242404,"line_start":631,"line_end":631,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Filtered<L, F, S> as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14242677,"byte_end":14242692,"line_start":638,"line_end":638,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"<Filtered<L, F, S> as layer::Layer>::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":682},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14243041,"byte_end":14243049,"line_start":646,"line_end":646,"column_start":8,"column_end":16},"name":"on_event","qualname":"<Filtered<L, F, S> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14243219,"byte_end":14243227,"line_start":652,"line_end":652,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Filtered<L, F, S> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14243448,"byte_end":14243455,"line_start":659,"line_end":659,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Filtered<L, F, S> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14243674,"byte_end":14243682,"line_start":666,"line_end":666,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Filtered<L, F, S> as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14243981,"byte_end":14243993,"line_start":674,"line_end":674,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"<Filtered<L, F, S> as layer::Layer>::on_id_change","value":"fn on_id_change(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":688},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14244231,"byte_end":14244243,"line_start":682,"line_end":682,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Filtered<L, F, S> as layer::Layer>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":695},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14244207,"byte_end":14244216,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14244872,"byte_end":14244875,"line_start":700,"line_end":700,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filtered<F, L, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14249363,"byte_end":14249366,"line_start":820,"line_end":820,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterId as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250071,"byte_end":14250074,"line_start":841,"line_end":841,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterId as std::fmt::Binary>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9918},"children":[],"decl_id":{"krate":2,"index":9919},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":57880,"byte_end":57897,"line_start":12,"line_end":12,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<LevelFilter as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":58097,"byte_end":58104,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"enabled","qualname":"<LevelFilter as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, crate::layer::Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":58227,"byte_end":58241,"line_start":24,"line_end":24,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<LevelFilter as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1848},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"targets","qualname":"::filter::targets","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":1897},{"krate":0,"index":1911},{"krate":0,"index":1917},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1930},{"krate":0,"index":1935},{"krate":0,"index":1939},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":1944},{"krate":0,"index":1948},{"krate":0,"index":2094},{"krate":0,"index":2098},{"krate":0,"index":1952},{"krate":0,"index":1957}],"decl_id":null,"docs":" A [filter] that enables or disables spans and events based on their [target] and [level].","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ A [filter] that enables or disables spans and events based on their [target] and [level].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273309,"byte_end":14273402,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273403,"byte_end":14273406,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`Targets`] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273407,"byte_end":14273439,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273440,"byte_end":14273443,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273444,"byte_end":14273488,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273489,"byte_end":14273521,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/ [filter]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273522,"byte_end":14273570,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279587,"byte_end":14279594,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"Targets","qualname":"::filter::targets::Targets","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter that enables or disables spans and events based on their [target]\n and [level].","sig":null,"attributes":[{"value":"/ A filter that enables or disables spans and events based on their [target]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273910,"byte_end":14273988,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ and [level].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14273989,"byte_end":14274005,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274006,"byte_end":14274009,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Targets are typically equal to the Rust module path of the code where the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274010,"byte_end":14274087,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ span or event was recorded, although they may be overridden.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274088,"byte_end":14274152,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274153,"byte_end":14274156,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This type can be used for both [per-layer filtering][plf] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274157,"byte_end":14274229,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`Filter`] implementation) and [global filtering][global] (using its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274230,"byte_end":14274302,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ [`Layer`] implementation).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274303,"byte_end":14274333,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274334,"byte_end":14274337,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ See the [documentation on filtering with layers][filtering] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274338,"byte_end":14274414,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274415,"byte_end":14274418,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Filtering With `Targets`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274419,"byte_end":14274449,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274450,"byte_end":14274453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A `Targets` filter consists of one or more [target] prefixes, paired with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274454,"byte_end":14274531,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ [`LevelFilter`]s. If a span or event's [target] begins with one of those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274532,"byte_end":14274608,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ prefixes, and its [level] is at or below the [`LevelFilter`] enabled for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274609,"byte_end":14274685,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ that prefix, then the span or event will be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274686,"byte_end":14274742,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274743,"byte_end":14274746,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is similar to the behavior implemented by the [`env_logger` crate] in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274747,"byte_end":14274825,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ the `log` ecosystem.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274826,"byte_end":14274850,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274851,"byte_end":14274854,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`EnvFilter`] type also provided by this crate is very similar to `Targets`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274855,"byte_end":14274939,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/ but is capable of a more sophisticated form of filtering where events may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14274940,"byte_end":14275017,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ also be enabled or disabled based on the span they are recorded in.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275018,"byte_end":14275089,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/ `Targets` can be thought of as a lighter-weight form of [`EnvFilter`] that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275090,"byte_end":14275168,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ can be used instead when this dynamic filtering is not required.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275169,"byte_end":14275237,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275238,"byte_end":14275241,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275242,"byte_end":14275256,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275257,"byte_end":14275260,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A `Targets` filter can be constructed by programmatically adding targets and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275261,"byte_end":14275341,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ levels to enable:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275342,"byte_end":14275363,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275364,"byte_end":14275367,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275368,"byte_end":14275375,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275376,"byte_end":14275425,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275426,"byte_end":14275454,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275455,"byte_end":14275458,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275459,"byte_end":14275498,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/     // Enable the `INFO` level for anything in `my_crate`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275499,"byte_end":14275560,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275561,"byte_end":14275606,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/     // Enable the `DEBUG` level for a specific module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275607,"byte_end":14275665,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275666,"byte_end":14275733,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275734,"byte_end":14275737,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Build a new subscriber with the `fmt` layer using the `Targets`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275738,"byte_end":14275808,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/ // filter we constructed above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275809,"byte_end":14275844,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275845,"byte_end":14275879,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     .with(tracing_subscriber::fmt::layer())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275880,"byte_end":14275927,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/     .with(filter)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275928,"byte_end":14275949,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275950,"byte_end":14275966,"line_start":73,"line_end":73,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275967,"byte_end":14275974,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275975,"byte_end":14275978,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14275979,"byte_end":14276047,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276048,"byte_end":14276055,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276056,"byte_end":14276115,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276116,"byte_end":14276144,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276145,"byte_end":14276148,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let filter = Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276149,"byte_end":14276180,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276181,"byte_end":14276226,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276227,"byte_end":14276280,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     .with_target(\"my_crate::annoying_module\", LevelFilter::OFF);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276281,"byte_end":14276349,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276350,"byte_end":14276369,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276370,"byte_end":14276377,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276378,"byte_end":14276381,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, `Targets` implements [`std::str::FromStr`], allowing it to be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276382,"byte_end":14276462,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ parsed from a comma-delimited list of `target=level` pairs. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276463,"byte_end":14276539,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276540,"byte_end":14276543,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276544,"byte_end":14276555,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276556,"byte_end":14276615,"line_start":92,"line_end":92,"column_start":1,"column_end":60}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276616,"byte_end":14276651,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276652,"byte_end":14276680,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276681,"byte_end":14276684,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let filter = \"my_crate=info,my_crate::interesting_module=trace,other_crate=debug\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276685,"byte_end":14276770,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/     .parse::<filter::Targets>()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276771,"byte_end":14276808,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276809,"byte_end":14276812,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // The parsed filter is identical to a filter constructed using `with_target`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276813,"byte_end":14276895,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276896,"byte_end":14276911,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/     filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276912,"byte_end":14276927,"line_start":101,"line_end":101,"column_start":1,"column_end":16}},{"value":"/     filter::Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276928,"byte_end":14276958,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/         .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14276959,"byte_end":14277008,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/         .with_target(\"my_crate::interesting_module\", Level::TRACE)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277009,"byte_end":14277079,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/         .with_target(\"other_crate\", Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277080,"byte_end":14277133,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277134,"byte_end":14277140,"line_start":106,"line_end":106,"column_start":1,"column_end":7}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277141,"byte_end":14277155,"line_start":107,"line_end":107,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277156,"byte_end":14277163,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277164,"byte_end":14277167,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is particularly useful when the list of enabled targets is configurable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277168,"byte_end":14277248,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ by the user at runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277249,"byte_end":14277276,"line_start":111,"line_end":111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277277,"byte_end":14277280,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The `Targets` filter can be used as a [per-layer filter][plf] *and* as a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277281,"byte_end":14277357,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ [global filter][global]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277358,"byte_end":14277386,"line_start":114,"line_end":114,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277387,"byte_end":14277390,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277391,"byte_end":14277402,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277403,"byte_end":14277432,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/     fmt,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277433,"byte_end":14277445,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/     filter::{Targets, LevelFilter},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277446,"byte_end":14277485,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277486,"byte_end":14277505,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277506,"byte_end":14277512,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277513,"byte_end":14277541,"line_start":122,"line_end":122,"column_start":1,"column_end":29}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277542,"byte_end":14277577,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277578,"byte_end":14277637,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277638,"byte_end":14277641,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to stdout using the human-readable \"pretty\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277642,"byte_end":14277717,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ // format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277718,"byte_end":14277732,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ let stdout_log = fmt::layer().pretty();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277733,"byte_end":14277776,"line_start":128,"line_end":128,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277777,"byte_end":14277780,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to a file, using the JSON format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277781,"byte_end":14277846,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ let file = File::create(\"debug_log.json\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277847,"byte_end":14277894,"line_start":131,"line_end":131,"column_start":1,"column_end":48}},{"value":"/ let debug_log = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277895,"byte_end":14277927,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/     .with_writer(Arc::new(file))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277928,"byte_end":14277964,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/     .json();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277965,"byte_end":14277981,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277982,"byte_end":14277985,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14277986,"byte_end":14278020,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/     // Only log INFO and above to stdout, unless the span or event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278021,"byte_end":14278091,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/     // has the `my_crate::cool_module` target prefix.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278092,"byte_end":14278149,"line_start":138,"line_end":138,"column_start":1,"column_end":58}},{"value":"/     .with(stdout_log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278150,"byte_end":14278174,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/         .with_filter(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278175,"byte_end":14278200,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/             Targets::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278201,"byte_end":14278235,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/                 .with_target(\"my_crate::cool_module\", Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278236,"byte_end":14278307,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/                 .with_default(Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278308,"byte_end":14278354,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/        )","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278355,"byte_end":14278367,"line_start":144,"line_end":144,"column_start":1,"column_end":13}},{"value":"/     )","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278368,"byte_end":14278377,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/     // Log everything enabled by the global filter to `debug_log.json`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278378,"byte_end":14278453,"line_start":146,"line_end":146,"column_start":1,"column_end":76}},{"value":"/     .with(debug_log)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278454,"byte_end":14278478,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/     // Configure a global filter for the whole subscriber stack. This will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278479,"byte_end":14278557,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/     // control what spans and events are recorded by both the `debug_log`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278558,"byte_end":14278635,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/     // and the `stdout_log` layers, and `stdout_log` will *additionally* be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278636,"byte_end":14278715,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/     // filtered by its per-layer filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278716,"byte_end":14278760,"line_start":151,"line_end":151,"column_start":1,"column_end":45}},{"value":"/     .with(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278761,"byte_end":14278775,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/         Targets::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278776,"byte_end":14278806,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"/             .with_target(\"my_crate\", Level::TRACE)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278807,"byte_end":14278861,"line_start":154,"line_end":154,"column_start":1,"column_end":55}},{"value":"/             .with_target(\"other_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278862,"byte_end":14278918,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/             .with_target(\"other_crate::annoying_module\", LevelFilter::OFF)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278919,"byte_end":14278997,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/             .with_target(\"third_crate\", Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14278998,"byte_end":14279055,"line_start":157,"line_end":157,"column_start":1,"column_end":58}},{"value":"/     ).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279056,"byte_end":14279073,"line_start":158,"line_end":158,"column_start":1,"column_end":18}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279074,"byte_end":14279088,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279089,"byte_end":14279095,"line_start":160,"line_end":160,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279096,"byte_end":14279099,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279100,"byte_end":14279144,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279145,"byte_end":14279177,"line_start":163,"line_end":163,"column_start":1,"column_end":33}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279178,"byte_end":14279214,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279215,"byte_end":14279249,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279250,"byte_end":14279293,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/ [global]: crate::layer#global-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279294,"byte_end":14279337,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/ [filtering]: crate::layer#filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279338,"byte_end":14279389,"line_start":168,"line_end":168,"column_start":1,"column_end":52}},{"value":"/ [`env_logger` crate]: https://docs.rs/env_logger/0.9.0/env_logger/index.html#enabling-logging","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279390,"byte_end":14279487,"line_start":169,"line_end":169,"column_start":1,"column_end":98}},{"value":"/ [`EnvFilter`]: crate::filter::EnvFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279488,"byte_end":14279531,"line_start":170,"line_end":170,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280102,"byte_end":14280105,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Targets>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Targets` filter.","sig":null,"attributes":[{"value":"/ Returns a new `Targets` filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279647,"byte_end":14279682,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279687,"byte_end":14279690,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This filter will enable no targets. Call [`with_target`] or [`with_targets`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279695,"byte_end":14279775,"line_start":177,"line_end":177,"column_start":5,"column_end":85}},{"value":"/ to add enabled targets, and [`with_default`] to change the default level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279780,"byte_end":14279856,"line_start":178,"line_end":178,"column_start":5,"column_end":81}},{"value":"/ enabled for spans and events that didn't match any of the provided targets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279861,"byte_end":14279940,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279945,"byte_end":14279948,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`with_target`]: Targets::with_target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279953,"byte_end":14279994,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ [`with_targets`]: Targets::with_targets","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279999,"byte_end":14280042,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ [`with_default`]: Targets::with_default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280047,"byte_end":14280090,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281281,"byte_end":14281292,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Targets>::with_target","value":"fn with_target<impl Into<String>,\nimpl Into<LevelFilter>>(Self, impl Into<String>, impl Into<LevelFilter>)\n-> Self where impl Into<String>: Into<String>,\nimpl Into<LevelFilter>: Into<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Enables spans and events with [target]s starting with the provided target\n prefix if they are at or below the provided [`LevelFilter`].","sig":null,"attributes":[{"value":"/ Enables spans and events with [target]s starting with the provided target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280153,"byte_end":14280230,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ prefix if they are at or below the provided [`LevelFilter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280235,"byte_end":14280299,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280304,"byte_end":14280307,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280312,"byte_end":14280326,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280331,"byte_end":14280334,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280339,"byte_end":14280346,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280351,"byte_end":14280386,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280391,"byte_end":14280419,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280424,"byte_end":14280427,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280432,"byte_end":14280471,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/     // Enable the `INFO` level for anything in `my_crate`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280476,"byte_end":14280537,"line_start":198,"line_end":198,"column_start":5,"column_end":66}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280542,"byte_end":14280587,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/     // Enable the `DEBUG` level for a specific module.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280592,"byte_end":14280650,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280655,"byte_end":14280722,"line_start":201,"line_end":201,"column_start":5,"column_end":72}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280727,"byte_end":14280746,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280751,"byte_end":14280758,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280763,"byte_end":14280766,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280771,"byte_end":14280839,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280844,"byte_end":14280851,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280856,"byte_end":14280915,"line_start":207,"line_end":207,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280920,"byte_end":14280948,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280953,"byte_end":14280956,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280961,"byte_end":14280992,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14280997,"byte_end":14281042,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281047,"byte_end":14281100,"line_start":212,"line_end":212,"column_start":5,"column_end":58}},{"value":"/     .with_target(\"my_crate::interesting_module\", LevelFilter::OFF);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281105,"byte_end":14281176,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281181,"byte_end":14281200,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281205,"byte_end":14281212,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281217,"byte_end":14281220,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281225,"byte_end":14281269,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282617,"byte_end":14282629,"line_start":257,"line_end":257,"column_start":12,"column_end":24},"name":"with_targets","qualname":"<Targets>::with_targets","value":"fn with_targets<T, L,\nimpl IntoIterator<Item = (T, L)>>(Self, impl IntoIterator<Item = (T, L)>)\n-> Self where String: From<T>, LevelFilter: From<L>,\nimpl IntoIterator<Item = (T, L)>: IntoIterator<Item = (T, L)>","parent":null,"children":[],"decl_id":null,"docs":" Adds [target]s from an iterator of [target]-[`LevelFilter`] pairs to this filter.","sig":null,"attributes":[{"value":"/ Adds [target]s from an iterator of [target]-[`LevelFilter`] pairs to this filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281538,"byte_end":14281623,"line_start":226,"line_end":226,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281628,"byte_end":14281631,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281636,"byte_end":14281650,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281655,"byte_end":14281658,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281663,"byte_end":14281670,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281675,"byte_end":14281710,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281715,"byte_end":14281743,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281748,"byte_end":14281751,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let filter = filter::Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281756,"byte_end":14281795,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     .with_targets(vec![","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281800,"byte_end":14281827,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         (\"my_crate\", Level::INFO),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281832,"byte_end":14281870,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/         (\"my_crate::some_module\", Level::DEBUG),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281875,"byte_end":14281927,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/         (\"my_crate::other_module::cool_stuff\", Level::TRACE),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14281932,"byte_end":14281997,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/         (\"other_crate\", Level::WARN)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282002,"byte_end":14282042,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/     ]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282047,"byte_end":14282058,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282063,"byte_end":14282082,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282087,"byte_end":14282094,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282099,"byte_end":14282102,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`LevelFilter::OFF`] can be used to disable a particular target:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282107,"byte_end":14282175,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282180,"byte_end":14282187,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282192,"byte_end":14282251,"line_start":246,"line_end":246,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282256,"byte_end":14282284,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282289,"byte_end":14282292,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282297,"byte_end":14282328,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282333,"byte_end":14282378,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/     // Disable all traces from `annoying_module`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282383,"byte_end":14282436,"line_start":251,"line_end":251,"column_start":5,"column_end":58}},{"value":"/     .with_target(\"my_crate::interesting_module\", LevelFilter::OFF);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282441,"byte_end":14282512,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282517,"byte_end":14282536,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282541,"byte_end":14282548,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282553,"byte_end":14282556,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282561,"byte_end":14282605,"line_start":256,"line_end":256,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283353,"byte_end":14283365,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"with_default","qualname":"<Targets>::with_default","value":"fn with_default<impl Into<LevelFilter>>(Self, impl Into<LevelFilter>) -> Self\nwhere impl Into<LevelFilter>: Into<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Sets the default level to enable for spans and events whose targets did\n not match any of the configured prefixes.","sig":null,"attributes":[{"value":"/ Sets the default level to enable for spans and events whose targets did","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282822,"byte_end":14282897,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ not match any of the configured prefixes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282902,"byte_end":14282947,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282952,"byte_end":14282955,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ By default, this is [`LevelFilter::OFF`]. This means that spans and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14282960,"byte_end":14283031,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ events will only be enabled if they match one of the configured target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283036,"byte_end":14283110,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ prefixes. If this is changed to a different [`LevelFilter`], spans and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283115,"byte_end":14283189,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ events with targets that did not match any of the configured prefixes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283194,"byte_end":14283267,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ will be enabled if their level is at or below the provided level.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283272,"byte_end":14283341,"line_start":273,"line_end":273,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284315,"byte_end":14284319,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"iter","qualname":"<Targets>::iter","value":"fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [target]-[`LevelFilter`] pairs in this filter.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [target]-[`LevelFilter`] pairs in this filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283536,"byte_end":14283615,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283620,"byte_end":14283623,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The order of iteration is undefined.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283628,"byte_end":14283668,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283673,"byte_end":14283676,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283681,"byte_end":14283695,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283700,"byte_end":14283703,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283708,"byte_end":14283715,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283720,"byte_end":14283779,"line_start":287,"line_end":287,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283784,"byte_end":14283812,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283817,"byte_end":14283820,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283825,"byte_end":14283856,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283861,"byte_end":14283906,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283911,"byte_end":14283978,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283983,"byte_end":14283986,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mut targets: Vec<_> = filter.iter().collect();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14283991,"byte_end":14284045,"line_start":294,"line_end":294,"column_start":5,"column_end":59}},{"value":"/ targets.sort();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284050,"byte_end":14284069,"line_start":295,"line_end":295,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284074,"byte_end":14284077,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(targets, vec![","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284082,"byte_end":14284111,"line_start":297,"line_end":297,"column_start":5,"column_end":34}},{"value":"/     (\"my_crate\", LevelFilter::INFO),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284116,"byte_end":14284156,"line_start":298,"line_end":298,"column_start":5,"column_end":45}},{"value":"/     (\"my_crate::interesting_module\", LevelFilter::DEBUG),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284161,"byte_end":14284222,"line_start":299,"line_end":299,"column_start":5,"column_end":66}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284227,"byte_end":14284234,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284239,"byte_end":14284246,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284251,"byte_end":14284254,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284259,"byte_end":14284303,"line_start":303,"line_end":303,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285477,"byte_end":14285489,"line_start":340,"line_end":340,"column_start":12,"column_end":24},"name":"would_enable","qualname":"<Targets>::would_enable","value":"fn would_enable(&Self, &str, &Level) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether a [target]-[`Level`] pair would be enabled\n by this `Targets`.","sig":null,"attributes":[{"value":"/ Returns whether a [target]-[`Level`] pair would be enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284601,"byte_end":14284663,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/ by this `Targets`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284668,"byte_end":14284690,"line_start":318,"line_end":318,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284695,"byte_end":14284698,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This method can be used with [`module_path!`] from `std` as the target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284703,"byte_end":14284777,"line_start":320,"line_end":320,"column_start":5,"column_end":79}},{"value":"/ in order to emulate the behavior of the [`tracing::event!`] and [`tracing::span!`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284782,"byte_end":14284868,"line_start":321,"line_end":321,"column_start":5,"column_end":91}},{"value":"/ macros.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284873,"byte_end":14284884,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284889,"byte_end":14284892,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284897,"byte_end":14284911,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284916,"byte_end":14284919,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284924,"byte_end":14284931,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::filter::{Targets, LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14284936,"byte_end":14284995,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285000,"byte_end":14285028,"line_start":328,"line_end":328,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285033,"byte_end":14285036,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let filter = Targets::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285041,"byte_end":14285072,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/     .with_target(\"my_crate\", Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285077,"byte_end":14285122,"line_start":331,"line_end":331,"column_start":5,"column_end":50}},{"value":"/     .with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285127,"byte_end":14285194,"line_start":332,"line_end":332,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285199,"byte_end":14285202,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert!(filter.would_enable(\"my_crate\", &Level::INFO));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285207,"byte_end":14285266,"line_start":334,"line_end":334,"column_start":5,"column_end":64}},{"value":"/ assert!(!filter.would_enable(\"my_crate::interesting_module\", &Level::TRACE));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285271,"byte_end":14285352,"line_start":335,"line_end":335,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285357,"byte_end":14285364,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285369,"byte_end":14285372,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285377,"byte_end":14285421,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/ [`module_path!`]: std::module_path!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285426,"byte_end":14285465,"line_start":339,"line_end":339,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285797,"byte_end":14285803,"line_start":352,"line_end":352,"column_start":8,"column_end":14},"name":"extend","qualname":"<Targets as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = (T, L)>","parent":{"krate":2,"index":8007},"children":[],"decl_id":{"krate":2,"index":8009},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286162,"byte_end":14286171,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Targets as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = (T, L)>","parent":{"krate":2,"index":7994},"children":[],"decl_id":{"krate":2,"index":7996},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286373,"byte_end":14286381,"line_start":374,"line_end":374,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Targets as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12561},"children":[],"decl_id":{"krate":2,"index":12563},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286626,"byte_end":14286633,"line_start":386,"line_end":386,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Targets as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, layer::Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286749,"byte_end":14286766,"line_start":390,"line_end":390,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Targets as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286874,"byte_end":14286888,"line_start":394,"line_end":394,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Targets as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287088,"byte_end":14287095,"line_start":402,"line_end":402,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Targets as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &layer::Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287212,"byte_end":14287228,"line_start":406,"line_end":406,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<Targets as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287336,"byte_end":14287350,"line_start":410,"line_end":410,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Targets as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287533,"byte_end":14287542,"line_start":420,"line_end":420,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Targets as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287725,"byte_end":14287734,"line_start":430,"line_end":430,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Targets as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288470,"byte_end":14288478,"line_start":457,"line_end":457,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::filter::targets::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owning iterator over the [target]-[level] pairs of a `Targets` filter.","sig":null,"attributes":[{"value":"/ An owning iterator over the [target]-[level] pairs of a `Targets` filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287794,"byte_end":14287871,"line_start":435,"line_end":435,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287872,"byte_end":14287875,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `IntoIterator` trait implementation of [`Targets`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287876,"byte_end":14287961,"line_start":437,"line_end":437,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287962,"byte_end":14287965,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287966,"byte_end":14287980,"line_start":439,"line_end":439,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287981,"byte_end":14287984,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ Merge the targets from one `Targets` with another:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287985,"byte_end":14288039,"line_start":441,"line_end":441,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288040,"byte_end":14288043,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288044,"byte_end":14288051,"line_start":443,"line_end":443,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::filter::Targets;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288052,"byte_end":14288096,"line_start":444,"line_end":444,"column_start":1,"column_end":45}},{"value":"/ use tracing_core::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288097,"byte_end":14288125,"line_start":445,"line_end":445,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288126,"byte_end":14288129,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ let mut filter = Targets::new().with_target(\"my_crate\", Level::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288130,"byte_end":14288203,"line_start":447,"line_end":447,"column_start":1,"column_end":74}},{"value":"/ let overrides = Targets::new().with_target(\"my_crate::interesting_module\", Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288204,"byte_end":14288297,"line_start":448,"line_end":448,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288298,"byte_end":14288301,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ filter.extend(overrides);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288302,"byte_end":14288331,"line_start":450,"line_end":450,"column_start":1,"column_end":30}},{"value":"/ # drop(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288332,"byte_end":14288351,"line_start":451,"line_end":451,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288352,"byte_end":14288359,"line_start":452,"line_end":452,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288360,"byte_end":14288363,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288364,"byte_end":14288408,"line_start":454,"line_end":454,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288409,"byte_end":14288441,"line_start":455,"line_end":455,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289046,"byte_end":14289050,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289122,"byte_end":14289131,"line_start":481,"line_end":481,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8196},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289549,"byte_end":14289553,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"Iter","qualname":"::filter::targets::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A borrowing iterator over the [target]-[level] pairs of a `Targets` filter.","sig":null,"attributes":[{"value":"/ A borrowing iterator over the [target]-[level] pairs of a `Targets` filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289203,"byte_end":14289282,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289283,"byte_end":14289286,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ This struct is created by [`iter`] method of [`Targets`], or from the `IntoIterator`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289287,"byte_end":14289375,"line_start":488,"line_end":488,"column_start":1,"column_end":89}},{"value":"/ implementation for `&Targets`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289376,"byte_end":14289410,"line_start":489,"line_end":489,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289411,"byte_end":14289414,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289415,"byte_end":14289459,"line_start":491,"line_end":491,"column_start":1,"column_end":45}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289460,"byte_end":14289492,"line_start":492,"line_end":492,"column_start":1,"column_end":33}},{"value":"/ [`iter`]: Targets::iter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289493,"byte_end":14289520,"line_start":493,"line_end":493,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14290045,"byte_end":14290049,"line_start":516,"line_end":516,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14290121,"byte_end":14290130,"line_start":520,"line_end":520,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8196},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14296724,"byte_end":14296734,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::filter::directive::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":2102}],"decl_id":null,"docs":" Indicates that a string could not be parsed as a filtering directive.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed as a filtering directive.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14296622,"byte_end":14296695,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14308588,"byte_end":14308591,"line_start":415,"line_end":415,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309110,"byte_end":14309121,"line_start":428,"line_end":428,"column_start":8,"column_end":19},"name":"description","qualname":"<ParseError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309188,"byte_end":14309194,"line_start":432,"line_end":432,"column_start":8,"column_end":14},"name":"source","qualname":"<ParseError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309556,"byte_end":14309560,"line_start":443,"line_end":443,"column_start":8,"column_end":12},"name":"from","qualname":"<ParseError as std::convert::From>::from","value":"fn from(Box<dyn std::error::Error + Send + Sync>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309747,"byte_end":14309751,"line_start":451,"line_end":451,"column_start":8,"column_end":12},"name":"from","qualname":"<ParseError as std::convert::From>::from","value":"fn from(level::ParseError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":2148}],"decl_id":null,"docs":" The `tracing-subscriber` prelude.","sig":null,"attributes":[{"value":"/ The `tracing-subscriber` prelude.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58303,"byte_end":58340,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58341,"byte_end":58344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This brings into scope a number of extension traits that define methods on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58345,"byte_end":58423,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ types defined here and in other crates.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\prelude.rs","byte_start":58424,"byte_end":58467,"line_start":4,"line_end":4,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":2151},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2250},{"krate":0,"index":2415},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":407},{"krate":0,"index":413},{"krate":0,"index":2473},{"krate":0,"index":2479},{"krate":0,"index":2483},{"krate":0,"index":2489},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2500},{"krate":0,"index":2504},{"krate":0,"index":2508},{"krate":0,"index":2514},{"krate":0,"index":2520},{"krate":0,"index":421},{"krate":0,"index":426}],"decl_id":null,"docs":" Storage for span data shared by multiple [`Layer`]s.","sig":null,"attributes":[{"value":"/ Storage for span data shared by multiple [`Layer`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":58888,"byte_end":58944,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":58945,"byte_end":58948,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Using the Span Registry","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":58949,"byte_end":58979,"line_start":3,"line_end":3,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":58980,"byte_end":58983,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides the [`Registry`] type, a [`Subscriber`] implementation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":58984,"byte_end":59063,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ which tracks per-span data and exposes it to [`Layer`]s. When a `Registry`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59064,"byte_end":59142,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ is used as the base `Subscriber` of a `Layer` stack, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59143,"byte_end":59203,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ [`layer::Context`][ctx] type will provide methods allowing `Layer`s to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59204,"byte_end":59278,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ [look up span data][lookup] stored in the registry. While [`Registry`] is a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59279,"byte_end":59358,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reasonable default for storing spans and events, other stores that implement","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59359,"byte_end":59439,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ [`LookupSpan`] and [`Subscriber`] themselves (with [`SpanData`] implemented","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59440,"byte_end":59519,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ by the per-span data they store) can be used as a drop-in replacement.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59520,"byte_end":59594,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59595,"byte_end":59598,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ For example, we might create a `Registry` and add multiple `Layer`s like so:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59599,"byte_end":59679,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59680,"byte_end":59691,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{registry::Registry, Layer, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59692,"byte_end":59760,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59761,"byte_end":59796,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ # pub struct FooLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59797,"byte_end":59825,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # pub struct BarLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59826,"byte_end":59854,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ # impl<S: Subscriber> Layer<S> for FooLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59855,"byte_end":59905,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ # impl<S: Subscriber> Layer<S> for BarLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59906,"byte_end":59956,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # impl FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59957,"byte_end":59978,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":59979,"byte_end":60013,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60014,"byte_end":60021,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # impl BarLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60022,"byte_end":60043,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60044,"byte_end":60078,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60079,"byte_end":60086,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60087,"byte_end":60090,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60091,"byte_end":60131,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/     .with(FooLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60132,"byte_end":60162,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     .with(BarLayer::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60163,"byte_end":60194,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60195,"byte_end":60202,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60203,"byte_end":60206,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If a type implementing `Layer` depends on the functionality of a `Registry`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60207,"byte_end":60286,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ implementation, it should bound its `Subscriber` type parameter with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60287,"byte_end":60363,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`LookupSpan`] trait, like so:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60364,"byte_end":60398,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60399,"byte_end":60402,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60403,"byte_end":60414,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{registry, Layer};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60415,"byte_end":60461,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ use tracing_core::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60462,"byte_end":60495,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60496,"byte_end":60499,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60500,"byte_end":60524,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60525,"byte_end":60539,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60540,"byte_end":60545,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60546,"byte_end":60549,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for MyLayer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60550,"byte_end":60582,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60583,"byte_end":60592,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> registry::LookupSpan<'a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60593,"byte_end":60650,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60651,"byte_end":60656,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60657,"byte_end":60671,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60672,"byte_end":60677,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60678,"byte_end":60685,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ When this bound is added, the `Layer` implementation will be guaranteed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60686,"byte_end":60761,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ access to the [`Context`][ctx] methods, such as [`Context::span`][lookup], that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60762,"byte_end":60845,"line_start":54,"line_end":54,"column_start":1,"column_end":84}},{"value":"/ require the root subscriber to be a registry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60846,"byte_end":60895,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60896,"byte_end":60899,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60900,"byte_end":60934,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60935,"byte_end":60979,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ [ctx]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":60980,"byte_end":61012,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ [lookup]: crate::layer::Context::span()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61013,"byte_end":61056,"line_start":60,"line_end":60,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310895,"byte_end":14310905,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Extensions","qualname":"::registry::extensions::Extensions","value":"Extensions {  }","parent":null,"children":[{"krate":0,"index":2236}],"decl_id":null,"docs":" An immutable, read-only reference to a Span's extensions.\n","sig":null,"attributes":[{"value":"/ An immutable, read-only reference to a Span's extensions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310758,"byte_end":14310819,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311218,"byte_end":14311221,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"get","qualname":"<Extensions>::get","value":"fn get<T>(&Self) -> Option<&T> where T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows a type previously inserted into this `Extensions`.\n","sig":null,"attributes":[{"value":"/ Immutably borrows a type previously inserted into this `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311134,"byte_end":14311206,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311420,"byte_end":14311433,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"ExtensionsMut","qualname":"::registry::extensions::ExtensionsMut","value":"ExtensionsMut {  }","parent":null,"children":[{"krate":0,"index":2242}],"decl_id":null,"docs":" An mutable reference to a Span's extensions.\n","sig":null,"attributes":[{"value":"/ An mutable reference to a Span's extensions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311296,"byte_end":14311344,"line_start":55,"line_end":55,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312575,"byte_end":14312581,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"insert","qualname":"<ExtensionsMut>::insert","value":"fn insert<T>(&mut Self, T) where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Insert a type into this `Extensions`.","sig":null,"attributes":[{"value":"/ Insert a type into this `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311667,"byte_end":14311708,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311713,"byte_end":14311716,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that extensions are _not_","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311721,"byte_end":14311755,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/ `Layer`-specific—they are _span_-specific. This means that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311760,"byte_end":14311824,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ other layers can access and mutate extensions that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311829,"byte_end":14311883,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/ a different Layer recorded. For example, an application might","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311888,"byte_end":14311953,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ have a layer that records execution timings, alongside a layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311958,"byte_end":14312024,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"/ that reports spans and events to a distributed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312029,"byte_end":14312079,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ tracing system that requires timestamps for spans.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312084,"byte_end":14312138,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/ Ideally, if one layer records a timestamp _x_, the other layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312143,"byte_end":14312209,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/ should be able to reuse timestamp _x_.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312214,"byte_end":14312256,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312261,"byte_end":14312264,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Therefore, extensions should generally be newtypes, rather than common","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312269,"byte_end":14312343,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ types like [`String`](std::string::String), to avoid accidental","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312348,"byte_end":14312415,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/ cross-`Layer` clobbering.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312420,"byte_end":14312449,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312454,"byte_end":14312457,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ## Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312462,"byte_end":14312475,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312480,"byte_end":14312483,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If `T` is already present in `Extensions`, then this method will panic.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312488,"byte_end":14312563,"line_start":86,"line_end":86,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312819,"byte_end":14312826,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"replace","qualname":"<ExtensionsMut>::replace","value":"fn replace<T>(&mut Self, T) -> Option<T> where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replaces an existing `T` into this extensions.","sig":null,"attributes":[{"value":"/ Replaces an existing `T` into this extensions.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312685,"byte_end":14312735,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312740,"byte_end":14312743,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If `T` is not present, `Option::None` will be returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312748,"byte_end":14312807,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313023,"byte_end":14313030,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ExtensionsMut>::get_mut","value":"fn get_mut<T>(&mut Self) -> Option<&mut T> where T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this `ExtensionsMut`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this `ExtensionsMut`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14312929,"byte_end":14313011,"line_start":98,"line_end":98,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313246,"byte_end":14313252,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"remove","qualname":"<ExtensionsMut>::remove","value":"fn remove<T>(&mut Self) -> Option<T> where T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Remove a type from this `Extensions`.","sig":null,"attributes":[{"value":"/ Remove a type from this `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313119,"byte_end":14313160,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313165,"byte_end":14313168,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If a extension of this type existed, it will be returned.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313173,"byte_end":14313234,"line_start":105,"line_end":105,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322755,"byte_end":14322763,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::sharded::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"decl_id":null,"docs":" A shared, reusable store for spans.","sig":null,"attributes":[{"value":"/ A shared, reusable store for spans.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14318881,"byte_end":14318920,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14318921,"byte_end":14318924,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `Registry` is a [`Subscriber`] around which multiple [`Layer`]s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14318925,"byte_end":14318994,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ implementing various behaviors may be [added]. Unlike other types","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14318995,"byte_end":14319064,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ implementing `Subscriber`, `Registry` does not actually record traces itself:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319065,"byte_end":14319146,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ instead, it collects and stores span data that is exposed to any [`Layer`]s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319147,"byte_end":14319226,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ wrapping it through implementations of the [`LookupSpan`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319227,"byte_end":14319295,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ The `Registry` is responsible for storing span metadata, recording","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319296,"byte_end":14319366,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ relationships between spans, and tracking which spans are active and which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319367,"byte_end":14319445,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ are closed. In addition, it provides a mechanism for [`Layer`]s to store","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319446,"byte_end":14319522,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ user-defined per-span data, called [extensions], in the registry. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319523,"byte_end":14319597,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ allows [`Layer`]-specific data to benefit from the `Registry`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319598,"byte_end":14319665,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ high-performance concurrent storage.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319666,"byte_end":14319706,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319707,"byte_end":14319710,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This registry is implemented using a [lock-free sharded slab][slab], and is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319711,"byte_end":14319790,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ highly optimized for concurrent access.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319791,"byte_end":14319834,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319835,"byte_end":14319838,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Span ID Generation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319839,"byte_end":14319863,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319864,"byte_end":14319867,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Span IDs are not globally unique, but the registry ensures that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319868,"byte_end":14319935,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ no two currently active spans have the same ID within a process.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14319936,"byte_end":14320004,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320005,"byte_end":14320008,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ One of the primary responsibilities of the registry is to generate [span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320009,"byte_end":14320085,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ IDs]. Therefore, it's important for other code that interacts with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320086,"byte_end":14320160,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ registry, such as [`Layer`]s, to understand the guarantees of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320161,"byte_end":14320230,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ span IDs that are generated.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320231,"byte_end":14320263,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320264,"byte_end":14320267,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The registry's span IDs are guaranteed to be unique **at a given point","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320268,"byte_end":14320342,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ in time**. This means that an active span will never be assigned the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320343,"byte_end":14320415,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ same ID as another **currently active** span. However, the registry","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320416,"byte_end":14320487,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ **will** eventually reuse the IDs of [closed] spans, although an ID","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320488,"byte_end":14320559,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ will never be reassigned immediately after a span has closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320560,"byte_end":14320625,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320626,"byte_end":14320629,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Spans are not [considered closed] by the `Registry` until *every*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320630,"byte_end":14320699,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ [`Span`] reference with that ID has been dropped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320700,"byte_end":14320753,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320754,"byte_end":14320757,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Thus: span IDs generated by the registry should be considered unique","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320758,"byte_end":14320830,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ only at a given point in time, and only relative to other spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320831,"byte_end":14320898,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"/ generated by the same process. Two spans with the same ID will not exist","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320899,"byte_end":14320975,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ in the same process concurrently. However, if historical span data is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14320976,"byte_end":14321049,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ being stored, the same ID may occur for multiple spans times in that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321050,"byte_end":14321122,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ data. If spans must be uniquely identified in historical data, the user","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321123,"byte_end":14321198,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ code storing this data must assign its own unique identifiers to those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321199,"byte_end":14321273,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ spans. A counter is generally sufficient for this.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321274,"byte_end":14321328,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321329,"byte_end":14321332,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Similarly, span IDs generated by the registry are not unique outside of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321333,"byte_end":14321408,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ a given process. Distributed tracing systems may require identifiers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321409,"byte_end":14321481,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ that are unique across multiple processes on multiple machines (for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321482,"byte_end":14321553,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ example, [OpenTelemetry's `SpanId`s and `TraceId`s][ot]). `tracing` span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321554,"byte_end":14321630,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ IDs generated by the registry should **not** be used for this purpose.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321631,"byte_end":14321705,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ Instead, code which integrates with a distributed tracing system should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321706,"byte_end":14321781,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ generate and propagate its own IDs according to the rules specified by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321782,"byte_end":14321856,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ the distributed tracing system. These IDs can be associated with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321857,"byte_end":14321925,"line_start":75,"line_end":75,"column_start":1,"column_end":69}},{"value":"/ `tracing` spans using [fields] and/or [stored span data].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321926,"byte_end":14321987,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321988,"byte_end":14321991,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [span IDs]: tracing_core::span::Id","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14321992,"byte_end":14322030,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ [slab]: sharded_slab","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322031,"byte_end":14322055,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322056,"byte_end":14322083,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/ [added]: crate::layer::Layer#composing-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322084,"byte_end":14322133,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/ [extensions]: super::Extensions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322134,"byte_end":14322169,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/ [closed]: https://docs.rs/tracing/latest/tracing/span/index.html#closing-spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322170,"byte_end":14322252,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ [considered closed]: tracing_core::subscriber::Subscriber::try_close()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322253,"byte_end":14322327,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/ [`Span`]: https://docs.rs/tracing/latest/tracing/span/struct.Span.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322328,"byte_end":14322402,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ [ot]: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#spancontext","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322403,"byte_end":14322523,"line_start":86,"line_end":86,"column_start":1,"column_end":121}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322524,"byte_end":14322557,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ [stored span data]: crate::registry::SpanData::extensions_mut","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322558,"byte_end":14322623,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322624,"byte_end":14322652,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323396,"byte_end":14323400,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Data","qualname":"::registry::sharded::Data","value":"Data {  }","parent":null,"children":[{"krate":0,"index":2445}],"decl_id":null,"docs":" Span data stored in a [`Registry`].","sig":null,"attributes":[{"value":"/ Span data stored in a [`Registry`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322873,"byte_end":14322912,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322913,"byte_end":14322916,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The registry stores well-known data defined by tracing: span relationships,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322917,"byte_end":14322996,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ metadata and reference counts. Additional user-defined data provided by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14322997,"byte_end":14323072,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ [`Layer`s], such as formatted fields, metrics, or distributed traces should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323073,"byte_end":14323152,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ be stored in the [extensions] typemap.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323153,"byte_end":14323195,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323196,"byte_end":14323199,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Layer`s]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323200,"byte_end":14323235,"line_start":105,"line_end":105,"column_start":1,"column_end":36}},{"value":"/ [extensions]: Extensions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323236,"byte_end":14323264,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14323265,"byte_end":14323293,"line_start":107,"line_end":107,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14324228,"byte_end":14324235,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"default","qualname":"<Registry as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14326927,"byte_end":14326944,"line_start":221,"line_end":221,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Registry as tracing_core::Subscriber>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14327173,"byte_end":14327180,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Registry as tracing_core::Subscriber>::enabled","value":"fn enabled(&Self, &Metadata) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":830},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14327358,"byte_end":14327366,"line_start":237,"line_end":237,"column_start":8,"column_end":16},"name":"new_span","qualname":"<Registry as tracing_core::Subscriber>::new_span","value":"fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":832},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14327341,"byte_end":14327350,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328835,"byte_end":14328841,"line_start":274,"line_end":274,"column_start":8,"column_end":14},"name":"record","qualname":"<Registry as tracing_core::Subscriber>::record","value":"fn record(&Self, &span::Id, &span::Record)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":833},"docs":" This is intentionally not implemented, as recording fields\n on a span is the responsibility of layers atop of this registry.\n","sig":null,"attributes":[{"value":"/ This is intentionally not implemented, as recording fields","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328678,"byte_end":14328740,"line_start":271,"line_end":271,"column_start":5,"column_end":67}},{"value":"/ on a span is the responsibility of layers atop of this registry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328745,"byte_end":14328813,"line_start":272,"line_end":272,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328818,"byte_end":14328827,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328896,"byte_end":14328915,"line_start":276,"line_end":276,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<Registry as tracing_core::Subscriber>::record_follows_from","value":"fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":834},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14329103,"byte_end":14329108,"line_start":280,"line_end":280,"column_start":8,"column_end":13},"name":"event","qualname":"<Registry as tracing_core::Subscriber>::event","value":"fn event(&Self, &Event)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":836},"docs":" This is intentionally not implemented, as recording events\n is the responsibility of layers atop of this registry.\n","sig":null,"attributes":[{"value":"/ This is intentionally not implemented, as recording events","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14328970,"byte_end":14329032,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"/ is the responsibility of layers atop of this registry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14329037,"byte_end":14329095,"line_start":279,"line_end":279,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2375},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14329142,"byte_end":14329147,"line_start":282,"line_end":282,"column_start":8,"column_end":13},"name":"enter","qualname":"<Registry as tracing_core::Subscriber>::enter","value":"fn enter(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":837},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14329368,"byte_end":14329372,"line_start":293,"line_end":293,"column_start":8,"column_end":12},"name":"exit","qualname":"<Registry as tracing_core::Subscriber>::exit","value":"fn exit(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14329619,"byte_end":14329629,"line_start":301,"line_end":301,"column_start":8,"column_end":18},"name":"clone_span","qualname":"<Registry as tracing_core::Subscriber>::clone_span","value":"fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14330594,"byte_end":14330606,"line_start":323,"line_end":323,"column_start":8,"column_end":20},"name":"current_span","qualname":"<Registry as tracing_core::Subscriber>::current_span","value":"fn current_span(&Self) -> Current","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":842},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331167,"byte_end":14331176,"line_start":339,"line_end":339,"column_start":8,"column_end":17},"name":"try_close","qualname":"<Registry as tracing_core::Subscriber>::try_close","value":"fn try_close(&Self, span::Id) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":841},"docs":" Decrements the reference count of the span with the given `id`, and\n removes the span if it is zero.","sig":null,"attributes":[{"value":"/ Decrements the reference count of the span with the given `id`, and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14330965,"byte_end":14331036,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/ removes the span if it is zero.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331041,"byte_end":14331076,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331081,"byte_end":14331084,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The allocated span slot will be reused when a new span is created.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331089,"byte_end":14331159,"line_start":338,"line_end":338,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332034,"byte_end":14332043,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"span_data","qualname":"<Registry as registry::LookupSpan>::span_data","value":"fn span_data(&'a Self, &Id) -> Option<Self::Data>","parent":{"krate":0,"index":407},"children":[],"decl_id":{"krate":0,"index":410},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332165,"byte_end":14332180,"line_start":370,"line_end":370,"column_start":8,"column_end":23},"name":"register_filter","qualname":"<Registry as registry::LookupSpan>::register_filter","value":"fn register_filter(&mut Self) -> FilterId","parent":{"krate":0,"index":407},"children":[],"decl_id":{"krate":0,"index":412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333560,"byte_end":14333562,"line_start":413,"line_end":413,"column_start":8,"column_end":10},"name":"id","qualname":"<Data as registry::SpanData>::id","value":"fn id(&Self) -> Id","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":415},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333628,"byte_end":14333636,"line_start":417,"line_end":417,"column_start":8,"column_end":16},"name":"metadata","qualname":"<Data as registry::SpanData>::metadata","value":"fn metadata(&Self) -> &'static Metadata","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":416},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333721,"byte_end":14333727,"line_start":421,"line_end":421,"column_start":8,"column_end":14},"name":"parent","qualname":"<Data as registry::SpanData>::parent","value":"fn parent(&Self) -> Option<&Id>","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":417},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333801,"byte_end":14333811,"line_start":425,"line_end":425,"column_start":8,"column_end":18},"name":"extensions","qualname":"<Data as registry::SpanData>::extensions","value":"fn extensions(&Self) -> Extensions","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":418},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333932,"byte_end":14333946,"line_start":429,"line_end":429,"column_start":8,"column_end":22},"name":"extensions_mut","qualname":"<Data as registry::SpanData>::extensions_mut","value":"fn extensions_mut(&Self) -> ExtensionsMut","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":419},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334088,"byte_end":14334102,"line_start":434,"line_end":434,"column_start":8,"column_end":22},"name":"is_enabled_for","qualname":"<Data as registry::SpanData>::is_enabled_for","value":"fn is_enabled_for(&Self, FilterId) -> bool","parent":{"krate":0,"index":413},"children":[],"decl_id":{"krate":0,"index":420},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334071,"byte_end":14334080,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61868,"byte_end":61878,"line_start":92,"line_end":92,"column_start":11,"column_end":21},"name":"LookupSpan","qualname":"::registry::LookupSpan","value":"LookupSpan<'a>","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" Provides access to stored span data.","sig":null,"attributes":[{"value":"/ Provides access to stored span data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61477,"byte_end":61517,"line_start":83,"line_end":83,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61518,"byte_end":61521,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Subscribers which store span data and associate it with span IDs should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61522,"byte_end":61597,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ implement this trait; if they do, any [`Layer`]s wrapping them can look up","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61598,"byte_end":61676,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ metadata via the [`Context`] type's [`span()`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61677,"byte_end":61735,"line_start":87,"line_end":87,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61736,"byte_end":61739,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61740,"byte_end":61774,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ [`Context`]: super::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61775,"byte_end":61813,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"/ [`span()`]: super::layer::Context::span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61814,"byte_end":61857,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61949,"byte_end":61953,"line_start":94,"line_end":94,"column_start":10,"column_end":14},"name":"Data","qualname":"::registry::LookupSpan::Data","value":"type Data: SpanData<'a>;","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The type of span data stored in this registry.\n","sig":null,"attributes":[{"value":"/ The type of span data stored in this registry.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61889,"byte_end":61939,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62524,"byte_end":62533,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"span_data","qualname":"::registry::LookupSpan::span_data","value":"fn span_data(&'a Self, &Id) -> Option<Self::Data>","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Returns the [`SpanData`] for a given `Id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns the [`SpanData`] for a given `Id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":61974,"byte_end":62034,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62039,"byte_end":62042,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62047,"byte_end":62112,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: users of the <code>LookupSpan</code> trait should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62117,"byte_end":62193,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ typically call the <a href=\"#method.span\"><code>span</code></a> method rather","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62198,"byte_end":62279,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/ than this method. The <code>span</code> method is implemented by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62284,"byte_end":62352,"line_start":101,"line_end":101,"column_start":5,"column_end":73}},{"value":"/ <em>calling</em> <code>span_data</code>, but returns a reference which is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62357,"byte_end":62434,"line_start":102,"line_end":102,"column_start":5,"column_end":82}},{"value":"/ capable of performing more sophisiticated queries.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62439,"byte_end":62493,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62498,"byte_end":62508,"line_start":104,"line_end":104,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62513,"byte_end":62516,"line_start":105,"line_end":105,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63086,"byte_end":63090,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"span","qualname":"::registry::LookupSpan::span","value":"fn span(&'a Self, &Id) -> Option<SpanRef<, Self>> where Self: Sized","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Returns a [`SpanRef`] for the span with the given `Id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns a [`SpanRef`] for the span with the given `Id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62581,"byte_end":62654,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62659,"byte_end":62662,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ A `SpanRef` is similar to [`SpanData`], but it allows performing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62667,"byte_end":62735,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ additional lookups against the registryr that stores the wrapped data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62740,"byte_end":62814,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62819,"byte_end":62822,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ In general, _users_ of the `LookupSpan` trait should use this method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62827,"byte_end":62899,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ rather than the [`span_data`] method; while _implementors_ of this trait","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62904,"byte_end":62980,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ should only implement `span_data`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":62985,"byte_end":63023,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63028,"byte_end":63031,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`span_data`]: LookupSpan::span_data()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63036,"byte_end":63078,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64057,"byte_end":64072,"line_start":148,"line_end":148,"column_start":8,"column_end":23},"name":"register_filter","qualname":"::registry::LookupSpan::register_filter","value":"fn register_filter(&mut Self) -> FilterId","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" Registers a [`Filter`] for [per-layer filtering] with this\n [`Subscriber`].","sig":null,"attributes":[{"value":"/ Registers a [`Filter`] for [per-layer filtering] with this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63386,"byte_end":63448,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63453,"byte_end":63472,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63477,"byte_end":63480,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`Filter`] can then use the returned [`FilterId`] to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63485,"byte_end":63545,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/ [check if it previously enabled a span][check].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63550,"byte_end":63601,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63606,"byte_end":63609,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63614,"byte_end":63626,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63631,"byte_end":63634,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If this `Subscriber` does not support [per-layer filtering].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63639,"byte_end":63703,"line_start":139,"line_end":139,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63708,"byte_end":63711,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63716,"byte_end":63752,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ [per-layer filtering]: crate::layer::Layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63757,"byte_end":63823,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63828,"byte_end":63872,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63877,"byte_end":63918,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/ [check]: SpanData::is_enabled_for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63923,"byte_end":63960,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":63965,"byte_end":63993,"line_start":146,"line_end":146,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64298,"byte_end":64306,"line_start":157,"line_end":157,"column_start":11,"column_end":19},"name":"SpanData","qualname":"::registry::SpanData","value":"SpanData<'a>","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" A stored representation of data associated with a span.\n","sig":null,"attributes":[{"value":"/ A stored representation of data associated with a span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64228,"byte_end":64287,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64352,"byte_end":64354,"line_start":159,"line_end":159,"column_start":8,"column_end":10},"name":"id","qualname":"::registry::SpanData::id","value":"fn id(&Self) -> Id","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns this span's ID.\n","sig":null,"attributes":[{"value":"/ Returns this span's ID.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64317,"byte_end":64344,"line_start":158,"line_end":158,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64431,"byte_end":64439,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"metadata","qualname":"::registry::SpanData::metadata","value":"fn metadata(&Self) -> &'static Metadata","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to the span's `Metadata`.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the span's `Metadata`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64374,"byte_end":64423,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64524,"byte_end":64530,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"parent","qualname":"::registry::SpanData::parent","value":"fn parent(&Self) -> Option<&Id>","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to the ID\n","sig":null,"attributes":[{"value":"/ Returns a reference to the ID","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64483,"byte_end":64516,"line_start":164,"line_end":164,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64807,"byte_end":64817,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"extensions","qualname":"::registry::SpanData::extensions","value":"fn extensions(&Self) -> Extensions","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a reference to this span's `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64559,"byte_end":64611,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64616,"byte_end":64619,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64624,"byte_end":64691,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64696,"byte_end":64720,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64725,"byte_end":64748,"line_start":171,"line_end":171,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65105,"byte_end":65119,"line_start":181,"line_end":181,"column_start":8,"column_end":22},"name":"extensions_mut","qualname":"::registry::SpanData::extensions_mut","value":"fn extensions_mut(&Self) -> ExtensionsMut","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns a mutable reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to this span's `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64849,"byte_end":64909,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64914,"byte_end":64917,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64922,"byte_end":64989,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":64994,"byte_end":65018,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65023,"byte_end":65046,"line_start":179,"line_end":179,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65695,"byte_end":65709,"line_start":195,"line_end":195,"column_start":8,"column_end":22},"name":"is_enabled_for","qualname":"::registry::SpanData::is_enabled_for","value":"fn is_enabled_for(&Self, FilterId) -> bool","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Returns `true` if this span is enabled for the [per-layer filter][plf]\n corresponding to the provided [`FilterId`].","sig":null,"attributes":[{"value":"/ Returns `true` if this span is enabled for the [per-layer filter][plf]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65154,"byte_end":65228,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ corresponding to the provided [`FilterId`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65233,"byte_end":65280,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65285,"byte_end":65288,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ## Default Implementation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65293,"byte_end":65322,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65327,"byte_end":65330,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ By default, this method assumes that the [`LookupSpan`] implementation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65335,"byte_end":65409,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ does not support [per-layer filtering][plf], and always returns `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65414,"byte_end":65489,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65494,"byte_end":65497,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [plf]: crate::layer::Layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65502,"byte_end":65552,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65557,"byte_end":65598,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"registry\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65603,"byte_end":65631,"line_start":193,"line_end":193,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66113,"byte_end":66120,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"SpanRef","qualname":"::registry::SpanRef","value":"SpanRef {  }","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478}],"decl_id":null,"docs":" A reference to [span data] and the associated [registry].","sig":null,"attributes":[{"value":"/ A reference to [span data] and the associated [registry].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65791,"byte_end":65852,"line_start":201,"line_end":201,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65853,"byte_end":65856,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ This type implements all the same methods as [`SpanData`][span data], and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65857,"byte_end":65934,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ provides additional methods for querying the registry based on values from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":65935,"byte_end":66013,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66014,"byte_end":66027,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66028,"byte_end":66031,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [span data]: SpanData","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66032,"byte_end":66057,"line_start":207,"line_end":207,"column_start":1,"column_end":26}},{"value":"/ [registry]: LookupSpan","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66058,"byte_end":66084,"line_start":208,"line_end":208,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66403,"byte_end":66408,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"Scope","qualname":"::registry::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488}],"decl_id":null,"docs":" An iterator over the parents of a span, ordered from leaf to root.","sig":null,"attributes":[{"value":"/ An iterator over the parents of a span, ordered from leaf to root.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66245,"byte_end":66315,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66316,"byte_end":66319,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`SpanRef::scope`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66320,"byte_end":66374,"line_start":220,"line_end":220,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":66860,"byte_end":66873,"line_start":241,"line_end":241,"column_start":16,"column_end":29},"name":"ScopeFromRoot","qualname":"::registry::ScopeFromRoot","value":"ScopeFromRoot {  }","parent":null,"children":[{"krate":0,"index":2503}],"decl_id":null,"docs":" An iterator over the parents of a span, ordered from root to leaf.","sig":null,"attributes":[{"value":"cfg(any(feature = \"alloc\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":67973,"byte_end":67982,"line_start":269,"line_end":269,"column_start":16,"column_end":25},"name":"from_root","qualname":"<Scope>::from_root","value":"fn from_root(Self) -> ScopeFromRoot","parent":null,"children":[],"decl_id":null,"docs":" Flips the order of the iterator, so that it is ordered from root to leaf.","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":67918,"byte_end":67957,"line_start":268,"line_end":268,"column_start":9,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68470,"byte_end":68474,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"next","qualname":"<ScopeFromRoot as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68449,"byte_end":68458,"line_start":286,"line_end":286,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68580,"byte_end":68589,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"size_hint","qualname":"<ScopeFromRoot as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8196},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68559,"byte_end":68568,"line_start":291,"line_end":291,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68783,"byte_end":68786,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"name":"fmt","qualname":"<ScopeFromRoot as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69009,"byte_end":69013,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"next","qualname":"<Scope as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69891,"byte_end":69893,"line_start":343,"line_end":343,"column_start":12,"column_end":14},"name":"id","qualname":"<SpanRef>::id","value":"fn id(&Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's ID.\n","sig":null,"attributes":[{"value":"/ Returns this span's ID.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69852,"byte_end":69879,"line_start":342,"line_end":342,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70009,"byte_end":70017,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"metadata","qualname":"<SpanRef>::metadata","value":"fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a static reference to the span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a static reference to the span's metadata.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69943,"byte_end":69997,"line_start":347,"line_end":347,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70137,"byte_end":70141,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"name","qualname":"<SpanRef>::name","value":"fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's name,\n","sig":null,"attributes":[{"value":"/ Returns the span's name,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70097,"byte_end":70125,"line_start":352,"line_end":352,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70323,"byte_end":70329,"line_start":360,"line_end":360,"column_start":12,"column_end":18},"name":"fields","qualname":"<SpanRef>::fields","value":"fn fields(&Self) -> &FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of [fields] defined by the span.","sig":null,"attributes":[{"value":"/ Returns a list of [fields] defined by the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70214,"byte_end":70265,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70270,"byte_end":70273,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70278,"byte_end":70311,"line_start":359,"line_end":359,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70529,"byte_end":70535,"line_start":366,"line_end":366,"column_start":12,"column_end":18},"name":"parent","qualname":"<SpanRef>::parent","value":"fn parent(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `SpanRef` describing this span's parent, or `None` if this\n span is the root of its trace tree.\n","sig":null,"attributes":[{"value":"/ Returns a `SpanRef` describing this span's parent, or `None` if this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70401,"byte_end":70473,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ span is the root of its trace tree.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":70478,"byte_end":70517,"line_start":365,"line_end":365,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74344,"byte_end":74349,"line_start":465,"line_end":465,"column_start":12,"column_end":17},"name":"scope","qualname":"<SpanRef>::scope","value":"fn scope(&Self) -> Scope","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all parents of this span, starting with this span,\n ordered from leaf to root.","sig":null,"attributes":[{"value":"/ Returns an iterator over all parents of this span, starting with this span,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71583,"byte_end":71662,"line_start":398,"line_end":398,"column_start":5,"column_end":84}},{"value":"/ ordered from leaf to root.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71667,"byte_end":71697,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71702,"byte_end":71705,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The iterator will first return the span, then the span's immediate parent,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71710,"byte_end":71788,"line_start":401,"line_end":401,"column_start":5,"column_end":83}},{"value":"/ followed by that span's parent, and so on, until it reaches a root span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71793,"byte_end":71869,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71874,"byte_end":71877,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71882,"byte_end":71893,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/ use tracing::{span, Subscriber};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71898,"byte_end":71934,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71939,"byte_end":71968,"line_start":406,"line_end":406,"column_start":5,"column_end":34}},{"value":"/     layer::{Context, Layer},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":71973,"byte_end":72005,"line_start":407,"line_end":407,"column_start":5,"column_end":37}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72010,"byte_end":72029,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/     registry::LookupSpan,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72034,"byte_end":72063,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72068,"byte_end":72074,"line_start":410,"line_end":410,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72079,"byte_end":72082,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ struct PrintingLayer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72087,"byte_end":72112,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72117,"byte_end":72155,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72160,"byte_end":72169,"line_start":414,"line_end":414,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72174,"byte_end":72231,"line_start":415,"line_end":415,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72236,"byte_end":72241,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/     fn on_enter(&self, id: &span::Id, ctx: Context<S>) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72246,"byte_end":72306,"line_start":417,"line_end":417,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.span(id).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72311,"byte_end":72356,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/         let scope = span.scope().map(|span| span.name()).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72361,"byte_end":72442,"line_start":419,"line_end":419,"column_start":5,"column_end":86}},{"value":"/         println!(\"Entering span: {:?}\", scope);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72447,"byte_end":72498,"line_start":420,"line_end":420,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72503,"byte_end":72512,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72517,"byte_end":72522,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72527,"byte_end":72530,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72535,"byte_end":72629,"line_start":424,"line_end":424,"column_start":5,"column_end":99}},{"value":"/     let _root = tracing::info_span!(\"root\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72634,"byte_end":72692,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72697,"byte_end":72739,"line_start":426,"line_end":426,"column_start":5,"column_end":47}},{"value":"/     let _child = tracing::info_span!(\"child\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72744,"byte_end":72804,"line_start":427,"line_end":427,"column_start":5,"column_end":65}},{"value":"/     // Prints: Entering span: [\"child\", \"root\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72809,"byte_end":72860,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/     let _leaf = tracing::info_span!(\"leaf\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72865,"byte_end":72923,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"leaf\", \"child\", \"root\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72928,"byte_end":72987,"line_start":430,"line_end":430,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":72992,"byte_end":72999,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73004,"byte_end":73011,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73016,"byte_end":73019,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ If the opposite order (from the root to this span) is desired, calling [`Scope::from_root`] on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73024,"byte_end":73122,"line_start":434,"line_end":434,"column_start":5,"column_end":103}},{"value":"/ the returned iterator reverses the order.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73127,"byte_end":73172,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73177,"byte_end":73180,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73185,"byte_end":73196,"line_start":437,"line_end":437,"column_start":5,"column_end":16}},{"value":"/ # use tracing::{span, Subscriber};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73201,"byte_end":73239,"line_start":438,"line_end":438,"column_start":5,"column_end":43}},{"value":"/ # use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73244,"byte_end":73275,"line_start":439,"line_end":439,"column_start":5,"column_end":36}},{"value":"/ #     layer::{Context, Layer},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73280,"byte_end":73314,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ #     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73319,"byte_end":73340,"line_start":441,"line_end":441,"column_start":5,"column_end":26}},{"value":"/ #     registry::LookupSpan,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73345,"byte_end":73376,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73381,"byte_end":73389,"line_start":443,"line_end":443,"column_start":5,"column_end":13}},{"value":"/ # struct PrintingLayer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73394,"byte_end":73421,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73426,"byte_end":73464,"line_start":445,"line_end":445,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73469,"byte_end":73478,"line_start":446,"line_end":446,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73483,"byte_end":73540,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73545,"byte_end":73550,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/     fn on_enter(&self, id: &span::Id, ctx: Context<S>) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73555,"byte_end":73615,"line_start":449,"line_end":449,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.span(id).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73620,"byte_end":73665,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/         let scope = span.scope().from_root().map(|span| span.name()).collect::<Vec<_>>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73670,"byte_end":73763,"line_start":451,"line_end":451,"column_start":5,"column_end":98}},{"value":"/         println!(\"Entering span: {:?}\", scope);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73768,"byte_end":73819,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73824,"byte_end":73833,"line_start":453,"line_end":453,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73838,"byte_end":73843,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73848,"byte_end":73851,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73856,"byte_end":73950,"line_start":456,"line_end":456,"column_start":5,"column_end":99}},{"value":"/     let _root = tracing::info_span!(\"root\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":73955,"byte_end":74013,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74018,"byte_end":74060,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/     let _child = tracing::info_span!(\"child\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74065,"byte_end":74125,"line_start":459,"line_end":459,"column_start":5,"column_end":65}},{"value":"/     // Prints: Entering span: [\"root\", \"child\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74130,"byte_end":74181,"line_start":460,"line_end":460,"column_start":5,"column_end":56}},{"value":"/     let _leaf = tracing::info_span!(\"leaf\").entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74186,"byte_end":74244,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/     // Prints: Entering span: [\"root\", \"child\", \"leaf\"]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74249,"byte_end":74308,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74313,"byte_end":74320,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74325,"byte_end":74332,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74811,"byte_end":74821,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"extensions","qualname":"<SpanRef>::extensions","value":"fn extensions(&Self) -> Extensions","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a reference to this span's `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74559,"byte_end":74611,"line_start":475,"line_end":475,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74616,"byte_end":74619,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74624,"byte_end":74691,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74696,"byte_end":74720,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74725,"byte_end":74748,"line_start":479,"line_end":479,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":75151,"byte_end":75165,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"extensions_mut","qualname":"<SpanRef>::extensions_mut","value":"fn extensions_mut(&Self) -> ExtensionsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to this span's `Extensions`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to this span's `Extensions`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74891,"byte_end":74951,"line_start":485,"line_end":485,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74956,"byte_end":74959,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The extensions may be used by `Layer`s to store additional data","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":74964,"byte_end":75031,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ describing the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":75036,"byte_end":75060,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":75065,"byte_end":75088,"line_start":489,"line_end":489,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layer","qualname":"::layer","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":467},{"krate":0,"index":540},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":2558},{"krate":0,"index":696},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":699},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723}],"decl_id":null,"docs":" The [`Layer`] trait, a composable abstraction for building [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ The [`Layer`] trait, a composable abstraction for building [`Subscriber`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":78791,"byte_end":78870,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":78871,"byte_end":78874,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Subscriber`] trait in `tracing-core` represents the _complete_ set of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":78875,"byte_end":78954,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ functionality required to consume `tracing` instrumentation. This means that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":78955,"byte_end":79035,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ a single `Subscriber` instance is a self-contained implementation of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79036,"byte_end":79110,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ complete strategy for collecting traces; but it _also_ means that the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79111,"byte_end":79184,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ `Subscriber` trait cannot easily be composed with other `Subscriber`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79185,"byte_end":79259,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79260,"byte_end":79263,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In particular, [`Subscriber`]s are responsible for generating [span IDs] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79264,"byte_end":79344,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ assigning them to spans. Since these IDs must uniquely identify a span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79345,"byte_end":79419,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ within the context of the current trace, this means that there may only be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79420,"byte_end":79498,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ a single `Subscriber` for a given thread at any point in time &mdash;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79499,"byte_end":79572,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ otherwise, there would be no authoritative source of span IDs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79573,"byte_end":79639,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79640,"byte_end":79643,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On the other hand, the majority of the [`Subscriber`] trait's functionality","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79644,"byte_end":79723,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ is composable: any number of subscribers may _observe_ events, span entry","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79724,"byte_end":79801,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ and exit, and so on, provided that there is a single authoritative source of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79802,"byte_end":79882,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ span IDs. The [`Layer`] trait represents this composable subset of the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79883,"byte_end":79957,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ [`Subscriber`] behavior; it can _observe_ events and spans, but does not","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":79958,"byte_end":80034,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assign IDs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80035,"byte_end":80050,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80051,"byte_end":80054,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Composing Layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80055,"byte_end":80077,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80078,"byte_end":80081,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Since a [`Layer`] does not implement a complete strategy for collecting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80082,"byte_end":80157,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ traces, it must be composed with a `Subscriber` in order to be used. The","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80158,"byte_end":80234,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ [`Layer`] trait is generic over a type parameter (called `S` in the trait","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80235,"byte_end":80312,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ definition), representing the types of `Subscriber` they can be composed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80313,"byte_end":80389,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ with. Thus, a [`Layer`] may be implemented that will only compose with a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80390,"byte_end":80466,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ particular `Subscriber` implementation, or additional trait bounds may be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80467,"byte_end":80544,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ added to constrain what types implementing `Subscriber` a `Layer` can wrap.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80545,"byte_end":80624,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80625,"byte_end":80628,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Layer`s may be added to a `Subscriber` by using the [`SubscriberExt::with`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80629,"byte_end":80709,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ method, which is provided by `tracing-subscriber`'s [prelude]. This method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80710,"byte_end":80788,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ returns a [`Layered`] struct that implements `Subscriber` by composing the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80789,"byte_end":80867,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ `Layer` with the `Subscriber`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80868,"byte_end":80902,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80903,"byte_end":80906,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80907,"byte_end":80923,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80924,"byte_end":80935,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::Layer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80936,"byte_end":80970,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":80971,"byte_end":81010,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ use tracing::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81011,"byte_end":81039,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81040,"byte_end":81043,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81044,"byte_end":81068,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81069,"byte_end":81083,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81084,"byte_end":81089,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81090,"byte_end":81093,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81094,"byte_end":81140,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81141,"byte_end":81155,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81156,"byte_end":81161,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81162,"byte_end":81165,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81166,"byte_end":81195,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81196,"byte_end":81210,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81211,"byte_end":81216,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81217,"byte_end":81220,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81221,"byte_end":81295,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ impl Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81296,"byte_end":81334,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81335,"byte_end":81349,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81350,"byte_end":81418,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81419,"byte_end":81466,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81467,"byte_end":81504,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81505,"byte_end":81561,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81562,"byte_end":81619,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81620,"byte_end":81654,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81655,"byte_end":81688,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81689,"byte_end":81694,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81695,"byte_end":81715,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81716,"byte_end":81750,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81751,"byte_end":81758,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ # impl MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81759,"byte_end":81784,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81785,"byte_end":81819,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81820,"byte_end":81827,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81828,"byte_end":81831,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let subscriber = MySubscriber::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81832,"byte_end":81872,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/     .with(MyLayer::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81873,"byte_end":81903,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81904,"byte_end":81907,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81908,"byte_end":81964,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81965,"byte_end":81972,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81973,"byte_end":81976,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Multiple `Layer`s may be composed in the same manner:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":81977,"byte_end":82034,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82035,"byte_end":82046,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ # use tracing_subscriber::{Layer, layer::SubscriberExt};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82047,"byte_end":82107,"line_start":81,"line_end":81,"column_start":1,"column_end":61}},{"value":"/ # use tracing::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82108,"byte_end":82138,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ pub struct MyOtherLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82139,"byte_end":82168,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82169,"byte_end":82183,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82184,"byte_end":82189,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82190,"byte_end":82193,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyOtherLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82194,"byte_end":82245,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82246,"byte_end":82260,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82261,"byte_end":82266,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82267,"byte_end":82270,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ pub struct MyThirdLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82271,"byte_end":82300,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82301,"byte_end":82315,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82316,"byte_end":82321,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82322,"byte_end":82325,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ impl<S: Subscriber> Layer<S> for MyThirdLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82326,"byte_end":82377,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82378,"byte_end":82392,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82393,"byte_end":82398,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ # pub struct MyLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82399,"byte_end":82426,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ # impl<S: Subscriber> Layer<S> for MyLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82427,"byte_end":82476,"line_start":99,"line_end":99,"column_start":1,"column_end":50}},{"value":"/ # pub struct MySubscriber { }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82477,"byte_end":82510,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82511,"byte_end":82585,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ # impl Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82586,"byte_end":82626,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82627,"byte_end":82695,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82696,"byte_end":82743,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82744,"byte_end":82781,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82782,"byte_end":82838,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82839,"byte_end":82896,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82897,"byte_end":82931,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82932,"byte_end":82965,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82966,"byte_end":82971,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82972,"byte_end":82992,"line_start":111,"line_end":111,"column_start":1,"column_end":21}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":82993,"byte_end":83027,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83028,"byte_end":83035,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ # impl MyOtherLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83036,"byte_end":83061,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83062,"byte_end":83096,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83097,"byte_end":83104,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/ # impl MyThirdLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83105,"byte_end":83130,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83131,"byte_end":83165,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83166,"byte_end":83173,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ # impl MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83174,"byte_end":83199,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83200,"byte_end":83234,"line_start":121,"line_end":121,"column_start":1,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83235,"byte_end":83242,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83243,"byte_end":83246,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let subscriber = MySubscriber::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83247,"byte_end":83287,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/     .with(MyLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83288,"byte_end":83317,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/     .with(MyOtherLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83318,"byte_end":83352,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/     .with(MyThirdLayer::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83353,"byte_end":83388,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83389,"byte_end":83392,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83393,"byte_end":83449,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83450,"byte_end":83457,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83458,"byte_end":83461,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The [`Layer::with_subscriber`] constructs the [`Layered`] type from a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83462,"byte_end":83535,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ [`Layer`] and [`Subscriber`], and is called by [`SubscriberExt::with`]. In","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83536,"byte_end":83614,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ general, it is more idiomatic to use [`SubscriberExt::with`], and treat","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83615,"byte_end":83690,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ [`Layer::with_subscriber`] as an implementation detail, as `with_subscriber`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83691,"byte_end":83771,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ calls must be nested, leading to less clear code for the reader.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83772,"byte_end":83840,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83841,"byte_end":83844,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configuration With `Layer`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83845,"byte_end":83887,"line_start":138,"line_end":138,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83888,"byte_end":83891,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ In some cases, a particular [`Layer`] may be enabled or disabled based on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83892,"byte_end":83969,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ runtime configuration. This can introduce challenges, because the type of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":83970,"byte_end":84049,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ layered [`Subscriber`] depends on which layers are added to it: if an `if`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84050,"byte_end":84128,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ or `match` expression adds some [`Layer`] implementation in one branch,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84129,"byte_end":84204,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"/ and other layers in another, the [`Subscriber`] values returned by those","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84205,"byte_end":84281,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ branches will have different types. For example, the following _will not_","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84282,"byte_end":84359,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ work:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84360,"byte_end":84369,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84370,"byte_end":84373,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84374,"byte_end":84393,"line_start":148,"line_end":148,"column_start":1,"column_end":20}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84394,"byte_end":84463,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/ # struct Config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84464,"byte_end":84485,"line_start":150,"line_end":150,"column_start":1,"column_end":22}},{"value":"/ #    is_prod: bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84486,"byte_end":84509,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ #    path: &'static str,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84510,"byte_end":84538,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84539,"byte_end":84546,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # let cfg = Config { is_prod: false, path: \"debug.log\" };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84547,"byte_end":84608,"line_start":154,"line_end":154,"column_start":1,"column_end":62}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84609,"byte_end":84631,"line_start":155,"line_end":155,"column_start":1,"column_end":23}},{"value":"/ use tracing_subscriber::{Registry, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84632,"byte_end":84683,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84684,"byte_end":84687,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer().pretty();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84688,"byte_end":84751,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/ let subscriber = Registry::default().with(stdout_log);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84752,"byte_end":84810,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84811,"byte_end":84814,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ // The compile error will occur here because the if and else","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84815,"byte_end":84879,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/ // branches have different (and therefore incompatible) types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84880,"byte_end":84946,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ let subscriber = if cfg.is_prod {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84947,"byte_end":84984,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/     let file = File::create(cfg.path)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":84985,"byte_end":85028,"line_start":164,"line_end":164,"column_start":1,"column_end":44}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85029,"byte_end":85081,"line_start":165,"line_end":165,"column_start":1,"column_end":53}},{"value":"/         .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85082,"byte_end":85101,"line_start":166,"line_end":166,"column_start":1,"column_end":20}},{"value":"/         .with_writer(Arc::new(file));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85102,"byte_end":85143,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     layer.with(subscriber)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85144,"byte_end":85174,"line_start":168,"line_end":168,"column_start":1,"column_end":31}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85175,"byte_end":85187,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/     layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85188,"byte_end":85201,"line_start":170,"line_end":170,"column_start":1,"column_end":14}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85202,"byte_end":85208,"line_start":171,"line_end":171,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85209,"byte_end":85212,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85213,"byte_end":85268,"line_start":173,"line_end":173,"column_start":1,"column_end":56}},{"value":"/     .expect(\"Unable to set global subscriber\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85269,"byte_end":85320,"line_start":174,"line_end":174,"column_start":1,"column_end":52}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85321,"byte_end":85335,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85336,"byte_end":85343,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85344,"byte_end":85347,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ However, a [`Layer`] wrapped in an [`Option`] [also implements the `Layer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85348,"byte_end":85426,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"/ trait][option-impl]. This allows individual layers to be enabled or disabled at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85427,"byte_end":85510,"line_start":179,"line_end":179,"column_start":1,"column_end":84}},{"value":"/ runtime while always producing a [`Subscriber`] of the same type. For","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85511,"byte_end":85584,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85585,"byte_end":85597,"line_start":181,"line_end":181,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85598,"byte_end":85601,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85602,"byte_end":85609,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85610,"byte_end":85679,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/ # struct Config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85680,"byte_end":85701,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/ #    is_prod: bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85702,"byte_end":85725,"line_start":186,"line_end":186,"column_start":1,"column_end":24}},{"value":"/ #    path: &'static str,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85726,"byte_end":85754,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85755,"byte_end":85762,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # let cfg = Config { is_prod: false, path: \"debug.log\" };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85763,"byte_end":85824,"line_start":189,"line_end":189,"column_start":1,"column_end":62}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85825,"byte_end":85847,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ use tracing_subscriber::{Registry, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85848,"byte_end":85899,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85900,"byte_end":85903,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer().pretty();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85904,"byte_end":85967,"line_start":193,"line_end":193,"column_start":1,"column_end":64}},{"value":"/ let subscriber = Registry::default().with(stdout_log);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":85968,"byte_end":86026,"line_start":194,"line_end":194,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86027,"byte_end":86030,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ // if `cfg.is_prod` is true, also log JSON-formatted logs to a file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86031,"byte_end":86103,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/ let json_log = if cfg.is_prod {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86104,"byte_end":86139,"line_start":197,"line_end":197,"column_start":1,"column_end":36}},{"value":"/     let file = File::create(cfg.path)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86140,"byte_end":86183,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/     let json_log = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86184,"byte_end":86239,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/         .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86240,"byte_end":86259,"line_start":200,"line_end":200,"column_start":1,"column_end":20}},{"value":"/         .with_writer(file);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86260,"byte_end":86291,"line_start":201,"line_end":201,"column_start":1,"column_end":32}},{"value":"/     Some(json_log)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86292,"byte_end":86314,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86315,"byte_end":86327,"line_start":203,"line_end":203,"column_start":1,"column_end":13}},{"value":"/     None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86328,"byte_end":86340,"line_start":204,"line_end":204,"column_start":1,"column_end":13}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86341,"byte_end":86347,"line_start":205,"line_end":205,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86348,"byte_end":86351,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ // If `cfg.is_prod` is false, then `json` will be `None`, and this layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86352,"byte_end":86428,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ // will do nothing. However, the subscriber will still have the same type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86429,"byte_end":86506,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"/ // regardless of whether the `Option`'s value is `None` or `Some`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86507,"byte_end":86577,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"/ let subscriber = subscriber.with(json_log);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86578,"byte_end":86625,"line_start":210,"line_end":210,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86626,"byte_end":86629,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86630,"byte_end":86685,"line_start":212,"line_end":212,"column_start":1,"column_end":56}},{"value":"/    .expect(\"Unable to set global subscriber\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86686,"byte_end":86736,"line_start":213,"line_end":213,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86737,"byte_end":86751,"line_start":214,"line_end":214,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86752,"byte_end":86759,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86760,"byte_end":86763,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ If a [`Layer`] may be one of several different types, note that [`Box<dyn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86764,"byte_end":86841,"line_start":217,"line_end":217,"column_start":1,"column_end":78}},{"value":"/ Layer<S> + Send + Sync>` implements `Layer`][box-impl].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86842,"byte_end":86901,"line_start":218,"line_end":218,"column_start":1,"column_end":60}},{"value":"/ This may be used to erase the type of a [`Layer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86902,"byte_end":86956,"line_start":219,"line_end":219,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86957,"byte_end":86960,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ For example, a function that configures a [`Layer`] to log to one of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":86961,"byte_end":87033,"line_start":221,"line_end":221,"column_start":1,"column_end":73}},{"value":"/ several outputs might return a `Box<dyn Layer<S> + Send + Sync + 'static>`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87034,"byte_end":87113,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87114,"byte_end":87121,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87122,"byte_end":87151,"line_start":224,"line_end":224,"column_start":1,"column_end":30}},{"value":"/     Layer,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87152,"byte_end":87166,"line_start":225,"line_end":225,"column_start":1,"column_end":15}},{"value":"/     registry::LookupSpan,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87167,"byte_end":87196,"line_start":226,"line_end":226,"column_start":1,"column_end":30}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87197,"byte_end":87216,"line_start":227,"line_end":227,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87217,"byte_end":87223,"line_start":228,"line_end":228,"column_start":1,"column_end":7}},{"value":"/ use std::{path::PathBuf, fs::File, io};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87224,"byte_end":87267,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87268,"byte_end":87271,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ /// Configures whether logs are emitted to a file, to stdout, or to stderr.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87272,"byte_end":87351,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"/ pub enum LogConfig {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87352,"byte_end":87376,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/     File(PathBuf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87377,"byte_end":87399,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/     Stdout,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87400,"byte_end":87415,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/     Stderr,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87416,"byte_end":87431,"line_start":235,"line_end":235,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87432,"byte_end":87437,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87438,"byte_end":87441,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ impl LogConfig {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87442,"byte_end":87462,"line_start":238,"line_end":238,"column_start":1,"column_end":21}},{"value":"/     pub fn layer<S>(self) -> Box<dyn Layer<S> + Send + Sync + 'static>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87463,"byte_end":87537,"line_start":239,"line_end":239,"column_start":1,"column_end":75}},{"value":"/     where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87538,"byte_end":87551,"line_start":240,"line_end":240,"column_start":1,"column_end":14}},{"value":"/         S: tracing_core::Subscriber,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87552,"byte_end":87592,"line_start":241,"line_end":241,"column_start":1,"column_end":41}},{"value":"/         for<'a> S: LookupSpan<'a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87593,"byte_end":87631,"line_start":242,"line_end":242,"column_start":1,"column_end":39}},{"value":"/     {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87632,"byte_end":87641,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/         // Shared configuration regardless of where logs are output to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87642,"byte_end":87717,"line_start":244,"line_end":244,"column_start":1,"column_end":76}},{"value":"/         let fmt = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87718,"byte_end":87772,"line_start":245,"line_end":245,"column_start":1,"column_end":55}},{"value":"/             .with_target(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87773,"byte_end":87807,"line_start":246,"line_end":246,"column_start":1,"column_end":35}},{"value":"/             .with_thread_names(true);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87808,"byte_end":87849,"line_start":247,"line_end":247,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87850,"byte_end":87853,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/         // Configure the writer based on the desired log target:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87854,"byte_end":87922,"line_start":249,"line_end":249,"column_start":1,"column_end":69}},{"value":"/         match self {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87923,"byte_end":87947,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/             LogConfig::File(path) => {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87948,"byte_end":87990,"line_start":251,"line_end":251,"column_start":1,"column_end":43}},{"value":"/                 let file = File::create(path).expect(\"failed to create log file\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":87991,"byte_end":88077,"line_start":252,"line_end":252,"column_start":1,"column_end":87}},{"value":"/                 Box::new(fmt.with_writer(file))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88078,"byte_end":88129,"line_start":253,"line_end":253,"column_start":1,"column_end":52}},{"value":"/             },","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88130,"byte_end":88148,"line_start":254,"line_end":254,"column_start":1,"column_end":19}},{"value":"/             LogConfig::Stdout => Box::new(fmt.with_writer(io::stdout)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88149,"byte_end":88224,"line_start":255,"line_end":255,"column_start":1,"column_end":76}},{"value":"/             LogConfig::Stderr => Box::new(fmt.with_writer(io::stderr)),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88225,"byte_end":88300,"line_start":256,"line_end":256,"column_start":1,"column_end":76}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88301,"byte_end":88314,"line_start":257,"line_end":257,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88315,"byte_end":88324,"line_start":258,"line_end":258,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88325,"byte_end":88330,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88331,"byte_end":88334,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ let config = LogConfig::Stdout;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88335,"byte_end":88370,"line_start":261,"line_end":261,"column_start":1,"column_end":36}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88371,"byte_end":88405,"line_start":262,"line_end":262,"column_start":1,"column_end":35}},{"value":"/     .with(config.layer())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88406,"byte_end":88435,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88436,"byte_end":88452,"line_start":264,"line_end":264,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88453,"byte_end":88460,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88461,"byte_end":88464,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The [`Layer::boxed`] method is provided to make boxing a `Layer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88465,"byte_end":88533,"line_start":267,"line_end":267,"column_start":1,"column_end":69}},{"value":"/ more convenient, but [`Box::new`] may be used as well.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88534,"byte_end":88592,"line_start":268,"line_end":268,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88593,"byte_end":88596,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ When the number of `Layer`s varies at runtime, note that a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88597,"byte_end":88659,"line_start":270,"line_end":270,"column_start":1,"column_end":63}},{"value":"/ [`Vec<L> where L: Layer` also implements `Layer`][vec-impl]. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88660,"byte_end":88729,"line_start":271,"line_end":271,"column_start":1,"column_end":70}},{"value":"/ can be used to add a variable number of `Layer`s to a `Subscriber`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88730,"byte_end":88801,"line_start":272,"line_end":272,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88802,"byte_end":88805,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88806,"byte_end":88813,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{Layer, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88814,"byte_end":88862,"line_start":275,"line_end":275,"column_start":1,"column_end":49}},{"value":"/ struct MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88863,"byte_end":88883,"line_start":276,"line_end":276,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88884,"byte_end":88898,"line_start":277,"line_end":277,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88899,"byte_end":88904,"line_start":278,"line_end":278,"column_start":1,"column_end":6}},{"value":"/ # impl MyLayer { fn new() -> Self { Self {} }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88905,"byte_end":88955,"line_start":279,"line_end":279,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88956,"byte_end":88959,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ impl<S: tracing_core::Subscriber> Layer<S> for MyLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":88960,"byte_end":89020,"line_start":281,"line_end":281,"column_start":1,"column_end":61}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89021,"byte_end":89035,"line_start":282,"line_end":282,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89036,"byte_end":89041,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89042,"byte_end":89045,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ /// Returns how many layers we need","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89046,"byte_end":89085,"line_start":285,"line_end":285,"column_start":1,"column_end":40}},{"value":"/ fn how_many_layers() -> usize {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89086,"byte_end":89121,"line_start":286,"line_end":286,"column_start":1,"column_end":36}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89122,"byte_end":89136,"line_start":287,"line_end":287,"column_start":1,"column_end":15}},{"value":"/     # 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89137,"byte_end":89148,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89149,"byte_end":89154,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89155,"byte_end":89158,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ // Create a variable-length `Vec` of layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89159,"byte_end":89206,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/ let mut layers = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89207,"byte_end":89239,"line_start":292,"line_end":292,"column_start":1,"column_end":33}},{"value":"/ for _ in 0..how_many_layers() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89240,"byte_end":89275,"line_start":293,"line_end":293,"column_start":1,"column_end":36}},{"value":"/     layers.push(MyLayer::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89276,"byte_end":89312,"line_start":294,"line_end":294,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89313,"byte_end":89318,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89319,"byte_end":89322,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89323,"byte_end":89357,"line_start":297,"line_end":297,"column_start":1,"column_end":35}},{"value":"/     .with(layers)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89358,"byte_end":89379,"line_start":298,"line_end":298,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89380,"byte_end":89396,"line_start":299,"line_end":299,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89397,"byte_end":89404,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89405,"byte_end":89408,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ If a variable number of `Layer` is needed and those `Layer`s have","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89409,"byte_end":89478,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ different types, a `Vec` of [boxed `Layer` trait objects][box-impl] may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89479,"byte_end":89554,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ be used. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89555,"byte_end":89580,"line_start":304,"line_end":304,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89581,"byte_end":89584,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89585,"byte_end":89592,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::LevelFilter, Layer, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89593,"byte_end":89662,"line_start":307,"line_end":307,"column_start":1,"column_end":70}},{"value":"/ use std::fs::File;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89663,"byte_end":89685,"line_start":308,"line_end":308,"column_start":1,"column_end":23}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89686,"byte_end":89745,"line_start":309,"line_end":309,"column_start":1,"column_end":60}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89746,"byte_end":89765,"line_start":310,"line_end":310,"column_start":1,"column_end":20}},{"value":"/     enable_log_file: bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89766,"byte_end":89796,"line_start":311,"line_end":311,"column_start":1,"column_end":31}},{"value":"/     enable_stdout: bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89797,"byte_end":89825,"line_start":312,"line_end":312,"column_start":1,"column_end":29}},{"value":"/     enable_stderr: bool,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89826,"byte_end":89854,"line_start":313,"line_end":313,"column_start":1,"column_end":29}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89855,"byte_end":89869,"line_start":314,"line_end":314,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89870,"byte_end":89875,"line_start":315,"line_end":315,"column_start":1,"column_end":6}},{"value":"/ # impl Config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89876,"byte_end":89895,"line_start":316,"line_end":316,"column_start":1,"column_end":20}},{"value":"/ #    fn from_config_file()-> Result<Self, Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89896,"byte_end":89971,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/ #         // don't enable the log file so that the example doesn't actually create it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":89972,"byte_end":90061,"line_start":318,"line_end":318,"column_start":1,"column_end":90}},{"value":"/ #         Ok(Self { enable_log_file: false, enable_stdout: true, enable_stderr: true })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90062,"byte_end":90153,"line_start":319,"line_end":319,"column_start":1,"column_end":92}},{"value":"/ #    }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90154,"byte_end":90164,"line_start":320,"line_end":320,"column_start":1,"column_end":11}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90165,"byte_end":90172,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90173,"byte_end":90176,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ let cfg = Config::from_config_file()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90177,"byte_end":90219,"line_start":323,"line_end":323,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90220,"byte_end":90223,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ // Based on our dynamically loaded config file, create any number of layers:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90224,"byte_end":90304,"line_start":325,"line_end":325,"column_start":1,"column_end":81}},{"value":"/ let mut layers = Vec::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90305,"byte_end":90337,"line_start":326,"line_end":326,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90338,"byte_end":90341,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_log_file {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90342,"byte_end":90370,"line_start":328,"line_end":328,"column_start":1,"column_end":29}},{"value":"/     let file = File::create(\"myapp.log\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90371,"byte_end":90417,"line_start":329,"line_end":329,"column_start":1,"column_end":47}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90418,"byte_end":90470,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/         .with_thread_names(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90471,"byte_end":90507,"line_start":331,"line_end":331,"column_start":1,"column_end":37}},{"value":"/         .with_target(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90508,"byte_end":90538,"line_start":332,"line_end":332,"column_start":1,"column_end":31}},{"value":"/         .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90539,"byte_end":90558,"line_start":333,"line_end":333,"column_start":1,"column_end":20}},{"value":"/         .with_writer(file)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90559,"byte_end":90589,"line_start":334,"line_end":334,"column_start":1,"column_end":31}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90590,"byte_end":90664,"line_start":335,"line_end":335,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90665,"byte_end":90703,"line_start":336,"line_end":336,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90704,"byte_end":90725,"line_start":337,"line_end":337,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90726,"byte_end":90753,"line_start":338,"line_end":338,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90754,"byte_end":90759,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90760,"byte_end":90763,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_stdout {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90764,"byte_end":90790,"line_start":341,"line_end":341,"column_start":1,"column_end":27}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90791,"byte_end":90843,"line_start":342,"line_end":342,"column_start":1,"column_end":53}},{"value":"/         .pretty()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90844,"byte_end":90865,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"/         .with_filter(LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90866,"byte_end":90909,"line_start":344,"line_end":344,"column_start":1,"column_end":44}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90910,"byte_end":90984,"line_start":345,"line_end":345,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":90985,"byte_end":91023,"line_start":346,"line_end":346,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91024,"byte_end":91045,"line_start":347,"line_end":347,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91046,"byte_end":91073,"line_start":348,"line_end":348,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91074,"byte_end":91079,"line_start":349,"line_end":349,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91080,"byte_end":91083,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ if cfg.enable_stdout {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91084,"byte_end":91110,"line_start":351,"line_end":351,"column_start":1,"column_end":27}},{"value":"/     let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91111,"byte_end":91163,"line_start":352,"line_end":352,"column_start":1,"column_end":53}},{"value":"/         .with_target(false)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91164,"byte_end":91195,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/         .with_filter(LevelFilter::WARN)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91196,"byte_end":91239,"line_start":354,"line_end":354,"column_start":1,"column_end":44}},{"value":"/         // Box the layer as a type-erased trait object, so that it can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91240,"byte_end":91314,"line_start":355,"line_end":355,"column_start":1,"column_end":75}},{"value":"/         // be pushed to the `Vec`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91315,"byte_end":91353,"line_start":356,"line_end":356,"column_start":1,"column_end":39}},{"value":"/         .boxed();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91354,"byte_end":91375,"line_start":357,"line_end":357,"column_start":1,"column_end":22}},{"value":"/     layers.push(layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91376,"byte_end":91403,"line_start":358,"line_end":358,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91404,"byte_end":91409,"line_start":359,"line_end":359,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91410,"byte_end":91413,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91414,"byte_end":91448,"line_start":361,"line_end":361,"column_start":1,"column_end":35}},{"value":"/     .with(layers)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91449,"byte_end":91470,"line_start":362,"line_end":362,"column_start":1,"column_end":22}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91471,"byte_end":91487,"line_start":363,"line_end":363,"column_start":1,"column_end":17}},{"value":"/# Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91488,"byte_end":91501,"line_start":364,"line_end":364,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91502,"byte_end":91509,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91510,"byte_end":91513,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Finally, if the number of layers _changes_ at runtime, a `Vec` of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91514,"byte_end":91583,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ subscribers can be used alongside the [`reload`](crate::reload) module to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91584,"byte_end":91661,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/ add or remove subscribers dynamically at runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91662,"byte_end":91715,"line_start":369,"line_end":369,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91716,"byte_end":91719,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ [option-impl]: Layer#impl-Layer<S>-for-Option<L>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91720,"byte_end":91772,"line_start":371,"line_end":371,"column_start":1,"column_end":53}},{"value":"/ [box-impl]: Layer#impl-Layer%3CS%3E-for-Box%3Cdyn%20Layer%3CS%3E%20+%20Send%20+%20Sync%3E","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91773,"byte_end":91866,"line_start":372,"line_end":372,"column_start":1,"column_end":94}},{"value":"/ [vec-impl]: Layer#impl-Layer<S>-for-Vec<L>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91867,"byte_end":91913,"line_start":373,"line_end":373,"column_start":1,"column_end":47}},{"value":"/ [prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91914,"byte_end":91943,"line_start":374,"line_end":374,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91944,"byte_end":91947,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ # Recording Traces","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91948,"byte_end":91970,"line_start":376,"line_end":376,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91971,"byte_end":91974,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ The [`Layer`] trait defines a set of methods for consuming notifications from","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":91975,"byte_end":92056,"line_start":378,"line_end":378,"column_start":1,"column_end":82}},{"value":"/ tracing instrumentation, which are generally equivalent to the similarly","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92057,"byte_end":92133,"line_start":379,"line_end":379,"column_start":1,"column_end":77}},{"value":"/ named methods on [`Subscriber`]. Unlike [`Subscriber`], the methods on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92134,"byte_end":92208,"line_start":380,"line_end":380,"column_start":1,"column_end":75}},{"value":"/ `Layer` are additionally passed a [`Context`] type, which exposes additional","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92209,"byte_end":92289,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/ information provided by the wrapped subscriber (such as [the current span])","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92290,"byte_end":92369,"line_start":382,"line_end":382,"column_start":1,"column_end":80}},{"value":"/ to the layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92370,"byte_end":92387,"line_start":383,"line_end":383,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92388,"byte_end":92391,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ # Filtering with `Layer`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92392,"byte_end":92421,"line_start":385,"line_end":385,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92422,"byte_end":92425,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ As well as strategies for handling trace events, the `Layer` trait may also","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92426,"byte_end":92505,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ be used to represent composable _filters_. This allows the determination of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92506,"byte_end":92585,"line_start":388,"line_end":388,"column_start":1,"column_end":80}},{"value":"/ what spans and events should be recorded to be decoupled from _how_ they are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92586,"byte_end":92666,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ recorded: a filtering layer can be applied to other layers or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92667,"byte_end":92732,"line_start":390,"line_end":390,"column_start":1,"column_end":66}},{"value":"/ subscribers. `Layer`s can be used to implement _global filtering_, where a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92733,"byte_end":92811,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/ `Layer` provides a filtering strategy for the entire subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92812,"byte_end":92880,"line_start":392,"line_end":392,"column_start":1,"column_end":69}},{"value":"/ Additionally, individual recording `Layer`s or sets of `Layer`s may be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92881,"byte_end":92955,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ combined with _per-layer filters_ that control what spans and events are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":92956,"byte_end":93032,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ recorded by those layers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93033,"byte_end":93062,"line_start":395,"line_end":395,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93063,"byte_end":93066,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ ## Global Filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93067,"byte_end":93090,"line_start":397,"line_end":397,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93091,"byte_end":93094,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ A `Layer` that implements a filtering strategy should override the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93095,"byte_end":93165,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ [`register_callsite`] and/or [`enabled`] methods. It may also choose to implement","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93166,"byte_end":93251,"line_start":400,"line_end":400,"column_start":1,"column_end":86}},{"value":"/ methods such as [`on_enter`], if it wishes to filter trace events based on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93252,"byte_end":93330,"line_start":401,"line_end":401,"column_start":1,"column_end":79}},{"value":"/ the current span context.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93331,"byte_end":93360,"line_start":402,"line_end":402,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93361,"byte_end":93364,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ Note that the [`Layer::register_callsite`] and [`Layer::enabled`] methods","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93365,"byte_end":93442,"line_start":404,"line_end":404,"column_start":1,"column_end":78}},{"value":"/ determine whether a span or event is enabled *globally*. Thus, they should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93443,"byte_end":93521,"line_start":405,"line_end":405,"column_start":1,"column_end":79}},{"value":"/ **not** be used to indicate whether an individual layer wishes to record a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93522,"byte_end":93600,"line_start":406,"line_end":406,"column_start":1,"column_end":79}},{"value":"/ particular span or event. Instead, if a layer is only interested in a subset","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93601,"byte_end":93681,"line_start":407,"line_end":407,"column_start":1,"column_end":81}},{"value":"/ of trace data, but does *not* wish to disable other spans and events for the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93682,"byte_end":93762,"line_start":408,"line_end":408,"column_start":1,"column_end":81}},{"value":"/ rest of the layer stack should ignore those spans and events in its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93763,"byte_end":93834,"line_start":409,"line_end":409,"column_start":1,"column_end":72}},{"value":"/ notification methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93835,"byte_end":93860,"line_start":410,"line_end":410,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93861,"byte_end":93864,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ The filtering methods on a stack of `Layer`s are evaluated in a top-down","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93865,"byte_end":93941,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ order, starting with the outermost `Layer` and ending with the wrapped","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":93942,"byte_end":94016,"line_start":413,"line_end":413,"column_start":1,"column_end":75}},{"value":"/ [`Subscriber`]. If any layer returns `false` from its [`enabled`] method, or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94017,"byte_end":94097,"line_start":414,"line_end":414,"column_start":1,"column_end":81}},{"value":"/ [`Interest::never()`] from its [`register_callsite`] method, filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94098,"byte_end":94169,"line_start":415,"line_end":415,"column_start":1,"column_end":72}},{"value":"/ evaluation will short-circuit and the span or event will be disabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94170,"byte_end":94243,"line_start":416,"line_end":416,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94244,"byte_end":94247,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ ### Enabling Interest","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94248,"byte_end":94273,"line_start":418,"line_end":418,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94274,"byte_end":94277,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ Whenever an tracing event (or span) is emitted, it goes through a number of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94278,"byte_end":94357,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ steps to determine how and how much it should be processed. The earlier an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94358,"byte_end":94436,"line_start":421,"line_end":421,"column_start":1,"column_end":79}},{"value":"/ event is disabled, the less work has to be done to process the event, so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94437,"byte_end":94513,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/ `Layer`s that implement filtering should attempt to disable unwanted","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94514,"byte_end":94586,"line_start":423,"line_end":423,"column_start":1,"column_end":73}},{"value":"/ events as early as possible. In order, each event checks:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94587,"byte_end":94648,"line_start":424,"line_end":424,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94649,"byte_end":94652,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`], once per callsite (roughly: once per time that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94653,"byte_end":94728,"line_start":426,"line_end":426,"column_start":1,"column_end":76}},{"value":"/   `event!` or `span!` is written in the source code; this is cached at the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94729,"byte_end":94807,"line_start":427,"line_end":427,"column_start":1,"column_end":79}},{"value":"/   callsite). See [`Subscriber::register_callsite`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94808,"byte_end":94866,"line_start":428,"line_end":428,"column_start":1,"column_end":59}},{"value":"/   [`tracing_core::callsite`] for a summary of how this behaves.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94867,"byte_end":94934,"line_start":429,"line_end":429,"column_start":1,"column_end":68}},{"value":"/ - [`enabled`], once per emitted event (roughly: once per time that `event!`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":94935,"byte_end":95014,"line_start":430,"line_end":430,"column_start":1,"column_end":80}},{"value":"/   or `span!` is *executed*), and only if `register_callsite` regesters an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95015,"byte_end":95092,"line_start":431,"line_end":431,"column_start":1,"column_end":78}},{"value":"/   [`Interest::sometimes`]. This is the main customization point to globally","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95093,"byte_end":95172,"line_start":432,"line_end":432,"column_start":1,"column_end":80}},{"value":"/   filter events based on their [`Metadata`]. If an event can be disabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95173,"byte_end":95249,"line_start":433,"line_end":433,"column_start":1,"column_end":77}},{"value":"/   based only on [`Metadata`], it should be, as this allows the construction","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95250,"byte_end":95329,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/   of the actual `Event`/`Span` to be skipped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95330,"byte_end":95379,"line_start":435,"line_end":435,"column_start":1,"column_end":50}},{"value":"/ - For events only (and not spans), [`event_enabled`] is called just before","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95380,"byte_end":95458,"line_start":436,"line_end":436,"column_start":1,"column_end":79}},{"value":"/   processing the event. This gives layers one last chance to say that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95459,"byte_end":95532,"line_start":437,"line_end":437,"column_start":1,"column_end":74}},{"value":"/   an event should be filtered out, now that the event's fields are known.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95533,"byte_end":95610,"line_start":438,"line_end":438,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95611,"byte_end":95614,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ## Per-Layer Filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95615,"byte_end":95641,"line_start":440,"line_end":440,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95642,"byte_end":95645,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ **Note**: per-layer filtering APIs currently require the [`\"registry\"` crate","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95646,"byte_end":95726,"line_start":442,"line_end":442,"column_start":1,"column_end":81}},{"value":"/ feature flag][feat] to be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95727,"byte_end":95765,"line_start":443,"line_end":443,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95766,"byte_end":95769,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ Sometimes, it may be desirable for one `Layer` to record a particular subset","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95770,"byte_end":95850,"line_start":445,"line_end":445,"column_start":1,"column_end":81}},{"value":"/ of spans and events, while a different subset of spans and events are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95851,"byte_end":95924,"line_start":446,"line_end":446,"column_start":1,"column_end":74}},{"value":"/ recorded by other `Layer`s. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95925,"byte_end":95969,"line_start":447,"line_end":447,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95970,"byte_end":95973,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ - A layer that records metrics may wish to observe only events including","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":95974,"byte_end":96050,"line_start":449,"line_end":449,"column_start":1,"column_end":77}},{"value":"/   particular tracked values, while a logging layer ignores those events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96051,"byte_end":96127,"line_start":450,"line_end":450,"column_start":1,"column_end":77}},{"value":"/ - If recording a distributed trace is expensive, it might be desirable to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96128,"byte_end":96205,"line_start":451,"line_end":451,"column_start":1,"column_end":78}},{"value":"/   only send spans with `INFO` and lower verbosity to the distributed tracing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96206,"byte_end":96286,"line_start":452,"line_end":452,"column_start":1,"column_end":81}},{"value":"/   system, while logging more verbose spans to a file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96287,"byte_end":96344,"line_start":453,"line_end":453,"column_start":1,"column_end":58}},{"value":"/ - Spans and events with a particular target might be recorded differently","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96345,"byte_end":96422,"line_start":454,"line_end":454,"column_start":1,"column_end":78}},{"value":"/   from others, such as by generating an HTTP access log from a span that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96423,"byte_end":96499,"line_start":455,"line_end":455,"column_start":1,"column_end":77}},{"value":"/   tracks the lifetime of an HTTP request.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96500,"byte_end":96545,"line_start":456,"line_end":456,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96546,"byte_end":96549,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ The [`Filter`] trait is used to control what spans and events are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96550,"byte_end":96619,"line_start":458,"line_end":458,"column_start":1,"column_end":70}},{"value":"/ observed by an individual `Layer`, while still allowing other `Layer`s to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96620,"byte_end":96697,"line_start":459,"line_end":459,"column_start":1,"column_end":78}},{"value":"/ potentially record them. The [`Layer::with_filter`] method combines a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96698,"byte_end":96771,"line_start":460,"line_end":460,"column_start":1,"column_end":74}},{"value":"/ `Layer` with a [`Filter`], returning a [`Filtered`] layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96772,"byte_end":96834,"line_start":461,"line_end":461,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96835,"byte_end":96838,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ This crate's [`filter`] module provides a number of types which implement","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96839,"byte_end":96916,"line_start":463,"line_end":463,"column_start":1,"column_end":78}},{"value":"/ the [`Filter`] trait, such as [`LevelFilter`], [`Targets`], and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96917,"byte_end":96984,"line_start":464,"line_end":464,"column_start":1,"column_end":68}},{"value":"/ [`FilterFn`]. These [`Filter`]s provide ready-made implementations of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":96985,"byte_end":97058,"line_start":465,"line_end":465,"column_start":1,"column_end":74}},{"value":"/ common forms of filtering. For custom filtering policies, the [`FilterFn`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97059,"byte_end":97137,"line_start":466,"line_end":466,"column_start":1,"column_end":79}},{"value":"/ and [`DynFilterFn`] types allow implementing a [`Filter`] with a closure or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97138,"byte_end":97217,"line_start":467,"line_end":467,"column_start":1,"column_end":80}},{"value":"/ function pointer. In addition, when more control is required, the [`Filter`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97218,"byte_end":97298,"line_start":468,"line_end":468,"column_start":1,"column_end":81}},{"value":"/ trait may also be implemented for user-defined types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97299,"byte_end":97356,"line_start":469,"line_end":469,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97357,"byte_end":97360,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97361,"byte_end":97432,"line_start":471,"line_end":471,"column_start":1,"column_end":72}},{"value":"/     <strong>Warning</strong>: Currently, the <a href=\"../struct.Registry.html\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97433,"byte_end":97516,"line_start":472,"line_end":472,"column_start":1,"column_end":84}},{"value":"/     <code>Registry</code></a> type defined in this crate is the only root","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97517,"byte_end":97594,"line_start":473,"line_end":473,"column_start":1,"column_end":78}},{"value":"/     <code>Subscriber</code> capable of supporting <code>Layer</code>s with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97595,"byte_end":97673,"line_start":474,"line_end":474,"column_start":1,"column_end":79}},{"value":"/     per-layer filters. In the future, new APIs will be added to allow other","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97674,"byte_end":97753,"line_start":475,"line_end":475,"column_start":1,"column_end":80}},{"value":"/     root <code>Subscriber</code>s to support per-layer filters.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97754,"byte_end":97821,"line_start":476,"line_end":476,"column_start":1,"column_end":68}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97822,"byte_end":97832,"line_start":477,"line_end":477,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97833,"byte_end":97836,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ For example, to generate an HTTP access log based on spans with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97837,"byte_end":97904,"line_start":479,"line_end":479,"column_start":1,"column_end":68}},{"value":"/ the `http_access` target, while logging other spans and events to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97905,"byte_end":97974,"line_start":480,"line_end":480,"column_start":1,"column_end":70}},{"value":"/ standard out, a [`Filter`] can be added to the access log layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":97975,"byte_end":98043,"line_start":481,"line_end":481,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98044,"byte_end":98047,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98048,"byte_end":98055,"line_start":483,"line_end":483,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98056,"byte_end":98105,"line_start":484,"line_end":484,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98106,"byte_end":98109,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ // Generates an HTTP access log.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98110,"byte_end":98146,"line_start":486,"line_end":486,"column_start":1,"column_end":37}},{"value":"/ let access_log = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98147,"byte_end":98174,"line_start":487,"line_end":487,"column_start":1,"column_end":28}},{"value":"/     # filter::LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98175,"byte_end":98211,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98212,"byte_end":98215,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ // Add a filter to the access log layer so that it only observes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98216,"byte_end":98284,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"/ // spans and events with the `http_access` target.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98285,"byte_end":98339,"line_start":491,"line_end":491,"column_start":1,"column_end":55}},{"value":"/ let access_log = access_log.with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98340,"byte_end":98414,"line_start":492,"line_end":492,"column_start":1,"column_end":75}},{"value":"/     // Returns `true` if and only if the span or event's target is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98415,"byte_end":98485,"line_start":493,"line_end":493,"column_start":1,"column_end":71}},{"value":"/     // \"http_access\".","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98486,"byte_end":98511,"line_start":494,"line_end":494,"column_start":1,"column_end":26}},{"value":"/     metadata.target() == \"http_access\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98512,"byte_end":98554,"line_start":495,"line_end":495,"column_start":1,"column_end":43}},{"value":"/ }));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98555,"byte_end":98563,"line_start":496,"line_end":496,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98564,"byte_end":98567,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ // A general-purpose logging layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98568,"byte_end":98607,"line_start":498,"line_end":498,"column_start":1,"column_end":40}},{"value":"/ let fmt_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98608,"byte_end":98661,"line_start":499,"line_end":499,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98662,"byte_end":98665,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ // Build a subscriber that combines the access log and stdout log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98666,"byte_end":98735,"line_start":501,"line_end":501,"column_start":1,"column_end":70}},{"value":"/ // layers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98736,"byte_end":98750,"line_start":502,"line_end":502,"column_start":1,"column_end":15}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98751,"byte_end":98785,"line_start":503,"line_end":503,"column_start":1,"column_end":35}},{"value":"/     .with(fmt_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98786,"byte_end":98810,"line_start":504,"line_end":504,"column_start":1,"column_end":25}},{"value":"/     .with(access_log)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98811,"byte_end":98836,"line_start":505,"line_end":505,"column_start":1,"column_end":26}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98837,"byte_end":98853,"line_start":506,"line_end":506,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98854,"byte_end":98861,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98862,"byte_end":98865,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ Multiple layers can have their own, separate per-layer filters. A span or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98866,"byte_end":98943,"line_start":509,"line_end":509,"column_start":1,"column_end":78}},{"value":"/ event will be recorded if it is enabled by _any_ per-layer filter, but it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":98944,"byte_end":99021,"line_start":510,"line_end":510,"column_start":1,"column_end":78}},{"value":"/ will be skipped by the layers whose filters did not enable it. Building on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99022,"byte_end":99100,"line_start":511,"line_end":511,"column_start":1,"column_end":79}},{"value":"/ the previous example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99101,"byte_end":99126,"line_start":512,"line_end":512,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99127,"byte_end":99130,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99131,"byte_end":99138,"line_start":514,"line_end":514,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::{filter_fn, LevelFilter}, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99139,"byte_end":99214,"line_start":515,"line_end":515,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99215,"byte_end":99218,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ let access_log = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99219,"byte_end":99246,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/     # LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99247,"byte_end":99275,"line_start":518,"line_end":518,"column_start":1,"column_end":29}},{"value":"/ let fmt_layer = tracing_subscriber::fmt::layer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99276,"byte_end":99329,"line_start":519,"line_end":519,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99330,"byte_end":99333,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99334,"byte_end":99368,"line_start":521,"line_end":521,"column_start":1,"column_end":35}},{"value":"/     // Add the filter for the \"http_access\" target to the access","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99369,"byte_end":99437,"line_start":522,"line_end":522,"column_start":1,"column_end":69}},{"value":"/     // log layer, like before.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99438,"byte_end":99472,"line_start":523,"line_end":523,"column_start":1,"column_end":35}},{"value":"/     .with(access_log.with_filter(filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99473,"byte_end":99532,"line_start":524,"line_end":524,"column_start":1,"column_end":60}},{"value":"/         metadata.target() == \"http_access\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99533,"byte_end":99579,"line_start":525,"line_end":525,"column_start":1,"column_end":47}},{"value":"/     })))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99580,"byte_end":99592,"line_start":526,"line_end":526,"column_start":1,"column_end":13}},{"value":"/     // Add a filter for spans and events with the INFO level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99593,"byte_end":99657,"line_start":527,"line_end":527,"column_start":1,"column_end":65}},{"value":"/     // and below to the logging layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99658,"byte_end":99700,"line_start":528,"line_end":528,"column_start":1,"column_end":43}},{"value":"/     .with(fmt_layer.with_filter(LevelFilter::INFO))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99701,"byte_end":99756,"line_start":529,"line_end":529,"column_start":1,"column_end":56}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99757,"byte_end":99773,"line_start":530,"line_end":530,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99774,"byte_end":99777,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ // Neither layer will observe this event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99778,"byte_end":99822,"line_start":532,"line_end":532,"column_start":1,"column_end":45}},{"value":"/ tracing::debug!(does_anyone_care = false, \"a tree fell in the forest\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99823,"byte_end":99898,"line_start":533,"line_end":533,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99899,"byte_end":99902,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ // This event will be observed by the logging layer, but not","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99903,"byte_end":99967,"line_start":535,"line_end":535,"column_start":1,"column_end":65}},{"value":"/ // by the access log layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":99968,"byte_end":99999,"line_start":536,"line_end":536,"column_start":1,"column_end":32}},{"value":"/ tracing::warn!(dose_roentgen = %3.8, \"not great, but not terrible\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100000,"byte_end":100072,"line_start":537,"line_end":537,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100073,"byte_end":100076,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ // This event will be observed only by the access log layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100077,"byte_end":100141,"line_start":539,"line_end":539,"column_start":1,"column_end":65}},{"value":"/ tracing::trace!(target: \"http_access\", \"HTTP request started\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100142,"byte_end":100209,"line_start":540,"line_end":540,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100210,"byte_end":100213,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Both layers will observe this event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100214,"byte_end":100257,"line_start":542,"line_end":542,"column_start":1,"column_end":44}},{"value":"/ tracing::error!(target: \"http_access\", \"HTTP request failed with a very bad error!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100258,"byte_end":100347,"line_start":543,"line_end":543,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100348,"byte_end":100355,"line_start":544,"line_end":544,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100356,"byte_end":100359,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ A per-layer filter can be applied to multiple [`Layer`]s at a time, by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100360,"byte_end":100434,"line_start":546,"line_end":546,"column_start":1,"column_end":75}},{"value":"/ combining them into a [`Layered`] layer using [`Layer::and_then`], and then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100435,"byte_end":100514,"line_start":547,"line_end":547,"column_start":1,"column_end":80}},{"value":"/ calling [`Layer::with_filter`] on the resulting [`Layered`] layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100515,"byte_end":100585,"line_start":548,"line_end":548,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100586,"byte_end":100589,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ Consider the following:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100590,"byte_end":100617,"line_start":550,"line_end":550,"column_start":1,"column_end":28}},{"value":"/ - `layer_a` and `layer_b`, which should only receive spans and events at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100618,"byte_end":100694,"line_start":551,"line_end":551,"column_start":1,"column_end":77}},{"value":"/    the [`INFO`] [level] and above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100695,"byte_end":100733,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/ - A third layer, `layer_c`, which should receive spans and events at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100734,"byte_end":100806,"line_start":553,"line_end":553,"column_start":1,"column_end":73}},{"value":"/    the [`DEBUG`] [level] as well.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100807,"byte_end":100844,"line_start":554,"line_end":554,"column_start":1,"column_end":38}},{"value":"/ The layers and filters would be composed thusly:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100845,"byte_end":100897,"line_start":555,"line_end":555,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100898,"byte_end":100901,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100902,"byte_end":100909,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::{filter::LevelFilter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100910,"byte_end":100972,"line_start":558,"line_end":558,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100973,"byte_end":100976,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ let layer_a = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":100977,"byte_end":101001,"line_start":560,"line_end":560,"column_start":1,"column_end":25}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101002,"byte_end":101026,"line_start":561,"line_end":561,"column_start":1,"column_end":25}},{"value":"/ let layer_b =  // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101027,"byte_end":101052,"line_start":562,"line_end":562,"column_start":1,"column_end":26}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101053,"byte_end":101077,"line_start":563,"line_end":563,"column_start":1,"column_end":25}},{"value":"/ let layer_c =  // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101078,"byte_end":101103,"line_start":564,"line_end":564,"column_start":1,"column_end":26}},{"value":"/ # LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101104,"byte_end":101128,"line_start":565,"line_end":565,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101129,"byte_end":101132,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ let info_layers = layer_a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101133,"byte_end":101162,"line_start":567,"line_end":567,"column_start":1,"column_end":30}},{"value":"/     // Combine `layer_a` and `layer_b` into a `Layered` layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101163,"byte_end":101229,"line_start":568,"line_end":568,"column_start":1,"column_end":67}},{"value":"/     .and_then(layer_b)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101230,"byte_end":101256,"line_start":569,"line_end":569,"column_start":1,"column_end":27}},{"value":"/     // ...and then add an `INFO` `LevelFilter` to that layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101257,"byte_end":101322,"line_start":570,"line_end":570,"column_start":1,"column_end":66}},{"value":"/     .with_filter(LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101323,"byte_end":101363,"line_start":571,"line_end":571,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101364,"byte_end":101367,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101368,"byte_end":101402,"line_start":573,"line_end":573,"column_start":1,"column_end":35}},{"value":"/     // Add `layer_c` with a `DEBUG` filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101403,"byte_end":101450,"line_start":574,"line_end":574,"column_start":1,"column_end":48}},{"value":"/     .with(layer_c.with_filter(LevelFilter::DEBUG))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101451,"byte_end":101505,"line_start":575,"line_end":575,"column_start":1,"column_end":55}},{"value":"/     .with(info_layers)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101506,"byte_end":101532,"line_start":576,"line_end":576,"column_start":1,"column_end":27}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101533,"byte_end":101549,"line_start":577,"line_end":577,"column_start":1,"column_end":17}},{"value":"/```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101550,"byte_end":101556,"line_start":578,"line_end":578,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101557,"byte_end":101560,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ If a [`Filtered`] [`Layer`] is combined with another [`Layer`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101561,"byte_end":101627,"line_start":580,"line_end":580,"column_start":1,"column_end":67}},{"value":"/ [`Layer::and_then`], and a filter is added to the [`Layered`] layer, that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101628,"byte_end":101705,"line_start":581,"line_end":581,"column_start":1,"column_end":78}},{"value":"/ layer will be filtered by *both* the inner filter and the outer filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101706,"byte_end":101781,"line_start":582,"line_end":582,"column_start":1,"column_end":76}},{"value":"/ Only spans and events that are enabled by *both* filters will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101782,"byte_end":101850,"line_start":583,"line_end":583,"column_start":1,"column_end":69}},{"value":"/ observed by that layer. This can be used to implement complex filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101851,"byte_end":101926,"line_start":584,"line_end":584,"column_start":1,"column_end":76}},{"value":"/ trees.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101927,"byte_end":101937,"line_start":585,"line_end":585,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101938,"byte_end":101941,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following constraints:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101942,"byte_end":101996,"line_start":587,"line_end":587,"column_start":1,"column_end":55}},{"value":"/ - Suppose that a particular [target] is used to indicate events that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":101997,"byte_end":102069,"line_start":588,"line_end":588,"column_start":1,"column_end":73}},{"value":"/   should be counted as part of a metrics system, which should be only","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102070,"byte_end":102143,"line_start":589,"line_end":589,"column_start":1,"column_end":74}},{"value":"/   observed by a layer that collects metrics.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102144,"byte_end":102192,"line_start":590,"line_end":590,"column_start":1,"column_end":49}},{"value":"/ - A log of high-priority events ([`INFO`] and above) should be logged","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102193,"byte_end":102266,"line_start":591,"line_end":591,"column_start":1,"column_end":74}},{"value":"/   to stdout, while more verbose events should be logged to a debugging log file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102267,"byte_end":102351,"line_start":592,"line_end":592,"column_start":1,"column_end":85}},{"value":"/ - Metrics-focused events should *not* be included in either log output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102352,"byte_end":102427,"line_start":593,"line_end":593,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102428,"byte_end":102431,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ In that case, it is possible to apply a filter to both logging layers to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102432,"byte_end":102508,"line_start":595,"line_end":595,"column_start":1,"column_end":77}},{"value":"/ exclude the metrics events, while additionally adding a [`LevelFilter`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102509,"byte_end":102584,"line_start":596,"line_end":596,"column_start":1,"column_end":76}},{"value":"/ to the stdout log:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102585,"byte_end":102607,"line_start":597,"line_end":597,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102608,"byte_end":102611,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102612,"byte_end":102619,"line_start":599,"line_end":599,"column_start":1,"column_end":8}},{"value":"/ # // wrap this in a function so we don't actually create `debug.log` when","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102620,"byte_end":102697,"line_start":600,"line_end":600,"column_start":1,"column_end":78}},{"value":"/ # // running the doctests..","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102698,"byte_end":102729,"line_start":601,"line_end":601,"column_start":1,"column_end":32}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102730,"byte_end":102799,"line_start":602,"line_end":602,"column_start":1,"column_end":70}},{"value":"/ use tracing_subscriber::{filter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102800,"byte_end":102849,"line_start":603,"line_end":603,"column_start":1,"column_end":50}},{"value":"/ use std::{fs::File, sync::Arc};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102850,"byte_end":102885,"line_start":604,"line_end":604,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102886,"byte_end":102889,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to stdout using the human-readable \"pretty\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102890,"byte_end":102965,"line_start":606,"line_end":606,"column_start":1,"column_end":76}},{"value":"/ // format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102966,"byte_end":102980,"line_start":607,"line_end":607,"column_start":1,"column_end":15}},{"value":"/ let stdout_log = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":102981,"byte_end":103034,"line_start":608,"line_end":608,"column_start":1,"column_end":54}},{"value":"/     .pretty();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103035,"byte_end":103053,"line_start":609,"line_end":609,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103054,"byte_end":103057,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ // A layer that logs events to a file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103058,"byte_end":103100,"line_start":611,"line_end":611,"column_start":1,"column_end":43}},{"value":"/ let file = File::create(\"debug.log\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103101,"byte_end":103143,"line_start":612,"line_end":612,"column_start":1,"column_end":43}},{"value":"/ let debug_log = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103144,"byte_end":103196,"line_start":613,"line_end":613,"column_start":1,"column_end":53}},{"value":"/     .with_writer(Arc::new(file));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103197,"byte_end":103234,"line_start":614,"line_end":614,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103235,"byte_end":103238,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ // A layer that collects metrics using specific events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103239,"byte_end":103298,"line_start":616,"line_end":616,"column_start":1,"column_end":60}},{"value":"/ let metrics_layer = /* ... */ filter::LevelFilter::INFO;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103299,"byte_end":103359,"line_start":617,"line_end":617,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103360,"byte_end":103363,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103364,"byte_end":103398,"line_start":619,"line_end":619,"column_start":1,"column_end":35}},{"value":"/     .with(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103399,"byte_end":103413,"line_start":620,"line_end":620,"column_start":1,"column_end":15}},{"value":"/         stdout_log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103414,"byte_end":103436,"line_start":621,"line_end":621,"column_start":1,"column_end":23}},{"value":"/             // Add an `INFO` filter to the stdout logging layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103437,"byte_end":103504,"line_start":622,"line_end":622,"column_start":1,"column_end":68}},{"value":"/             .with_filter(filter::LevelFilter::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103505,"byte_end":103560,"line_start":623,"line_end":623,"column_start":1,"column_end":56}},{"value":"/             // Combine the filtered `stdout_log` layer with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103561,"byte_end":103628,"line_start":624,"line_end":624,"column_start":1,"column_end":68}},{"value":"/             // `debug_log` layer, producing a new `Layered` layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103629,"byte_end":103699,"line_start":625,"line_end":625,"column_start":1,"column_end":71}},{"value":"/             .and_then(debug_log)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103700,"byte_end":103736,"line_start":626,"line_end":626,"column_start":1,"column_end":37}},{"value":"/             // Add a filter to *both* layers that rejects spans and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103737,"byte_end":103808,"line_start":627,"line_end":627,"column_start":1,"column_end":72}},{"value":"/             // events whose targets start with `metrics`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103809,"byte_end":103870,"line_start":628,"line_end":628,"column_start":1,"column_end":62}},{"value":"/             .with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103871,"byte_end":103930,"line_start":629,"line_end":629,"column_start":1,"column_end":60}},{"value":"/                 !metadata.target().starts_with(\"metrics\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103931,"byte_end":103992,"line_start":630,"line_end":630,"column_start":1,"column_end":62}},{"value":"/             }))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":103993,"byte_end":104012,"line_start":631,"line_end":631,"column_start":1,"column_end":20}},{"value":"/     )","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104013,"byte_end":104022,"line_start":632,"line_end":632,"column_start":1,"column_end":10}},{"value":"/     .with(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104023,"byte_end":104037,"line_start":633,"line_end":633,"column_start":1,"column_end":15}},{"value":"/         // Add a filter to the metrics label that *only* enables","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104038,"byte_end":104106,"line_start":634,"line_end":634,"column_start":1,"column_end":69}},{"value":"/         // events whose targets start with `metrics`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104107,"byte_end":104164,"line_start":635,"line_end":635,"column_start":1,"column_end":58}},{"value":"/         metrics_layer.with_filter(filter::filter_fn(|metadata| {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104165,"byte_end":104233,"line_start":636,"line_end":636,"column_start":1,"column_end":69}},{"value":"/             metadata.target().starts_with(\"metrics\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104234,"byte_end":104290,"line_start":637,"line_end":637,"column_start":1,"column_end":57}},{"value":"/         }))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104291,"byte_end":104306,"line_start":638,"line_end":638,"column_start":1,"column_end":16}},{"value":"/     )","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104307,"byte_end":104316,"line_start":639,"line_end":639,"column_start":1,"column_end":10}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104317,"byte_end":104333,"line_start":640,"line_end":640,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104334,"byte_end":104337,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ // This event will *only* be recorded by the metrics layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104338,"byte_end":104401,"line_start":642,"line_end":642,"column_start":1,"column_end":64}},{"value":"/ tracing::info!(target: \"metrics::cool_stuff_count\", value = 42);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104402,"byte_end":104470,"line_start":643,"line_end":643,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104471,"byte_end":104474,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ // This event will only be seen by the debug log file layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104475,"byte_end":104539,"line_start":645,"line_end":645,"column_start":1,"column_end":65}},{"value":"/ tracing::debug!(\"this is a message, and part of a system of messages\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104540,"byte_end":104615,"line_start":646,"line_end":646,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104616,"byte_end":104619,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ // This event will be seen by both the stdout log layer *and*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104620,"byte_end":104685,"line_start":648,"line_end":648,"column_start":1,"column_end":66}},{"value":"/ // the debug log file layer, but not by the metrics layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104686,"byte_end":104748,"line_start":649,"line_end":649,"column_start":1,"column_end":63}},{"value":"/ tracing::warn!(\"the message is a warning about danger!\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104749,"byte_end":104810,"line_start":650,"line_end":650,"column_start":1,"column_end":62}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104811,"byte_end":104825,"line_start":651,"line_end":651,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104826,"byte_end":104833,"line_start":652,"line_end":652,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104834,"byte_end":104837,"line_start":653,"line_end":653,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::subscriber::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104838,"byte_end":104894,"line_start":654,"line_end":654,"column_start":1,"column_end":57}},{"value":"/ [span IDs]: tracing_core::span::Id","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104895,"byte_end":104933,"line_start":655,"line_end":655,"column_start":1,"column_end":39}},{"value":"/ [the current span]: Context::current_span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104934,"byte_end":104979,"line_start":656,"line_end":656,"column_start":1,"column_end":46}},{"value":"/ [`register_callsite`]: Layer::register_callsite","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":104980,"byte_end":105031,"line_start":657,"line_end":657,"column_start":1,"column_end":52}},{"value":"/ [`enabled`]: Layer::enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105032,"byte_end":105063,"line_start":658,"line_end":658,"column_start":1,"column_end":32}},{"value":"/ [`event_enabled`]: Layer::event_enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105064,"byte_end":105107,"line_start":659,"line_end":659,"column_start":1,"column_end":44}},{"value":"/ [`on_enter`]: Layer::on_enter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105108,"byte_end":105141,"line_start":660,"line_end":660,"column_start":1,"column_end":34}},{"value":"/ [`Layer::register_callsite`]: Layer::register_callsite","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105142,"byte_end":105200,"line_start":661,"line_end":661,"column_start":1,"column_end":59}},{"value":"/ [`Layer::enabled`]: Layer::enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105201,"byte_end":105239,"line_start":662,"line_end":662,"column_start":1,"column_end":39}},{"value":"/ [`Interest::never()`]: tracing_core::subscriber::Interest::never()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105240,"byte_end":105310,"line_start":663,"line_end":663,"column_start":1,"column_end":71}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105311,"byte_end":105352,"line_start":664,"line_end":664,"column_start":1,"column_end":42}},{"value":"/ [`filter`]: crate::filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105353,"byte_end":105382,"line_start":665,"line_end":665,"column_start":1,"column_end":30}},{"value":"/ [`Targets`]: crate::filter::Targets","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105383,"byte_end":105422,"line_start":666,"line_end":666,"column_start":1,"column_end":40}},{"value":"/ [`FilterFn`]: crate::filter::FilterFn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105423,"byte_end":105464,"line_start":667,"line_end":667,"column_start":1,"column_end":42}},{"value":"/ [`DynFilterFn`]: crate::filter::DynFilterFn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105465,"byte_end":105512,"line_start":668,"line_end":668,"column_start":1,"column_end":48}},{"value":"/ [level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105513,"byte_end":105545,"line_start":669,"line_end":669,"column_start":1,"column_end":33}},{"value":"/ [`INFO`]: tracing_core::Level::INFO","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105546,"byte_end":105585,"line_start":670,"line_end":670,"column_start":1,"column_end":40}},{"value":"/ [`DEBUG`]: tracing_core::Level::DEBUG","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105586,"byte_end":105627,"line_start":671,"line_end":671,"column_start":1,"column_end":42}},{"value":"/ [target]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105628,"byte_end":105672,"line_start":672,"line_end":672,"column_start":1,"column_end":45}},{"value":"/ [`LevelFilter`]: crate::filter::LevelFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105673,"byte_end":105720,"line_start":673,"line_end":673,"column_start":1,"column_end":48}},{"value":"/ [feat]: crate#feature-flags","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":105721,"byte_end":105752,"line_start":674,"line_end":674,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149957,"byte_end":149964,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Context","qualname":"::layer::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"decl_id":null,"docs":" Represents information about the current context provided to [`Layer`]s by the\n wrapped [`Subscriber`].","sig":null,"attributes":[{"value":"/ Represents information about the current context provided to [`Layer`]s by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149203,"byte_end":149285,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/ wrapped [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149286,"byte_end":149313,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149314,"byte_end":149317,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ To access [stored data] keyed by a span ID, implementors of the `Layer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149318,"byte_end":149393,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ trait should ensure that the `Subscriber` type parameter is *also* bound by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149394,"byte_end":149477,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ [`LookupSpan`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149478,"byte_end":149497,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149498,"byte_end":149501,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149502,"byte_end":149513,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use tracing::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149514,"byte_end":149542,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ use tracing_subscriber::{Layer, registry::LookupSpan};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149543,"byte_end":149601,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149602,"byte_end":149605,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ pub struct MyLayer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149606,"byte_end":149629,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149630,"byte_end":149633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for MyLayer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149634,"byte_end":149666,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149667,"byte_end":149676,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> LookupSpan<'a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149677,"byte_end":149724,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149725,"byte_end":149730,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149731,"byte_end":149745,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149746,"byte_end":149751,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149752,"byte_end":149759,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149760,"byte_end":149763,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149764,"byte_end":149791,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149792,"byte_end":149836,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149837,"byte_end":149880,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`LookupSpan`]: crate::registry::LookupSpan","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":149881,"byte_end":149928,"line_start":31,"line_end":31,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151021,"byte_end":151033,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Context>::current_span","value":"fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped subscriber's view of the current span.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped subscriber's view of the current span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":150933,"byte_end":150995,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151000,"byte_end":151009,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151430,"byte_end":151437,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Context>::enabled","value":"fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wrapped subscriber would enable the current span.\n","sig":null,"attributes":[{"value":"/ Returns whether the wrapped subscriber would enable the current span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151331,"byte_end":151404,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151409,"byte_end":151418,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153074,"byte_end":153079,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"event","qualname":"<Context>::event","value":"fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records the provided `event` with the wrapped subscriber.","sig":null,"attributes":[{"value":"/ Records the provided `event` with the wrapped subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151909,"byte_end":151970,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151975,"byte_end":151978,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151983,"byte_end":151994,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":151999,"byte_end":152002,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - The subscriber is free to expect that the event's callsite has been","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152007,"byte_end":152080,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/   [registered][register], and may panic or fail to observe the event if this is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152085,"byte_end":152168,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/   not the case. The `tracing` crate's macros ensure that all events are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152173,"byte_end":152248,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/   registered, but if the event is constructed through other means, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152253,"byte_end":152327,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/   user is responsible for ensuring that [`register_callsite`][register]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152332,"byte_end":152407,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/   has been called prior to calling this method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152412,"byte_end":152463,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ - This does _not_ call [`enabled`] on the inner subscriber. If the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152468,"byte_end":152538,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/   caller wishes to apply the wrapped subscriber's filter before choosing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152543,"byte_end":152619,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   whether to record the event, it may first call [`Context::enabled`] to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152624,"byte_end":152700,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/   check whether the event would be enabled. This allows `Layer`s to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152705,"byte_end":152776,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/   elide constructing the event if it would not be recorded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152781,"byte_end":152844,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152849,"byte_end":152852,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [register]: tracing_core::subscriber::Subscriber::register_callsite()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152857,"byte_end":152930,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ [`enabled`]: tracing_core::subscriber::Subscriber::enabled()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":152935,"byte_end":152999,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ [`Context::enabled`]: Context::enabled()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153004,"byte_end":153048,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153053,"byte_end":153062,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155574,"byte_end":155584,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"event_span","qualname":"<Context>::event_span","value":"fn event_span(&Self, &Event) -> Option<SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SpanRef`] for the parent span of the given [`Event`], if\n it has a parent.","sig":null,"attributes":[{"value":"/ Returns a [`SpanRef`] for the parent span of the given [`Event`], if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153218,"byte_end":153290,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ it has a parent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153295,"byte_end":153315,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153320,"byte_end":153323,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If the event has an explicitly overridden parent, this method returns","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153328,"byte_end":153401,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ a reference to that span. If the event's parent is the current span,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153406,"byte_end":153478,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ this returns a reference to the current span, if there is one. If this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153483,"byte_end":153557,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ returns `None`, then either the event's parent was explicitly set to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153562,"byte_end":153634,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ `None`, or the event's parent was defined contextually, but no span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153639,"byte_end":153710,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ is currently entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153715,"byte_end":153740,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153745,"byte_end":153748,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Compared to [`Context::current_span`] and [`Context::lookup_current`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153753,"byte_end":153827,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ this respects overrides provided by the [`Event`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153832,"byte_end":153886,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153891,"byte_end":153894,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Compared to [`Event::parent`], this automatically falls back to the contextual","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153899,"byte_end":153981,"line_start":125,"line_end":125,"column_start":5,"column_end":87}},{"value":"/ span, if required.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":153986,"byte_end":154008,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154013,"byte_end":154016,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154021,"byte_end":154032,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ use tracing::{Event, Subscriber};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154037,"byte_end":154074,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/ use tracing_subscriber::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154079,"byte_end":154108,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/     layer::{Context, Layer},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154113,"byte_end":154145,"line_start":131,"line_end":131,"column_start":5,"column_end":37}},{"value":"/     prelude::*,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154150,"byte_end":154169,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/     registry::LookupSpan,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154174,"byte_end":154203,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154208,"byte_end":154214,"line_start":134,"line_end":134,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154219,"byte_end":154222,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ struct PrintingLayer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154227,"byte_end":154252,"line_start":136,"line_end":136,"column_start":5,"column_end":30}},{"value":"/ impl<S> Layer<S> for PrintingLayer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154257,"byte_end":154295,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154300,"byte_end":154309,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/     S: Subscriber + for<'lookup> LookupSpan<'lookup>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154314,"byte_end":154371,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154376,"byte_end":154381,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/     fn on_event(&self, event: &Event, ctx: Context<S>) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154386,"byte_end":154446,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/         let span = ctx.event_span(event);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154451,"byte_end":154496,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         println!(\"Event in span: {:?}\", span.map(|s| s.name()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154501,"byte_end":154569,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154574,"byte_end":154583,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154588,"byte_end":154593,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154598,"byte_end":154601,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ tracing::subscriber::with_default(tracing_subscriber::registry().with(PrintingLayer), || {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154606,"byte_end":154700,"line_start":147,"line_end":147,"column_start":5,"column_end":99}},{"value":"/     tracing::info!(\"no span\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154705,"byte_end":154739,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/     // Prints: Event in span: None","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154744,"byte_end":154782,"line_start":149,"line_end":149,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154787,"byte_end":154790,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     let span = tracing::info_span!(\"span\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154795,"byte_end":154842,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/     tracing::info!(parent: &span, \"explicitly specified\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154847,"byte_end":154909,"line_start":152,"line_end":152,"column_start":5,"column_end":67}},{"value":"/     // Prints: Event in span: Some(\"span\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154914,"byte_end":154960,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154965,"byte_end":154968,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     let _guard = span.enter();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":154973,"byte_end":155007,"line_start":155,"line_end":155,"column_start":5,"column_end":39}},{"value":"/     tracing::info!(\"contextual span\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155012,"byte_end":155054,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/     // Prints: Event in span: Some(\"span\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155059,"byte_end":155105,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155110,"byte_end":155117,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155122,"byte_end":155129,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155134,"byte_end":155137,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155142,"byte_end":155207,"line_start":161,"line_end":161,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155212,"byte_end":155282,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155287,"byte_end":155359,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155364,"byte_end":155425,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155430,"byte_end":155492,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155497,"byte_end":155533,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155538,"byte_end":155548,"line_start":167,"line_end":167,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155553,"byte_end":155562,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156191,"byte_end":156199,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Context>::metadata","value":"fn metadata(&Self, &span::Id) -> Option<&'static Metadata> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns metadata for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns metadata for the span with the given `id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":155972,"byte_end":156040,"line_start":183,"line_end":183,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156045,"byte_end":156048,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156053,"byte_end":156127,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156132,"byte_end":156165,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156170,"byte_end":156179,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157096,"byte_end":157100,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"span","qualname":"<Context>::span","value":"fn span(&Self, &span::Id) -> Option<registry::SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span with the given `id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156397,"byte_end":156470,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156475,"byte_end":156478,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156483,"byte_end":156557,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156562,"byte_end":156595,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156600,"byte_end":156603,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156608,"byte_end":156673,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156678,"byte_end":156748,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156753,"byte_end":156825,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156830,"byte_end":156891,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156896,"byte_end":156958,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":156963,"byte_end":156999,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157004,"byte_end":157014,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157019,"byte_end":157022,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157027,"byte_end":157070,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157075,"byte_end":157084,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157967,"byte_end":157973,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"exists","qualname":"<Context>::exists","value":"fn exists(&Self, &span::Id) -> bool where S: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an active span exists for the given `Id`.","sig":null,"attributes":[{"value":"/ Returns `true` if an active span exists for the given `Id`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157459,"byte_end":157522,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157527,"byte_end":157530,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157535,"byte_end":157600,"line_start":226,"line_end":226,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157605,"byte_end":157675,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157680,"byte_end":157752,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157757,"byte_end":157818,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157823,"byte_end":157885,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157890,"byte_end":157926,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157931,"byte_end":157941,"line_start":232,"line_end":232,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":157946,"byte_end":157955,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158829,"byte_end":158843,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"lookup_current","qualname":"<Context>::lookup_current","value":"fn lookup_current(&Self) -> Option<registry::SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span that the wrapped subscriber considers\n to be the current.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span that the wrapped subscriber considers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158144,"byte_end":158220,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/ to be the current.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158225,"byte_end":158247,"line_start":242,"line_end":242,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158252,"byte_end":158255,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then we are not currently within a span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158260,"byte_end":158328,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158333,"byte_end":158336,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158341,"byte_end":158406,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158411,"byte_end":158481,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158486,"byte_end":158558,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158563,"byte_end":158624,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158629,"byte_end":158691,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158696,"byte_end":158732,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158737,"byte_end":158747,"line_start":252,"line_end":252,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158752,"byte_end":158755,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158760,"byte_end":158803,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":158808,"byte_end":158817,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162353,"byte_end":162363,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"span_scope","qualname":"<Context>::span_scope","value":"fn span_scope(&Self, &span::Id) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the specified span and ending with the\n root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161247,"byte_end":161318,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the specified span and ending with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161323,"byte_end":161396,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ root of the trace tree and ending with the current span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161401,"byte_end":161461,"line_start":319,"line_end":319,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161466,"byte_end":161469,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161474,"byte_end":161539,"line_start":321,"line_end":321,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161544,"byte_end":161634,"line_start":322,"line_end":322,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161639,"byte_end":161702,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161707,"byte_end":161801,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161806,"byte_end":161851,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161856,"byte_end":161866,"line_start":326,"line_end":326,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161871,"byte_end":161874,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161879,"byte_end":161944,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":161949,"byte_end":162019,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162024,"byte_end":162096,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162101,"byte_end":162162,"line_start":331,"line_end":331,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162167,"byte_end":162229,"line_start":332,"line_end":332,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162234,"byte_end":162270,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162275,"byte_end":162285,"line_start":334,"line_end":334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162290,"byte_end":162293,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162298,"byte_end":162341,"line_start":336,"line_end":336,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163656,"byte_end":163667,"line_start":364,"line_end":364,"column_start":12,"column_end":23},"name":"event_scope","qualname":"<Context>::event_scope","value":"fn event_scope(&Self, &Event) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the parent span of the specified event,\n and ending with the root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162529,"byte_end":162600,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the parent span of the specified event,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162605,"byte_end":162679,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ and ending with the root of the trace tree and ending with the current span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162684,"byte_end":162764,"line_start":346,"line_end":346,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162769,"byte_end":162772,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162777,"byte_end":162842,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162847,"byte_end":162937,"line_start":349,"line_end":349,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":162942,"byte_end":163005,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163010,"byte_end":163104,"line_start":351,"line_end":351,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163109,"byte_end":163154,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163159,"byte_end":163169,"line_start":353,"line_end":353,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163174,"byte_end":163177,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163182,"byte_end":163247,"line_start":355,"line_end":355,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: This requires the wrapped subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163252,"byte_end":163322,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/     implement the <a href=\"../registry/trait.LookupSpan.html\"><code>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163327,"byte_end":163399,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/     LookupSpan</code></a> trait. See the documentation on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163404,"byte_end":163465,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/     <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163470,"byte_end":163532,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/     declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163537,"byte_end":163573,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163578,"byte_end":163588,"line_start":361,"line_end":361,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163593,"byte_end":163596,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":163601,"byte_end":163644,"line_start":363,"line_end":363,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165549,"byte_end":165554,"line_start":425,"line_end":425,"column_start":8,"column_end":13},"name":"clone","qualname":"<Context as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165532,"byte_end":165541,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166368,"byte_end":166375,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Layered","qualname":"::layer::layered::Layered","value":"Layered {  }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552}],"decl_id":null,"docs":" A [`Subscriber`] composed of a `Subscriber` wrapped by one or more\n [`Layer`]s.","sig":null,"attributes":[{"value":"/ A [`Subscriber`] composed of a `Subscriber` wrapped by one or more","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166176,"byte_end":166246,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ [`Layer`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166247,"byte_end":166262,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166263,"byte_end":166266,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166267,"byte_end":166294,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":166295,"byte_end":166339,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":167989,"byte_end":167991,"line_start":76,"line_end":76,"column_start":12,"column_end":14},"name":"is","qualname":"<Layered<L, S>>::is","value":"fn is<T>(&Self) -> bool where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this [`Subscriber`] is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this [`Subscriber`] is the same type as `T`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":167911,"byte_end":167977,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168191,"byte_end":168203,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Layered<L, S>>::downcast_ref","value":"fn downcast_ref<T>(&Self) -> Option<&T> where T: Any","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this [`Subscriber`] value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this [`Subscriber`] value if it is of type `T`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168071,"byte_end":168148,"line_start":80,"line_end":80,"column_start":5,"column_end":82}},{"value":"/ or `None` if it isn't.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168153,"byte_end":168179,"line_start":81,"line_end":81,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168552,"byte_end":168569,"line_start":99,"line_end":99,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Layered<L, S> as tracing_core::Subscriber>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168777,"byte_end":168784,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Layered<L, S> as tracing_core::Subscriber>::enabled","value":"fn enabled(&Self, &Metadata) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":830},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":169424,"byte_end":169438,"line_start":122,"line_end":122,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Layered<L, S> as tracing_core::Subscriber>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":831},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":169572,"byte_end":169580,"line_start":126,"line_end":126,"column_start":8,"column_end":16},"name":"new_span","qualname":"<Layered<L, S> as tracing_core::Subscriber>::new_span","value":"fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":832},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":169755,"byte_end":169761,"line_start":132,"line_end":132,"column_start":8,"column_end":14},"name":"record","qualname":"<Layered<L, S> as tracing_core::Subscriber>::record","value":"fn record(&Self, &span::Id, &span::Record)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":169926,"byte_end":169945,"line_start":137,"line_end":137,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<Layered<L, S> as tracing_core::Subscriber>::record_follows_from","value":"fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":834},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":170124,"byte_end":170137,"line_start":142,"line_end":142,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Layered<L, S> as tracing_core::Subscriber>::event_enabled","value":"fn event_enabled(&Self, &Event) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":835},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":170475,"byte_end":170480,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"event","qualname":"<Layered<L, S> as tracing_core::Subscriber>::event","value":"fn event(&Self, &Event)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":836},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":170604,"byte_end":170609,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"enter","qualname":"<Layered<L, S> as tracing_core::Subscriber>::enter","value":"fn enter(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":837},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":170729,"byte_end":170733,"line_start":162,"line_end":162,"column_start":8,"column_end":12},"name":"exit","qualname":"<Layered<L, S> as tracing_core::Subscriber>::exit","value":"fn exit(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":170851,"byte_end":170861,"line_start":167,"line_end":167,"column_start":8,"column_end":18},"name":"clone_span","qualname":"<Layered<L, S> as tracing_core::Subscriber>::clone_span","value":"fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":171080,"byte_end":171089,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"drop_span","qualname":"<Layered<L, S> as tracing_core::Subscriber>::drop_span","value":"fn drop_span(&Self, span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":840},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":171063,"byte_end":171072,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":171155,"byte_end":171164,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"try_close","qualname":"<Layered<L, S> as tracing_core::Subscriber>::try_close","value":"fn try_close(&Self, span::Id) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":841},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":171993,"byte_end":172005,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"current_span","qualname":"<Layered<L, S> as tracing_core::Subscriber>::current_span","value":"fn current_span(&Self) -> span::Current","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":842},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":171976,"byte_end":171985,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":172106,"byte_end":172118,"line_start":210,"line_end":210,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Layered<L, S> as tracing_core::Subscriber>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":173836,"byte_end":173844,"line_start":248,"line_end":248,"column_start":8,"column_end":16},"name":"on_layer","qualname":"<Layered<A, B, S> as layer::Layer>::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":676},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":173974,"byte_end":173991,"line_start":253,"line_end":253,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Layered<A, B, S> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174199,"byte_end":174206,"line_start":259,"line_end":259,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Layered<A, B, S> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174586,"byte_end":174600,"line_start":269,"line_end":269,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Layered<A, B, S> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174748,"byte_end":174759,"line_start":274,"line_end":274,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Layered<A, B, S> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174731,"byte_end":174740,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174967,"byte_end":174976,"line_start":280,"line_end":280,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Layered<A, B, S> as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":174950,"byte_end":174959,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175185,"byte_end":175200,"line_start":286,"line_end":286,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"<Layered<A, B, S> as layer::Layer>::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":682},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175168,"byte_end":175177,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175416,"byte_end":175429,"line_start":292,"line_end":292,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Layered<A, B, S> as layer::Layer>::event_enabled","value":"fn event_enabled(&Self, &Event, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":683},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175399,"byte_end":175408,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175808,"byte_end":175816,"line_start":303,"line_end":303,"column_start":8,"column_end":16},"name":"on_event","qualname":"<Layered<A, B, S> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175791,"byte_end":175800,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175984,"byte_end":175992,"line_start":309,"line_end":309,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Layered<A, B, S> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":175967,"byte_end":175976,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176150,"byte_end":176157,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Layered<A, B, S> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176133,"byte_end":176142,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176313,"byte_end":176321,"line_start":321,"line_end":321,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Layered<A, B, S> as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176296,"byte_end":176305,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176486,"byte_end":176498,"line_start":327,"line_end":327,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"<Layered<A, B, S> as layer::Layer>::on_id_change","value":"fn on_id_change(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":688},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176469,"byte_end":176478,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":176705,"byte_end":176717,"line_start":333,"line_end":333,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Layered<A, B, S> as layer::Layer>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":695},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":178975,"byte_end":178984,"line_start":383,"line_end":383,"column_start":8,"column_end":17},"name":"span_data","qualname":"<Layered<L, S> as registry::LookupSpan>::span_data","value":"fn span_data(&'a Self, &span::Id) -> Option<Self::Data>","parent":{"krate":0,"index":407},"children":[],"decl_id":{"krate":0,"index":410},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179136,"byte_end":179151,"line_start":388,"line_end":388,"column_start":8,"column_end":23},"name":"register_filter","qualname":"<Layered<L, S> as registry::LookupSpan>::register_filter","value":"fn register_filter(&mut Self) -> FilterId","parent":{"krate":0,"index":407},"children":[],"decl_id":{"krate":0,"index":412},"docs":"","sig":null,"attributes":[{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179078,"byte_end":179128,"line_start":387,"line_end":387,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":182721,"byte_end":182724,"line_start":499,"line_end":499,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Layered<A, B, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106596,"byte_end":106601,"line_start":709,"line_end":709,"column_start":11,"column_end":16},"name":"Layer","qualname":"::layer::Layer","value":"Layer<S>","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695}],"decl_id":null,"docs":" A composable handler for `tracing` events.","sig":null,"attributes":[{"value":"/ A composable handler for `tracing` events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106226,"byte_end":106272,"line_start":701,"line_end":701,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106273,"byte_end":106276,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ A `Layer` implements a behavior for recording or collecting traces that can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106277,"byte_end":106356,"line_start":703,"line_end":703,"column_start":1,"column_end":80}},{"value":"/ be composed together with other `Layer`s to build a [`Subscriber`]. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106357,"byte_end":106436,"line_start":704,"line_end":704,"column_start":1,"column_end":80}},{"value":"/ [module-level documentation](crate::layer) for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106437,"byte_end":106496,"line_start":705,"line_end":705,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106497,"byte_end":106500,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106501,"byte_end":106545,"line_start":707,"line_end":707,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108160,"byte_end":108168,"line_start":741,"line_end":741,"column_start":8,"column_end":16},"name":"on_layer","qualname":"::layer::Layer::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Performs late initialization when attaching a `Layer` to a\n [`Subscriber`].","sig":null,"attributes":[{"value":"/ Performs late initialization when attaching a `Layer` to a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106655,"byte_end":106717,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106722,"byte_end":106741,"line_start":715,"line_end":715,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106746,"byte_end":106749,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is a callback that is called when the `Layer` is added to a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106754,"byte_end":106822,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ [`Subscriber`] (e.g. in [`Layer::with_subscriber`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106827,"byte_end":106885,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/ [`SubscriberExt::with`]). Since this can only occur before the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106890,"byte_end":106956,"line_start":719,"line_end":719,"column_start":5,"column_end":71}},{"value":"/ [`Subscriber`] has been set as the default, both the `Layer` and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":106961,"byte_end":107029,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/ [`Subscriber`] are passed to this method _mutably_. This gives the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107034,"byte_end":107104,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ `Layer` the opportunity to set any of its own fields with values","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107109,"byte_end":107177,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/ recieved by method calls on the [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107182,"byte_end":107233,"line_start":723,"line_end":723,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107238,"byte_end":107241,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ For example, [`Filtered`] layers implement `on_layer` to call the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107246,"byte_end":107315,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ [`Subscriber`]'s [`register_filter`] method, and store the returned","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107320,"byte_end":107391,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ [`FilterId`] as a field.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107396,"byte_end":107424,"line_start":727,"line_end":727,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107429,"byte_end":107432,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ **Note** In most cases, `Layer` implementations will not need to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107437,"byte_end":107505,"line_start":729,"line_end":729,"column_start":5,"column_end":73}},{"value":"/ implement this method. However, in cases where a type implementing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107510,"byte_end":107580,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ `Layer` wraps one or more other types that implement `Layer`, like the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107585,"byte_end":107659,"line_start":731,"line_end":731,"column_start":5,"column_end":79}},{"value":"/ [`Layered`] and [`Filtered`] types in this crate, that type MUST ensure","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107664,"byte_end":107739,"line_start":732,"line_end":732,"column_start":5,"column_end":80}},{"value":"/ that the inner `Layer`s' `on_layer` methods are called. Otherwise,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107744,"byte_end":107814,"line_start":733,"line_end":733,"column_start":5,"column_end":75}},{"value":"/ functionality that relies on `on_layer`, such as [per-layer filtering],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107819,"byte_end":107894,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ may not work correctly.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107899,"byte_end":107926,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107931,"byte_end":107934,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107939,"byte_end":107980,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ [`register_filter`]: crate::registry::LookupSpan::register_filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":107985,"byte_end":108054,"line_start":738,"line_end":738,"column_start":5,"column_end":74}},{"value":"/ [per-layer filtering]: #per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108059,"byte_end":108106,"line_start":739,"line_end":739,"column_start":5,"column_end":52}},{"value":"/ [`FilterId`]: crate::filter::FilterId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108111,"byte_end":108152,"line_start":740,"line_end":740,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110461,"byte_end":110478,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::layer::Layer::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Registers a new callsite with this layer, returning whether or not\n the layer is interested in being notified about the callsite, similarly\n to [`Subscriber::register_callsite`].","sig":null,"attributes":[{"value":"/ Registers a new callsite with this layer, returning whether or not","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108241,"byte_end":108311,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ the layer is interested in being notified about the callsite, similarly","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108316,"byte_end":108391,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ to [`Subscriber::register_callsite`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108396,"byte_end":108437,"line_start":747,"line_end":747,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108442,"byte_end":108445,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ By default, this returns [`Interest::always()`] if [`self.enabled`] returns","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108450,"byte_end":108529,"line_start":749,"line_end":749,"column_start":5,"column_end":84}},{"value":"/ true, or [`Interest::never()`] if it returns false.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108534,"byte_end":108589,"line_start":750,"line_end":750,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108594,"byte_end":108597,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108602,"byte_end":108667,"line_start":752,"line_end":752,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This method (and <a href=\"#method.enabled\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108672,"byte_end":108742,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ <code>Layer::enabled</code></a>) determine whether a span or event is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108747,"byte_end":108820,"line_start":754,"line_end":754,"column_start":5,"column_end":78}},{"value":"/ globally enabled, <em>not</em> whether the individual layer will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108825,"byte_end":108896,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ notified about that span or event. This is intended to be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108901,"byte_end":108967,"line_start":756,"line_end":756,"column_start":5,"column_end":71}},{"value":"/ by layers that implement filtering for the entire stack. Layers which do","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":108972,"byte_end":109048,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ not wish to be notified about certain spans or events but do not wish to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109053,"byte_end":109129,"line_start":758,"line_end":758,"column_start":5,"column_end":81}},{"value":"/ globally disable them should ignore those spans or events in their","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109134,"byte_end":109204,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ <a href=\"#method.on_event\"><code>on_event</code></a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109209,"byte_end":109266,"line_start":760,"line_end":760,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_enter\"><code>on_enter</code></a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109271,"byte_end":109328,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_exit\"><code>on_exit</code></a>, and other notification","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109333,"byte_end":109411,"line_start":762,"line_end":762,"column_start":5,"column_end":83}},{"value":"/ methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109416,"byte_end":109428,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109433,"byte_end":109443,"line_start":764,"line_end":764,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109448,"byte_end":109451,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109456,"byte_end":109529,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109534,"byte_end":109552,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109557,"byte_end":109560,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Layers may also implement this method to perform any behaviour that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109565,"byte_end":109636,"line_start":769,"line_end":769,"column_start":5,"column_end":76}},{"value":"/ should be run once per callsite. If the layer wishes to use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109641,"byte_end":109704,"line_start":770,"line_end":770,"column_start":5,"column_end":68}},{"value":"/ `register_callsite` for per-callsite behaviour, but does not want to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109709,"byte_end":109781,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/ globally enable or disable those callsites, it should always return","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109786,"byte_end":109857,"line_start":772,"line_end":772,"column_start":5,"column_end":76}},{"value":"/ [`Interest::always()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109862,"byte_end":109889,"line_start":773,"line_end":773,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109894,"byte_end":109897,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109902,"byte_end":109942,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ [`Subscriber::register_callsite`]: tracing_core::Subscriber::register_callsite()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":109947,"byte_end":110031,"line_start":776,"line_end":776,"column_start":5,"column_end":89}},{"value":"/ [`Interest::never()`]: tracing_core::subscriber::Interest::never()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110036,"byte_end":110106,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ [`Interest::always()`]: tracing_core::subscriber::Interest::always()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110111,"byte_end":110183,"line_start":778,"line_end":778,"column_start":5,"column_end":77}},{"value":"/ [`self.enabled`]: Layer::enabled()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110188,"byte_end":110226,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/ [`Layer::enabled`]: Layer::enabled()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110231,"byte_end":110271,"line_start":780,"line_end":780,"column_start":5,"column_end":45}},{"value":"/ [`on_event`]: Layer::on_event()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110276,"byte_end":110311,"line_start":781,"line_end":781,"column_start":5,"column_end":40}},{"value":"/ [`on_enter`]: Layer::on_enter()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110316,"byte_end":110351,"line_start":782,"line_end":782,"column_start":5,"column_end":40}},{"value":"/ [`on_exit`]: Layer::on_exit()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110356,"byte_end":110389,"line_start":783,"line_end":783,"column_start":5,"column_end":38}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110394,"byte_end":110453,"line_start":784,"line_end":784,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112358,"byte_end":112365,"line_start":825,"line_end":825,"column_start":8,"column_end":15},"name":"enabled","qualname":"::layer::Layer::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Returns `true` if this layer is interested in a span or event with the\n given `metadata` in the current [`Context`], similarly to\n [`Subscriber::enabled`].","sig":null,"attributes":[{"value":"/ Returns `true` if this layer is interested in a span or event with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110690,"byte_end":110764,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ given `metadata` in the current [`Context`], similarly to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110769,"byte_end":110830,"line_start":794,"line_end":794,"column_start":5,"column_end":66}},{"value":"/ [`Subscriber::enabled`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110835,"byte_end":110863,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110868,"byte_end":110871,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ By default, this always returns `true`, allowing the wrapped subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110876,"byte_end":110951,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ to choose to disable the span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110956,"byte_end":110990,"line_start":798,"line_end":798,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":110995,"byte_end":110998,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111003,"byte_end":111068,"line_start":800,"line_end":800,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This method (and <a href=\"#method.register_callsite\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111073,"byte_end":111153,"line_start":801,"line_end":801,"column_start":5,"column_end":85}},{"value":"/ <code>Layer::register_callsite</code></a>) determine whether a span or event is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111158,"byte_end":111241,"line_start":802,"line_end":802,"column_start":5,"column_end":88}},{"value":"/ globally enabled, <em>not</em> whether the individual layer will be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111246,"byte_end":111317,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ notified about that span or event. This is intended to be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111322,"byte_end":111388,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/ by layers that implement filtering for the entire stack. Layers which do","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111393,"byte_end":111469,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/ not wish to be notified about certain spans or events but do not wish to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111474,"byte_end":111550,"line_start":806,"line_end":806,"column_start":5,"column_end":81}},{"value":"/ globally disable them should ignore those spans or events in their","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111555,"byte_end":111625,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ <a href=\"#method.on_event\"><code>on_event</code></a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111630,"byte_end":111687,"line_start":808,"line_end":808,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_enter\"><code>on_enter</code></a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111692,"byte_end":111749,"line_start":809,"line_end":809,"column_start":5,"column_end":62}},{"value":"/ <a href=\"#method.on_exit\"><code>on_exit</code></a>, and other notification","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111754,"byte_end":111832,"line_start":810,"line_end":810,"column_start":5,"column_end":83}},{"value":"/ methods.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111837,"byte_end":111849,"line_start":811,"line_end":811,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111854,"byte_end":111864,"line_start":812,"line_end":812,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111869,"byte_end":111872,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111877,"byte_end":111880,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111885,"byte_end":111958,"line_start":815,"line_end":815,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111963,"byte_end":111981,"line_start":816,"line_end":816,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111986,"byte_end":111989,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":111994,"byte_end":112034,"line_start":818,"line_end":818,"column_start":5,"column_end":45}},{"value":"/ [`Subscriber::enabled`]: tracing_core::Subscriber::enabled()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112039,"byte_end":112103,"line_start":819,"line_end":819,"column_start":5,"column_end":69}},{"value":"/ [`Layer::register_callsite`]: Layer::register_callsite()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112108,"byte_end":112168,"line_start":820,"line_end":820,"column_start":5,"column_end":65}},{"value":"/ [`on_event`]: Layer::on_event()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112173,"byte_end":112208,"line_start":821,"line_end":821,"column_start":5,"column_end":40}},{"value":"/ [`on_enter`]: Layer::on_enter()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112213,"byte_end":112248,"line_start":822,"line_end":822,"column_start":5,"column_end":40}},{"value":"/ [`on_exit`]: Layer::on_exit()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112253,"byte_end":112286,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112291,"byte_end":112350,"line_start":824,"line_end":824,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112595,"byte_end":112606,"line_start":832,"line_end":832,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"::layer::Layer::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a new span was constructed with the given\n `Attributes` and `Id`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a new span was constructed with the given","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112486,"byte_end":112556,"line_start":830,"line_end":830,"column_start":5,"column_end":75}},{"value":"/ `Attributes` and `Id`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112561,"byte_end":112587,"line_start":831,"line_end":831,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":112958,"byte_end":112972,"line_start":840,"line_end":840,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::layer::Layer::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113379,"byte_end":113388,"line_start":849,"line_end":849,"column_start":8,"column_end":17},"name":"on_record","qualname":"::layer::Layer::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the given `Id` recorded the given\n `values`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the given `Id` recorded the given","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113029,"byte_end":113103,"line_start":844,"line_end":844,"column_start":5,"column_end":79}},{"value":"/ `values`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113108,"byte_end":113121,"line_start":845,"line_end":845,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113854,"byte_end":113869,"line_start":856,"line_end":856,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"::layer::Layer::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the ID `span` recorded that it\n follows from the span with the ID `follows`.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the ID `span` recorded that it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113472,"byte_end":113543,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ follows from the span with the ID `follows`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113548,"byte_end":113596,"line_start":852,"line_end":852,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114983,"byte_end":114996,"line_start":879,"line_end":879,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"::layer::Layer::event_enabled","value":"fn event_enabled(&Self, &Event, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Called before [`on_event`], to determine if `on_event` should be called.","sig":null,"attributes":[{"value":"/ Called before [`on_event`], to determine if `on_event` should be called.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":113946,"byte_end":114022,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114027,"byte_end":114030,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114035,"byte_end":114094,"line_start":860,"line_end":860,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114099,"byte_end":114164,"line_start":861,"line_end":861,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114169,"byte_end":114172,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ **Note**: This method determines whether an event is globally enabled,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114177,"byte_end":114251,"line_start":863,"line_end":863,"column_start":5,"column_end":79}},{"value":"/ *not* whether the individual `Layer` will be notified about the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114256,"byte_end":114323,"line_start":864,"line_end":864,"column_start":5,"column_end":72}},{"value":"/ event. This is intended to be used by `Layer`s that implement","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114328,"byte_end":114393,"line_start":865,"line_end":865,"column_start":5,"column_end":70}},{"value":"/ filtering for the entire stack. `Layer`s which do not wish to be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114398,"byte_end":114466,"line_start":866,"line_end":866,"column_start":5,"column_end":73}},{"value":"/ notified about certain events but do not wish to globally disable them","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114471,"byte_end":114545,"line_start":867,"line_end":867,"column_start":5,"column_end":79}},{"value":"/ should ignore those events in their [on_event][Self::on_event].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114550,"byte_end":114617,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114622,"byte_end":114625,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114630,"byte_end":114646,"line_start":870,"line_end":870,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114651,"byte_end":114654,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ See [the trait-level documentation] for more information on filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114659,"byte_end":114732,"line_start":872,"line_end":872,"column_start":5,"column_end":78}},{"value":"/ with `Layer`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114737,"byte_end":114755,"line_start":873,"line_end":873,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114760,"byte_end":114763,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ [`on_event`]: Self::on_event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114768,"byte_end":114800,"line_start":875,"line_end":875,"column_start":5,"column_end":37}},{"value":"/ [`Interest`]: tracing_core::Interest","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114805,"byte_end":114845,"line_start":876,"line_end":876,"column_start":5,"column_end":45}},{"value":"/ [the trait-level documentation]: #filtering-with-layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114850,"byte_end":114909,"line_start":877,"line_end":877,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":114914,"byte_end":114923,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115139,"byte_end":115147,"line_start":884,"line_end":884,"column_start":8,"column_end":16},"name":"on_event","qualname":"::layer::Layer::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that an event has occurred.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that an event has occurred.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115080,"byte_end":115131,"line_start":883,"line_end":883,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115279,"byte_end":115287,"line_start":887,"line_end":887,"column_start":8,"column_end":16},"name":"on_enter","qualname":"::layer::Layer::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span with the given ID was entered.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span with the given ID was entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115205,"byte_end":115271,"line_start":886,"line_end":886,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115416,"byte_end":115423,"line_start":890,"line_end":890,"column_start":8,"column_end":15},"name":"on_exit","qualname":"::layer::Layer::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that the span with the given ID was exited.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that the span with the given ID was exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115341,"byte_end":115408,"line_start":889,"line_end":889,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115557,"byte_end":115565,"line_start":893,"line_end":893,"column_start":8,"column_end":16},"name":"on_close","qualname":"::layer::Layer::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that the span with the given ID has been closed.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that the span with the given ID has been closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115477,"byte_end":115549,"line_start":892,"line_end":892,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115738,"byte_end":115750,"line_start":897,"line_end":897,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"::layer::Layer::on_id_change","value":"fn on_id_change(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Notifies this layer that a span ID has been cloned, and that the\n subscriber returned a different ID.\n","sig":null,"attributes":[{"value":"/ Notifies this layer that a span ID has been cloned, and that the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115618,"byte_end":115686,"line_start":895,"line_end":895,"column_start":5,"column_end":73}},{"value":"/ subscriber returned a different ID.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115691,"byte_end":115730,"line_start":896,"line_end":896,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119062,"byte_end":119070,"line_start":996,"line_end":996,"column_start":8,"column_end":16},"name":"and_then","qualname":"::layer::Layer::and_then","value":"fn and_then<L>(Self, L) -> Layered<L, Self, S> where L: Layer<S>, Self: Sized","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Composes this layer around the given `Layer`, returning a `Layered`\n struct implementing `Layer`.","sig":null,"attributes":[{"value":"/ Composes this layer around the given `Layer`, returning a `Layered`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115822,"byte_end":115893,"line_start":899,"line_end":899,"column_start":5,"column_end":76}},{"value":"/ struct implementing `Layer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115898,"byte_end":115930,"line_start":900,"line_end":900,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115935,"byte_end":115938,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ The returned `Layer` will call the methods on this `Layer` and then","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":115943,"byte_end":116014,"line_start":902,"line_end":902,"column_start":5,"column_end":76}},{"value":"/ those of the new `Layer`, before calling the methods on the subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116019,"byte_end":116093,"line_start":903,"line_end":903,"column_start":5,"column_end":79}},{"value":"/ it wraps. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116098,"byte_end":116124,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116129,"byte_end":116132,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116137,"byte_end":116148,"line_start":906,"line_end":906,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116153,"byte_end":116196,"line_start":907,"line_end":907,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116201,"byte_end":116236,"line_start":908,"line_end":908,"column_start":5,"column_end":40}},{"value":"/ pub struct FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116241,"byte_end":116266,"line_start":909,"line_end":909,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116271,"byte_end":116285,"line_start":910,"line_end":910,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116290,"byte_end":116295,"line_start":911,"line_end":911,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116300,"byte_end":116303,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ pub struct BarLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116308,"byte_end":116333,"line_start":913,"line_end":913,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116338,"byte_end":116352,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116357,"byte_end":116362,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116367,"byte_end":116370,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116375,"byte_end":116404,"line_start":917,"line_end":917,"column_start":5,"column_end":34}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116409,"byte_end":116423,"line_start":918,"line_end":918,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116428,"byte_end":116433,"line_start":919,"line_end":919,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116438,"byte_end":116441,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116446,"byte_end":116493,"line_start":921,"line_end":921,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116498,"byte_end":116512,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116517,"byte_end":116522,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116527,"byte_end":116530,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for BarLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116535,"byte_end":116582,"line_start":925,"line_end":925,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116587,"byte_end":116601,"line_start":926,"line_end":926,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116606,"byte_end":116611,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116616,"byte_end":116619,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ # impl FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116624,"byte_end":116645,"line_start":929,"line_end":929,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116650,"byte_end":116684,"line_start":930,"line_end":930,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116689,"byte_end":116696,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ # impl BarLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116701,"byte_end":116722,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116727,"byte_end":116761,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116766,"byte_end":116773,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116778,"byte_end":116803,"line_start":935,"line_end":935,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116808,"byte_end":116842,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116847,"byte_end":116854,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116859,"byte_end":116933,"line_start":938,"line_end":938,"column_start":5,"column_end":79}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116938,"byte_end":116992,"line_start":939,"line_end":939,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":116997,"byte_end":117065,"line_start":940,"line_end":940,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117070,"byte_end":117117,"line_start":941,"line_end":941,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117122,"byte_end":117159,"line_start":942,"line_end":942,"column_start":5,"column_end":42}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117164,"byte_end":117220,"line_start":943,"line_end":943,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117225,"byte_end":117282,"line_start":944,"line_end":944,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117287,"byte_end":117321,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117326,"byte_end":117359,"line_start":946,"line_end":946,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117364,"byte_end":117371,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117376,"byte_end":117412,"line_start":948,"line_end":948,"column_start":5,"column_end":41}},{"value":"/     .and_then(BarLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117417,"byte_end":117451,"line_start":949,"line_end":949,"column_start":5,"column_end":39}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117456,"byte_end":117502,"line_start":950,"line_end":950,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117507,"byte_end":117514,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117519,"byte_end":117522,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Multiple layers may be composed in this manner:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117527,"byte_end":117578,"line_start":953,"line_end":953,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117583,"byte_end":117586,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117591,"byte_end":117602,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117607,"byte_end":117650,"line_start":956,"line_end":956,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117655,"byte_end":117690,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/ # pub struct FooLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117695,"byte_end":117723,"line_start":958,"line_end":958,"column_start":5,"column_end":33}},{"value":"/ # pub struct BarLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117728,"byte_end":117756,"line_start":959,"line_end":959,"column_start":5,"column_end":33}},{"value":"/ # pub struct MySubscriber {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117761,"byte_end":117793,"line_start":960,"line_end":960,"column_start":5,"column_end":37}},{"value":"/ # impl<S: Subscriber> Layer<S> for FooLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117798,"byte_end":117848,"line_start":961,"line_end":961,"column_start":5,"column_end":55}},{"value":"/ # impl<S: Subscriber> Layer<S> for BarLayer {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117853,"byte_end":117903,"line_start":962,"line_end":962,"column_start":5,"column_end":55}},{"value":"/ # impl FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117908,"byte_end":117929,"line_start":963,"line_end":963,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117934,"byte_end":117968,"line_start":964,"line_end":964,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117973,"byte_end":117980,"line_start":965,"line_end":965,"column_start":5,"column_end":12}},{"value":"/ # impl BarLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":117985,"byte_end":118006,"line_start":966,"line_end":966,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118011,"byte_end":118045,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118050,"byte_end":118057,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118062,"byte_end":118087,"line_start":969,"line_end":969,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118092,"byte_end":118126,"line_start":970,"line_end":970,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118131,"byte_end":118138,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata, Event};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118143,"byte_end":118217,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118222,"byte_end":118276,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(1) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118281,"byte_end":118349,"line_start":974,"line_end":974,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118354,"byte_end":118401,"line_start":975,"line_end":975,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118406,"byte_end":118443,"line_start":976,"line_end":976,"column_start":5,"column_end":42}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118448,"byte_end":118504,"line_start":977,"line_end":977,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118509,"byte_end":118566,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118571,"byte_end":118605,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118610,"byte_end":118643,"line_start":980,"line_end":980,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118648,"byte_end":118655,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ pub struct BazLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118660,"byte_end":118685,"line_start":982,"line_end":982,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118690,"byte_end":118704,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118709,"byte_end":118714,"line_start":984,"line_end":984,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118719,"byte_end":118722,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for BazLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118727,"byte_end":118774,"line_start":986,"line_end":986,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118779,"byte_end":118793,"line_start":987,"line_end":987,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118798,"byte_end":118803,"line_start":988,"line_end":988,"column_start":5,"column_end":10}},{"value":"/ # impl BazLayer { fn new() -> Self { BazLayer {} } }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118808,"byte_end":118864,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118869,"byte_end":118872,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118877,"byte_end":118913,"line_start":991,"line_end":991,"column_start":5,"column_end":41}},{"value":"/     .and_then(BarLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118918,"byte_end":118952,"line_start":992,"line_end":992,"column_start":5,"column_end":39}},{"value":"/     .and_then(BazLayer::new())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118957,"byte_end":118991,"line_start":993,"line_end":993,"column_start":5,"column_end":39}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":118996,"byte_end":119042,"line_start":994,"line_end":994,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119047,"byte_end":119054,"line_start":995,"line_end":995,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120780,"byte_end":120795,"line_start":1048,"line_end":1048,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::layer::Layer::with_subscriber","value":"fn with_subscriber(Self, S) -> Layered<Self, S> where Self: Sized","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Composes this `Layer` with the given [`Subscriber`], returning a\n `Layered` struct that implements [`Subscriber`].","sig":null,"attributes":[{"value":"/ Composes this `Layer` with the given [`Subscriber`], returning a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119307,"byte_end":119375,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}},{"value":"/ `Layered` struct that implements [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119380,"byte_end":119432,"line_start":1006,"line_end":1006,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119437,"byte_end":119440,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ The returned `Layered` subscriber will call the methods on this `Layer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119445,"byte_end":119520,"line_start":1008,"line_end":1008,"column_start":5,"column_end":80}},{"value":"/ and then those of the wrapped subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119525,"byte_end":119570,"line_start":1009,"line_end":1009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119575,"byte_end":119578,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119583,"byte_end":119599,"line_start":1011,"line_end":1011,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119604,"byte_end":119615,"line_start":1012,"line_end":1012,"column_start":5,"column_end":16}},{"value":"/ # use tracing_subscriber::layer::Layer;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119620,"byte_end":119663,"line_start":1013,"line_end":1013,"column_start":5,"column_end":48}},{"value":"/ # use tracing_core::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119668,"byte_end":119703,"line_start":1014,"line_end":1014,"column_start":5,"column_end":40}},{"value":"/ pub struct FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119708,"byte_end":119733,"line_start":1015,"line_end":1015,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119738,"byte_end":119752,"line_start":1016,"line_end":1016,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119757,"byte_end":119762,"line_start":1017,"line_end":1017,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119767,"byte_end":119770,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119775,"byte_end":119804,"line_start":1019,"line_end":1019,"column_start":5,"column_end":34}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119809,"byte_end":119823,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119828,"byte_end":119833,"line_start":1021,"line_end":1021,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119838,"byte_end":119841,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ impl<S: Subscriber> Layer<S> for FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119846,"byte_end":119893,"line_start":1023,"line_end":1023,"column_start":5,"column_end":52}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119898,"byte_end":119912,"line_start":1024,"line_end":1024,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119917,"byte_end":119922,"line_start":1025,"line_end":1025,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119927,"byte_end":119930,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # impl FooLayer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119935,"byte_end":119956,"line_start":1027,"line_end":1027,"column_start":5,"column_end":26}},{"value":"/ # fn new() -> Self { Self {} }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":119961,"byte_end":119995,"line_start":1028,"line_end":1028,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120000,"byte_end":120007,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ # impl MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120012,"byte_end":120037,"line_start":1030,"line_end":1030,"column_start":5,"column_end":30}},{"value":"/ # fn new() -> Self { Self { }}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120042,"byte_end":120076,"line_start":1031,"line_end":1031,"column_start":5,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120081,"byte_end":120088,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/ # use tracing_core::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120093,"byte_end":120160,"line_start":1033,"line_end":1033,"column_start":5,"column_end":72}},{"value":"/ # impl tracing_core::Subscriber for MySubscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120165,"byte_end":120219,"line_start":1034,"line_end":1034,"column_start":5,"column_end":59}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120224,"byte_end":120292,"line_start":1035,"line_end":1035,"column_start":5,"column_end":73}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120297,"byte_end":120344,"line_start":1036,"line_end":1036,"column_start":5,"column_end":52}},{"value":"/ #   fn event(&self, _: &tracing_core::Event) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120349,"byte_end":120400,"line_start":1037,"line_end":1037,"column_start":5,"column_end":56}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120405,"byte_end":120461,"line_start":1038,"line_end":1038,"column_start":5,"column_end":61}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120466,"byte_end":120523,"line_start":1039,"line_end":1039,"column_start":5,"column_end":62}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120528,"byte_end":120562,"line_start":1040,"line_end":1040,"column_start":5,"column_end":39}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120567,"byte_end":120600,"line_start":1041,"line_end":1041,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120605,"byte_end":120612,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/ let subscriber = FooLayer::new()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120617,"byte_end":120653,"line_start":1043,"line_end":1043,"column_start":5,"column_end":41}},{"value":"/     .with_subscriber(MySubscriber::new());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120658,"byte_end":120704,"line_start":1044,"line_end":1044,"column_start":5,"column_end":51}},{"value":"/```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120709,"byte_end":120715,"line_start":1045,"line_end":1045,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120720,"byte_end":120723,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: tracing_core::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":120728,"byte_end":120772,"line_start":1047,"line_end":1047,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121555,"byte_end":121566,"line_start":1067,"line_end":1067,"column_start":8,"column_end":19},"name":"with_filter","qualname":"::layer::Layer::with_filter","value":"fn with_filter<F>(Self, F) -> filter::Filtered<Self, F, S> where Self: Sized,\nF: Filter<S>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Combines `self` with a [`Filter`], returning a [`Filtered`] layer.","sig":null,"attributes":[{"value":"/ Combines `self` with a [`Filter`], returning a [`Filtered`] layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121054,"byte_end":121124,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121129,"byte_end":121132,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ The [`Filter`] will control which spans and events are enabled for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121137,"byte_end":121207,"line_start":1059,"line_end":1059,"column_start":5,"column_end":75}},{"value":"/ this layer. See [the trait-level documentation][plf] for details on","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121212,"byte_end":121283,"line_start":1060,"line_end":1060,"column_start":5,"column_end":76}},{"value":"/ per-layer filtering.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121288,"byte_end":121312,"line_start":1061,"line_end":1061,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121317,"byte_end":121320,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121325,"byte_end":121366,"line_start":1063,"line_end":1063,"column_start":5,"column_end":46}},{"value":"/ [plf]: crate::layer#per-layer-filtering","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121371,"byte_end":121414,"line_start":1064,"line_end":1064,"column_start":5,"column_end":48}},{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121419,"byte_end":121469,"line_start":1065,"line_end":1065,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126343,"byte_end":126348,"line_start":1191,"line_end":1191,"column_start":8,"column_end":13},"name":"boxed","qualname":"::layer::Layer::boxed","value":"fn boxed(Self) -> Box<dyn Layer<S> + Send + Sync + 'static> where Self: Sized,\nSelf: Layer<S> + Send + Sync + 'static, S: Subscriber","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Erases the type of this [`Layer`], returning a [`Box`]ed `dyn\n Layer` trait object.","sig":null,"attributes":[{"value":"/ Erases the type of this [`Layer`], returning a [`Box`]ed `dyn","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121733,"byte_end":121798,"line_start":1075,"line_end":1075,"column_start":5,"column_end":70}},{"value":"/ Layer` trait object.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121803,"byte_end":121827,"line_start":1076,"line_end":1076,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121832,"byte_end":121835,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ This can be used when a function returns a `Layer` which may be of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121840,"byte_end":121910,"line_start":1078,"line_end":1078,"column_start":5,"column_end":75}},{"value":"/ one of several types, or when a `Layer` subscriber has a very long type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121915,"byte_end":121990,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ signature.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":121995,"byte_end":122009,"line_start":1080,"line_end":1080,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122014,"byte_end":122017,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122022,"byte_end":122036,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122041,"byte_end":122044,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ The following example will *not* compile, because the value assigned to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122049,"byte_end":122124,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ `log_layer` may have one of several different types:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122129,"byte_end":122185,"line_start":1085,"line_end":1085,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122190,"byte_end":122193,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122198,"byte_end":122217,"line_start":1087,"line_end":1087,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122222,"byte_end":122281,"line_start":1088,"line_end":1088,"column_start":5,"column_end":64}},{"value":"/ use tracing_subscriber::{Layer, filter::LevelFilter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122286,"byte_end":122355,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ use std::{path::PathBuf, fs::File, io};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122360,"byte_end":122403,"line_start":1090,"line_end":1090,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122408,"byte_end":122411,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ /// Configures whether logs are emitted to a file, to stdout, or to stderr.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122416,"byte_end":122495,"line_start":1092,"line_end":1092,"column_start":5,"column_end":84}},{"value":"/ pub enum LogConfig {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122500,"byte_end":122524,"line_start":1093,"line_end":1093,"column_start":5,"column_end":29}},{"value":"/     File(PathBuf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122529,"byte_end":122551,"line_start":1094,"line_end":1094,"column_start":5,"column_end":27}},{"value":"/     Stdout,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122556,"byte_end":122571,"line_start":1095,"line_end":1095,"column_start":5,"column_end":20}},{"value":"/     Stderr,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122576,"byte_end":122591,"line_start":1096,"line_end":1096,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122596,"byte_end":122601,"line_start":1097,"line_end":1097,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122606,"byte_end":122609,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let config = // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122614,"byte_end":122637,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}},{"value":"/     # LogConfig::Stdout;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122642,"byte_end":122670,"line_start":1100,"line_end":1100,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122675,"byte_end":122678,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ // Depending on the config, construct a layer of one of several types.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122683,"byte_end":122757,"line_start":1102,"line_end":1102,"column_start":5,"column_end":79}},{"value":"/ let log_layer = match config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122762,"byte_end":122796,"line_start":1103,"line_end":1103,"column_start":5,"column_end":39}},{"value":"/     // If logging to a file, use a maximally-verbose configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122801,"byte_end":122872,"line_start":1104,"line_end":1104,"column_start":5,"column_end":76}},{"value":"/     LogConfig::File(path) => {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122877,"byte_end":122911,"line_start":1105,"line_end":1105,"column_start":5,"column_end":39}},{"value":"/         let file = File::create(path)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122916,"byte_end":122959,"line_start":1106,"line_end":1106,"column_start":5,"column_end":48}},{"value":"/         tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":122964,"byte_end":123008,"line_start":1107,"line_end":1107,"column_start":5,"column_end":49}},{"value":"/             .with_thread_ids(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123013,"byte_end":123051,"line_start":1108,"line_end":1108,"column_start":5,"column_end":43}},{"value":"/             .with_thread_names(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123056,"byte_end":123096,"line_start":1109,"line_end":1109,"column_start":5,"column_end":45}},{"value":"/             // Selecting the JSON logging format changes the layer's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123101,"byte_end":123173,"line_start":1110,"line_end":1110,"column_start":5,"column_end":77}},{"value":"/             // type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123178,"byte_end":123202,"line_start":1111,"line_end":1111,"column_start":5,"column_end":29}},{"value":"/             .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123207,"byte_end":123230,"line_start":1112,"line_end":1112,"column_start":5,"column_end":28}},{"value":"/             .with_span_list(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123235,"byte_end":123272,"line_start":1113,"line_end":1113,"column_start":5,"column_end":42}},{"value":"/             // Setting the writer to use our log file changes the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123277,"byte_end":123346,"line_start":1114,"line_end":1114,"column_start":5,"column_end":74}},{"value":"/             // layer's type again.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123351,"byte_end":123389,"line_start":1115,"line_end":1115,"column_start":5,"column_end":43}},{"value":"/             .with_writer(file)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123394,"byte_end":123428,"line_start":1116,"line_end":1116,"column_start":5,"column_end":39}},{"value":"/     },","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123433,"byte_end":123443,"line_start":1117,"line_end":1117,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123448,"byte_end":123451,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/     // If logging to stdout, use a pretty, human-readable configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123456,"byte_end":123532,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/     LogConfig::Stdout => tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123537,"byte_end":123598,"line_start":1120,"line_end":1120,"column_start":5,"column_end":66}},{"value":"/         // Selecting the \"pretty\" logging format changes the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123603,"byte_end":123667,"line_start":1121,"line_end":1121,"column_start":5,"column_end":69}},{"value":"/         // layer's type!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123672,"byte_end":123700,"line_start":1122,"line_end":1122,"column_start":5,"column_end":33}},{"value":"/         .pretty()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123705,"byte_end":123726,"line_start":1123,"line_end":1123,"column_start":5,"column_end":26}},{"value":"/         .with_writer(io::stdout)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123731,"byte_end":123767,"line_start":1124,"line_end":1124,"column_start":5,"column_end":41}},{"value":"/         // Add a filter based on the RUST_LOG environment variable;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123772,"byte_end":123843,"line_start":1125,"line_end":1125,"column_start":5,"column_end":76}},{"value":"/         // this changes the type too!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123848,"byte_end":123889,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/         .and_then(tracing_subscriber::EnvFilter::from_default_env()),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123894,"byte_end":123967,"line_start":1127,"line_end":1127,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123972,"byte_end":123975,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/     // If logging to stdout, only log errors and warnings.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":123980,"byte_end":124042,"line_start":1129,"line_end":1129,"column_start":5,"column_end":67}},{"value":"/     LogConfig::Stderr => tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124047,"byte_end":124108,"line_start":1130,"line_end":1130,"column_start":5,"column_end":66}},{"value":"/         // Changing the writer changes the layer's type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124113,"byte_end":124172,"line_start":1131,"line_end":1131,"column_start":5,"column_end":64}},{"value":"/         .with_writer(io::stderr)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124177,"byte_end":124213,"line_start":1132,"line_end":1132,"column_start":5,"column_end":41}},{"value":"/         // Only log the `WARN` and `ERROR` levels. Adding a filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124218,"byte_end":124288,"line_start":1133,"line_end":1133,"column_start":5,"column_end":75}},{"value":"/         // changes the layer's type to `Filtered<LevelFilter, ...>`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124293,"byte_end":124365,"line_start":1134,"line_end":1134,"column_start":5,"column_end":77}},{"value":"/         .with_filter(LevelFilter::WARN),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124370,"byte_end":124414,"line_start":1135,"line_end":1135,"column_start":5,"column_end":49}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124419,"byte_end":124425,"line_start":1136,"line_end":1136,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124430,"byte_end":124433,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124438,"byte_end":124472,"line_start":1138,"line_end":1138,"column_start":5,"column_end":39}},{"value":"/     .with(log_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124477,"byte_end":124501,"line_start":1139,"line_end":1139,"column_start":5,"column_end":29}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124506,"byte_end":124522,"line_start":1140,"line_end":1140,"column_start":5,"column_end":21}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124527,"byte_end":124541,"line_start":1141,"line_end":1141,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124546,"byte_end":124553,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124558,"byte_end":124561,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ However, adding a call to `.boxed()` after each match arm erases the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124566,"byte_end":124638,"line_start":1144,"line_end":1144,"column_start":5,"column_end":77}},{"value":"/ layer's type, so this code *does* compile:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124643,"byte_end":124689,"line_start":1145,"line_end":1145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124694,"byte_end":124697,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124702,"byte_end":124709,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124714,"byte_end":124773,"line_start":1148,"line_end":1148,"column_start":5,"column_end":64}},{"value":"/ # use tracing_subscriber::{Layer, filter::LevelFilter, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124778,"byte_end":124849,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ # use std::{path::PathBuf, fs::File, io};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124854,"byte_end":124899,"line_start":1150,"line_end":1150,"column_start":5,"column_end":50}},{"value":"/ # pub enum LogConfig {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124904,"byte_end":124930,"line_start":1151,"line_end":1151,"column_start":5,"column_end":31}},{"value":"/ #    File(PathBuf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124935,"byte_end":124958,"line_start":1152,"line_end":1152,"column_start":5,"column_end":28}},{"value":"/ #    Stdout,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124963,"byte_end":124979,"line_start":1153,"line_end":1153,"column_start":5,"column_end":21}},{"value":"/ #    Stderr,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":124984,"byte_end":125000,"line_start":1154,"line_end":1154,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125005,"byte_end":125012,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}},{"value":"/ # let config = LogConfig::Stdout;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125017,"byte_end":125054,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ let log_layer = match config {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125059,"byte_end":125093,"line_start":1157,"line_end":1157,"column_start":5,"column_end":39}},{"value":"/     LogConfig::File(path) => {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125098,"byte_end":125132,"line_start":1158,"line_end":1158,"column_start":5,"column_end":39}},{"value":"/         let file = File::create(path)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125137,"byte_end":125180,"line_start":1159,"line_end":1159,"column_start":5,"column_end":48}},{"value":"/         tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125185,"byte_end":125229,"line_start":1160,"line_end":1160,"column_start":5,"column_end":49}},{"value":"/             .with_thread_ids(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125234,"byte_end":125272,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/             .with_thread_names(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125277,"byte_end":125317,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}},{"value":"/             .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125322,"byte_end":125345,"line_start":1163,"line_end":1163,"column_start":5,"column_end":28}},{"value":"/             .with_span_list(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125350,"byte_end":125387,"line_start":1164,"line_end":1164,"column_start":5,"column_end":42}},{"value":"/             .with_writer(file)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125392,"byte_end":125426,"line_start":1165,"line_end":1165,"column_start":5,"column_end":39}},{"value":"/             // Erase the type by boxing the layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125431,"byte_end":125484,"line_start":1166,"line_end":1166,"column_start":5,"column_end":58}},{"value":"/             .boxed()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125489,"byte_end":125513,"line_start":1167,"line_end":1167,"column_start":5,"column_end":29}},{"value":"/     },","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125518,"byte_end":125528,"line_start":1168,"line_end":1168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125533,"byte_end":125536,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/     LogConfig::Stdout => tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125541,"byte_end":125602,"line_start":1170,"line_end":1170,"column_start":5,"column_end":66}},{"value":"/         .pretty()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125607,"byte_end":125628,"line_start":1171,"line_end":1171,"column_start":5,"column_end":26}},{"value":"/         .with_writer(io::stdout)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125633,"byte_end":125669,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"/         .and_then(tracing_subscriber::EnvFilter::from_default_env())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125674,"byte_end":125746,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/         // Erase the type by boxing the layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125751,"byte_end":125800,"line_start":1174,"line_end":1174,"column_start":5,"column_end":54}},{"value":"/         .boxed(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125805,"byte_end":125826,"line_start":1175,"line_end":1175,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125831,"byte_end":125834,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/     LogConfig::Stderr => tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125839,"byte_end":125900,"line_start":1177,"line_end":1177,"column_start":5,"column_end":66}},{"value":"/         .with_writer(io::stderr)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125905,"byte_end":125941,"line_start":1178,"line_end":1178,"column_start":5,"column_end":41}},{"value":"/         .with_filter(LevelFilter::WARN)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125946,"byte_end":125989,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/         // Erase the type by boxing the layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":125994,"byte_end":126043,"line_start":1180,"line_end":1180,"column_start":5,"column_end":54}},{"value":"/         .boxed(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126048,"byte_end":126069,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126074,"byte_end":126080,"line_start":1182,"line_end":1182,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126085,"byte_end":126088,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126093,"byte_end":126127,"line_start":1184,"line_end":1184,"column_start":5,"column_end":39}},{"value":"/     .with(log_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126132,"byte_end":126156,"line_start":1185,"line_end":1185,"column_start":5,"column_end":29}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126161,"byte_end":126177,"line_start":1186,"line_end":1186,"column_start":5,"column_end":21}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126182,"byte_end":126196,"line_start":1187,"line_end":1187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126201,"byte_end":126208,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126213,"byte_end":126260,"line_start":1189,"line_end":1189,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":126571,"byte_end":126583,"line_start":1201,"line_end":1201,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::layer::Layer::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":127151,"byte_end":127157,"line_start":1220,"line_end":1220,"column_start":15,"column_end":21},"name":"Filter","qualname":"::layer::Filter","value":"Filter<S>","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567}],"decl_id":null,"docs":" A per-[`Layer`] filter that determines whether a span or event is enabled\n for an individual layer.","sig":null,"attributes":[{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":128032,"byte_end":128039,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"name":"enabled","qualname":"::layer::Filter::enabled","value":"fn enabled(&Self, &Metadata, &Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Returns `true` if this layer is interested in a span or event with the\n given [`Metadata`] in the current [`Context`], similarly to\n [`Subscriber::enabled`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":134213,"byte_end":134229,"line_start":1350,"line_end":1350,"column_start":12,"column_end":28},"name":"callsite_enabled","qualname":"::layer::Filter::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Returns an [`Interest`] indicating whether this layer will [always],\n [sometimes], or [never] be interested in the given [`Metadata`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":135993,"byte_end":136007,"line_start":1384,"line_end":1384,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"::layer::Filter::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Returns an optional hint of the highest [verbosity level][level] that\n this `Filter` will enable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":136383,"byte_end":136394,"line_start":1394,"line_end":1394,"column_start":12,"column_end":23},"name":"on_new_span","qualname":"::layer::Filter::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Notifies this filter that a new span was constructed with the given\n `Attributes` and `Id`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":136826,"byte_end":136835,"line_start":1405,"line_end":1405,"column_start":12,"column_end":21},"name":"on_record","qualname":"::layer::Filter::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given `Id` recorded the given\n `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":137218,"byte_end":137226,"line_start":1413,"line_end":1413,"column_start":12,"column_end":20},"name":"on_enter","qualname":"::layer::Filter::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID was entered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":137572,"byte_end":137579,"line_start":1421,"line_end":1421,"column_start":12,"column_end":19},"name":"on_exit","qualname":"::layer::Filter::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID was exited.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":137930,"byte_end":137938,"line_start":1429,"line_end":1429,"column_start":12,"column_end":20},"name":"on_close","qualname":"::layer::Filter::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" Notifies this filter that a span with the given ID has been closed.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138115,"byte_end":138128,"line_start":1436,"line_end":1436,"column_start":11,"column_end":24},"name":"SubscriberExt","qualname":"::layer::SubscriberExt","value":"SubscriberExt: Subscriber + crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":697}],"decl_id":null,"docs":" Extension trait adding a `with(Layer)` combinator to `Subscriber`s.\n","sig":null,"attributes":[{"value":"/ Extension trait adding a `with(Layer)` combinator to `Subscriber`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138033,"byte_end":138104,"line_start":1435,"line_end":1435,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138222,"byte_end":138226,"line_start":1438,"line_end":1438,"column_start":8,"column_end":12},"name":"with","qualname":"::layer::SubscriberExt::with","value":"fn with<L>(Self, L) -> Layered<L, Self> where L: Layer<Self>, Self: Sized","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Wraps `self` with the provided `layer`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with the provided `layer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138171,"byte_end":138214,"line_start":1437,"line_end":1437,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138447,"byte_end":138455,"line_start":1449,"line_end":1449,"column_start":12,"column_end":20},"name":"Identity","qualname":"::layer::Identity","value":"Identity {  }","parent":null,"children":[{"krate":0,"index":2569}],"decl_id":null,"docs":" A layer that does nothing.\n","sig":null,"attributes":[{"value":"/ A layer that does nothing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138372,"byte_end":138402,"line_start":1447,"line_end":1447,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138581,"byte_end":138589,"line_start":1460,"line_end":1460,"column_start":8,"column_end":16},"name":"on_layer","qualname":"<Option<L> as layer::Layer>::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":676},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138744,"byte_end":138755,"line_start":1467,"line_end":1467,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Option<L> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138727,"byte_end":138736,"line_start":1466,"line_end":1466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138955,"byte_end":138972,"line_start":1474,"line_end":1474,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Option<L> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138938,"byte_end":138947,"line_start":1473,"line_end":1473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139197,"byte_end":139204,"line_start":1482,"line_end":1482,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Option<L> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139180,"byte_end":139189,"line_start":1481,"line_end":1481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139414,"byte_end":139428,"line_start":1490,"line_end":1490,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Option<L> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139397,"byte_end":139406,"line_start":1489,"line_end":1489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139755,"byte_end":139764,"line_start":1502,"line_end":1502,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Option<L> as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139738,"byte_end":139747,"line_start":1501,"line_end":1501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139965,"byte_end":139980,"line_start":1509,"line_end":1509,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"<Option<L> as layer::Layer>::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":682},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":139948,"byte_end":139957,"line_start":1508,"line_end":1508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140181,"byte_end":140194,"line_start":1516,"line_end":1516,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Option<L> as layer::Layer>::event_enabled","value":"fn event_enabled(&Self, &Event, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":683},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140164,"byte_end":140173,"line_start":1515,"line_end":1515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140401,"byte_end":140409,"line_start":1524,"line_end":1524,"column_start":8,"column_end":16},"name":"on_event","qualname":"<Option<L> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140384,"byte_end":140393,"line_start":1523,"line_end":1523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140577,"byte_end":140585,"line_start":1531,"line_end":1531,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Option<L> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140560,"byte_end":140569,"line_start":1530,"line_end":1530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140746,"byte_end":140753,"line_start":1538,"line_end":1538,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Option<L> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140729,"byte_end":140738,"line_start":1537,"line_end":1537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140913,"byte_end":140921,"line_start":1545,"line_end":1545,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Option<L> as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":140896,"byte_end":140905,"line_start":1544,"line_end":1544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":141081,"byte_end":141093,"line_start":1552,"line_end":1552,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"<Option<L> as layer::Layer>::on_id_change","value":"fn on_id_change(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":688},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":141064,"byte_end":141073,"line_start":1551,"line_end":1551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":141306,"byte_end":141318,"line_start":1560,"line_end":1560,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Option<L> as layer::Layer>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":695},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":141282,"byte_end":141291,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144518,"byte_end":144526,"line_start":1672,"line_end":1672,"column_start":12,"column_end":20},"name":"on_layer","qualname":"<Vec<L> as layer::Layer>::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":676},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144664,"byte_end":144681,"line_start":1678,"line_end":1678,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Vec<L> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":145219,"byte_end":145226,"line_start":1693,"line_end":1693,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Vec<L> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":145378,"byte_end":145391,"line_start":1697,"line_end":1697,"column_start":12,"column_end":25},"name":"event_enabled","qualname":"<Vec<L> as layer::Layer>::event_enabled","value":"fn event_enabled(&Self, &Event, Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":683},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":145540,"byte_end":145551,"line_start":1701,"line_end":1701,"column_start":12,"column_end":23},"name":"on_new_span","qualname":"<Vec<L> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":145746,"byte_end":145760,"line_start":1707,"line_end":1707,"column_start":12,"column_end":26},"name":"max_level_hint","qualname":"<Vec<L> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":146365,"byte_end":146374,"line_start":1721,"line_end":1721,"column_start":12,"column_end":21},"name":"on_record","qualname":"<Vec<L> as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":146568,"byte_end":146583,"line_start":1727,"line_end":1727,"column_start":12,"column_end":27},"name":"on_follows_from","qualname":"<Vec<L> as layer::Layer>::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":682},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":146778,"byte_end":146786,"line_start":1733,"line_end":1733,"column_start":12,"column_end":20},"name":"on_event","qualname":"<Vec<L> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":146948,"byte_end":146956,"line_start":1739,"line_end":1739,"column_start":12,"column_end":20},"name":"on_enter","qualname":"<Vec<L> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":147111,"byte_end":147118,"line_start":1745,"line_end":1745,"column_start":12,"column_end":19},"name":"on_exit","qualname":"<Vec<L> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":147272,"byte_end":147280,"line_start":1751,"line_end":1751,"column_start":12,"column_end":20},"name":"on_close","qualname":"<Vec<L> as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":147472,"byte_end":147484,"line_start":1758,"line_end":1758,"column_start":19,"column_end":31},"name":"downcast_raw","qualname":"<Vec<L> as layer::Layer>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":695},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148923,"byte_end":148926,"line_start":1795,"line_end":1795,"column_start":12,"column_end":15},"name":"new","qualname":"<Identity>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Identity` layer.\n","sig":null,"attributes":[{"value":"/ Returns a new `Identity` layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148876,"byte_end":148911,"line_start":1794,"line_end":1794,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757}],"decl_id":null,"docs":" Extension traits and other utilities to make working with subscribers more\n ergonomic.\n","sig":null,"attributes":[{"value":"/ Extension traits and other utilities to make working with subscribers more","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183550,"byte_end":183628,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ ergonomic.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183629,"byte_end":183643,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184667,"byte_end":184684,"line_start":23,"line_end":23,"column_start":11,"column_end":28},"name":"SubscriberInitExt","qualname":"::util::SubscriberInitExt","value":"SubscriberInitExt","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" Extension trait adding utility methods for subscriber initialization.","sig":null,"attributes":[{"value":"/ Extension trait adding utility methods for subscriber initialization.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183811,"byte_end":183884,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183885,"byte_end":183888,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait provides extension methods to make configuring and setting a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183889,"byte_end":183964,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ [default subscriber] more ergonomic. It is automatically implemented for all","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":183965,"byte_end":184045,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ types that can be converted into a [trace dispatcher]. Since `Dispatch`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184046,"byte_end":184121,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ implements `From<T>` for all `T: Subscriber`, all `Subscriber`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184122,"byte_end":184188,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ implementations will implement this extension trait as well. Types which","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184189,"byte_end":184265,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ can be converted into `Subscriber`s, such as builders that construct a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184266,"byte_end":184340,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `Subscriber`, may implement `Into<Dispatch>`, and will also receive an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184341,"byte_end":184415,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ implementation of this trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184416,"byte_end":184449,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184450,"byte_end":184453,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184454,"byte_end":184571,"line_start":21,"line_end":21,"column_start":1,"column_end":118}},{"value":"/ [trace dispatcher]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184572,"byte_end":184656,"line_start":22,"line_end":22,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185331,"byte_end":185342,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"set_default","qualname":"::util::SubscriberInitExt::set_default","value":"fn set_default(Self) -> dispatcher::DefaultGuard","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Sets `self` as the [default subscriber] in the current scope, returning a\n guard that will unset it when dropped.","sig":null,"attributes":[{"value":"/ Sets `self` as the [default subscriber] in the current scope, returning a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184723,"byte_end":184800,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/ guard that will unset it when dropped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184805,"byte_end":184847,"line_start":28,"line_end":28,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184852,"byte_end":184855,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also initialize","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184860,"byte_end":184935,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ a [`log`] compatibility layer. This allows the subscriber to consume","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":184940,"byte_end":185012,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185017,"byte_end":185075,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185080,"byte_end":185083,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185088,"byte_end":185205,"line_start":34,"line_end":34,"column_start":5,"column_end":122}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185210,"byte_end":185244,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185249,"byte_end":185272,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":186282,"byte_end":186290,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"try_init","qualname":"::util::SubscriberInitExt::try_init","value":"fn try_init(Self) -> Result<(), TryInitError>","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Attempts to set `self` as the [global default subscriber] in the current\n scope, returning an error if one is already set.","sig":null,"attributes":[{"value":"/ Attempts to set `self` as the [global default subscriber] in the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185525,"byte_end":185601,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ scope, returning an error if one is already set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185606,"byte_end":185658,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185663,"byte_end":185666,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also attempt to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185671,"byte_end":185746,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ initialize a [`log`] compatibility layer. This allows the subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185751,"byte_end":185826,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ consume `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185831,"byte_end":185897,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185902,"byte_end":185905,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if a global default subscriber has already","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185910,"byte_end":185985,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ been set, or if a `log` logger has already been set (when the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":185990,"byte_end":186055,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ \"tracing-log\" feature is enabled).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":186060,"byte_end":186098,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":186103,"byte_end":186106,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [global default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":186111,"byte_end":186235,"line_start":56,"line_end":56,"column_start":5,"column_end":129}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":186240,"byte_end":186274,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187792,"byte_end":187796,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"init","qualname":"::util::SubscriberInitExt::init","value":"fn init(Self)","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Attempts to set `self` as the [global default subscriber] in the current\n scope, panicking if this fails.","sig":null,"attributes":[{"value":"/ Attempts to set `self` as the [global default subscriber] in the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187062,"byte_end":187138,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ scope, panicking if this fails.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187143,"byte_end":187178,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187183,"byte_end":187186,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If the \"tracing-log\" feature flag is enabled, this will also attempt to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187191,"byte_end":187266,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ initialize a [`log`] compatibility layer. This allows the subscriber to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187271,"byte_end":187346,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ consume `log::Record`s as though they were `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187351,"byte_end":187417,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187422,"byte_end":187425,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method panics if a global default subscriber has already been set,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187430,"byte_end":187505,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ or if a `log` logger has already been set (when the \"tracing-log\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187510,"byte_end":187579,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ feature is enabled).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187584,"byte_end":187608,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187613,"byte_end":187616,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [global default subscriber]: https://docs.rs/tracing/0.1.21/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187621,"byte_end":187745,"line_start":87,"line_end":87,"column_start":5,"column_end":129}},{"value":"/ [`log`]: https://crates.io/log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187750,"byte_end":187784,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188093,"byte_end":188105,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"TryInitError","qualname":"::util::TryInitError","value":"TryInitError {  }","parent":null,"children":[{"krate":0,"index":749}],"decl_id":null,"docs":" Error returned by [`try_init`](SubscriberInitExt::try_init) if a global default subscriber could not be initialized.\n","sig":null,"attributes":[{"value":"/ Error returned by [`try_init`](SubscriberInitExt::try_init) if a global default subscriber could not be initialized.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187961,"byte_end":188081,"line_start":97,"line_end":97,"column_start":1,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188569,"byte_end":188572,"line_start":121,"line_end":121,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryInitError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188876,"byte_end":188879,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryInitError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":189225,"byte_end":189231,"line_start":150,"line_end":150,"column_start":8,"column_end":14},"name":"source","qualname":"<TryInitError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reload","qualname":"::reload","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2753},{"krate":0,"index":2758},{"krate":0,"index":2762},{"krate":0,"index":2767},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2780},{"krate":0,"index":2677},{"krate":0,"index":2693},{"krate":0,"index":2704},{"krate":0,"index":2709},{"krate":0,"index":2721},{"krate":0,"index":2725},{"krate":0,"index":2729},{"krate":0,"index":2731}],"decl_id":null,"docs":" Wrapper for a `Layer` to allow it to be dynamically reloaded.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ Wrapper for a `Layer` to allow it to be dynamically reloaded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352245,"byte_end":14352310,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352311,"byte_end":14352314,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Layer` type] implementing the [`Layer` trait] or [`Filter` trait]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352315,"byte_end":14352409,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ which wraps another type implementing the corresponding trait. This","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352410,"byte_end":14352481,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows the wrapped type to be replaced with another","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352482,"byte_end":14352537,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/ instance of that type at runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352538,"byte_end":14352575,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352576,"byte_end":14352579,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This can be used in cases where a subset of `Layer` or `Filter` functionality","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352580,"byte_end":14352661,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ should be dynamically reconfigured, such as when filtering directives may","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352662,"byte_end":14352739,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ change at runtime. Note that this layer introduces a (relatively small)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352740,"byte_end":14352815,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ amount of overhead, and should thus only be used as needed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352816,"byte_end":14352879,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352880,"byte_end":14352883,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352884,"byte_end":14352898,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352899,"byte_end":14352902,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Reloading a [global filtering](crate::layer#global-filtering) layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352903,"byte_end":14352975,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352976,"byte_end":14352979,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352980,"byte_end":14352991,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14352992,"byte_end":14353016,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ use tracing_subscriber::{filter, fmt, reload, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353017,"byte_end":14353079,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ let filter = filter::LevelFilter::WARN;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353080,"byte_end":14353123,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ let (filter, reload_handle) = reload::Layer::new(filter);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353124,"byte_end":14353185,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353186,"byte_end":14353220,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/   .with(filter)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353221,"byte_end":14353240,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/   .with(fmt::Layer::default())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353241,"byte_end":14353275,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/   .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353276,"byte_end":14353290,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353291,"byte_end":14353296,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353297,"byte_end":14353346,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ # let _: &reload::Handle<filter::LevelFilter, tracing_subscriber::Registry> = &reload_handle;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353347,"byte_end":14353444,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353445,"byte_end":14353450,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353451,"byte_end":14353485,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ reload_handle.modify(|filter| *filter = filter::LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353486,"byte_end":14353557,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353558,"byte_end":14353591,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353592,"byte_end":14353599,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353600,"byte_end":14353603,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Reloading a [`Filtered`](crate::filter::Filtered) layer:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353604,"byte_end":14353664,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353665,"byte_end":14353668,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353669,"byte_end":14353680,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353681,"byte_end":14353705,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ use tracing_subscriber::{filter, fmt, reload, prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353706,"byte_end":14353768,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let filtered_layer = fmt::Layer::default().with_filter(filter::LevelFilter::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353769,"byte_end":14353855,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ let (filtered_layer, reload_handle) = reload::Layer::new(filtered_layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353856,"byte_end":14353933,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353934,"byte_end":14353939,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353940,"byte_end":14353989,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/ # let _: &reload::Handle<filter::Filtered<fmt::Layer<tracing_subscriber::Registry>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14353990,"byte_end":14354077,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ # filter::LevelFilter, tracing_subscriber::Registry>,tracing_subscriber::Registry>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354078,"byte_end":14354164,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ # = &reload_handle;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354165,"byte_end":14354188,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354189,"byte_end":14354194,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354195,"byte_end":14354229,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/   .with(filtered_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354230,"byte_end":14354257,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/   .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354258,"byte_end":14354272,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ info!(\"This will be ignored\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354273,"byte_end":14354307,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ reload_handle.modify(|layer| *layer.filter_mut() = filter::LevelFilter::INFO);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354308,"byte_end":14354390,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ info!(\"This will be logged\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354391,"byte_end":14354424,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354425,"byte_end":14354432,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354433,"byte_end":14354436,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354437,"byte_end":14354448,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354449,"byte_end":14354452,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The [`Layer`] implementation is unable to implement downcasting functionality,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354453,"byte_end":14354535,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ so certain [`Layer`] will fail to downcast if wrapped in a `reload::Layer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354536,"byte_end":14354615,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354616,"byte_end":14354619,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you only want to be able to dynamically change the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354620,"byte_end":14354677,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/ `Filter` on a layer, prefer wrapping that `Filter` in the `reload::Layer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354678,"byte_end":14354756,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354757,"byte_end":14354760,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Filter` trait]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354761,"byte_end":14354803,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/ [`Layer` type]: Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354804,"byte_end":14354829,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/ [`Layer` trait]: super::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14354830,"byte_end":14354870,"line_start":66,"line_end":66,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355223,"byte_end":14355228,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Layer","qualname":"::reload::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757}],"decl_id":null,"docs":" Wraps a `Layer` or `Filter`, allowing it to be reloaded dynamically at runtime.\n","sig":null,"attributes":[{"value":"/ Wraps a `Layer` or `Filter`, allowing it to be reloaded dynamically at runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355111,"byte_end":14355194,"line_start":81,"line_end":81,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355686,"byte_end":14355692,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"Handle","qualname":"::reload::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":2765},{"krate":0,"index":2766}],"decl_id":null,"docs":" Allows reloading the state of an associated [`Layer`](crate::layer::Layer).\n","sig":null,"attributes":[{"value":"/ Allows reloading the state of an associated [`Layer`](crate::layer::Layer).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355578,"byte_end":14355657,"line_start":92,"line_end":92,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355849,"byte_end":14355854,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"Error","qualname":"::reload::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2772}],"decl_id":null,"docs":" Indicates that an error occurred when reloading a layer.\n","sig":null,"attributes":[{"value":"/ Indicates that an error occurred when reloading a layer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14355760,"byte_end":14355820,"line_start":99,"line_end":99,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356090,"byte_end":14356098,"line_start":118,"line_end":118,"column_start":8,"column_end":16},"name":"on_layer","qualname":"<Layer<L, S> as layer::Layer>::on_layer","value":"fn on_layer(&mut Self, &mut S)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":676},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356233,"byte_end":14356250,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Layer<L, S> as layer::Layer>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":677},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356216,"byte_end":14356225,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356438,"byte_end":14356445,"line_start":128,"line_end":128,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Layer<L, S> as layer::Layer>::enabled","value":"fn enabled(&Self, &Metadata, layer::Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":678},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356421,"byte_end":14356430,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356623,"byte_end":14356634,"line_start":133,"line_end":133,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Layer<L, S> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356606,"byte_end":14356615,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356810,"byte_end":14356819,"line_start":138,"line_end":138,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Layer<L, S> as layer::Layer>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356793,"byte_end":14356802,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356995,"byte_end":14357010,"line_start":143,"line_end":143,"column_start":8,"column_end":23},"name":"on_follows_from","qualname":"<Layer<L, S> as layer::Layer>::on_follows_from","value":"fn on_follows_from(&Self, &span::Id, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":682},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356978,"byte_end":14356987,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357186,"byte_end":14357199,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Layer<L, S> as layer::Layer>::event_enabled","value":"fn event_enabled(&Self, &Event, layer::Context<, S>) -> bool","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":683},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357169,"byte_end":14357178,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357374,"byte_end":14357382,"line_start":153,"line_end":153,"column_start":8,"column_end":16},"name":"on_event","qualname":"<Layer<L, S> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357357,"byte_end":14357366,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357525,"byte_end":14357533,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Layer<L, S> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357508,"byte_end":14357517,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357669,"byte_end":14357676,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Layer<L, S> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357652,"byte_end":14357661,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357811,"byte_end":14357819,"line_start":168,"line_end":168,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Layer<L, S> as layer::Layer>::on_close","value":"fn on_close(&Self, span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357794,"byte_end":14357803,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357954,"byte_end":14357966,"line_start":173,"line_end":173,"column_start":8,"column_end":20},"name":"on_id_change","qualname":"<Layer<L, S> as layer::Layer>::on_id_change","value":"fn on_id_change(&Self, &span::Id, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":688},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14357937,"byte_end":14357946,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358129,"byte_end":14358143,"line_start":178,"line_end":178,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Layer<L, S> as layer::Layer>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":680},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358112,"byte_end":14358121,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358551,"byte_end":14358567,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"callsite_enabled","qualname":"<Layer<L, S> as layer::Filter>::callsite_enabled","value":"fn callsite_enabled(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2561},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358534,"byte_end":14358543,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358754,"byte_end":14358761,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Layer<L, S> as layer::Filter>::enabled","value":"fn enabled(&Self, &Metadata, &layer::Context<, S>) -> bool","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2560},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358737,"byte_end":14358746,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358940,"byte_end":14358951,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Layer<L, S> as layer::Filter>::on_new_span","value":"fn on_new_span(&Self, &span::Attributes, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2563},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358923,"byte_end":14358932,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359127,"byte_end":14359136,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Layer<L, S> as layer::Filter>::on_record","value":"fn on_record(&Self, &span::Id, &span::Record, layer::Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2564},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359110,"byte_end":14359119,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359312,"byte_end":14359320,"line_start":213,"line_end":213,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Layer<L, S> as layer::Filter>::on_enter","value":"fn on_enter(&Self, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2565},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359295,"byte_end":14359304,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359456,"byte_end":14359463,"line_start":218,"line_end":218,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Layer<L, S> as layer::Filter>::on_exit","value":"fn on_exit(&Self, &span::Id, layer::Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2566},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359439,"byte_end":14359448,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359598,"byte_end":14359606,"line_start":223,"line_end":223,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Layer<L, S> as layer::Filter>::on_close","value":"fn on_close(&Self, span::Id, layer::Context<, S>)","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359581,"byte_end":14359590,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359741,"byte_end":14359755,"line_start":228,"line_end":228,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Layer<L, S> as layer::Filter>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":2558},"children":[],"decl_id":{"krate":0,"index":2562},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359724,"byte_end":14359733,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360148,"byte_end":14360151,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<L, S>>::new","value":"fn new(L) -> (Self, Handle<L, S>)","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given [`Layer`] or [`Filter`], returning a `reload::Layer`\n and a `Handle` that allows the inner value to be modified at runtime.","sig":null,"attributes":[{"value":"/ Wraps the given [`Layer`] or [`Filter`], returning a `reload::Layer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359898,"byte_end":14359970,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ and a `Handle` that allows the inner value to be modified at runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359975,"byte_end":14360048,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360053,"byte_end":14360056,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360061,"byte_end":14360095,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360100,"byte_end":14360136,"line_start":238,"line_end":238,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360560,"byte_end":14360566,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"handle","qualname":"<Layer<L, S>>::handle","value":"fn handle(&Self) -> Handle<L, S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` that can be used to reload the wrapped [`Layer`] or [`Filter`].","sig":null,"attributes":[{"value":"/ Returns a `Handle` that can be used to reload the wrapped [`Layer`] or [`Filter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360373,"byte_end":14360459,"line_start":248,"line_end":248,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360464,"byte_end":14360467,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360472,"byte_end":14360506,"line_start":250,"line_end":250,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::filter::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360511,"byte_end":14360548,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361362,"byte_end":14361368,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"reload","qualname":"<Handle<L, S>>::reload","value":"fn reload<impl Into<L>>(&Self, impl Into<L>) -> Result<(), Error> where\nimpl Into<L>: Into<L>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current [`Layer`] or [`Filter`] with the provided `new_value`.","sig":null,"attributes":[{"value":"/ Replace the current [`Layer`] or [`Filter`] with the provided `new_value`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360763,"byte_end":14360841,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360846,"byte_end":14360849,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`Handle::reload`] cannot be used with the [`Filtered`] layer; use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360854,"byte_end":14360924,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ [`Handle::modify`] instead (see [this issue] for additional details).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360929,"byte_end":14361002,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361007,"byte_end":14361010,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ However, if the _only_ the [`Filter`]  needs to be modified, use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361015,"byte_end":14361083,"line_start":268,"line_end":268,"column_start":5,"column_end":73}},{"value":"/ `reload::Layer` to wrap the `Filter` directly.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361088,"byte_end":14361138,"line_start":269,"line_end":269,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361143,"byte_end":14361146,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361151,"byte_end":14361185,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/ [`Filter`]: crate::layer::Filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361190,"byte_end":14361226,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/ [`Filtered`]: crate::filter::Filtered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361231,"byte_end":14361272,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361277,"byte_end":14361280,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [this issue]: https://github.com/tokio-rs/tracing/issues/1629","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361285,"byte_end":14361350,"line_start":275,"line_end":275,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361650,"byte_end":14361656,"line_start":284,"line_end":284,"column_start":12,"column_end":18},"name":"modify","qualname":"<Handle<L, S>>::modify","value":"fn modify<impl FnOnce(&mut L)>(&Self, impl FnOnce(&mut L))\n-> Result<(), Error> where impl FnOnce(&mut L): FnOnce(&mut L) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes a closure with a mutable reference to the current layer or filter,\n allowing it to be modified in place.\n","sig":null,"attributes":[{"value":"/ Invokes a closure with a mutable reference to the current layer or filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361515,"byte_end":14361593,"line_start":282,"line_end":282,"column_start":5,"column_end":83}},{"value":"/ allowing it to be modified in place.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14361598,"byte_end":14361638,"line_start":283,"line_end":283,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362304,"byte_end":14362317,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"clone_current","qualname":"<Handle<L, S>>::clone_current","value":"fn clone_current(&Self) -> Option<L> where L: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of the layer or filter's current value if it still exists.\n Otherwise, if the subscriber has been dropped, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns a clone of the layer or filter's current value if it still exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362143,"byte_end":14362221,"line_start":299,"line_end":299,"column_start":5,"column_end":83}},{"value":"/ Otherwise, if the subscriber has been dropped, returns `None`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362226,"byte_end":14362292,"line_start":300,"line_end":300,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362594,"byte_end":14362606,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"with_current","qualname":"<Handle<L, S>>::with_current","value":"fn with_current<T, impl FnOnce(&L) -> T>(&Self, impl FnOnce(&L) -> T)\n-> Result<T, Error> where impl FnOnce(&L) -> T: FnOnce(&L) -> T","parent":null,"children":[],"decl_id":null,"docs":" Invokes a closure with a borrowed reference to the current layer or filter,\n returning the result (or an error if the subscriber no longer exists).\n","sig":null,"attributes":[{"value":"/ Invokes a closure with a borrowed reference to the current layer or filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362424,"byte_end":14362503,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/ returning the result (or an error if the subscriber no longer exists).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362508,"byte_end":14362582,"line_start":309,"line_end":309,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362933,"byte_end":14362938,"line_start":320,"line_end":320,"column_start":8,"column_end":13},"name":"clone","qualname":"<Handle<L, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363325,"byte_end":14363336,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<Error>::is_poisoned","value":"fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error occurred because the layer was poisoned by\n a panic on another thread.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error occurred because the layer was poisoned by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363203,"byte_end":14363278,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ a panic on another thread.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363283,"byte_end":14363313,"line_start":338,"line_end":338,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363545,"byte_end":14363555,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"is_dropped","qualname":"<Error>::is_dropped","value":"fn is_dropped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error occurred because the `Subscriber`\n containing the reloadable layer was dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error occurred because the `Subscriber`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363414,"byte_end":14363480,"line_start":343,"line_end":343,"column_start":5,"column_end":71}},{"value":"/ containing the reloadable layer was dropped.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363485,"byte_end":14363533,"line_start":344,"line_end":344,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363674,"byte_end":14363677,"line_start":351,"line_end":351,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fmt","qualname":"::fmt","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":3058},{"krate":0,"index":3474},{"krate":0,"index":3518},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3732},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":4235},{"krate":0,"index":4241},{"krate":0,"index":3763},{"krate":0,"index":4247},{"krate":0,"index":4254},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3797},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3820},{"krate":0,"index":3828},{"krate":0,"index":3849},{"krate":0,"index":3854},{"krate":0,"index":3859},{"krate":0,"index":3892},{"krate":0,"index":3893}],"decl_id":null,"docs":" A `Subscriber` for formatting and logging `tracing` data.","sig":null,"attributes":[{"value":"cfg(all(feature = \"fmt\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}},{"value":"/ A `Subscriber` for formatting and logging `tracing` data.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14365963,"byte_end":14366024,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366025,"byte_end":14366028,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366029,"byte_end":14366043,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366044,"byte_end":14366047,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs with context-aware,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366048,"byte_end":14366130,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ structured, event-based diagnostic information. This crate provides an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366131,"byte_end":14366205,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ implementation of the [`Subscriber`] trait that records `tracing`'s `Event`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366206,"byte_end":14366286,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ and `Span`s by formatting them as text and logging them to stdout.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366287,"byte_end":14366357,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366358,"byte_end":14366361,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366362,"byte_end":14366373,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366374,"byte_end":14366377,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml` file:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366378,"byte_end":14366424,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366425,"byte_end":14366428,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366429,"byte_end":14366440,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366441,"byte_end":14366459,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ tracing-subscriber = \"0.3\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366460,"byte_end":14366490,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366491,"byte_end":14366498,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366499,"byte_end":14366502,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366503,"byte_end":14366557,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366558,"byte_end":14366561,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [msrv]: super#supported-rust-versions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366562,"byte_end":14366603,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366604,"byte_end":14366607,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Add the following to your executable to initialize the default subscriber:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366608,"byte_end":14366686,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366687,"byte_end":14366698,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366699,"byte_end":14366726,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366727,"byte_end":14366730,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::fmt::init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366731,"byte_end":14366767,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366768,"byte_end":14366775,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366776,"byte_end":14366779,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Filtering Events with Environment Variables","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366780,"byte_end":14366830,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366831,"byte_end":14366834,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The default subscriber installed by `init` enables you to filter events","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366835,"byte_end":14366910,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ at runtime using environment variables (using the [`EnvFilter`]).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366911,"byte_end":14366980,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366981,"byte_end":14366984,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The filter syntax is a superset of the [`env_logger`] syntax.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14366985,"byte_end":14367050,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367051,"byte_end":14367054,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367055,"byte_end":14367071,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/ - Setting `RUST_LOG=debug` enables all `Span`s and `Event`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367072,"byte_end":14367135,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/     set to the log level `DEBUG` or higher","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367136,"byte_end":14367182,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ - Setting `RUST_LOG=my_crate=trace` enables `Span`s and `Event`s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367183,"byte_end":14367251,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/     in `my_crate` at all log levels","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367252,"byte_end":14367291,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367292,"byte_end":14367295,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **Note**: This should **not** be called by libraries. Libraries should use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367296,"byte_end":14367374,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ [`tracing`] to publish `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367375,"byte_end":14367421,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367422,"byte_end":14367425,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Configuration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367426,"byte_end":14367445,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367446,"byte_end":14367449,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ You can configure a subscriber instead of using the defaults with","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367450,"byte_end":14367519,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the following functions:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367520,"byte_end":14367548,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367549,"byte_end":14367552,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367553,"byte_end":14367571,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367572,"byte_end":14367575,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`FmtSubscriber`] formats and records `tracing` events as line-oriented logs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367576,"byte_end":14367661,"line_start":53,"line_end":53,"column_start":1,"column_end":86}},{"value":"/ You can create one by calling:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367662,"byte_end":14367696,"line_start":54,"line_end":54,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367697,"byte_end":14367700,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367701,"byte_end":14367712,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367713,"byte_end":14367759,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/     // ... add configuration","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367760,"byte_end":14367792,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367793,"byte_end":14367811,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367812,"byte_end":14367819,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367820,"byte_end":14367823,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ You can find the configuration methods for [`FmtSubscriber`] in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367824,"byte_end":14367891,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ [`SubscriberBuilder`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367892,"byte_end":14367918,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367919,"byte_end":14367922,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Formatters","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367923,"byte_end":14367940,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367941,"byte_end":14367944,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The output format used by the layer and subscriber in this module is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14367945,"byte_end":14368017,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/ represented by implementing the [`FormatEvent`] trait, and can be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368018,"byte_end":14368087,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ customized. This module provides a number of formatter implementations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368088,"byte_end":14368163,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368164,"byte_end":14368167,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ * [`format::Full`]: The default formatter. This emits human-readable,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368168,"byte_end":14368241,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/   single-line logs for each event that occurs, with the current span context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368242,"byte_end":14368322,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/   displayed before the formatted representation of the event. See","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368323,"byte_end":14368392,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/   [here](format::Full#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368393,"byte_end":14368453,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368454,"byte_end":14368457,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * [`format::Compact`]: A variant of the default formatter, optimized for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368458,"byte_end":14368534,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/   short line lengths. Fields from the current span context are appended to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368535,"byte_end":14368613,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/   the fields of the formatted event. See","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368614,"byte_end":14368658,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/   [here](format::Compact#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368659,"byte_end":14368722,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368723,"byte_end":14368726,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * [`format::Pretty`]: Emits excessively pretty, multi-line logs, optimized","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368727,"byte_end":14368805,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/   for human readability. This is primarily intended to be used in local","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368806,"byte_end":14368881,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/   development and debugging, or for command-line applications, where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368882,"byte_end":14368954,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/   automated analysis and compact storage of logs is less of a priority than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14368955,"byte_end":14369034,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/   readability and visual appeal. See [here](format::Pretty#example-output)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369035,"byte_end":14369113,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/   for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369114,"byte_end":14369138,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369139,"byte_end":14369142,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * [`format::Json`]: Outputs newline-delimited JSON logs. This is intended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369143,"byte_end":14369220,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/   for production use with systems where structured logs are consumed as JSON","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369221,"byte_end":14369301,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/   by analysis and viewing tools. The JSON output is not optimized for human","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369302,"byte_end":14369381,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/   readability. See [here](format::Json#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369382,"byte_end":14369459,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369460,"byte_end":14369463,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ### Customizing Formatters","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369464,"byte_end":14369494,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369495,"byte_end":14369498,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The formatting of log lines for spans and events is controlled by two","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369499,"byte_end":14369572,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/ traits, [`FormatEvent`] and [`FormatFields`]. The [`FormatEvent`] trait","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369573,"byte_end":14369648,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ determines the overall formatting of the log line, such as what information","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369649,"byte_end":14369728,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ from the event's metadata and span context is included and in what order.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369729,"byte_end":14369806,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ The [`FormatFields`] trait determines how fields &mdash; both the event's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369807,"byte_end":14369884,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ fields and fields on spans &mdash; are formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369885,"byte_end":14369938,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369939,"byte_end":14369942,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The [`fmt::format`] module provides several types which implement these traits,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14369943,"byte_end":14370026,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/ many of which expose additional configuration options to customize their","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370027,"byte_end":14370103,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ output. The [`format::Format`] type implements common configuration used by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370104,"byte_end":14370183,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ all the formatters provided in this crate, and can be used as a builder to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370184,"byte_end":14370262,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ set specific formatting settings. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370263,"byte_end":14370313,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370314,"byte_end":14370317,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370318,"byte_end":14370325,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370326,"byte_end":14370358,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370359,"byte_end":14370362,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // Configure a custom event formatter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370363,"byte_end":14370404,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ let format = fmt::format()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370405,"byte_end":14370435,"line_start":112,"line_end":112,"column_start":1,"column_end":31}},{"value":"/    .with_level(false) // don't include levels in formatted output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370436,"byte_end":14370505,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/    .with_target(false) // don't include targets","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370506,"byte_end":14370557,"line_start":114,"line_end":114,"column_start":1,"column_end":52}},{"value":"/    .with_thread_ids(true) // include the thread ID of the current thread","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370558,"byte_end":14370634,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/    .with_thread_names(true) // include the name of the current thread","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370635,"byte_end":14370708,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/    .compact(); // use the `Compact` formatting style.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370709,"byte_end":14370766,"line_start":117,"line_end":117,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370767,"byte_end":14370770,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ // Create a `fmt` subscriber that uses our custom event format, and set it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370771,"byte_end":14370849,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ // as the default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370850,"byte_end":14370872,"line_start":120,"line_end":120,"column_start":1,"column_end":23}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370873,"byte_end":14370902,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/     .event_format(format)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370903,"byte_end":14370932,"line_start":122,"line_end":122,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370933,"byte_end":14370949,"line_start":123,"line_end":123,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370950,"byte_end":14370957,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370958,"byte_end":14370961,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ However, if a specific output format is needed, other crates can","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14370962,"byte_end":14371030,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ also implement [`FormatEvent`] and [`FormatFields`]. See those traits'","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371031,"byte_end":14371105,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ documentation for details on how to implement them.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371106,"byte_end":14371161,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371162,"byte_end":14371165,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ## Filters","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371166,"byte_end":14371180,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371181,"byte_end":14371184,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ If you want to filter the `tracing` `Events` based on environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371185,"byte_end":14371254,"line_start":132,"line_end":132,"column_start":1,"column_end":70}},{"value":"/ variables, you can use the [`EnvFilter`] as follows:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371255,"byte_end":14371311,"line_start":133,"line_end":133,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371312,"byte_end":14371315,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371316,"byte_end":14371327,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::EnvFilter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371328,"byte_end":14371366,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371367,"byte_end":14371370,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let filter = EnvFilter::from_default_env();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371371,"byte_end":14371418,"line_start":138,"line_end":138,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371419,"byte_end":14371426,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371427,"byte_end":14371430,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ As mentioned above, the [`EnvFilter`] allows `Span`s and `Event`s to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371431,"byte_end":14371503,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/ be filtered at runtime by setting the `RUST_LOG` environment variable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371504,"byte_end":14371578,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371579,"byte_end":14371582,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ You can find the other available [`filter`]s in the documentation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371583,"byte_end":14371653,"line_start":144,"line_end":144,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371654,"byte_end":14371657,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ### Using Your Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371658,"byte_end":14371687,"line_start":146,"line_end":146,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371688,"byte_end":14371691,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Finally, once you have configured your `Subscriber`, you need to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371692,"byte_end":14371760,"line_start":148,"line_end":148,"column_start":1,"column_end":69}},{"value":"/ configure your executable to use it.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371761,"byte_end":14371801,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371802,"byte_end":14371805,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ A subscriber can be installed globally using:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371806,"byte_end":14371855,"line_start":151,"line_end":151,"column_start":1,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371856,"byte_end":14371867,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/ use tracing;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371868,"byte_end":14371884,"line_start":153,"line_end":153,"column_start":1,"column_end":17}},{"value":"/ use tracing_subscriber::FmtSubscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371885,"byte_end":14371927,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371928,"byte_end":14371931,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let subscriber = FmtSubscriber::new();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371932,"byte_end":14371974,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371975,"byte_end":14371978,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14371979,"byte_end":14372034,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/     .map_err(|_err| eprintln!(\"Unable to set global default subscriber\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372035,"byte_end":14372113,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ // Note this will only fail if you try to set the global default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372114,"byte_end":14372182,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ // subscriber multiple times","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372183,"byte_end":14372215,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372216,"byte_end":14372223,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372224,"byte_end":14372227,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ### Composing Layers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372228,"byte_end":14372252,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372253,"byte_end":14372256,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Composing an [`EnvFilter`] `Layer` and a [format `Layer`][super::fmt::Layer]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372257,"byte_end":14372338,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372339,"byte_end":14372342,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372343,"byte_end":14372354,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, EnvFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372355,"byte_end":14372400,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372401,"byte_end":14372440,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372441,"byte_end":14372444,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372445,"byte_end":14372477,"line_start":172,"line_end":172,"column_start":1,"column_end":33}},{"value":"/     .with_target(false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372478,"byte_end":14372506,"line_start":173,"line_end":173,"column_start":1,"column_end":29}},{"value":"/ let filter_layer = EnvFilter::try_from_default_env()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372507,"byte_end":14372563,"line_start":174,"line_end":174,"column_start":1,"column_end":57}},{"value":"/     .or_else(|_| EnvFilter::try_new(\"info\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372564,"byte_end":14372612,"line_start":175,"line_end":175,"column_start":1,"column_end":49}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372613,"byte_end":14372631,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372632,"byte_end":14372635,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::registry()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372636,"byte_end":14372670,"line_start":178,"line_end":178,"column_start":1,"column_end":35}},{"value":"/     .with(filter_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372671,"byte_end":14372698,"line_start":179,"line_end":179,"column_start":1,"column_end":28}},{"value":"/     .with(fmt_layer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372699,"byte_end":14372723,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372724,"byte_end":14372740,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372741,"byte_end":14372748,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372749,"byte_end":14372752,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`EnvFilter`]: super::filter::EnvFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372753,"byte_end":14372796,"line_start":184,"line_end":184,"column_start":1,"column_end":44}},{"value":"/ [`env_logger`]: https://docs.rs/env_logger/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372797,"byte_end":14372844,"line_start":185,"line_end":185,"column_start":1,"column_end":48}},{"value":"/ [`filter`]: super::filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372845,"byte_end":14372874,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ [`FmtSubscriber`]: Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372875,"byte_end":14372908,"line_start":187,"line_end":187,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372909,"byte_end":14372928,"line_start":188,"line_end":188,"column_start":1,"column_end":20}},{"value":"/     https://docs.rs/tracing/latest/tracing/trait.Subscriber.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372929,"byte_end":14372997,"line_start":189,"line_end":189,"column_start":1,"column_end":69}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14372998,"byte_end":14373047,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/ [`fmt::format`]: mod@crate::fmt::format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373048,"byte_end":14373091,"line_start":191,"line_end":191,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411956,"byte_end":14411961,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"Layer","qualname":"::fmt::fmt_layer::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910}],"decl_id":null,"docs":" A [`Layer`] that logs formatted representations of `tracing` events.","sig":null,"attributes":[{"value":"/ A [`Layer`] that logs formatted representations of `tracing` events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410463,"byte_end":14410535,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410536,"byte_end":14410539,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410540,"byte_end":14410555,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410556,"byte_end":14410559,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Constructing a layer with the default configuration:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410560,"byte_end":14410616,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410617,"byte_end":14410620,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410621,"byte_end":14410632,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, Registry};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410633,"byte_end":14410677,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410678,"byte_end":14410717,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410718,"byte_end":14410721,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410722,"byte_end":14410762,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/     .with(fmt::Layer::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410763,"byte_end":14410800,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410801,"byte_end":14410804,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410805,"byte_end":14410870,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410871,"byte_end":14410878,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410879,"byte_end":14410882,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Overriding the layer's behavior:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410883,"byte_end":14410919,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410920,"byte_end":14410923,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410924,"byte_end":14410935,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::{fmt, Registry};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410936,"byte_end":14410980,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14410981,"byte_end":14411020,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411021,"byte_end":14411024,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411025,"byte_end":14411057,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/    .with_target(false) // don't include event targets when logging","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411058,"byte_end":14411128,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/    .with_level(false); // don't include event levels when logging","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411129,"byte_end":14411198,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411199,"byte_end":14411202,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let subscriber = Registry::default().with(fmt_layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411203,"byte_end":14411260,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ # tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411261,"byte_end":14411328,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411329,"byte_end":14411336,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411337,"byte_end":14411340,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Setting a custom event formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411341,"byte_end":14411378,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411379,"byte_end":14411382,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411383,"byte_end":14411394,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::{self, format, time};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411395,"byte_end":14411449,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411450,"byte_end":14411489,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411490,"byte_end":14411493,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let fmt = format().with_timer(time::Uptime::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411494,"byte_end":14411553,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ let fmt_layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411554,"byte_end":14411586,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     .event_format(fmt)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411587,"byte_end":14411613,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     .with_target(false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411614,"byte_end":14411642,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/ # let subscriber = fmt_layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411643,"byte_end":14411743,"line_start":55,"line_end":55,"column_start":1,"column_end":101}},{"value":"/ # tracing::subscriber::set_global_default(subscriber).unwrap();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411744,"byte_end":14411811,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411812,"byte_end":14411819,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411820,"byte_end":14411823,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: super::layer::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14411824,"byte_end":14411858,"line_start":59,"line_end":59,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412326,"byte_end":14412329,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<S>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`][self::Layer] with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`][self::Layer] with the default configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412242,"byte_end":14412314,"line_start":77,"line_end":77,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413572,"byte_end":14413584,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"event_format","qualname":"<Layer<S, N, E, W>>::event_format","value":"fn event_format<E2>(Self, E2) -> Layer<S, N, E2, W> where\nE2: FormatEvent<S, N> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [event formatter][`FormatEvent`] that the layer being built will\n use to format events.","sig":null,"attributes":[{"value":"/ Sets the [event formatter][`FormatEvent`] that the layer being built will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412672,"byte_end":14412749,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ use to format events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412754,"byte_end":14412779,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412784,"byte_end":14412787,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The event formatter may be any type implementing the [`FormatEvent`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412792,"byte_end":14412864,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ trait, which is implemented for all functions taking a [`FmtContext`], a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412869,"byte_end":14412945,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ [`Writer`], and an [`Event`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412950,"byte_end":14412983,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412988,"byte_end":14412991,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412996,"byte_end":14413010,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413015,"byte_end":14413018,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Setting a type implementing [`FormatEvent`] as the formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413023,"byte_end":14413088,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413093,"byte_end":14413104,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::{self, format};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413109,"byte_end":14413157,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413162,"byte_end":14413165,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413170,"byte_end":14413198,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     .event_format(format().compact());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413203,"byte_end":14413245,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413250,"byte_end":14413296,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413301,"byte_end":14413342,"line_start":106,"line_end":106,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413347,"byte_end":14413434,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413439,"byte_end":14413446,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ [`FormatEvent`]: format::FormatEvent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413451,"byte_end":14413491,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/ [`Event`]: tracing::Event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413496,"byte_end":14413525,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/ [`Writer`]: format::Writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413530,"byte_end":14413560,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414530,"byte_end":14414546,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"map_event_format","qualname":"<Layer<S, N, E, W>>::map_event_format","value":"fn map_event_format<E2, impl FnOnce(E) -> E2>(Self, impl FnOnce(E) -> E2)\n-> Layer<S, N, E2, W> where E2: FormatEvent<S, N> + 'static,\nimpl FnOnce(E) -> E2: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Updates the event formatter by applying a function to the existing event formatter.","sig":null,"attributes":[{"value":"/ Updates the event formatter by applying a function to the existing event formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14413933,"byte_end":14414020,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414025,"byte_end":14414028,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This sets the event formatter that the layer being built will use to record fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414033,"byte_end":14414120,"line_start":128,"line_end":128,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414125,"byte_end":14414128,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414133,"byte_end":14414147,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414152,"byte_end":14414155,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Updating an event formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414160,"byte_end":14414192,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414197,"byte_end":14414200,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414205,"byte_end":14414216,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/ let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414221,"byte_end":14414269,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/     .map_event_format(|e| e.compact());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414274,"byte_end":14414317,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414322,"byte_end":14414368,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414373,"byte_end":14414414,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414419,"byte_end":14414506,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14414511,"byte_end":14414518,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415604,"byte_end":14415615,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"with_writer","qualname":"<Layer<S, N, E, W>>::with_writer","value":"fn with_writer<W2>(Self, W2) -> Layer<S, N, E, W2> where\nW2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`MakeWriter`] that the layer being built will use to write events.","sig":null,"attributes":[{"value":"/ Sets the [`MakeWriter`] that the layer being built will use to write events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415070,"byte_end":14415150,"line_start":158,"line_end":158,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415155,"byte_end":14415158,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415163,"byte_end":14415177,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415182,"byte_end":14415185,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Using `stderr` rather than `stdout`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415190,"byte_end":14415230,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415235,"byte_end":14415238,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415243,"byte_end":14415254,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415259,"byte_end":14415275,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415280,"byte_end":14415312,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415317,"byte_end":14415320,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415325,"byte_end":14415353,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/     .with_writer(io::stderr);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415358,"byte_end":14415391,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415396,"byte_end":14415442,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415447,"byte_end":14415488,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415493,"byte_end":14415580,"line_start":172,"line_end":172,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415585,"byte_end":14415592,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416077,"byte_end":14416083,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"writer","qualname":"<Layer<S, N, E, W>>::writer","value":"fn writer(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [writer] for this [`Layer`].","sig":null,"attributes":[{"value":"/ Borrows the [writer] for this [`Layer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415984,"byte_end":14416028,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416033,"byte_end":14416036,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [writer]: MakeWriter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416041,"byte_end":14416065,"line_start":190,"line_end":190,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417196,"byte_end":14417206,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"writer_mut","qualname":"<Layer<S, N, E, W>>::writer_mut","value":"fn writer_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the [writer] for this [`Layer`].","sig":null,"attributes":[{"value":"/ Mutably borrows the [writer] for this [`Layer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416136,"byte_end":14416188,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416193,"byte_end":14416196,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This method is primarily expected to be used with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416201,"byte_end":14416258,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416263,"byte_end":14416332,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416337,"byte_end":14416340,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416345,"byte_end":14416359,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416364,"byte_end":14416367,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416372,"byte_end":14416379,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416384,"byte_end":14416408,"line_start":203,"line_end":203,"column_start":5,"column_end":29}},{"value":"/ # use tracing_subscriber::{fmt,reload,Registry,prelude::*};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416413,"byte_end":14416476,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ # fn non_blocking<T: std::io::Write>(writer: T) -> (fn() -> std::io::Stdout) {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416481,"byte_end":14416563,"line_start":205,"line_end":205,"column_start":5,"column_end":87}},{"value":"/ #   std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416568,"byte_end":14416591,"line_start":206,"line_end":206,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416596,"byte_end":14416603,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416608,"byte_end":14416625,"line_start":208,"line_end":208,"column_start":5,"column_end":22}},{"value":"/ let layer = fmt::layer().with_writer(non_blocking(std::io::stderr()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416630,"byte_end":14416704,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ let (layer, reload_handle) = reload::Layer::new(layer);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416709,"byte_end":14416768,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416773,"byte_end":14416778,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/ # // specifying the Registry type is required","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416783,"byte_end":14416832,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ # let _: &reload::Handle<fmt::Layer<Registry, _, _, _>, Registry> = &reload_handle;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416837,"byte_end":14416924,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/ #","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416929,"byte_end":14416934,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ info!(\"This will be logged to stderr\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416939,"byte_end":14416982,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/ reload_handle.modify(|layer| *layer.writer_mut() = non_blocking(std::io::stdout()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14416987,"byte_end":14417075,"line_start":216,"line_end":216,"column_start":5,"column_end":93}},{"value":"/ info!(\"This will be logged to stdout\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417080,"byte_end":14417123,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417128,"byte_end":14417135,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417140,"byte_end":14417147,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417152,"byte_end":14417155,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [writer]: MakeWriter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417160,"byte_end":14417184,"line_start":221,"line_end":221,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417643,"byte_end":14417651,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"set_ansi","qualname":"<Layer<S, N, E, W>>::set_ansi","value":"fn set_ansi(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether this layer should use ANSI terminal formatting\n escape codes (such as colors).","sig":null,"attributes":[{"value":"/ Sets whether this layer should use ANSI terminal formatting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417271,"byte_end":14417334,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/ escape codes (such as colors).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417339,"byte_end":14417373,"line_start":227,"line_end":227,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417378,"byte_end":14417381,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This method is primarily expected to be used with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417386,"byte_end":14417443,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ [`reload::Handle::modify`](crate::reload::Handle::modify) method when changing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417448,"byte_end":14417530,"line_start":230,"line_end":230,"column_start":5,"column_end":87}},{"value":"/ the writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417535,"byte_end":14417550,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417555,"byte_end":14417579,"line_start":232,"line_end":232,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418521,"byte_end":14418537,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"with_test_writer","qualname":"<Layer<S, N, E, W>>::with_test_writer","value":"fn with_test_writer(Self) -> Layer<S, N, E, TestWriter>","parent":null,"children":[],"decl_id":null,"docs":" Configures the layer to support [`libtest`'s output capturing][capturing] when used in\n unit tests.","sig":null,"attributes":[{"value":"/ Configures the layer to support [`libtest`'s output capturing][capturing] when used in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417717,"byte_end":14417807,"line_start":238,"line_end":238,"column_start":5,"column_end":95}},{"value":"/ unit tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417812,"byte_end":14417827,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417832,"byte_end":14417835,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ See [`TestWriter`] for additional details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417840,"byte_end":14417886,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417891,"byte_end":14417894,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417899,"byte_end":14417913,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417918,"byte_end":14417921,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Using [`TestWriter`] to let `cargo test` capture test output:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417926,"byte_end":14417991,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14417996,"byte_end":14417999,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418004,"byte_end":14418015,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418020,"byte_end":14418036,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418041,"byte_end":14418073,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418078,"byte_end":14418081,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418086,"byte_end":14418114,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     .with_test_writer();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418119,"byte_end":14418147,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418152,"byte_end":14418198,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418203,"byte_end":14418244,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418249,"byte_end":14418336,"line_start":255,"line_end":255,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418341,"byte_end":14418348,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ [capturing]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418353,"byte_end":14418369,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418374,"byte_end":14418459,"line_start":258,"line_end":258,"column_start":5,"column_end":90}},{"value":"/ [`TestWriter`]: super::writer::TestWriter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418464,"byte_end":14418509,"line_start":259,"line_end":259,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418992,"byte_end":14419001,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"with_ansi","qualname":"<Layer<S, N, E, W>>::with_ansi","value":"fn with_ansi(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable ANSI terminal colors for formatted output.\n","sig":null,"attributes":[{"value":"/ Enable ANSI terminal colors for formatted output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418846,"byte_end":14418899,"line_start":271,"line_end":271,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14418904,"byte_end":14418928,"line_start":272,"line_end":272,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419878,"byte_end":14419888,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"map_writer","qualname":"<Layer<S, N, E, W>>::map_writer","value":"fn map_writer<W2, impl FnOnce(W) -> W2>(Self, impl FnOnce(W) -> W2)\n-> Layer<S, N, E, W2> where W2: for<'writer> MakeWriter + 'static,\nimpl FnOnce(W) -> W2: FnOnce(W) -> W2","parent":null,"children":[],"decl_id":null,"docs":" Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419112,"byte_end":14419197,"line_start":281,"line_end":281,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419202,"byte_end":14419205,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This sets the [`MakeWriter`] that the layer being built will use to write events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419210,"byte_end":14419295,"line_start":283,"line_end":283,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419300,"byte_end":14419303,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419308,"byte_end":14419322,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419327,"byte_end":14419330,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Redirect output to stderr if level is <= WARN:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419335,"byte_end":14419385,"line_start":287,"line_end":287,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419390,"byte_end":14419393,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419398,"byte_end":14419409,"line_start":289,"line_end":289,"column_start":5,"column_end":16}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419414,"byte_end":14419437,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::{self, writer::MakeWriterExt};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419442,"byte_end":14419505,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419510,"byte_end":14419513,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419518,"byte_end":14419579,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"/ let layer = fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419584,"byte_end":14419612,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/     .map_writer(move |w| stderr.or_else(w));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419617,"byte_end":14419665,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419670,"byte_end":14419716,"line_start":296,"line_end":296,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419721,"byte_end":14419762,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419767,"byte_end":14419854,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14419859,"byte_end":14419866,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421027,"byte_end":14421037,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_timer","value":"fn with_timer<T2>(Self, T2) -> Layer<S, N, format::Format<L, T2>, W>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for span and event timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for span and event timestamps.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420406,"byte_end":14420464,"line_start":319,"line_end":319,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420469,"byte_end":14420472,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See the [`time` module] for the provided timer implementations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420477,"byte_end":14420544,"line_start":321,"line_end":321,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420549,"byte_end":14420552,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time`\"\" feature flag enables the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420557,"byte_end":14420615,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420620,"byte_end":14420695,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420700,"byte_end":14420769,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420774,"byte_end":14420786,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420791,"byte_end":14420794,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: super::time::FormatTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420799,"byte_end":14420837,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/ [`time` module]: mod@super::time","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420842,"byte_end":14420878,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"/ [`UtcTime`]: super::time::UtcTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420883,"byte_end":14420920,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ [`LocalTime`]: super::time::LocalTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420925,"byte_end":14420966,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420971,"byte_end":14421015,"line_start":332,"line_end":332,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421445,"byte_end":14421457,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"without_time","qualname":"<Layer<S, N, format::Format<L, T>, W>>::without_time","value":"fn without_time(Self) -> Layer<S, N, format::Format<L, ()>, W>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with spans and event.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with spans and event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421385,"byte_end":14421433,"line_start":344,"line_end":344,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423917,"byte_end":14423933,"line_start":397,"line_end":397,"column_start":12,"column_end":28},"name":"with_span_events","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_span_events","value":"fn with_span_events(Self, FmtSpan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures how synthesized events are emitted at points in the [span\n lifecycle][lifecycle].","sig":null,"attributes":[{"value":"/ Configures how synthesized events are emitted at points in the [span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421802,"byte_end":14421874,"line_start":356,"line_end":356,"column_start":5,"column_end":77}},{"value":"/ lifecycle][lifecycle].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421879,"byte_end":14421905,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421910,"byte_end":14421913,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The following options are available:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421918,"byte_end":14421958,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421963,"byte_end":14421966,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ - `FmtSpan::NONE`: No events will be synthesized when spans are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14421971,"byte_end":14422038,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/    created, entered, exited, or closed. Data from spans will still be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422043,"byte_end":14422116,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/    included as the context for formatted events. This is the default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422121,"byte_end":14422194,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ - `FmtSpan::NEW`: An event will be synthesized when spans are created.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422199,"byte_end":14422273,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::ENTER`: An event will be synthesized when spans are entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422278,"byte_end":14422354,"line_start":365,"line_end":365,"column_start":5,"column_end":81}},{"value":"/ - `FmtSpan::EXIT`: An event will be synthesized when spans are exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422359,"byte_end":14422433,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::CLOSE`: An event will be synthesized when a span closes. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422438,"byte_end":14422513,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/    [timestamps are enabled][time] for this formatter, the generated","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422518,"byte_end":14422589,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/    event will contain fields with the span's _busy time_ (the total","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422594,"byte_end":14422665,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/    time for which it was entered) and _idle time_ (the total time that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422670,"byte_end":14422744,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/    the span existed but was not entered).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422749,"byte_end":14422794,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ - `FmtSpan::ACTIVE`: Events will be synthesized when spans are entered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422799,"byte_end":14422873,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/    or exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422878,"byte_end":14422895,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/ - `FmtSpan::FULL`: Events will be synthesized whenever a span is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422900,"byte_end":14422968,"line_start":374,"line_end":374,"column_start":5,"column_end":73}},{"value":"/    created, entered, exited, or closed. If timestamps are enabled, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14422973,"byte_end":14423047,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/    close event will contain the span's busy and idle time, as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423052,"byte_end":14423117,"line_start":376,"line_end":376,"column_start":5,"column_end":70}},{"value":"/    described above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423122,"byte_end":14423145,"line_start":377,"line_end":377,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423150,"byte_end":14423153,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The options can be enabled in any combination. For instance, the following","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423158,"byte_end":14423236,"line_start":379,"line_end":379,"column_start":5,"column_end":83}},{"value":"/ will synthesize events whenever spans are created and closed:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423241,"byte_end":14423306,"line_start":380,"line_end":380,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423311,"byte_end":14423314,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423319,"byte_end":14423330,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423335,"byte_end":14423367,"line_start":383,"line_end":383,"column_start":5,"column_end":37}},{"value":"/ use tracing_subscriber::fmt::format::FmtSpan;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423372,"byte_end":14423421,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423426,"byte_end":14423429,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423434,"byte_end":14423460,"line_start":386,"line_end":386,"column_start":5,"column_end":31}},{"value":"/     .with_span_events(FmtSpan::NEW | FmtSpan::CLOSE)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423465,"byte_end":14423521,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423526,"byte_end":14423544,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423549,"byte_end":14423556,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423561,"byte_end":14423564,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Note that the generated events will only be part of the log output by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423569,"byte_end":14423642,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ this formatter; they will not be recorded by other `Subscriber`s or by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423647,"byte_end":14423721,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ `Layer`s added to this subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423726,"byte_end":14423764,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423769,"byte_end":14423772,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [lifecycle]: https://docs.rs/tracing/latest/tracing/span/index.html#the-span-lifecycle","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423777,"byte_end":14423867,"line_start":395,"line_end":395,"column_start":5,"column_end":95}},{"value":"/ [time]: Layer::without_time()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14423872,"byte_end":14423905,"line_start":396,"line_end":396,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424141,"byte_end":14424152,"line_start":405,"line_end":405,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_target","value":"fn with_target(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424074,"byte_end":14424129,"line_start":404,"line_end":404,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424496,"byte_end":14424505,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"with_file","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_file","value":"fn with_file(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424345,"byte_end":14424412,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424417,"byte_end":14424431,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424436,"byte_end":14424439,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424444,"byte_end":14424484,"line_start":414,"line_end":414,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424854,"byte_end":14424870,"line_start":426,"line_end":426,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_line_number","value":"fn with_line_number(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424701,"byte_end":14424770,"line_start":422,"line_end":422,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424775,"byte_end":14424789,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424794,"byte_end":14424797,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14424802,"byte_end":14424842,"line_start":425,"line_end":425,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425168,"byte_end":14425178,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"with_level","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_level","value":"fn with_level(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425102,"byte_end":14425156,"line_start":436,"line_end":436,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425538,"byte_end":14425553,"line_start":448,"line_end":448,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_thread_ids","value":"fn with_thread_ids(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425369,"byte_end":14425443,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425448,"byte_end":14425475,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425480,"byte_end":14425483,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425488,"byte_end":14425526,"line_start":447,"line_end":447,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425923,"byte_end":14425940,"line_start":459,"line_end":459,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<Layer<S, N, format::Format<L, T>, W>>::with_thread_names","value":"fn with_thread_names(Self, bool) -> Layer<S, N, format::Format<L, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425759,"byte_end":14425828,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425833,"byte_end":14425860,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425865,"byte_end":14425868,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14425873,"byte_end":14425911,"line_start":458,"line_end":458,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14426276,"byte_end":14426283,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"compact","qualname":"<Layer<S, N, format::Format<L, T>, W>>::compact","value":"fn compact(Self) -> Layer<S, N, format::Format<format::Compact, T>, W> where\nN: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the layer being built to use a [less verbose formatter][super::format::Compact].\n","sig":null,"attributes":[{"value":"/ Sets the layer being built to use a [less verbose formatter][super::format::Compact].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14426175,"byte_end":14426264,"line_start":469,"line_end":469,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14426901,"byte_end":14426907,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Layer<S, N, format::Format<L, T>, W>>::pretty","value":"fn pretty(Self)\n-> Layer<S, format::Pretty, format::Format<format::Pretty, T>, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets the layer being built to use an [excessively pretty, human-readable formatter](crate::fmt::format::Pretty).\n","sig":null,"attributes":[{"value":"/ Sets the layer being built to use an [excessively pretty, human-readable formatter](crate::fmt::format::Pretty).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14426692,"byte_end":14426808,"line_start":484,"line_end":484,"column_start":5,"column_end":121}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14426813,"byte_end":14426837,"line_start":485,"line_end":485,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430099,"byte_end":14430109,"line_start":580,"line_end":580,"column_start":12,"column_end":22},"name":"fmt_fields","qualname":"<Layer<S, N, E, W>>::fmt_fields","value":"fn fmt_fields<N2>(Self, N2) -> Layer<S, N2, E, W> where\nN2: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the field formatter that the layer being built will use to record\n fields.\n","sig":null,"attributes":[{"value":"/ Sets the field formatter that the layer being built will use to record","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14429997,"byte_end":14430071,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430076,"byte_end":14430087,"line_start":579,"line_end":579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431124,"byte_end":14431138,"line_start":610,"line_end":610,"column_start":12,"column_end":26},"name":"map_fmt_fields","qualname":"<Layer<S, N, E, W>>::map_fmt_fields","value":"fn map_fmt_fields<N2, impl FnOnce(N) -> N2>(Self, impl FnOnce(N) -> N2)\n-> Layer<S, N2, E, W> where N2: for<'writer> FormatFields + 'static,\nimpl FnOnce(N) -> N2: FnOnce(N) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Updates the field formatter by applying a function to the existing field formatter.","sig":null,"attributes":[{"value":"/ Updates the field formatter by applying a function to the existing field formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430480,"byte_end":14430567,"line_start":594,"line_end":594,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430572,"byte_end":14430575,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This sets the field formatter that the layer being built will use to record fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430580,"byte_end":14430667,"line_start":596,"line_end":596,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430672,"byte_end":14430675,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430680,"byte_end":14430694,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430699,"byte_end":14430702,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Updating a field formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430707,"byte_end":14430738,"line_start":600,"line_end":600,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430743,"byte_end":14430746,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430751,"byte_end":14430762,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::field::MakeExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430767,"byte_end":14430810,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/ let layer = tracing_subscriber::fmt::layer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430815,"byte_end":14430863,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/     .map_fmt_fields(|f| f.debug_alt());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430868,"byte_end":14430911,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/ # // this is necessary for type inference.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430916,"byte_end":14430962,"line_start":606,"line_end":606,"column_start":5,"column_end":51}},{"value":"/ # use tracing_subscriber::Layer as _;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14430967,"byte_end":14431008,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ # let _ = layer.with_subscriber(tracing_subscriber::registry::Registry::default());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431013,"byte_end":14431100,"line_start":608,"line_end":608,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431105,"byte_end":14431112,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431574,"byte_end":14431581,"line_start":626,"line_end":626,"column_start":8,"column_end":15},"name":"default","qualname":"<Layer<S> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432861,"byte_end":14432876,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"FormattedFields","qualname":"::fmt::fmt_layer::FormattedFields","value":"FormattedFields { fields }","parent":null,"children":[{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921}],"decl_id":null,"docs":" A formatted representation of a span's fields stored in its [extensions].","sig":null,"attributes":[{"value":"/ A formatted representation of a span's fields stored in its [extensions].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432366,"byte_end":14432443,"line_start":655,"line_end":655,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432444,"byte_end":14432447,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ Because `FormattedFields` is generic over the type of the formatter that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432448,"byte_end":14432524,"line_start":657,"line_end":657,"column_start":1,"column_end":77}},{"value":"/ produced it, multiple versions of a span's formatted fields can be stored in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432525,"byte_end":14432605,"line_start":658,"line_end":658,"column_start":1,"column_end":81}},{"value":"/ the [`Extensions`][extensions] type-map. This means that when multiple","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432606,"byte_end":14432680,"line_start":659,"line_end":659,"column_start":1,"column_end":75}},{"value":"/ formatters are in use, each can store its own formatted representation","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432681,"byte_end":14432755,"line_start":660,"line_end":660,"column_start":1,"column_end":75}},{"value":"/ without conflicting.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432756,"byte_end":14432780,"line_start":661,"line_end":661,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432781,"byte_end":14432784,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ [extensions]: crate::registry::Extensions","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432785,"byte_end":14432830,"line_start":663,"line_end":663,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432998,"byte_end":14433004,"line_start":669,"line_end":669,"column_start":9,"column_end":15},"name":"fields","qualname":"::fmt::fmt_layer::FormattedFields::fields","value":"std::string::String","parent":{"krate":0,"index":3917},"children":[],"decl_id":null,"docs":" The formatted fields of a span.\n","sig":null,"attributes":[{"value":"/ The formatted fields of a span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14432954,"byte_end":14432989,"line_start":668,"line_end":668,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433106,"byte_end":14433109,"line_start":674,"line_end":674,"column_start":12,"column_end":15},"name":"new","qualname":"<FormattedFields<E>>::new","value":"fn new(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `FormattedFields`.\n","sig":null,"attributes":[{"value":"/ Returns a new `FormattedFields`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433058,"byte_end":14433094,"line_start":673,"line_end":673,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433466,"byte_end":14433475,"line_start":686,"line_end":686,"column_start":12,"column_end":21},"name":"as_writer","qualname":"<FormattedFields<E>>::as_writer","value":"fn as_writer(&mut Self) -> format::Writer","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`format::Writer`] for writing to this `FormattedFields`.","sig":null,"attributes":[{"value":"/ Returns a new [`format::Writer`] for writing to this `FormattedFields`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433262,"byte_end":14433337,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433342,"byte_end":14433345,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ The returned [`format::Writer`] can be used with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433350,"byte_end":14433406,"line_start":684,"line_end":684,"column_start":5,"column_end":61}},{"value":"/ [`FormatFields::format_fields`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433411,"byte_end":14433454,"line_start":685,"line_end":685,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433650,"byte_end":14433653,"line_start":692,"line_end":692,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormattedFields<E> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434011,"byte_end":14434014,"line_start":702,"line_end":702,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormattedFields<E> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434199,"byte_end":14434204,"line_start":709,"line_end":709,"column_start":8,"column_end":13},"name":"deref","qualname":"<FormattedFields<E> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14435086,"byte_end":14435097,"line_start":739,"line_end":739,"column_start":8,"column_end":19},"name":"on_new_span","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_new_span","value":"fn on_new_span(&Self, &Attributes, &Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":679},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14436171,"byte_end":14436180,"line_start":771,"line_end":771,"column_start":8,"column_end":17},"name":"on_record","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_record","value":"fn on_record(&Self, &Id, &Record, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":681},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14436860,"byte_end":14436868,"line_start":790,"line_end":790,"column_start":8,"column_end":16},"name":"on_enter","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_enter","value":"fn on_enter(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":685},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14437675,"byte_end":14437682,"line_start":810,"line_end":810,"column_start":8,"column_end":15},"name":"on_exit","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_exit","value":"fn on_exit(&Self, &Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":686},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14438486,"byte_end":14438494,"line_start":830,"line_end":830,"column_start":8,"column_end":16},"name":"on_close","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_close","value":"fn on_close(&Self, Id, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":687},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14439797,"byte_end":14439805,"line_start":867,"line_end":867,"column_start":8,"column_end":16},"name":"on_event","qualname":"<Layer<S, N, E, W> as layer::Layer>::on_event","value":"fn on_event(&Self, &Event, Context<, S>)","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":684},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14440892,"byte_end":14440904,"line_start":905,"line_end":905,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Layer<S, N, E, W> as layer::Layer>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":674},"children":[],"decl_id":{"krate":0,"index":695},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14441726,"byte_end":14441736,"line_start":921,"line_end":921,"column_start":12,"column_end":22},"name":"FmtContext","qualname":"::fmt::fmt_layer::FmtContext","value":"FmtContext {  }","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014}],"decl_id":null,"docs":" Provides the current span context to a formatter.\n","sig":null,"attributes":[{"value":"/ Provides the current span context to a formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14441661,"byte_end":14441714,"line_start":920,"line_end":920,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14441919,"byte_end":14441922,"line_start":928,"line_end":928,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FmtContext as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442212,"byte_end":14442225,"line_start":938,"line_end":938,"column_start":8,"column_end":21},"name":"format_fields","qualname":"<FmtContext as fmt::format::FormatFields>::format_fields","value":"fn format_fields<R>(&Self, format::Writer, R) -> fmt::Result where\nR: RecordFields","parent":{"krate":0,"index":3249},"children":[],"decl_id":{"krate":0,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442832,"byte_end":14442843,"line_start":957,"line_end":957,"column_start":12,"column_end":23},"name":"visit_spans","qualname":"<FmtContext>::visit_spans","value":"fn visit_spans<E, F>(&Self, F) -> Result<(), E> where F: FnMut(&SpanRef<, S>)\n-> Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" Visits every span in the current context with a closure.","sig":null,"attributes":[{"value":"/ Visits every span in the current context with a closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442560,"byte_end":14442620,"line_start":952,"line_end":952,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442625,"byte_end":14442628,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called first with the current span,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442633,"byte_end":14442701,"line_start":954,"line_end":954,"column_start":5,"column_end":73}},{"value":"/ and then with that span's parent, and then that span's parent,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442706,"byte_end":14442772,"line_start":955,"line_end":955,"column_start":5,"column_end":71}},{"value":"/ and so on until a root span is reached.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442777,"byte_end":14442820,"line_start":956,"line_end":956,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443381,"byte_end":14443389,"line_start":975,"line_end":975,"column_start":12,"column_end":20},"name":"metadata","qualname":"<FmtContext>::metadata","value":"fn metadata(&Self, &Id) -> Option<&'static Metadata> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns metadata for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns metadata for the span with the given `id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443162,"byte_end":14443230,"line_start":970,"line_end":970,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443235,"byte_end":14443238,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443243,"byte_end":14443317,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443322,"byte_end":14443355,"line_start":973,"line_end":973,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443360,"byte_end":14443369,"line_start":974,"line_end":974,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443826,"byte_end":14443830,"line_start":989,"line_end":989,"column_start":12,"column_end":16},"name":"span","qualname":"<FmtContext>::span","value":"fn span(&Self, &Id) -> Option<SpanRef<, S>> where S: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span with the given `id`, if it exists.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span with the given `id`, if it exists.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443546,"byte_end":14443619,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443624,"byte_end":14443627,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then no span exists for that ID (either it has","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443632,"byte_end":14443706,"line_start":984,"line_end":984,"column_start":5,"column_end":79}},{"value":"/ closed or the ID is invalid).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443711,"byte_end":14443744,"line_start":985,"line_end":985,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443749,"byte_end":14443752,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443757,"byte_end":14443800,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443805,"byte_end":14443814,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444060,"byte_end":14444066,"line_start":998,"line_end":998,"column_start":12,"column_end":18},"name":"exists","qualname":"<FmtContext>::exists","value":"fn exists(&Self, &Id) -> bool where S: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an active span exists for the given `Id`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if an active span exists for the given `Id`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14443971,"byte_end":14444034,"line_start":996,"line_end":996,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444039,"byte_end":14444048,"line_start":997,"line_end":997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444457,"byte_end":14444471,"line_start":1012,"line_end":1012,"column_start":12,"column_end":26},"name":"lookup_current","qualname":"<FmtContext>::lookup_current","value":"fn lookup_current(&Self) -> Option<SpanRef<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the span that the wrapped subscriber considers\n to be the current.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the span that the wrapped subscriber considers","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444191,"byte_end":14444267,"line_start":1005,"line_end":1005,"column_start":5,"column_end":81}},{"value":"/ to be the current.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444272,"byte_end":14444294,"line_start":1006,"line_end":1006,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444299,"byte_end":14444302,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ If this returns `None`, then we are not currently within a span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444307,"byte_end":14444375,"line_start":1008,"line_end":1008,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444380,"byte_end":14444383,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444388,"byte_end":14444431,"line_start":1010,"line_end":1010,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444436,"byte_end":14444445,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444671,"byte_end":14444683,"line_start":1020,"line_end":1020,"column_start":12,"column_end":24},"name":"current_span","qualname":"<FmtContext>::current_span","value":"fn current_span(&Self) -> Current","parent":null,"children":[],"decl_id":null,"docs":" Returns the current span for this formatter.\n","sig":null,"attributes":[{"value":"/ Returns the current span for this formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444611,"byte_end":14444659,"line_start":1019,"line_end":1019,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445133,"byte_end":14445144,"line_start":1032,"line_end":1032,"column_start":12,"column_end":23},"name":"parent_span","qualname":"<FmtContext>::parent_span","value":"fn parent_span(&Self) -> Option<SpanRef<, S>>","parent":null,"children":[],"decl_id":null,"docs":" Returns [stored data] for the parent span of the event currently being\n formatted.","sig":null,"attributes":[{"value":"/ Returns [stored data] for the parent span of the event currently being","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444747,"byte_end":14444821,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/ formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444826,"byte_end":14444840,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444845,"byte_end":14444848,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ If the event has a contextual parent, this will return the current span. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444853,"byte_end":14444932,"line_start":1027,"line_end":1027,"column_start":5,"column_end":84}},{"value":"/ the event has an explicit parent span, this will return that span. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14444937,"byte_end":14445010,"line_start":1028,"line_end":1028,"column_start":5,"column_end":78}},{"value":"/ the event does not have a parent span, this will return `None`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445015,"byte_end":14445082,"line_start":1029,"line_end":1029,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445087,"byte_end":14445090,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ [stored data]: SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445095,"byte_end":14445121,"line_start":1031,"line_end":1031,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446667,"byte_end":14446677,"line_start":1062,"line_end":1062,"column_start":12,"column_end":22},"name":"span_scope","qualname":"<FmtContext>::span_scope","value":"fn span_scope(&Self, &Id) -> Option<registry::Scope<, S>> where\nS: for<'lookup> LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n current context, starting with the specified span and ending with the\n root of the trace tree and ending with the current span.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445231,"byte_end":14445302,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ current context, starting with the specified span and ending with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445307,"byte_end":14445380,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ root of the trace tree and ending with the current span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445385,"byte_end":14445445,"line_start":1038,"line_end":1038,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445450,"byte_end":14445453,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Context::span_scope`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445458,"byte_end":14445519,"line_start":1040,"line_end":1040,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445524,"byte_end":14445527,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445532,"byte_end":14445561,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445566,"byte_end":14445657,"line_start":1043,"line_end":1043,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445662,"byte_end":14445672,"line_start":1044,"line_end":1044,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445677,"byte_end":14445736,"line_start":1045,"line_end":1045,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445741,"byte_end":14445806,"line_start":1046,"line_end":1046,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445811,"byte_end":14445901,"line_start":1047,"line_end":1047,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445906,"byte_end":14445969,"line_start":1048,"line_end":1048,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14445974,"byte_end":14446068,"line_start":1049,"line_end":1049,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446073,"byte_end":14446118,"line_start":1050,"line_end":1050,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446123,"byte_end":14446139,"line_start":1051,"line_end":1051,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446144,"byte_end":14446147,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446152,"byte_end":14446211,"line_start":1053,"line_end":1053,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446216,"byte_end":14446281,"line_start":1054,"line_end":1054,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This requires the wrapped subscriber to implement the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446286,"byte_end":14446366,"line_start":1055,"line_end":1055,"column_start":5,"column_end":85}},{"value":"/ <a href=\"../registry/trait.LookupSpan.html\"><code>LookupSpan</code></a> trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446371,"byte_end":14446453,"line_start":1056,"line_end":1056,"column_start":5,"column_end":87}},{"value":"/ See the documentation on <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446458,"byte_end":14446541,"line_start":1057,"line_end":1057,"column_start":5,"column_end":88}},{"value":"/ declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446546,"byte_end":14446578,"line_start":1058,"line_end":1058,"column_start":5,"column_end":37}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446583,"byte_end":14446599,"line_start":1059,"line_end":1059,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446604,"byte_end":14446607,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446612,"byte_end":14446655,"line_start":1061,"line_end":1061,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448157,"byte_end":14448168,"line_start":1093,"line_end":1093,"column_start":12,"column_end":23},"name":"event_scope","qualname":"<FmtContext>::event_scope","value":"fn event_scope(&Self) -> Option<registry::Scope<, S>> where\nS: for<'lookup> registry::LookupSpan","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the [stored data] for all the spans in the\n event's span context, starting with its parent span and ending with the\n root of the trace tree.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [stored data] for all the spans in the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446832,"byte_end":14446903,"line_start":1069,"line_end":1069,"column_start":5,"column_end":76}},{"value":"/ event's span context, starting with its parent span and ending with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446908,"byte_end":14446983,"line_start":1070,"line_end":1070,"column_start":5,"column_end":80}},{"value":"/ root of the trace tree.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14446988,"byte_end":14447015,"line_start":1071,"line_end":1071,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447020,"byte_end":14447023,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the [`Context::event_scope`] method and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447028,"byte_end":14447101,"line_start":1073,"line_end":1073,"column_start":5,"column_end":78}},{"value":"/ passing the event currently being formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447106,"byte_end":14447154,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447159,"byte_end":14447162,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447167,"byte_end":14447226,"line_start":1076,"line_end":1076,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447231,"byte_end":14447296,"line_start":1077,"line_end":1077,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Compared to <a href=\"#method.scope\"><code>scope</code></a> this","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447301,"byte_end":14447391,"line_start":1078,"line_end":1078,"column_start":5,"column_end":95}},{"value":"/ returns the spans in reverse order (from leaf to root). Use","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447396,"byte_end":14447459,"line_start":1079,"line_end":1079,"column_start":5,"column_end":68}},{"value":"/ <a href=\"../registry/struct.Scope.html#method.from_root\"><code>Scope::from_root</code></a>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447464,"byte_end":14447558,"line_start":1080,"line_end":1080,"column_start":5,"column_end":99}},{"value":"/ in case root-to-leaf ordering is desired.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447563,"byte_end":14447608,"line_start":1081,"line_end":1081,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447613,"byte_end":14447629,"line_start":1082,"line_end":1082,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447634,"byte_end":14447637,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447642,"byte_end":14447701,"line_start":1084,"line_end":1084,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447706,"byte_end":14447771,"line_start":1085,"line_end":1085,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This requires the wrapped subscriber to implement the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447776,"byte_end":14447856,"line_start":1086,"line_end":1086,"column_start":5,"column_end":85}},{"value":"/ <a href=\"../registry/trait.LookupSpan.html\"><code>LookupSpan</code></a> trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447861,"byte_end":14447943,"line_start":1087,"line_end":1087,"column_start":5,"column_end":87}},{"value":"/ See the documentation on <a href=\"./struct.Context.html\"><code>Context</code>'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14447948,"byte_end":14448031,"line_start":1088,"line_end":1088,"column_start":5,"column_end":88}},{"value":"/ declaration</a> for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448036,"byte_end":14448068,"line_start":1089,"line_end":1089,"column_start":5,"column_end":37}},{"value":"/ </pre></div>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448073,"byte_end":14448089,"line_start":1090,"line_end":1090,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448094,"byte_end":14448097,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ [stored data]: crate::registry::SpanRef","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448102,"byte_end":14448145,"line_start":1092,"line_end":1092,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448616,"byte_end":14448628,"line_start":1107,"line_end":1107,"column_start":12,"column_end":24},"name":"field_format","qualname":"<FmtContext>::field_format","value":"fn field_format(&Self) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Returns the [field formatter] configured by the subscriber invoking\n `format_event`.","sig":null,"attributes":[{"value":"/ Returns the [field formatter] configured by the subscriber invoking","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448333,"byte_end":14448404,"line_start":1100,"line_end":1100,"column_start":5,"column_end":76}},{"value":"/ `format_event`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448409,"byte_end":14448428,"line_start":1101,"line_end":1101,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448433,"byte_end":14448436,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ The event formatter may use the returned field formatter to format the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448441,"byte_end":14448515,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"/ fields of any events it records.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448520,"byte_end":14448556,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448561,"byte_end":14448564,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ [field formatter]: FormatFields","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448569,"byte_end":14448604,"line_start":1106,"line_end":1106,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::fmt::format","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3071},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3243},{"krate":0,"index":3249},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":4330},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":3261},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4279},{"krate":0,"index":4292},{"krate":0,"index":4296},{"krate":0,"index":3267},{"krate":0,"index":3280},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3305},{"krate":0,"index":3313},{"krate":0,"index":3321},{"krate":0,"index":4275},{"krate":0,"index":4277},{"krate":0,"index":4267},{"krate":0,"index":4272},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3330},{"krate":0,"index":3334},{"krate":0,"index":3338},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3363},{"krate":0,"index":3371},{"krate":0,"index":3381},{"krate":0,"index":3384},{"krate":0,"index":3387},{"krate":0,"index":3405},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3425},{"krate":0,"index":3429},{"krate":0,"index":3433},{"krate":0,"index":3437},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3441},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":3983},{"krate":0,"index":3985},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3472}],"decl_id":null,"docs":" Formatters for logging `tracing` events.","sig":null,"attributes":[{"value":"/ Formatters for logging `tracing` events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457351,"byte_end":14457395,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457396,"byte_end":14457399,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides several formatter implementations, as well as utilities","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457400,"byte_end":14457480,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for implementing custom formatters.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457481,"byte_end":14457520,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457521,"byte_end":14457524,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Formatters","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457525,"byte_end":14457541,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/ This module provides a number of formatter implementations:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457542,"byte_end":14457605,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457606,"byte_end":14457609,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`Full`]: The default formatter. This emits human-readable,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457610,"byte_end":14457675,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/   single-line logs for each event that occurs, with the current span context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457676,"byte_end":14457756,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   displayed before the formatted representation of the event. See","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457757,"byte_end":14457826,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   [here](Full#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457827,"byte_end":14457879,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457880,"byte_end":14457883,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * [`Compact`]: A variant of the default formatter, optimized for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457884,"byte_end":14457952,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/   short line lengths. Fields from the current span context are appended to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14457953,"byte_end":14458031,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   the fields of the formatted event, and span names are not shown; the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458032,"byte_end":14458106,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/   verbosity level is abbreviated to a single character. See","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458107,"byte_end":14458170,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/   [here](Compact#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458171,"byte_end":14458226,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458227,"byte_end":14458230,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * [`Pretty`]: Emits excessively pretty, multi-line logs, optimized","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458231,"byte_end":14458301,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/   for human readability. This is primarily intended to be used in local","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458302,"byte_end":14458377,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/   development and debugging, or for command-line applications, where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458378,"byte_end":14458450,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/   automated analysis and compact storage of logs is less of a priority than","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458451,"byte_end":14458530,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/   readability and visual appeal. See [here](Pretty#example-output)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458531,"byte_end":14458601,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/   for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458602,"byte_end":14458626,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458627,"byte_end":14458630,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * [`Json`]: Outputs newline-delimited JSON logs. This is intended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458631,"byte_end":14458700,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/   for production use with systems where structured logs are consumed as JSON","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458701,"byte_end":14458781,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   by analysis and viewing tools. The JSON output is not optimized for human","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458782,"byte_end":14458861,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/   readability. See [here](Json#example-output) for sample output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14458862,"byte_end":14458931,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547237,"byte_end":14547243,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"Pretty","qualname":"::fmt::format::pretty::Pretty","value":"Pretty {  }","parent":null,"children":[{"krate":0,"index":3931}],"decl_id":null,"docs":" An excessively pretty, human-readable event formatter.","sig":null,"attributes":[{"value":"/ An excessively pretty, human-readable event formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537506,"byte_end":14537564,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537565,"byte_end":14537568,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Unlike the [`Full`], [`Compact`], and [`Json`] formatters, this is a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537569,"byte_end":14537641,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ multi-line output format. Each individual event may output multiple lines of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537642,"byte_end":14537722,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ text.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537723,"byte_end":14537732,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537733,"byte_end":14537736,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Example Output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537737,"byte_end":14537757,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537758,"byte_end":14537761,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ <pre><font color=\"#4E9A06\"><b>:;</b></font> <font color=\"#4E9A06\">cargo</font> run --example fmt-pretty","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537762,"byte_end":14537869,"line_start":27,"line_end":27,"column_start":1,"column_end":108}},{"value":"/ <font color=\"#4E9A06\"><b>    Finished</b></font> dev [unoptimized + debuginfo] target(s) in 0.08s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537870,"byte_end":14537971,"line_start":28,"line_end":28,"column_start":1,"column_end":102}},{"value":"/ <font color=\"#4E9A06\"><b>     Running</b></font> `target/debug/examples/fmt-pretty`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14537972,"byte_end":14538059,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   2022-02-15T18:44:24.535324Z <font color=\"#4E9A06\"> INFO</font> <font color=\"#4E9A06\"><b>fmt_pretty</b></font><font color=\"#4E9A06\">: preparing to shave yaks, </font><font color=\"#4E9A06\"><b>number_of_yaks</b></font><font color=\"#4E9A06\">: 3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538060,"byte_end":14538313,"line_start":30,"line_end":30,"column_start":1,"column_end":254}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt-pretty.rs:16 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538314,"byte_end":14538439,"line_start":31,"line_end":31,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538440,"byte_end":14538443,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535403Z <font color=\"#4E9A06\"> INFO</font> <font color=\"#4E9A06\"><b>fmt_pretty::yak_shave</b></font><font color=\"#4E9A06\">: shaving yaks</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538444,"byte_end":14538613,"line_start":33,"line_end":33,"column_start":1,"column_end":170}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:41 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538614,"byte_end":14538742,"line_start":34,"line_end":34,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538743,"byte_end":14538888,"line_start":35,"line_end":35,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538889,"byte_end":14538892,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535442Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: hello! I&apos;m gonna shave a yak, </font><font color=\"#75507B\"><b>excitement</b></font><font color=\"#75507B\">: &quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14538893,"byte_end":14539178,"line_start":37,"line_end":37,"column_start":1,"column_end":286}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:16 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539179,"byte_end":14539307,"line_start":38,"line_end":38,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 1","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539308,"byte_end":14539445,"line_start":39,"line_end":39,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539446,"byte_end":14539591,"line_start":40,"line_end":40,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539592,"byte_end":14539595,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535469Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: yak shaved successfully</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539596,"byte_end":14539776,"line_start":42,"line_end":42,"column_start":1,"column_end":181}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:25 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539777,"byte_end":14539905,"line_start":43,"line_end":43,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 1","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14539906,"byte_end":14540043,"line_start":44,"line_end":44,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540044,"byte_end":14540189,"line_start":45,"line_end":45,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540190,"byte_end":14540193,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535502Z <font color=\"#3465A4\">DEBUG</font> <font color=\"#3465A4\"><b>yak_events</b></font><font color=\"#3465A4\">: </font><font color=\"#3465A4\"><b>yak</b></font><font color=\"#3465A4\">: 1, </font><font color=\"#3465A4\"><b>shaved</b></font><font color=\"#3465A4\">: true</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540194,"byte_end":14540490,"line_start":47,"line_end":47,"column_start":1,"column_end":297}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:46 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540491,"byte_end":14540619,"line_start":48,"line_end":48,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540620,"byte_end":14540765,"line_start":49,"line_end":49,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540766,"byte_end":14540769,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535524Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: </font><font color=\"#75507B\"><b>yaks_shaved</b></font><font color=\"#75507B\">: 1</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14540770,"byte_end":14541006,"line_start":51,"line_end":51,"column_start":1,"column_end":237}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:55 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541007,"byte_end":14541135,"line_start":52,"line_end":52,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541136,"byte_end":14541281,"line_start":53,"line_end":53,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541282,"byte_end":14541285,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535551Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: hello! I&apos;m gonna shave a yak, </font><font color=\"#75507B\"><b>excitement</b></font><font color=\"#75507B\">: &quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541286,"byte_end":14541571,"line_start":55,"line_end":55,"column_start":1,"column_end":286}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:16 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541572,"byte_end":14541700,"line_start":56,"line_end":56,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 2","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541701,"byte_end":14541838,"line_start":57,"line_end":57,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541839,"byte_end":14541984,"line_start":58,"line_end":58,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541985,"byte_end":14541988,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535573Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: yak shaved successfully</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14541989,"byte_end":14542169,"line_start":60,"line_end":60,"column_start":1,"column_end":181}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:25 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542170,"byte_end":14542298,"line_start":61,"line_end":61,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 2","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542299,"byte_end":14542436,"line_start":62,"line_end":62,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542437,"byte_end":14542582,"line_start":63,"line_end":63,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542583,"byte_end":14542586,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535600Z <font color=\"#3465A4\">DEBUG</font> <font color=\"#3465A4\"><b>yak_events</b></font><font color=\"#3465A4\">: </font><font color=\"#3465A4\"><b>yak</b></font><font color=\"#3465A4\">: 2, </font><font color=\"#3465A4\"><b>shaved</b></font><font color=\"#3465A4\">: true</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542587,"byte_end":14542883,"line_start":65,"line_end":65,"column_start":1,"column_end":297}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:46 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14542884,"byte_end":14543012,"line_start":66,"line_end":66,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543013,"byte_end":14543158,"line_start":67,"line_end":67,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543159,"byte_end":14543162,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535618Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: </font><font color=\"#75507B\"><b>yaks_shaved</b></font><font color=\"#75507B\">: 2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543163,"byte_end":14543399,"line_start":69,"line_end":69,"column_start":1,"column_end":237}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:55 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543400,"byte_end":14543528,"line_start":70,"line_end":70,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543529,"byte_end":14543674,"line_start":71,"line_end":71,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543675,"byte_end":14543678,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535644Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: hello! I&apos;m gonna shave a yak, </font><font color=\"#75507B\"><b>excitement</b></font><font color=\"#75507B\">: &quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543679,"byte_end":14543964,"line_start":73,"line_end":73,"column_start":1,"column_end":286}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:16 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14543965,"byte_end":14544093,"line_start":74,"line_end":74,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544094,"byte_end":14544231,"line_start":75,"line_end":75,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544232,"byte_end":14544377,"line_start":76,"line_end":76,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544378,"byte_end":14544381,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535670Z <font color=\"#C4A000\"> WARN</font> <font color=\"#C4A000\"><b>fmt_pretty::yak_shave</b></font><font color=\"#C4A000\">: could not locate yak</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544382,"byte_end":14544559,"line_start":78,"line_end":78,"column_start":1,"column_end":178}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:18 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544560,"byte_end":14544688,"line_start":79,"line_end":79,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shave</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yak</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544689,"byte_end":14544826,"line_start":80,"line_end":80,"column_start":1,"column_end":138}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544827,"byte_end":14544972,"line_start":81,"line_end":81,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544973,"byte_end":14544976,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535698Z <font color=\"#3465A4\">DEBUG</font> <font color=\"#3465A4\"><b>yak_events</b></font><font color=\"#3465A4\">: </font><font color=\"#3465A4\"><b>yak</b></font><font color=\"#3465A4\">: 3, </font><font color=\"#3465A4\"><b>shaved</b></font><font color=\"#3465A4\">: false</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14544977,"byte_end":14545274,"line_start":83,"line_end":83,"column_start":1,"column_end":298}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:46 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14545275,"byte_end":14545403,"line_start":84,"line_end":84,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14545404,"byte_end":14545549,"line_start":85,"line_end":85,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14545550,"byte_end":14545553,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535720Z <font color=\"#CC0000\">ERROR</font> <font color=\"#CC0000\"><b>fmt_pretty::yak_shave</b></font><font color=\"#CC0000\">: failed to shave yak, </font><font color=\"#CC0000\"><b>yak</b></font><font color=\"#CC0000\">: 3, </font><font color=\"#CC0000\"><b>error</b></font><font color=\"#CC0000\">: missing yak, </font><font color=\"#CC0000\"><b>error.sources</b></font><font color=\"#CC0000\">: [out of space, out of cash]</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14545554,"byte_end":14545997,"line_start":87,"line_end":87,"column_start":1,"column_end":444}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:51 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14545998,"byte_end":14546126,"line_start":88,"line_end":88,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546127,"byte_end":14546272,"line_start":89,"line_end":89,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546273,"byte_end":14546276,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535742Z <font color=\"#75507B\">TRACE</font> <font color=\"#75507B\"><b>fmt_pretty::yak_shave</b></font><font color=\"#75507B\">: </font><font color=\"#75507B\"><b>yaks_shaved</b></font><font color=\"#75507B\">: 2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546277,"byte_end":14546513,"line_start":91,"line_end":91,"column_start":1,"column_end":237}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt/yak_shave.rs:55 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546514,"byte_end":14546642,"line_start":92,"line_end":92,"column_start":1,"column_end":129}},{"value":"/     <font color=\"#AAAAAA\"><i>in</i></font> fmt_pretty::yak_shave::<b>shaving_yaks</b> <font color=\"#AAAAAA\"><i>with</i></font> <b>yaks</b>: 3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546643,"byte_end":14546788,"line_start":93,"line_end":93,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546789,"byte_end":14546792,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/   2022-02-15T18:44:24.535765Z <font color=\"#4E9A06\"> INFO</font> <font color=\"#4E9A06\"><b>fmt_pretty</b></font><font color=\"#4E9A06\">: yak shaving completed, </font><font color=\"#4E9A06\"><b>all_yaks_shaved</b></font><font color=\"#4E9A06\">: false</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14546793,"byte_end":14547049,"line_start":95,"line_end":95,"column_start":1,"column_end":257}},{"value":"/     <font color=\"#AAAAAA\"><i>at</i></font> examples/examples/fmt-pretty.rs:19 <font color=\"#AAAAAA\"><i>on</i></font> main","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547050,"byte_end":14547175,"line_start":96,"line_end":96,"column_start":1,"column_end":126}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547176,"byte_end":14547186,"line_start":97,"line_end":97,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547459,"byte_end":14547472,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"PrettyVisitor","qualname":"::fmt::format::pretty::PrettyVisitor","value":"PrettyVisitor {  }","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948}],"decl_id":null,"docs":" The [visitor] produced by [`Pretty`]'s [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ The [visitor] produced by [`Pretty`]'s [`MakeVisitor`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547277,"byte_end":14547351,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547352,"byte_end":14547355,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [visitor]: field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547356,"byte_end":14547383,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/ [`MakeVisitor`]: crate::field::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547384,"byte_end":14547430,"line_start":106,"line_end":106,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547722,"byte_end":14547734,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"PrettyFields","qualname":"::fmt::format::pretty::PrettyFields","value":"PrettyFields {  }","parent":null,"children":[{"krate":0,"index":3953}],"decl_id":null,"docs":" An excessively pretty, human-readable [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ An excessively pretty, human-readable [`MakeVisitor`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547569,"byte_end":14547642,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547643,"byte_end":14547646,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`MakeVisitor`]: crate::field::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14547647,"byte_end":14547693,"line_start":117,"line_end":117,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548332,"byte_end":14548339,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"default","qualname":"<Pretty as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14549105,"byte_end":14549125,"line_start":161,"line_end":161,"column_start":12,"column_end":32},"name":"with_source_location","qualname":"<Pretty>::with_source_location","value":"fn with_source_location(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the event's source code location is displayed.","sig":null,"attributes":[{"value":"/ Sets whether the event's source code location is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548820,"byte_end":14548883,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548888,"byte_end":14548891,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This defaults to `true`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548896,"byte_end":14548924,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.6\", note =\n\"all formatters now support configurable source locations. Use `Format::with_source_location` instead.\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548929,"byte_end":14549093,"line_start":157,"line_end":160,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14549424,"byte_end":14549436,"line_start":175,"line_end":175,"column_start":8,"column_end":20},"name":"format_event","qualname":"<Format<Pretty, T> as fmt::format::FormatEvent>::format_event","value":"fn format_event(&Self, &FmtContext<, C, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":3237},"children":[],"decl_id":{"krate":0,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14554486,"byte_end":14554499,"line_start":338,"line_end":338,"column_start":8,"column_end":21},"name":"format_fields","qualname":"<Pretty as fmt::format::FormatFields>::format_fields","value":"fn format_fields<R>(&Self, Writer, R) -> fmt::Result where R: RecordFields","parent":{"krate":0,"index":3249},"children":[],"decl_id":{"krate":0,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14554695,"byte_end":14554705,"line_start":344,"line_end":344,"column_start":8,"column_end":18},"name":"add_fields","qualname":"<Pretty as fmt::format::FormatFields>::add_fields","value":"fn add_fields(&Self, &'writer mut FormattedFields<Self>, &span::Record)\n-> fmt::Result","parent":{"krate":0,"index":3249},"children":[],"decl_id":{"krate":0,"index":3253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555098,"byte_end":14555105,"line_start":360,"line_end":360,"column_start":8,"column_end":15},"name":"default","qualname":"<PrettyFields as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555241,"byte_end":14555244,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyFields>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default [`PrettyFields`] implementation.\n","sig":null,"attributes":[{"value":"/ Returns a new default [`PrettyFields`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555171,"byte_end":14555229,"line_start":366,"line_end":366,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555678,"byte_end":14555687,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"with_ansi","qualname":"<PrettyFields>::with_ansi","value":"fn with_ansi(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable ANSI encoding for formatted fields.\n","sig":null,"attributes":[{"value":"/ Enable ANSI encoding for formatted fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555484,"byte_end":14555530,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.3\", note =\n\"Use `fmt::Subscriber::with_ansi` or `fmt::Layer::with_ansi` instead.\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555535,"byte_end":14555666,"line_start":375,"line_end":378,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555911,"byte_end":14555923,"line_start":391,"line_end":391,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<PrettyFields as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, Writer) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555894,"byte_end":14555903,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556443,"byte_end":14556446,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyVisitor>::new","value":"fn new(Writer, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default visitor that formats to the provided `writer`.","sig":null,"attributes":[{"value":"/ Returns a new default visitor that formats to the provided `writer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556183,"byte_end":14556255,"line_start":402,"line_end":402,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556260,"byte_end":14556263,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556268,"byte_end":14556283,"line_start":404,"line_end":404,"column_start":5,"column_end":20}},{"value":"/ - `writer`: the writer to format to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556288,"byte_end":14556328,"line_start":405,"line_end":405,"column_start":5,"column_end":45}},{"value":"/ - `is_empty`: whether or not any fields have been previously written to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556333,"byte_end":14556408,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/   that writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556413,"byte_end":14556431,"line_start":407,"line_end":407,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14557217,"byte_end":14557227,"line_start":441,"line_end":441,"column_start":8,"column_end":18},"name":"record_str","qualname":"<PrettyVisitor as tracing_core::field::Visit>::record_str","value":"fn record_str(&mut Self, &Field, &str)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14557524,"byte_end":14557536,"line_start":453,"line_end":453,"column_start":8,"column_end":20},"name":"record_error","qualname":"<PrettyVisitor as tracing_core::field::Visit>::record_error","value":"fn record_error(&mut Self, &Field, &dyn std::error::Error + 'static)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14558139,"byte_end":14558151,"line_start":472,"line_end":472,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<PrettyVisitor as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559179,"byte_end":14559185,"line_start":501,"line_end":501,"column_start":8,"column_end":14},"name":"finish","qualname":"<PrettyVisitor as field::VisitOutput>::finish","value":"fn finish(Self) -> fmt::Result","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559353,"byte_end":14559359,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"writer","qualname":"<PrettyVisitor as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465093,"byte_end":14465104,"line_start":195,"line_end":195,"column_start":11,"column_end":22},"name":"FormatEvent","qualname":"::fmt::format::FormatEvent","value":"FormatEvent<S, N>","parent":null,"children":[{"krate":0,"index":3242}],"decl_id":null,"docs":" A type that can format a tracing [`Event`] to a [`Writer`].","sig":null,"attributes":[{"value":"/ A type that can format a tracing [`Event`] to a [`Writer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459680,"byte_end":14459743,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459744,"byte_end":14459747,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ `FormatEvent` is primarily used in the context of [`fmt::Subscriber`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459748,"byte_end":14459824,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ [`fmt::Layer`]. Each time an event is dispatched to [`fmt::Subscriber`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459825,"byte_end":14459903,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ [`fmt::Layer`], the subscriber or layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459904,"byte_end":14459947,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ forwards it to its associated `FormatEvent` to emit a log message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14459948,"byte_end":14460018,"line_start":68,"line_end":68,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460019,"byte_end":14460022,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This trait is already implemented for function pointers with the same","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460023,"byte_end":14460096,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ signature as `format_event`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460097,"byte_end":14460129,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460130,"byte_end":14460133,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460134,"byte_end":14460149,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460150,"byte_end":14460153,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The following arguments are passed to `FormatEvent::format_event`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460154,"byte_end":14460224,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460225,"byte_end":14460228,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ * A [`FmtContext`]. This is an extension of the [`layer::Context`] type,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460229,"byte_end":14460305,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/   which can be used for accessing stored information such as the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460306,"byte_end":14460382,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   span context an event occurred in.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460383,"byte_end":14460423,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460424,"byte_end":14460427,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/   In addition, [`FmtContext`] exposes access to the [`FormatFields`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460428,"byte_end":14460500,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"/   implementation that the subscriber was configured to use via the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460501,"byte_end":14460571,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/   [`FmtContext::field_format`] method. This can be used when the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460572,"byte_end":14460640,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/   [`FormatEvent`] implementation needs to format the event's fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460641,"byte_end":14460713,"line_start":84,"line_end":84,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460714,"byte_end":14460717,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/   For convenience, [`FmtContext`] also [implements `FormatFields`],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460718,"byte_end":14460789,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/   forwarding to the configured [`FormatFields`] type.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460790,"byte_end":14460847,"line_start":87,"line_end":87,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460848,"byte_end":14460851,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ * A [`Writer`] to which the formatted representation of the event is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460852,"byte_end":14460924,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/   written. This type implements the [`std::fmt::Write`] trait, and therefore","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14460925,"byte_end":14461005,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/   can be used with the [`std::write!`] and [`std::writeln!`] macros, as well","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461006,"byte_end":14461086,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/   as calling [`std::fmt::Write`] methods directly.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461087,"byte_end":14461141,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461142,"byte_end":14461145,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/   The [`Writer`] type also implements additional methods that provide","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461146,"byte_end":14461219,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/   information about how the event should be formatted. The","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461220,"byte_end":14461282,"line_start":95,"line_end":95,"column_start":1,"column_end":63}},{"value":"/   [`Writer::has_ansi_escapes`] method indicates whether [ANSI terminal","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461283,"byte_end":14461357,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/   escape codes] are supported by the underlying I/O writer that the event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461358,"byte_end":14461435,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/   will be written to. If this returns `true`, the formatter is permitted to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461436,"byte_end":14461515,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/   use ANSI escape codes to add colors and other text formatting to its","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461516,"byte_end":14461590,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/   output. If it returns `false`, the event will be written to an output that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461591,"byte_end":14461671,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/   does not support ANSI escape codes (such as a log file), and they should","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461672,"byte_end":14461750,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   not be emitted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461751,"byte_end":14461772,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461773,"byte_end":14461776,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/   Crates like [`ansi_term`] and [`owo-colors`] can be used to add ANSI","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461777,"byte_end":14461851,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/   escape codes to formatted output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461852,"byte_end":14461891,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461892,"byte_end":14461895,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ * The actual [`Event`] to be formatted.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461896,"byte_end":14461939,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461940,"byte_end":14461943,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461944,"byte_end":14461958,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461959,"byte_end":14461962,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This example re-implements a simiplified version of this crate's [default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14461963,"byte_end":14462040,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ formatter]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462041,"byte_end":14462056,"line_start":112,"line_end":112,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462057,"byte_end":14462060,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462061,"byte_end":14462072,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ use std::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462073,"byte_end":14462090,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/ use tracing_core::{Subscriber, Event};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462091,"byte_end":14462133,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/ use tracing_subscriber::fmt::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462134,"byte_end":14462168,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/     format::{self, FormatEvent, FormatFields},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462169,"byte_end":14462219,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/     FmtContext,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462220,"byte_end":14462239,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/     FormattedFields,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462240,"byte_end":14462264,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462265,"byte_end":14462271,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/ use tracing_subscriber::registry::LookupSpan;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462272,"byte_end":14462321,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462322,"byte_end":14462325,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ struct MyFormatter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462326,"byte_end":14462349,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462350,"byte_end":14462353,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ impl<S, N> FormatEvent<S, N> for MyFormatter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462354,"byte_end":14462402,"line_start":126,"line_end":126,"column_start":1,"column_end":49}},{"value":"/ where","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462403,"byte_end":14462412,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/     S: Subscriber + for<'a> LookupSpan<'a>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462413,"byte_end":14462460,"line_start":128,"line_end":128,"column_start":1,"column_end":48}},{"value":"/     N: for<'a> FormatFields<'a> + 'static,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462461,"byte_end":14462507,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/ {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462508,"byte_end":14462513,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/     fn format_event(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462514,"byte_end":14462538,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/         &self,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462539,"byte_end":14462557,"line_start":132,"line_end":132,"column_start":1,"column_end":19}},{"value":"/         ctx: &FmtContext<'_, S, N>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462558,"byte_end":14462597,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/         mut writer: format::Writer<'_>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462598,"byte_end":14462641,"line_start":134,"line_end":134,"column_start":1,"column_end":44}},{"value":"/         event: &Event<'_>,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462642,"byte_end":14462672,"line_start":135,"line_end":135,"column_start":1,"column_end":31}},{"value":"/     ) -> fmt::Result {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462673,"byte_end":14462699,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/         // Format values from the event's's metadata:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462700,"byte_end":14462757,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/         let metadata = event.metadata();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462758,"byte_end":14462802,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/         write!(&mut writer, \"{} {}: \", metadata.level(), metadata.target())?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462803,"byte_end":14462884,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462885,"byte_end":14462888,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/         // Format all the spans in the event's span context.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462889,"byte_end":14462953,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/         if let Some(scope) = ctx.event_scope() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14462954,"byte_end":14463006,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/             for span in scope.from_root() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463007,"byte_end":14463054,"line_start":143,"line_end":143,"column_start":1,"column_end":48}},{"value":"/                 write!(writer, \"{}\", span.name())?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463055,"byte_end":14463110,"line_start":144,"line_end":144,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463111,"byte_end":14463114,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/                 // `FormattedFields` is a formatted representation of the span's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463115,"byte_end":14463199,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/                 // fields, which is stored in its extensions by the `fmt` layer's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463200,"byte_end":14463285,"line_start":147,"line_end":147,"column_start":1,"column_end":86}},{"value":"/                 // `new_span` method. The fields will have been formatted","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463286,"byte_end":14463363,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/                 // by the same field formatter that's provided to the event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463364,"byte_end":14463443,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/                 // formatter in the `FmtContext`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463444,"byte_end":14463497,"line_start":150,"line_end":150,"column_start":1,"column_end":54}},{"value":"/                 let ext = span.extensions();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463498,"byte_end":14463546,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/                 let fields = &ext","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463547,"byte_end":14463584,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/                     .get::<FormattedFields<N>>()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463585,"byte_end":14463637,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/                     .expect(\"will never be `None`\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463638,"byte_end":14463694,"line_start":154,"line_end":154,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463695,"byte_end":14463698,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/                 // Skip formatting the fields if the span had no fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463699,"byte_end":14463775,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/                 if !fields.is_empty() {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463776,"byte_end":14463819,"line_start":157,"line_end":157,"column_start":1,"column_end":44}},{"value":"/                     write!(writer, \"{{{}}}\", fields)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463820,"byte_end":14463878,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463879,"byte_end":14463900,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/                 write!(writer, \": \")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463901,"byte_end":14463943,"line_start":160,"line_end":160,"column_start":1,"column_end":43}},{"value":"/             }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463944,"byte_end":14463961,"line_start":161,"line_end":161,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463962,"byte_end":14463975,"line_start":162,"line_end":162,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463976,"byte_end":14463979,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/         // Write fields on the event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14463980,"byte_end":14464020,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/         ctx.field_format().format_fields(writer.by_ref(), event)?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464021,"byte_end":14464091,"line_start":165,"line_end":165,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464092,"byte_end":14464095,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/         writeln!(writer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464096,"byte_end":14464124,"line_start":167,"line_end":167,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464125,"byte_end":14464134,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464135,"byte_end":14464140,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464141,"byte_end":14464144,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let _subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464145,"byte_end":14464192,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/     .event_format(MyFormatter)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464193,"byte_end":14464227,"line_start":172,"line_end":172,"column_start":1,"column_end":35}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464228,"byte_end":14464244,"line_start":173,"line_end":173,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464245,"byte_end":14464248,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ let _span = tracing::info_span!(\"my_span\", answer = 42).entered();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464249,"byte_end":14464319,"line_start":175,"line_end":175,"column_start":1,"column_end":71}},{"value":"/ tracing::info!(question = \"life, the universe, and everything\", \"hello world\");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464320,"byte_end":14464403,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464404,"byte_end":14464411,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464412,"byte_end":14464415,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This formatter will print events like this:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464416,"byte_end":14464463,"line_start":179,"line_end":179,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464464,"byte_end":14464467,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464468,"byte_end":14464479,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ DEBUG yak_shaving::shaver: some-span{field-on-span=foo}: started shaving yak","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464480,"byte_end":14464560,"line_start":182,"line_end":182,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464561,"byte_end":14464568,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464569,"byte_end":14464572,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`layer::Context`]: crate::layer::Context","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464573,"byte_end":14464618,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/ [`fmt::Layer`]: super::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464619,"byte_end":14464651,"line_start":186,"line_end":186,"column_start":1,"column_end":33}},{"value":"/ [`fmt::Subscriber`]: super::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464652,"byte_end":14464694,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/ [`Event`]: tracing::Event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464695,"byte_end":14464724,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/ [implements `FormatFields`]: super::FmtContext#impl-FormatFields<'writer>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464725,"byte_end":14464802,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ [ANSI terminal escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464803,"byte_end":14464883,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ [`Writer::has_ansi_escapes`]: Writer::has_ansi_escapes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464884,"byte_end":14464942,"line_start":191,"line_end":191,"column_start":1,"column_end":59}},{"value":"/ [`ansi_term`]: https://crates.io/crates/ansi_term","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464943,"byte_end":14464996,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"/ [`owo-colors`]: https://crates.io/crates/owo-colors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14464997,"byte_end":14465052,"line_start":193,"line_end":193,"column_start":1,"column_end":56}},{"value":"/ [default formatter]: Full","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465053,"byte_end":14465082,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465291,"byte_end":14465303,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"format_event","qualname":"::fmt::format::FormatEvent::format_event","value":"fn format_event(&Self, &FmtContext<, S, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":3237},"children":[],"decl_id":null,"docs":" Write a log message for `Event` in `Context` to the given [`Writer`].\n","sig":null,"attributes":[{"value":"/ Write a log message for `Event` in `Context` to the given [`Writer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465210,"byte_end":14465283,"line_start":200,"line_end":200,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465645,"byte_end":14465657,"line_start":215,"line_end":215,"column_start":8,"column_end":20},"name":"format_event","qualname":"<fn(ctx: &FmtContext<, S, N>, : Writer, : &Event) -> fmt::Result as fmt::format::FormatEvent>::format_event","value":"fn format_event(&Self, &FmtContext<, S, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":3237},"children":[],"decl_id":{"krate":0,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466225,"byte_end":14466237,"line_start":232,"line_end":232,"column_start":11,"column_end":23},"name":"FormatFields","qualname":"::fmt::format::FormatFields","value":"FormatFields<'writer>","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3253}],"decl_id":null,"docs":" A type that can format a [set of fields] to a [`Writer`].","sig":null,"attributes":[{"value":"/ A type that can format a [set of fields] to a [`Writer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465832,"byte_end":14465893,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465894,"byte_end":14465897,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ `FormatFields` is primarily used in the context of [`FmtSubscriber`]. Each","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465898,"byte_end":14465976,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ time a span or event with fields is recorded, the subscriber will format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14465977,"byte_end":14466053,"line_start":227,"line_end":227,"column_start":1,"column_end":77}},{"value":"/ those fields with its associated `FormatFields` implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466054,"byte_end":14466121,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466122,"byte_end":14466125,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ [set of fields]: crate::field::RecordFields","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466126,"byte_end":14466173,"line_start":230,"line_end":230,"column_start":1,"column_end":48}},{"value":"/ [`FmtSubscriber`]: super::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466174,"byte_end":14466214,"line_start":231,"line_end":231,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466341,"byte_end":14466354,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"format_fields","qualname":"::fmt::format::FormatFields::format_fields","value":"fn format_fields<R>(&Self, Writer, R) -> fmt::Result where R: RecordFields","parent":{"krate":0,"index":3249},"children":[],"decl_id":null,"docs":" Format the provided `fields` to the provided [`Writer`], returning a result.\n","sig":null,"attributes":[{"value":"/ Format the provided `fields` to the provided [`Writer`], returning a result.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466253,"byte_end":14466333,"line_start":233,"line_end":233,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466742,"byte_end":14466752,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"add_fields","qualname":"::fmt::format::FormatFields::add_fields","value":"fn add_fields(&Self, &'writer mut FormattedFields<Self>, &span::Record)\n-> fmt::Result","parent":{"krate":0,"index":3249},"children":[],"decl_id":null,"docs":" Record additional field(s) on an existing span.","sig":null,"attributes":[{"value":"/ Record additional field(s) on an existing span.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466436,"byte_end":14466487,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466492,"byte_end":14466495,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ By default, this appends a space to the current set of fields if it is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466500,"byte_end":14466574,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ non-empty, and then calls `self.format_fields`. If different behavior is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466579,"byte_end":14466655,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ required, the default implementation of this method can be overridden.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14466660,"byte_end":14466734,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467694,"byte_end":14467700,"line_start":270,"line_end":270,"column_start":8,"column_end":14},"name":"format","qualname":"::fmt::format::format","value":"fn format() -> Format","parent":null,"children":[],"decl_id":null,"docs":" Returns the default configuration for an [event formatter].","sig":null,"attributes":[{"value":"/ Returns the default configuration for an [event formatter].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467033,"byte_end":14467096,"line_start":253,"line_end":253,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467097,"byte_end":14467100,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Methods on the returned event formatter can be used for further","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467101,"byte_end":14467168,"line_start":255,"line_end":255,"column_start":1,"column_end":68}},{"value":"/ configuration. For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467169,"byte_end":14467200,"line_start":256,"line_end":256,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467201,"byte_end":14467204,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467205,"byte_end":14467216,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ let format = tracing_subscriber::fmt::format()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467217,"byte_end":14467267,"line_start":259,"line_end":259,"column_start":1,"column_end":51}},{"value":"/     .without_time()         // Don't include timestamps","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467268,"byte_end":14467327,"line_start":260,"line_end":260,"column_start":1,"column_end":60}},{"value":"/     .with_target(false)     // Don't include event targets.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467328,"byte_end":14467391,"line_start":261,"line_end":261,"column_start":1,"column_end":64}},{"value":"/     .with_level(false)      // Don't include event levels.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467392,"byte_end":14467454,"line_start":262,"line_end":262,"column_start":1,"column_end":63}},{"value":"/     .compact();             // Use a more compact, abbreviated format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467455,"byte_end":14467529,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467530,"byte_end":14467533,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ // Use the configured formatter when building a new subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467534,"byte_end":14467601,"line_start":265,"line_end":265,"column_start":1,"column_end":68}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467602,"byte_end":14467631,"line_start":266,"line_end":266,"column_start":1,"column_end":30}},{"value":"/     .event_format(format)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467632,"byte_end":14467661,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467662,"byte_end":14467678,"line_start":268,"line_end":268,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467679,"byte_end":14467686,"line_start":269,"line_end":269,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468057,"byte_end":14468065,"line_start":284,"line_end":284,"column_start":8,"column_end":16},"name":"debug_fn","qualname":"::fmt::format::debug_fn","value":"fn debug_fn<F>(F) -> FieldFn<F> where\nF: Fn(&mut Writer, &Field, &dyn fmt::Debug) -> fmt::Result + Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`FormatFields`] implementation that formats fields using the\n provided function or closure.","sig":null,"attributes":[{"value":"/ Returns a [`FormatFields`] implementation that formats fields using the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14467936,"byte_end":14468011,"line_start":281,"line_end":281,"column_start":1,"column_end":76}},{"value":"/ provided function or closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468012,"byte_end":14468045,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468046,"byte_end":14468049,"line_start":283,"line_end":283,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468923,"byte_end":14468929,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"Writer","qualname":"::fmt::format::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260}],"decl_id":null,"docs":" A writer to which formatted representations of spans and events are written.","sig":null,"attributes":[{"value":"/ A writer to which formatted representations of spans and events are written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468191,"byte_end":14468271,"line_start":291,"line_end":291,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468272,"byte_end":14468275,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ This type is provided as input to the [`FormatEvent::format_event`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468276,"byte_end":14468351,"line_start":293,"line_end":293,"column_start":1,"column_end":76}},{"value":"/ [`FormatFields::format_fields`] methods, which will write formatted","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468352,"byte_end":14468423,"line_start":294,"line_end":294,"column_start":1,"column_end":72}},{"value":"/ representations of [`Event`]s and [fields] to the `Writer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468424,"byte_end":14468487,"line_start":295,"line_end":295,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468488,"byte_end":14468491,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This type implements the [`std::fmt::Write`] trait, allowing it to be used","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468492,"byte_end":14468570,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ with any function that takes an instance of [`std::fmt::Write`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468571,"byte_end":14468639,"line_start":298,"line_end":298,"column_start":1,"column_end":69}},{"value":"/ Additionally, it can be used with the standard library's [`std::write!`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468640,"byte_end":14468720,"line_start":299,"line_end":299,"column_start":1,"column_end":81}},{"value":"/ [`std::writeln!`] macros.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468721,"byte_end":14468750,"line_start":300,"line_end":300,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468751,"byte_end":14468754,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Additionally, a `Writer` may expose additional `tracing`-specific","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468755,"byte_end":14468824,"line_start":302,"line_end":302,"column_start":1,"column_end":70}},{"value":"/ information to the formatter implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468825,"byte_end":14468873,"line_start":303,"line_end":303,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468874,"byte_end":14468877,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ [fields]: tracing_core::field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14468878,"byte_end":14468911,"line_start":305,"line_end":305,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4330},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469176,"byte_end":14469183,"line_start":316,"line_end":316,"column_start":12,"column_end":19},"name":"FieldFn","qualname":"::fmt::format::FieldFn","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`FormatFields`] implementation that formats fields by calling a function\n or closure.","sig":null,"attributes":[{"value":"/ A [`FormatFields`] implementation that formats fields by calling a function","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469041,"byte_end":14469120,"line_start":312,"line_end":312,"column_start":1,"column_end":80}},{"value":"/ or closure.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469121,"byte_end":14469136,"line_start":313,"line_end":313,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469137,"byte_end":14469140,"line_start":314,"line_end":314,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469378,"byte_end":14469392,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"FieldFnVisitor","qualname":"::fmt::format::FieldFnVisitor","value":"FieldFnVisitor {  }","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266}],"decl_id":null,"docs":" The [visitor] produced by [`FieldFn`]'s [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ The [visitor] produced by [`FieldFn`]'s [`MakeVisitor`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469191,"byte_end":14469266,"line_start":317,"line_end":317,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469267,"byte_end":14469270,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [visitor]: super::super::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469271,"byte_end":14469312,"line_start":319,"line_end":319,"column_start":1,"column_end":42}},{"value":"/ [`MakeVisitor`]: super::super::field::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469313,"byte_end":14469366,"line_start":320,"line_end":320,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475520,"byte_end":14475527,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"Compact","qualname":"::fmt::format::Compact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker for [`Format`] that indicates that the compact log format should be used.","sig":null,"attributes":[{"value":"/ Marker for [`Format`] that indicates that the compact log format should be used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469463,"byte_end":14469547,"line_start":326,"line_end":326,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469548,"byte_end":14469551,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ The compact format includes fields from all currently entered spans, after","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469552,"byte_end":14469630,"line_start":328,"line_end":328,"column_start":1,"column_end":79}},{"value":"/ the event's fields. Span names are listed in order before fields are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469631,"byte_end":14469703,"line_start":329,"line_end":329,"column_start":1,"column_end":73}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469704,"byte_end":14469718,"line_start":330,"line_end":330,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469719,"byte_end":14469722,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Example Output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469723,"byte_end":14469743,"line_start":332,"line_end":332,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469744,"byte_end":14469747,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ <pre><font color=\"#4E9A06\"><b>:;</b></font> <font color=\"#4E9A06\">cargo</font> run --example fmt-compact","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469748,"byte_end":14469856,"line_start":334,"line_end":334,"column_start":1,"column_end":109}},{"value":"/ <font color=\"#4E9A06\"><b>    Finished</b></font> dev [unoptimized + debuginfo] target(s) in 0.08s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469857,"byte_end":14469958,"line_start":335,"line_end":335,"column_start":1,"column_end":102}},{"value":"/ <font color=\"#4E9A06\"><b>     Running</b></font> `target/debug/examples/fmt-compact`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14469959,"byte_end":14470047,"line_start":336,"line_end":336,"column_start":1,"column_end":89}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809287Z </font><font color=\"#4E9A06\"> INFO</font> <b>fmt_compact</b><font color=\"#AAAAAA\">: preparing to shave yaks </font><i>number_of_yaks</i><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14470048,"byte_end":14470269,"line_start":337,"line_end":337,"column_start":1,"column_end":222}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809367Z </font><font color=\"#4E9A06\"> INFO</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: shaving yaks </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14470270,"byte_end":14470531,"line_start":338,"line_end":338,"column_start":1,"column_end":262}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809414Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14470532,"byte_end":14470962,"line_start":339,"line_end":339,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809443Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: yak shaved successfully </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14470963,"byte_end":14471319,"line_start":340,"line_end":340,"column_start":1,"column_end":357}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809477Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=1 </font><i>shaved</i><font color=\"#AAAAAA\">=true </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14471320,"byte_end":14471646,"line_start":341,"line_end":341,"column_start":1,"column_end":327}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809500Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=1 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14471647,"byte_end":14471945,"line_start":342,"line_end":342,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809531Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14471946,"byte_end":14472376,"line_start":343,"line_end":343,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809554Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: yak shaved successfully </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14472377,"byte_end":14472733,"line_start":344,"line_end":344,"column_start":1,"column_end":357}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809581Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=2 </font><i>shaved</i><font color=\"#AAAAAA\">=true </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14472734,"byte_end":14473060,"line_start":345,"line_end":345,"column_start":1,"column_end":327}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809606Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14473061,"byte_end":14473359,"line_start":346,"line_end":346,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809635Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot; </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14473360,"byte_end":14473790,"line_start":347,"line_end":347,"column_start":1,"column_end":431}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809664Z </font><font color=\"#C4A000\"> WARN</font> <b>shaving_yaks</b>:<b>shave</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: could not locate yak </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3 </font><font color=\"#AAAAAA\"><i>yak</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14473791,"byte_end":14474144,"line_start":348,"line_end":348,"column_start":1,"column_end":354}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809693Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks</b>: <b>yak_events</b><font color=\"#AAAAAA\">: </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>shaved</i><font color=\"#AAAAAA\">=false </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14474145,"byte_end":14474472,"line_start":349,"line_end":349,"column_start":1,"column_end":328}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809717Z </font><font color=\"#CC0000\">ERROR</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: failed to shave yak </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>error</i><font color=\"#AAAAAA\">=missing yak </font><i>error.sources</i><font color=\"#AAAAAA\">=[out of space, out of cash] </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14474473,"byte_end":14474915,"line_start":350,"line_end":350,"column_start":1,"column_end":443}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809743Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks</b>: <b>fmt_compact::yak_shave</b><font color=\"#AAAAAA\">: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2 </font><font color=\"#AAAAAA\"><i>yaks</i></font><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14474916,"byte_end":14475214,"line_start":351,"line_end":351,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-17T19:51:05.809768Z </font><font color=\"#4E9A06\"> INFO</font> <b>fmt_compact</b><font color=\"#AAAAAA\">: yak shaving completed </font><i>all_yaks_shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475215,"byte_end":14475439,"line_start":352,"line_end":352,"column_start":1,"column_end":225}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475440,"byte_end":14475443,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475444,"byte_end":14475454,"line_start":354,"line_end":354,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481009,"byte_end":14481013,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"Full","qualname":"::fmt::format::Full","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker for [`Format`] that indicates that the default log format should be used.","sig":null,"attributes":[{"value":"/ Marker for [`Format`] that indicates that the default log format should be used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475530,"byte_end":14475614,"line_start":358,"line_end":358,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475615,"byte_end":14475618,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ This formatter shows the span context before printing event data. Spans are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475619,"byte_end":14475698,"line_start":360,"line_end":360,"column_start":1,"column_end":80}},{"value":"/ displayed including their names and fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475699,"byte_end":14475746,"line_start":361,"line_end":361,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475747,"byte_end":14475750,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ # Example Output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475751,"byte_end":14475771,"line_start":363,"line_end":363,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475772,"byte_end":14475775,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ <pre><font color=\"#4E9A06\"><b>:;</b></font> <font color=\"#4E9A06\">cargo</font> run --example fmt","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475776,"byte_end":14475876,"line_start":365,"line_end":365,"column_start":1,"column_end":101}},{"value":"/ <font color=\"#4E9A06\"><b>    Finished</b></font> dev [unoptimized + debuginfo] target(s) in 0.08s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475877,"byte_end":14475978,"line_start":366,"line_end":366,"column_start":1,"column_end":102}},{"value":"/ <font color=\"#4E9A06\"><b>     Running</b></font> `target/debug/examples/fmt`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14475979,"byte_end":14476059,"line_start":367,"line_end":367,"column_start":1,"column_end":81}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.289898Z </font><font color=\"#4E9A06\"> INFO</font> fmt: preparing to shave yaks <i>number_of_yaks</i><font color=\"#AAAAAA\">=3</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14476060,"byte_end":14476237,"line_start":368,"line_end":368,"column_start":1,"column_end":178}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.289974Z </font><font color=\"#4E9A06\"> INFO</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: shaving yaks</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14476238,"byte_end":14476463,"line_start":369,"line_end":369,"column_start":1,"column_end":226}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290011Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=1</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14476464,"byte_end":14476866,"line_start":370,"line_end":370,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290038Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=1</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: yak shaved successfully</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14476867,"byte_end":14477195,"line_start":371,"line_end":371,"column_start":1,"column_end":329}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290070Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=1 </font><i>shaved</i><font color=\"#AAAAAA\">=true</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14477196,"byte_end":14477494,"line_start":372,"line_end":372,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290089Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=1</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14477495,"byte_end":14477757,"line_start":373,"line_end":373,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290114Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=2</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14477758,"byte_end":14478160,"line_start":374,"line_end":374,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290134Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=2</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: yak shaved successfully</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14478161,"byte_end":14478489,"line_start":375,"line_end":375,"column_start":1,"column_end":329}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290157Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=2 </font><i>shaved</i><font color=\"#AAAAAA\">=true</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14478490,"byte_end":14478788,"line_start":376,"line_end":376,"column_start":1,"column_end":299}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290174Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14478789,"byte_end":14479051,"line_start":377,"line_end":377,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290198Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: hello! I&apos;m gonna shave a yak </font><i>excitement</i><font color=\"#AAAAAA\">=&quot;yay!&quot;</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14479052,"byte_end":14479454,"line_start":378,"line_end":378,"column_start":1,"column_end":403}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290222Z </font><font color=\"#C4A000\"> WARN</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">:</font><b>shave{</b><i>yak</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: could not locate yak</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14479455,"byte_end":14479780,"line_start":379,"line_end":379,"column_start":1,"column_end":326}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290247Z </font><font color=\"#3465A4\">DEBUG</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: yak_events: </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14479781,"byte_end":14480080,"line_start":380,"line_end":380,"column_start":1,"column_end":300}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290268Z </font><font color=\"#CC0000\">ERROR</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: failed to shave yak </font><i>yak</i><font color=\"#AAAAAA\">=3 </font><i>error</i><font color=\"#AAAAAA\">=missing yak </font><i>error.sources</i><font color=\"#AAAAAA\">=[out of space, out of cash]</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14480081,"byte_end":14480487,"line_start":381,"line_end":381,"column_start":1,"column_end":407}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290287Z </font><font color=\"#75507B\">TRACE</font> <b>shaving_yaks{</b><i>yaks</i><font color=\"#AAAAAA\">=3</font><b>}</b><font color=\"#AAAAAA\">: fmt::yak_shave: </font><i>yaks_shaved</i><font color=\"#AAAAAA\">=2</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14480488,"byte_end":14480750,"line_start":382,"line_end":382,"column_start":1,"column_end":263}},{"value":"/ <font color=\"#AAAAAA\">2022-02-15T18:40:14.290309Z </font><font color=\"#4E9A06\"> INFO</font> fmt: yak shaving completed. <i>all_yaks_shaved</i><font color=\"#AAAAAA\">=false</font>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14480751,"byte_end":14480932,"line_start":383,"line_end":383,"column_start":1,"column_end":182}},{"value":"/ </pre>","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14480933,"byte_end":14480943,"line_start":384,"line_end":384,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481618,"byte_end":14481624,"line_start":399,"line_end":399,"column_start":12,"column_end":18},"name":"Format","qualname":"::fmt::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291}],"decl_id":null,"docs":" A pre-configured event formatter.","sig":null,"attributes":[{"value":"/ A pre-configured event formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481016,"byte_end":14481053,"line_start":388,"line_end":388,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481054,"byte_end":14481057,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ You will usually want to use this as the `FormatEvent` for a `FmtSubscriber`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481058,"byte_end":14481139,"line_start":390,"line_end":390,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481140,"byte_end":14481143,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ The default logging format, [`Full`] includes all fields in each event and its containing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481144,"byte_end":14481237,"line_start":392,"line_end":392,"column_start":1,"column_end":94}},{"value":"/ spans. The [`Compact`] logging format is intended to produce shorter log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481238,"byte_end":14481314,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ lines; it displays each event's fields, along with fields from the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481315,"byte_end":14481393,"line_start":394,"line_end":394,"column_start":1,"column_end":79}},{"value":"/ span context, but other information is abbreviated. The [`Pretty`] logging","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481394,"byte_end":14481472,"line_start":395,"line_end":395,"column_start":1,"column_end":79}},{"value":"/ format is an extra-verbose, multi-line human-readable logging format","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481473,"byte_end":14481545,"line_start":396,"line_end":396,"column_start":1,"column_end":73}},{"value":"/ intended for use in development.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14481546,"byte_end":14481582,"line_start":397,"line_end":397,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482917,"byte_end":14482923,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"by_ref","qualname":"<Writer>::by_ref","value":"fn by_ref(&mut Self) -> Writer","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Writer` that mutably borrows `self`.","sig":null,"attributes":[{"value":"/ Return a new `Writer` that mutably borrows `self`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482626,"byte_end":14482680,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482685,"byte_end":14482688,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This can be used to temporarily borrow a `Writer` to pass a new `Writer`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482693,"byte_end":14482769,"line_start":433,"line_end":433,"column_start":5,"column_end":81}},{"value":"/ to a function that takes a `Writer` by value, allowing the original writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482774,"byte_end":14482852,"line_start":434,"line_end":434,"column_start":5,"column_end":83}},{"value":"/ to still be used once that function returns.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482857,"byte_end":14482905,"line_start":435,"line_end":435,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483869,"byte_end":14483878,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"write_str","qualname":"<Writer>::write_str","value":"fn write_str(&mut Self, &str) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Writes a string slice into this `Writer`, returning whether the write succeeded.","sig":null,"attributes":[{"value":"/ Writes a string slice into this `Writer`, returning whether the write succeeded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483095,"byte_end":14483179,"line_start":444,"line_end":444,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483184,"byte_end":14483187,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method can only succeed if the entire string slice was successfully","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483192,"byte_end":14483268,"line_start":446,"line_end":446,"column_start":5,"column_end":81}},{"value":"/ written, and this method will not return until all data has been written","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483273,"byte_end":14483349,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ or an error occurs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483354,"byte_end":14483377,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483382,"byte_end":14483385,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_str` method] from the `Writer`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483390,"byte_end":14483467,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483472,"byte_end":14483546,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used without needing to import the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483551,"byte_end":14483631,"line_start":452,"line_end":452,"column_start":5,"column_end":85}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483636,"byte_end":14483666,"line_start":453,"line_end":453,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483671,"byte_end":14483674,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483679,"byte_end":14483691,"line_start":455,"line_end":455,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483696,"byte_end":14483699,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This function will return an instance of [`std::fmt::Error`] on error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483704,"byte_end":14483778,"line_start":457,"line_end":457,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483783,"byte_end":14483786,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`write_str` method]: std::fmt::Write::write_str","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483791,"byte_end":14483843,"line_start":459,"line_end":459,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483848,"byte_end":14483857,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484796,"byte_end":14484806,"line_start":483,"line_end":483,"column_start":12,"column_end":22},"name":"write_char","qualname":"<Writer>::write_char","value":"fn write_char(&mut Self, char) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Writes a [`char`] into this writer, returning whether the write succeeded.","sig":null,"attributes":[{"value":"/ Writes a [`char`] into this writer, returning whether the write succeeded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14483960,"byte_end":14484038,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484043,"byte_end":14484046,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ A single [`char`] may be encoded as more than one byte.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484051,"byte_end":14484110,"line_start":467,"line_end":467,"column_start":5,"column_end":64}},{"value":"/ This method can only succeed if the entire byte sequence was successfully","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484115,"byte_end":14484192,"line_start":468,"line_end":468,"column_start":5,"column_end":82}},{"value":"/ written, and this method will not return until all data has been","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484197,"byte_end":14484265,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ written or an error occurs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484270,"byte_end":14484301,"line_start":470,"line_end":470,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484306,"byte_end":14484309,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_char` method] from the `Writer`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484314,"byte_end":14484392,"line_start":472,"line_end":472,"column_start":5,"column_end":83}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484397,"byte_end":14484471,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used without needing to import the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484476,"byte_end":14484556,"line_start":474,"line_end":474,"column_start":5,"column_end":85}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484561,"byte_end":14484591,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484596,"byte_end":14484599,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484604,"byte_end":14484616,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484621,"byte_end":14484624,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function will return an instance of [`std::fmt::Error`] on error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484629,"byte_end":14484703,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484708,"byte_end":14484711,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [`write_char` method]: std::fmt::Write::write_char","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484716,"byte_end":14484770,"line_start":481,"line_end":481,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484775,"byte_end":14484784,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485473,"byte_end":14485482,"line_start":499,"line_end":499,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"<Writer>::write_fmt","value":"fn write_fmt(&mut Self, fmt::Arguments) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Glue for usage of the [`write!`] macro with `Writer`s.","sig":null,"attributes":[{"value":"/ Glue for usage of the [`write!`] macro with `Writer`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484889,"byte_end":14484947,"line_start":487,"line_end":487,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484952,"byte_end":14484955,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This method should generally not be invoked manually, but rather through","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14484960,"byte_end":14485036,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ the [`write!`] macro itself.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485041,"byte_end":14485073,"line_start":490,"line_end":490,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485078,"byte_end":14485081,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This is identical to calling the [`write_fmt` method] from the `Writer`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485086,"byte_end":14485163,"line_start":492,"line_end":492,"column_start":5,"column_end":82}},{"value":"/ [`std::fmt::Write`] implementation. However, it is also provided as an","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485168,"byte_end":14485242,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ inherent method, so that `Writer`s can be used with the [`write!` macro]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485247,"byte_end":14485323,"line_start":494,"line_end":494,"column_start":5,"column_end":81}},{"value":"/ without needing to import the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485328,"byte_end":14485361,"line_start":495,"line_end":495,"column_start":5,"column_end":38}},{"value":"/ [`std::fmt::Write`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485366,"byte_end":14485396,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485401,"byte_end":14485404,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`write_fmt` method]: std::fmt::Write::write_fmt","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485409,"byte_end":14485461,"line_start":498,"line_end":498,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485894,"byte_end":14485910,"line_start":509,"line_end":509,"column_start":12,"column_end":28},"name":"has_ansi_escapes","qualname":"<Writer>::has_ansi_escapes","value":"fn has_ansi_escapes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [ANSI escape codes] may be used to add colors\n and other formatting when writing to this `Writer`.","sig":null,"attributes":[{"value":"/ Returns `true` if [ANSI escape codes] may be used to add colors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485584,"byte_end":14485651,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/ and other formatting when writing to this `Writer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485656,"byte_end":14485711,"line_start":504,"line_end":504,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485716,"byte_end":14485719,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If this returns `false`, formatters should not emit ANSI escape codes.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485724,"byte_end":14485798,"line_start":506,"line_end":506,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485803,"byte_end":14485806,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [ANSI escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14485811,"byte_end":14485882,"line_start":508,"line_end":508,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486701,"byte_end":14486710,"line_start":549,"line_end":549,"column_start":8,"column_end":17},"name":"write_str","qualname":"<Writer as std::fmt::Write>::write_str","value":"fn write_str(&mut Self, &str) -> fmt::Result","parent":{"krate":2,"index":9857},"children":[],"decl_id":{"krate":2,"index":9858},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486684,"byte_end":14486693,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486811,"byte_end":14486821,"line_start":554,"line_end":554,"column_start":8,"column_end":18},"name":"write_char","qualname":"<Writer as std::fmt::Write>::write_char","value":"fn write_char(&mut Self, char) -> fmt::Result","parent":{"krate":2,"index":9857},"children":[],"decl_id":{"krate":2,"index":9859},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486794,"byte_end":14486803,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486923,"byte_end":14486932,"line_start":559,"line_end":559,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<Writer as std::fmt::Write>::write_fmt","value":"fn write_fmt(&mut Self, fmt::Arguments) -> fmt::Result","parent":{"krate":2,"index":9857},"children":[],"decl_id":{"krate":2,"index":9861},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486906,"byte_end":14486915,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487074,"byte_end":14487077,"line_start":565,"line_end":565,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Writer as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487383,"byte_end":14487390,"line_start":576,"line_end":576,"column_start":8,"column_end":15},"name":"default","qualname":"<Format<Full, SystemTime> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487891,"byte_end":14487898,"line_start":596,"line_end":596,"column_start":12,"column_end":19},"name":"compact","qualname":"<Format<F, T>>::compact","value":"fn compact(Self) -> Format<Compact, T>","parent":null,"children":[],"decl_id":null,"docs":" Use a less verbose output format.","sig":null,"attributes":[{"value":"/ Use a less verbose output format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487809,"byte_end":14487846,"line_start":593,"line_end":593,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487851,"byte_end":14487854,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ See [`Compact`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487859,"byte_end":14487879,"line_start":595,"line_end":595,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489311,"byte_end":14489317,"line_start":635,"line_end":635,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Format<F, T>>::pretty","value":"fn pretty(Self) -> Format<Pretty, T>","parent":null,"children":[],"decl_id":null,"docs":" Use an excessively pretty, human-readable output format.","sig":null,"attributes":[{"value":"/ Use an excessively pretty, human-readable output format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488433,"byte_end":14488493,"line_start":611,"line_end":611,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488498,"byte_end":14488501,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ See [`Pretty`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488506,"byte_end":14488525,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488530,"byte_end":14488533,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Note that this requires the \"ansi\" feature to be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488538,"byte_end":14488599,"line_start":615,"line_end":615,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488604,"byte_end":14488607,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Options","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488612,"byte_end":14488625,"line_start":617,"line_end":617,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488630,"byte_end":14488633,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ [`Format::with_ansi`] can be used to disable ANSI terminal escape codes (which enable","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488638,"byte_end":14488727,"line_start":619,"line_end":619,"column_start":5,"column_end":94}},{"value":"/ formatting such as colors, bold, italic, etc) in event formatting. However, a field","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488732,"byte_end":14488819,"line_start":620,"line_end":620,"column_start":5,"column_end":92}},{"value":"/ formatter must be manually provided to avoid ANSI in the formatting of parent spans, like","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488824,"byte_end":14488917,"line_start":621,"line_end":621,"column_start":5,"column_end":98}},{"value":"/ so:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488922,"byte_end":14488929,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488934,"byte_end":14488937,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488942,"byte_end":14488949,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ # use tracing_subscriber::fmt::format;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14488954,"byte_end":14488996,"line_start":625,"line_end":625,"column_start":5,"column_end":47}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489001,"byte_end":14489030,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/    .pretty()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489035,"byte_end":14489051,"line_start":627,"line_end":627,"column_start":5,"column_end":21}},{"value":"/    .with_ansi(false)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489056,"byte_end":14489080,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/    .fmt_fields(format::PrettyFields::new().with_ansi(false))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489085,"byte_end":14489149,"line_start":629,"line_end":629,"column_start":5,"column_end":69}},{"value":"/    // ... other settings ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489154,"byte_end":14489186,"line_start":630,"line_end":630,"column_start":5,"column_end":37}},{"value":"/    .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489191,"byte_end":14489206,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489211,"byte_end":14489218,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14489223,"byte_end":14489247,"line_start":633,"line_end":633,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491527,"byte_end":14491537,"line_start":695,"line_end":695,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<Format<F, T>>::with_timer","value":"fn with_timer<T2>(Self, T2) -> Format<F, T2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for log message timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for log message timestamps.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14490914,"byte_end":14490969,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14490974,"byte_end":14490977,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ See [`time` module] for the provided timer implementations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14490982,"byte_end":14491045,"line_start":683,"line_end":683,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491050,"byte_end":14491053,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time\"` feature flag enables the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491058,"byte_end":14491115,"line_start":685,"line_end":685,"column_start":5,"column_end":62}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491120,"byte_end":14491195,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491200,"byte_end":14491269,"line_start":687,"line_end":687,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491274,"byte_end":14491286,"line_start":688,"line_end":688,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491291,"byte_end":14491294,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: super::time::FormatTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491299,"byte_end":14491337,"line_start":690,"line_end":690,"column_start":5,"column_end":43}},{"value":"/ [`time` module]: mod@super::time","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491342,"byte_end":14491378,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/ [`UtcTime`]: super::time::UtcTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491383,"byte_end":14491420,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ [`LocalTime`]: super::time::LocalTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491425,"byte_end":14491466,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14491471,"byte_end":14491515,"line_start":694,"line_end":694,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492131,"byte_end":14492143,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"without_time","qualname":"<Format<F, T>>::without_time","value":"fn without_time(Self) -> Format<F, ()>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with log messages.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with log messages.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492074,"byte_end":14492119,"line_start":710,"line_end":710,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492717,"byte_end":14492726,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"with_ansi","qualname":"<Format<F, T>>::with_ansi","value":"fn with_ansi(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Enable ANSI terminal colors for formatted output.\n","sig":null,"attributes":[{"value":"/ Enable ANSI terminal colors for formatted output.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492652,"byte_end":14492705,"line_start":726,"line_end":726,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492917,"byte_end":14492928,"line_start":735,"line_end":735,"column_start":12,"column_end":23},"name":"with_target","qualname":"<Format<F, T>>::with_target","value":"fn with_target(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14492850,"byte_end":14492905,"line_start":734,"line_end":734,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493126,"byte_end":14493136,"line_start":743,"line_end":743,"column_start":12,"column_end":22},"name":"with_level","qualname":"<Format<F, T>>::with_level","value":"fn with_level(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493060,"byte_end":14493114,"line_start":742,"line_end":742,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493435,"byte_end":14493450,"line_start":754,"line_end":754,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<Format<F, T>>::with_thread_ids","value":"fn with_thread_ids(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493266,"byte_end":14493340,"line_start":750,"line_end":750,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493345,"byte_end":14493372,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493377,"byte_end":14493380,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493385,"byte_end":14493423,"line_start":753,"line_end":753,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493752,"byte_end":14493769,"line_start":765,"line_end":765,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<Format<F, T>>::with_thread_names","value":"fn with_thread_names(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493588,"byte_end":14493657,"line_start":761,"line_end":761,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493662,"byte_end":14493689,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493694,"byte_end":14493697,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493702,"byte_end":14493740,"line_start":764,"line_end":764,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494062,"byte_end":14494071,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"with_file","qualname":"<Format<F, T>>::with_file","value":"fn with_file(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493911,"byte_end":14493978,"line_start":772,"line_end":772,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14493983,"byte_end":14493997,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494002,"byte_end":14494005,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494010,"byte_end":14494050,"line_start":775,"line_end":775,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494360,"byte_end":14494376,"line_start":787,"line_end":787,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<Format<F, T>>::with_line_number","value":"fn with_line_number(Self, bool) -> Format<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494207,"byte_end":14494276,"line_start":783,"line_end":783,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494281,"byte_end":14494295,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494300,"byte_end":14494303,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494308,"byte_end":14494348,"line_start":786,"line_end":786,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494761,"byte_end":14494781,"line_start":799,"line_end":799,"column_start":12,"column_end":32},"name":"with_source_location","qualname":"<Format<F, T>>::with_source_location","value":"fn with_source_location(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the source code location from which an event\n originated is displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not the source code location from which an event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494518,"byte_end":14494586,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"/ originated is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494591,"byte_end":14494619,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494624,"byte_end":14494627,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling [`Format::with_file`] and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494632,"byte_end":14494691,"line_start":797,"line_end":797,"column_start":5,"column_end":64}},{"value":"/ [`Format::with_line_number`] with the same value.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14494696,"byte_end":14494749,"line_start":798,"line_end":798,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14497781,"byte_end":14497793,"line_start":890,"line_end":890,"column_start":8,"column_end":20},"name":"format_event","qualname":"<Format<Full, T> as fmt::format::FormatEvent>::format_event","value":"fn format_event(&Self, &FmtContext<, S, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":3237},"children":[],"decl_id":{"krate":0,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14501663,"byte_end":14501675,"line_start":1018,"line_end":1018,"column_start":8,"column_end":20},"name":"format_event","qualname":"<Format<Compact, T> as fmt::format::FormatEvent>::format_event","value":"fn format_event(&Self, &FmtContext<, S, N>, Writer, &Event) -> fmt::Result","parent":{"krate":0,"index":3237},"children":[],"decl_id":{"krate":0,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505675,"byte_end":14505688,"line_start":1146,"line_end":1146,"column_start":8,"column_end":21},"name":"format_fields","qualname":"<M as fmt::format::FormatFields>::format_fields","value":"fn format_fields<R>(&Self, Writer, R) -> fmt::Result where R: RecordFields","parent":{"krate":0,"index":3249},"children":[],"decl_id":{"krate":0,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4275},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505953,"byte_end":14505966,"line_start":1156,"line_end":1156,"column_start":12,"column_end":25},"name":"DefaultFields","qualname":"::fmt::format::DefaultFields","value":"DefaultFields {  }","parent":null,"children":[{"krate":0,"index":4276}],"decl_id":null,"docs":" The default [`FormatFields`] implementation.","sig":null,"attributes":[{"value":"/ The default [`FormatFields`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505872,"byte_end":14505920,"line_start":1153,"line_end":1153,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505921,"byte_end":14505924,"line_start":1154,"line_end":1154,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":4267},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506305,"byte_end":14506319,"line_start":1167,"line_end":1167,"column_start":12,"column_end":26},"name":"DefaultVisitor","qualname":"::fmt::format::DefaultVisitor","value":"DefaultVisitor {  }","parent":null,"children":[{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271}],"decl_id":null,"docs":" The [visitor] produced by [`DefaultFields`]'s [`MakeVisitor`] implementation.","sig":null,"attributes":[{"value":"/ The [visitor] produced by [`DefaultFields`]'s [`MakeVisitor`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506095,"byte_end":14506176,"line_start":1162,"line_end":1162,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506177,"byte_end":14506180,"line_start":1163,"line_end":1163,"column_start":1,"column_end":4}},{"value":"/ [visitor]: super::super::field::Visit","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506181,"byte_end":14506222,"line_start":1164,"line_end":1164,"column_start":1,"column_end":42}},{"value":"/ [`MakeVisitor`]: super::super::field::MakeVisitor","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506223,"byte_end":14506276,"line_start":1165,"line_end":1165,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506501,"byte_end":14506504,"line_start":1176,"line_end":1176,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultFields>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default [`FormatFields`] implementation.","sig":null,"attributes":[{"value":"/ Returns a new default [`FormatFields`] implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506423,"byte_end":14506481,"line_start":1174,"line_end":1174,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506486,"byte_end":14506489,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506596,"byte_end":14506603,"line_start":1182,"line_end":1182,"column_start":8,"column_end":15},"name":"default","qualname":"<DefaultFields as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506759,"byte_end":14506771,"line_start":1191,"line_end":1191,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<DefaultFields as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, Writer) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506742,"byte_end":14506751,"line_start":1190,"line_end":1190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507195,"byte_end":14507198,"line_start":1205,"line_end":1205,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultVisitor>::new","value":"fn new(Writer, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new default visitor that formats to the provided `writer`.","sig":null,"attributes":[{"value":"/ Returns a new default visitor that formats to the provided `writer`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506935,"byte_end":14507007,"line_start":1199,"line_end":1199,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507012,"byte_end":14507015,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507020,"byte_end":14507035,"line_start":1201,"line_end":1201,"column_start":5,"column_end":20}},{"value":"/ - `writer`: the writer to format to.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507040,"byte_end":14507080,"line_start":1202,"line_end":1202,"column_start":5,"column_end":45}},{"value":"/ - `is_empty`: whether or not any fields have been previously written to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507085,"byte_end":14507160,"line_start":1203,"line_end":1203,"column_start":5,"column_end":80}},{"value":"/   that writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507165,"byte_end":14507183,"line_start":1204,"line_end":1204,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507581,"byte_end":14507591,"line_start":1223,"line_end":1223,"column_start":8,"column_end":18},"name":"record_str","qualname":"<DefaultVisitor as tracing_core::field::Visit>::record_str","value":"fn record_str(&mut Self, &Field, &str)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507888,"byte_end":14507900,"line_start":1235,"line_end":1235,"column_start":8,"column_end":20},"name":"record_error","qualname":"<DefaultVisitor as tracing_core::field::Visit>::record_error","value":"fn record_error(&mut Self, &Field, &dyn std::error::Error + 'static)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14508543,"byte_end":14508555,"line_start":1254,"line_end":1254,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<DefaultVisitor as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509566,"byte_end":14509572,"line_start":1284,"line_end":1284,"column_start":8,"column_end":14},"name":"finish","qualname":"<DefaultVisitor as field::VisitOutput>::finish","value":"fn finish(Self) -> fmt::Result","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509689,"byte_end":14509695,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"writer","qualname":"<DefaultVisitor as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14515823,"byte_end":14515835,"line_start":1513,"line_end":1513,"column_start":8,"column_end":20},"name":"make_visitor","qualname":"<FieldFn<F> as field::MakeVisitor>::make_visitor","value":"fn make_visitor(&Self, Writer) -> Self::Visitor","parent":{"krate":0,"index":169},"children":[],"decl_id":{"krate":0,"index":172},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516132,"byte_end":14516144,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"record_debug","qualname":"<FieldFnVisitor as tracing_core::field::Visit>::record_debug","value":"fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":16,"index":387},"children":[],"decl_id":{"krate":16,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516462,"byte_end":14516468,"line_start":1537,"line_end":1537,"column_start":8,"column_end":14},"name":"finish","qualname":"<FieldFnVisitor as field::VisitOutput>::finish","value":"fn finish(Self) -> fmt::Result","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":175},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516651,"byte_end":14516657,"line_start":1546,"line_end":1546,"column_start":8,"column_end":14},"name":"writer","qualname":"<FieldFnVisitor as field::VisitFmt>::writer","value":"fn writer(&mut Self) -> &mut dyn fmt::Write","parent":{"krate":0,"index":185},"children":[],"decl_id":{"krate":0,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516786,"byte_end":14516789,"line_start":1552,"line_end":1552,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FieldFnVisitor as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517335,"byte_end":14517342,"line_start":1567,"line_end":1567,"column_start":12,"column_end":19},"name":"FmtSpan","qualname":"::fmt::format::FmtSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Configures what points in the span lifecycle are logged as events.","sig":null,"attributes":[{"value":"/ Configures what points in the span lifecycle are logged as events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517116,"byte_end":14517186,"line_start":1563,"line_end":1563,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517187,"byte_end":14517190,"line_start":1564,"line_end":1564,"column_start":1,"column_end":4}},{"value":"/ See also [`with_span_events`](super::SubscriberBuilder.html::with_span_events).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517191,"byte_end":14517274,"line_start":1565,"line_end":1565,"column_start":1,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517417,"byte_end":14517420,"line_start":1571,"line_end":1571,"column_start":15,"column_end":18},"name":"NEW","qualname":"::fmt::format::FmtSpan::NEW","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" one event when span is created\n","sig":null,"attributes":[{"value":"/ one event when span is created","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517368,"byte_end":14517402,"line_start":1570,"line_end":1570,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517501,"byte_end":14517506,"line_start":1573,"line_end":1573,"column_start":15,"column_end":20},"name":"ENTER","qualname":"::fmt::format::FmtSpan::ENTER","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" one event per enter of a span\n","sig":null,"attributes":[{"value":"/ one event per enter of a span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517453,"byte_end":14517486,"line_start":1572,"line_end":1572,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517586,"byte_end":14517590,"line_start":1575,"line_end":1575,"column_start":15,"column_end":19},"name":"EXIT","qualname":"::fmt::format::FmtSpan::EXIT","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" one event per exit of a span\n","sig":null,"attributes":[{"value":"/ one event per exit of a span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517539,"byte_end":14517571,"line_start":1574,"line_end":1574,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517676,"byte_end":14517681,"line_start":1577,"line_end":1577,"column_start":15,"column_end":20},"name":"CLOSE","qualname":"::fmt::format::FmtSpan::CLOSE","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" one event when the span is dropped\n","sig":null,"attributes":[{"value":"/ one event when the span is dropped","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517623,"byte_end":14517661,"line_start":1576,"line_end":1576,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517773,"byte_end":14517777,"line_start":1580,"line_end":1580,"column_start":15,"column_end":19},"name":"NONE","qualname":"::fmt::format::FmtSpan::NONE","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" spans are ignored (this is the default)\n","sig":null,"attributes":[{"value":"/ spans are ignored (this is the default)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517715,"byte_end":14517758,"line_start":1579,"line_end":1579,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517858,"byte_end":14517864,"line_start":1582,"line_end":1582,"column_start":15,"column_end":21},"name":"ACTIVE","qualname":"::fmt::format::FmtSpan::ACTIVE","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" one event per enter/exit of a span\n","sig":null,"attributes":[{"value":"/ one event per enter/exit of a span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517805,"byte_end":14517843,"line_start":1581,"line_end":1581,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517989,"byte_end":14517993,"line_start":1584,"line_end":1584,"column_start":15,"column_end":19},"name":"FULL","qualname":"::fmt::format::FmtSpan::FULL","value":"FmtSpan","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":" events at all points (new, enter, exit, drop)\n","sig":null,"attributes":[{"value":"/ events at all points (new, enter, exit, drop)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517925,"byte_end":14517974,"line_start":1583,"line_end":1583,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14518855,"byte_end":14518861,"line_start":1615,"line_end":1615,"column_start":31,"column_end":37},"name":"bitand","qualname":"<FmtSpan as std::ops::BitAnd>::bitand","value":"fn bitand(Self, Self) -> Self::Output","parent":{"krate":2,"index":3277},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14518896,"byte_end":14518901,"line_start":1616,"line_end":1616,"column_start":30,"column_end":35},"name":"bitor","qualname":"<FmtSpan as std::ops::BitOr>::bitor","value":"fn bitor(Self, Self) -> Self::Output","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3285},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14518937,"byte_end":14518943,"line_start":1617,"line_end":1617,"column_start":31,"column_end":37},"name":"bitxor","qualname":"<FmtSpan as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, Self) -> Self::Output","parent":{"krate":2,"index":3287},"children":[],"decl_id":{"krate":2,"index":3290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14518993,"byte_end":14519006,"line_start":1619,"line_end":1619,"column_start":44,"column_end":57},"name":"bitand_assign","qualname":"<FmtSpan as std::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign(&mut Self, Self)","parent":{"krate":2,"index":3304},"children":[],"decl_id":{"krate":2,"index":3306},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14519054,"byte_end":14519066,"line_start":1620,"line_end":1620,"column_start":43,"column_end":55},"name":"bitor_assign","qualname":"<FmtSpan as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign(&mut Self, Self)","parent":{"krate":2,"index":3308},"children":[],"decl_id":{"krate":2,"index":3310},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14519115,"byte_end":14519128,"line_start":1621,"line_end":1621,"column_start":44,"column_end":57},"name":"bitxor_assign","qualname":"<FmtSpan as std::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign(&mut Self, Self)","parent":{"krate":2,"index":3312},"children":[],"decl_id":{"krate":2,"index":3314},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14519167,"byte_end":14519170,"line_start":1624,"line_end":1624,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FmtSpan as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::fmt::time","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3478},{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":4007},{"krate":0,"index":4009},{"krate":0,"index":4011},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4020},{"krate":0,"index":4022},{"krate":0,"index":4024},{"krate":0,"index":4026},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":3510},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516}],"decl_id":null,"docs":" Formatters for event timestamps.\n","sig":null,"attributes":[{"value":"/ Formatters for event timestamps.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14559430,"byte_end":14559466,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3498},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560534,"byte_end":14560544,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"FormatTime","qualname":"::fmt::time::FormatTime","value":"FormatTime","parent":null,"children":[{"krate":0,"index":3499}],"decl_id":null,"docs":" A type that can measure and format the current time.","sig":null,"attributes":[{"value":"/ A type that can measure and format the current time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14559942,"byte_end":14559998,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14559999,"byte_end":14560002,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This trait is used by `Format` to include a timestamp with each `Event` when it is logged.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560003,"byte_end":14560097,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560098,"byte_end":14560101,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Notable default implementations of this trait are `SystemTime` and `()`. The former prints the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560102,"byte_end":14560200,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ current time as reported by `std::time::SystemTime`, and the latter does not print the current","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560201,"byte_end":14560299,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ time at all. `FormatTime` is also automatically implemented for any function pointer with the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560300,"byte_end":14560397,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ appropriate signature.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560398,"byte_end":14560424,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560425,"byte_end":14560428,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The full list of provided implementations can be found in [`time`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560429,"byte_end":14560500,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560501,"byte_end":14560504,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`time`]: self","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560505,"byte_end":14560523,"line_start":33,"line_end":33,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560901,"byte_end":14560912,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"format_time","qualname":"::fmt::time::FormatTime::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":null,"docs":" Measure and write out the current time.","sig":null,"attributes":[{"value":"/ Measure and write out the current time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560551,"byte_end":14560594,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560599,"byte_end":14560602,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ When `format_time` is called, implementors should get the current time using their desired","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560607,"byte_end":14560701,"line_start":37,"line_end":37,"column_start":5,"column_end":99}},{"value":"/ mechanism, and write it out to the given `fmt::Write`. Implementors must insert a trailing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560706,"byte_end":14560800,"line_start":38,"line_end":38,"column_start":5,"column_end":99}},{"value":"/ space themselves if they wish to separate the time from subsequent log message text.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560805,"byte_end":14560893,"line_start":39,"line_end":39,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561302,"byte_end":14561306,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"time","qualname":"::fmt::time::time","value":"fn time() -> SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SystemTime` timestamp provider.","sig":null,"attributes":[{"value":"/ Returns a new `SystemTime` timestamp provider.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14560959,"byte_end":14561009,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561010,"byte_end":14561013,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This can then be configured further to determine how timestamps should be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561014,"byte_end":14561091,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ configured.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561092,"byte_end":14561107,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561108,"byte_end":14561111,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561112,"byte_end":14561145,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561146,"byte_end":14561157,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # fn timer() -> tracing_subscriber::fmt::time::SystemTime {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561158,"byte_end":14561221,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/ tracing_subscriber::fmt::time::SystemTime::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561222,"byte_end":14561278,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561279,"byte_end":14561286,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561287,"byte_end":14561294,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561821,"byte_end":14561827,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"uptime","qualname":"::fmt::time::uptime","value":"fn uptime() -> Uptime","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Uptime` timestamp provider.","sig":null,"attributes":[{"value":"/ Returns a new `Uptime` timestamp provider.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561354,"byte_end":14561400,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561401,"byte_end":14561404,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ With this timer, timestamps will be formatted with the amount of time","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561405,"byte_end":14561478,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ elapsed since the timestamp provider was constructed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561479,"byte_end":14561536,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561537,"byte_end":14561540,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This can then be configured further to determine how timestamps should be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561541,"byte_end":14561618,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ configured.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561619,"byte_end":14561634,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561635,"byte_end":14561638,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to calling","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561639,"byte_end":14561672,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561673,"byte_end":14561684,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # fn timer() -> tracing_subscriber::fmt::time::Uptime {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561685,"byte_end":14561744,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ tracing_subscriber::fmt::time::Uptime::default()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561745,"byte_end":14561797,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561798,"byte_end":14561805,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561806,"byte_end":14561813,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14561934,"byte_end":14561945,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"format_time","qualname":"<&'a F as fmt::time::FormatTime>::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":{"krate":0,"index":3499},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562062,"byte_end":14562073,"line_start":86,"line_end":86,"column_start":8,"column_end":19},"name":"format_time","qualname":"<() as fmt::time::FormatTime>::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":{"krate":0,"index":3499},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562206,"byte_end":14562217,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"format_time","qualname":"<fn(: &mut Writer) -> fmt::Result as fmt::time::FormatTime>::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":{"krate":0,"index":3499},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562407,"byte_end":14562417,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"SystemTime","qualname":"::fmt::time::SystemTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Retrieve and print the current wall-clock time.\n","sig":null,"attributes":[{"value":"/ Retrieve and print the current wall-clock time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562290,"byte_end":14562341,"line_start":97,"line_end":97,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562636,"byte_end":14562642,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Uptime","qualname":"::fmt::time::Uptime","value":"Uptime {  }","parent":null,"children":[{"krate":0,"index":4023}],"decl_id":null,"docs":" Retrieve and print the relative elapsed wall-clock time since an epoch.","sig":null,"attributes":[{"value":"/ Retrieve and print the relative elapsed wall-clock time since an epoch.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562420,"byte_end":14562495,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562496,"byte_end":14562499,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The `Default` implementation for `Uptime` makes the epoch the current time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562500,"byte_end":14562579,"line_start":103,"line_end":103,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562701,"byte_end":14562708,"line_start":110,"line_end":110,"column_start":8,"column_end":15},"name":"default","qualname":"<Uptime as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562831,"byte_end":14562835,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"from","qualname":"<Uptime as std::convert::From>::from","value":"fn from(Instant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562936,"byte_end":14562947,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"format_time","qualname":"<SystemTime as fmt::time::FormatTime>::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":{"krate":0,"index":3499},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14563163,"byte_end":14563174,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"format_time","qualname":"<Uptime as fmt::time::FormatTime>::format_time","value":"fn format_time(&Self, &mut Writer) -> fmt::Result","parent":{"krate":0,"index":3498},"children":[],"decl_id":{"krate":0,"index":3499},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3518},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::fmt::writer","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","parent":null,"children":[{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3548},{"krate":0,"index":4036},{"krate":0,"index":4038},{"krate":0,"index":4040},{"krate":0,"index":3559},{"krate":0,"index":4042},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":4058},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":3563},{"krate":0,"index":4077},{"krate":0,"index":4081},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":4089},{"krate":0,"index":4091},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4100},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4109},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4123},{"krate":0,"index":4128},{"krate":0,"index":4131},{"krate":0,"index":4135},{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4146},{"krate":0,"index":4149},{"krate":0,"index":4154},{"krate":0,"index":4159},{"krate":0,"index":4162},{"krate":0,"index":4166},{"krate":0,"index":4170},{"krate":0,"index":4173},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4185},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4197},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4216},{"krate":0,"index":4221},{"krate":0,"index":4225},{"krate":0,"index":4229},{"krate":0,"index":4232},{"krate":0,"index":3565},{"krate":0,"index":3571},{"krate":0,"index":3576},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3589},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3600},{"krate":0,"index":3604},{"krate":0,"index":3610},{"krate":0,"index":3615},{"krate":0,"index":3623},{"krate":0,"index":3631},{"krate":0,"index":3635},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3656},{"krate":0,"index":3660},{"krate":0,"index":3667},{"krate":0,"index":3671},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3687},{"krate":0,"index":3693},{"krate":0,"index":3701},{"krate":0,"index":3709}],"decl_id":null,"docs":" Abstractions for creating [`io::Write`] instances.","sig":null,"attributes":[{"value":"/ Abstractions for creating [`io::Write`] instances.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577640,"byte_end":14577694,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577695,"byte_end":14577698,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577699,"byte_end":14577732,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580619,"byte_end":14580629,"line_start":96,"line_end":96,"column_start":11,"column_end":21},"name":"MakeWriter","qualname":"::fmt::writer::MakeWriter","value":"MakeWriter<'a>","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"decl_id":null,"docs":" A type that can create [`io::Write`] instances.","sig":null,"attributes":[{"value":"/ A type that can create [`io::Write`] instances.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577844,"byte_end":14577895,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577896,"byte_end":14577899,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `MakeWriter` is used by [`fmt::Layer`] or [`fmt::Subscriber`] to print","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577900,"byte_end":14577974,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ formatted text representations of [`Event`]s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14577975,"byte_end":14578024,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578025,"byte_end":14578028,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is already implemented for function pointers and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578029,"byte_end":14578092,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ immutably-borrowing closures that return an instance of [`io::Write`], such","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578093,"byte_end":14578172,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ as [`io::stdout`] and [`io::stderr`]. Additionally, it is implemented for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578173,"byte_end":14578250,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ [`std::sync::Mutex`][mutex] when the tyoe inside the mutex implements","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578251,"byte_end":14578324,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ [`io::Write`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578325,"byte_end":14578343,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578344,"byte_end":14578347,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578348,"byte_end":14578362,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578363,"byte_end":14578366,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The simplest usage is to pass in a named function that returns a writer. For","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578367,"byte_end":14578447,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ example, to log all events to stderr, we could write:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578448,"byte_end":14578505,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578506,"byte_end":14578513,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578514,"byte_end":14578560,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/     .with_writer(std::io::stderr)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578561,"byte_end":14578598,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578599,"byte_end":14578617,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578618,"byte_end":14578641,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578642,"byte_end":14578649,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578650,"byte_end":14578653,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Any function that returns a writer can be used:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578654,"byte_end":14578705,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578706,"byte_end":14578709,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578710,"byte_end":14578717,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ fn make_my_great_writer() -> impl std::io::Write {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578718,"byte_end":14578772,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578773,"byte_end":14578787,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/     # std::io::stdout()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578788,"byte_end":14578815,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578816,"byte_end":14578821,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578822,"byte_end":14578825,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578826,"byte_end":14578872,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/     .with_writer(make_my_great_writer)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578873,"byte_end":14578915,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578916,"byte_end":14578934,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578935,"byte_end":14578958,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578959,"byte_end":14578966,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578967,"byte_end":14578970,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A closure can be used to introduce arbitrary logic into how the writer is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14578971,"byte_end":14579048,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ created. Consider the (admittedly rather silly) example of sending every 5th","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579049,"byte_end":14579129,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ event to stderr, and all other events to stdout:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579130,"byte_end":14579182,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579183,"byte_end":14579186,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579187,"byte_end":14579194,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579195,"byte_end":14579211,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering::Relaxed};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579212,"byte_end":14579272,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579273,"byte_end":14579276,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let n = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579277,"byte_end":14579309,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579310,"byte_end":14579356,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     .with_writer(move || -> Box<dyn io::Write> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579357,"byte_end":14579409,"line_start":57,"line_end":57,"column_start":1,"column_end":53}},{"value":"/         if n.fetch_add(1, Relaxed) % 5 == 0 {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579410,"byte_end":14579459,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/             Box::new(io::stderr())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579460,"byte_end":14579498,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579499,"byte_end":14579519,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/             Box::new(io::stdout())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579520,"byte_end":14579558,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/        }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579559,"byte_end":14579571,"line_start":62,"line_end":62,"column_start":1,"column_end":13}},{"value":"/     })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579572,"byte_end":14579582,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579583,"byte_end":14579601,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579602,"byte_end":14579625,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579626,"byte_end":14579633,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579634,"byte_end":14579637,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ A single instance of a type implementing [`io::Write`] may be used as a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579638,"byte_end":14579713,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ `MakeWriter` by wrapping it in a [`Mutex`][mutex]. For example, we could","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579714,"byte_end":14579790,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ write to a file like so:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579791,"byte_end":14579819,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579820,"byte_end":14579823,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579824,"byte_end":14579831,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ use std::{fs::File, sync::Mutex};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579832,"byte_end":14579869,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579870,"byte_end":14579873,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # fn docs() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579874,"byte_end":14579933,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/ let log_file = File::create(\"my_cool_trace.log\")?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579934,"byte_end":14579988,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14579989,"byte_end":14580035,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/     .with_writer(Mutex::new(log_file))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580036,"byte_end":14580078,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580079,"byte_end":14580097,"line_start":79,"line_end":79,"column_start":1,"column_end":19}},{"value":"/ # drop(subscriber);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580098,"byte_end":14580121,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580122,"byte_end":14580134,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580135,"byte_end":14580142,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580143,"byte_end":14580150,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580151,"byte_end":14580154,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580155,"byte_end":14580188,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/ [`fmt::Layer`]: crate::fmt::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580189,"byte_end":14580226,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/ [`fmt::Subscriber`]: crate::fmt::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580227,"byte_end":14580274,"line_start":87,"line_end":87,"column_start":1,"column_end":48}},{"value":"/ [`Event`]: tracing_core::event::Event","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580275,"byte_end":14580316,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/ [`io::stdout`]: std::io::stdout()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580317,"byte_end":14580354,"line_start":89,"line_end":89,"column_start":1,"column_end":38}},{"value":"/ [`io::stderr`]: std::io::stderr()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580355,"byte_end":14580392,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/ [mutex]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580393,"byte_end":14580422,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ [`MakeWriter::make_writer_for`]: MakeWriter::make_writer_for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580423,"byte_end":14580487,"line_start":92,"line_end":92,"column_start":1,"column_end":65}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580488,"byte_end":14580528,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/ [levels]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580529,"byte_end":14580562,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ [targets]: tracing_core::Metadata::target","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580563,"byte_end":14580608,"line_start":95,"line_end":95,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580819,"byte_end":14580825,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Writer","qualname":"::fmt::writer::MakeWriter::Writer","value":"type Writer: io::Write;","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" The concrete [`io::Write`] implementation returned by [`make_writer`].","sig":null,"attributes":[{"value":"/ The concrete [`io::Write`] implementation returned by [`make_writer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580640,"byte_end":14580714,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580719,"byte_end":14580722,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580727,"byte_end":14580760,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/ [`make_writer`]: MakeWriter::make_writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580765,"byte_end":14580809,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581467,"byte_end":14581478,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"make_writer","qualname":"::fmt::writer::MakeWriter::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Returns an instance of [`Writer`].","sig":null,"attributes":[{"value":"/ Returns an instance of [`Writer`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580843,"byte_end":14580881,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580886,"byte_end":14580889,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Implementer notes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580894,"byte_end":14580917,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580922,"byte_end":14580925,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`fmt::Layer`] or [`fmt::Subscriber`] will call this method each time an event is recorded. Ensure any state","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14580930,"byte_end":14581042,"line_start":107,"line_end":107,"column_start":5,"column_end":117}},{"value":"/ that must be saved across writes is not lost when the [`Writer`] instance is dropped. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581047,"byte_end":14581139,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ creating a [`io::Write`] instance is expensive, be sure to cache it when implementing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581144,"byte_end":14581233,"line_start":109,"line_end":109,"column_start":5,"column_end":94}},{"value":"/ [`MakeWriter`] to improve performance.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581238,"byte_end":14581280,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581285,"byte_end":14581288,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: MakeWriter::Writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581293,"byte_end":14581327,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/ [`fmt::Layer`]: crate::fmt::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581332,"byte_end":14581369,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ [`fmt::Subscriber`]: crate::fmt::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581374,"byte_end":14581421,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581426,"byte_end":14581459,"line_start":115,"line_end":115,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585061,"byte_end":14585076,"line_start":206,"line_end":206,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"::fmt::writer::MakeWriter::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":null,"docs":" Returns a [`Writer`] for writing data from the span or event described\n by the provided [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns a [`Writer`] for writing data from the span or event described","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581511,"byte_end":14581585,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ by the provided [`Metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581590,"byte_end":14581623,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581628,"byte_end":14581631,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ By default, this calls [`self.make_writer()`][make_writer], ignoring","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581636,"byte_end":14581708,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ the provided metadata, but implementations can override this to provide","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581713,"byte_end":14581788,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ metadata-specific behaviors.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581793,"byte_end":14581825,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581830,"byte_end":14581833,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This method allows `MakeWriter` implementations to implement different","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581838,"byte_end":14581912,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ behaviors based on the span or event being written. The `MakeWriter`","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581917,"byte_end":14581989,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ type might return different writers based on the provided metadata, or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14581994,"byte_end":14582068,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ might write some values to the writer before or after providing it to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582073,"byte_end":14582146,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582151,"byte_end":14582166,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582171,"byte_end":14582174,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ For example, we might want to write data from spans and events at the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582179,"byte_end":14582252,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ [`ERROR`] and [`WARN`] levels to `stderr`, and data from spans or events","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582257,"byte_end":14582333,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ at lower levels to stdout:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582338,"byte_end":14582368,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582373,"byte_end":14582376,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582381,"byte_end":14582388,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use std::io::{self, Stdout, Stderr, StdoutLock, StderrLock};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582393,"byte_end":14582457,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582462,"byte_end":14582514,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"/ use tracing_core::{Metadata, Level};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582519,"byte_end":14582559,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582564,"byte_end":14582567,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ pub struct MyMakeWriter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582572,"byte_end":14582601,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/     stdout: Stdout,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582606,"byte_end":14582629,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/     stderr: Stderr,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582634,"byte_end":14582657,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582662,"byte_end":14582667,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582672,"byte_end":14582675,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ /// A lock on either stdout or stderr, depending on the verbosity level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582680,"byte_end":14582755,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ /// of the event being written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582760,"byte_end":14582795,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/ pub enum StdioLock<'a> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582800,"byte_end":14582828,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     Stdout(StdoutLock<'a>),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582833,"byte_end":14582864,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/     Stderr(StderrLock<'a>),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582869,"byte_end":14582900,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582905,"byte_end":14582910,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582915,"byte_end":14582918,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ impl<'a> io::Write for StdioLock<'a> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582923,"byte_end":14582965,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14582970,"byte_end":14583032,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/         match self {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583037,"byte_end":14583061,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/             StdioLock::Stdout(lock) => lock.write(buf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583066,"byte_end":14583125,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/             StdioLock::Stderr(lock) => lock.write(buf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583130,"byte_end":14583189,"line_start":156,"line_end":156,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583194,"byte_end":14583207,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583212,"byte_end":14583221,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583226,"byte_end":14583229,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     fn write_all(&mut self, buf: &[u8]) -> io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583234,"byte_end":14583297,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583302,"byte_end":14583320,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/         # match self {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583325,"byte_end":14583351,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/         #     StdioLock::Stdout(lock) => lock.write_all(buf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583356,"byte_end":14583421,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/         #     StdioLock::Stderr(lock) => lock.write_all(buf),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583426,"byte_end":14583491,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/         # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583496,"byte_end":14583511,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583516,"byte_end":14583525,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583530,"byte_end":14583533,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     fn flush(&mut self) -> io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583538,"byte_end":14583585,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583590,"byte_end":14583608,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/         # match self {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583613,"byte_end":14583639,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/         #     StdioLock::Stdout(lock) => lock.flush(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583644,"byte_end":14583702,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/         #     StdioLock::Stderr(lock) => lock.flush(),","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583707,"byte_end":14583765,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/         # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583770,"byte_end":14583785,"line_start":173,"line_end":173,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583790,"byte_end":14583799,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583804,"byte_end":14583809,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583814,"byte_end":14583817,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ impl<'a> MakeWriter<'a> for MyMakeWriter {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583822,"byte_end":14583868,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/     type Writer = StdioLock<'a>;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583873,"byte_end":14583909,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583914,"byte_end":14583917,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     fn make_writer(&'a self) -> Self::Writer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583922,"byte_end":14583972,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/         // We must have an implementation of `make_writer` that makes","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14583977,"byte_end":14584050,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/         // a \"default\" writer without any configuring metadata. Let's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584055,"byte_end":14584128,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/         // just return stdout in that case.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584133,"byte_end":14584180,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/         StdioLock::Stdout(self.stdout.lock())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584185,"byte_end":14584234,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584239,"byte_end":14584248,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584253,"byte_end":14584256,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/     fn make_writer_for(&'a self, meta: &Metadata<'_>) -> Self::Writer {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584261,"byte_end":14584336,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/         // Here's where we can implement our special behavior. We'll","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584341,"byte_end":14584413,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/         // check if the metadata's verbosity level is WARN or ERROR,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584418,"byte_end":14584490,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/         // and return stderr in that case.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584495,"byte_end":14584541,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/         if meta.level() <= &Level::WARN {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584546,"byte_end":14584591,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/             return StdioLock::Stderr(self.stderr.lock());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584596,"byte_end":14584657,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/         }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584662,"byte_end":14584675,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584680,"byte_end":14584683,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/         // Otherwise, we'll return stdout.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584688,"byte_end":14584734,"line_start":195,"line_end":195,"column_start":5,"column_end":51}},{"value":"/         StdioLock::Stdout(self.stdout.lock())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584739,"byte_end":14584788,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584793,"byte_end":14584802,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584807,"byte_end":14584812,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584817,"byte_end":14584824,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584829,"byte_end":14584832,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: MakeWriter::Writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584837,"byte_end":14584871,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584876,"byte_end":14584916,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/ [make_writer]: MakeWriter::make_writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584921,"byte_end":14584963,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/ [`WARN`]: tracing_core::Level::WARN","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14584968,"byte_end":14585007,"line_start":204,"line_end":204,"column_start":5,"column_end":44}},{"value":"/ [`ERROR`]: tracing_core::Level::ERROR","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585012,"byte_end":14585053,"line_start":205,"line_end":205,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585453,"byte_end":14585466,"line_start":218,"line_end":218,"column_start":11,"column_end":24},"name":"MakeWriterExt","qualname":"::fmt::writer::MakeWriterExt","value":"MakeWriterExt<'a>: MakeWriter","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556}],"decl_id":null,"docs":" Extension trait adding combinators for working with types implementing\n [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Extension trait adding combinators for working with types implementing","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585184,"byte_end":14585258,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ [`MakeWriter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585259,"byte_end":14585278,"line_start":213,"line_end":213,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585279,"byte_end":14585282,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ This is not intended to be implemented directly for user-defined","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585283,"byte_end":14585351,"line_start":215,"line_end":215,"column_start":1,"column_end":69}},{"value":"/ [`MakeWriter`]s; instead, it should be imported when the desired methods are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585352,"byte_end":14585432,"line_start":216,"line_end":216,"column_start":1,"column_end":81}},{"value":"/ used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585433,"byte_end":14585442,"line_start":217,"line_end":217,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587630,"byte_end":14587644,"line_start":277,"line_end":277,"column_start":8,"column_end":22},"name":"with_max_level","qualname":"::fmt::writer::MakeWriterExt::with_max_level","value":"fn with_max_level(Self, tracing_core::Level) -> WithMaxLevel<Self> where\nSelf: Sized","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Wraps `self` and returns a [`MakeWriter`] that will only write output\n for events at or below the provided verbosity [`Level`]. For instance,\n `Level::TRACE` is considered to be _more verbose` than `Level::INFO`.","sig":null,"attributes":[{"value":"/ Wraps `self` and returns a [`MakeWriter`] that will only write output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585493,"byte_end":14585566,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ for events at or below the provided verbosity [`Level`]. For instance,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585571,"byte_end":14585645,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ `Level::TRACE` is considered to be _more verbose` than `Level::INFO`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585650,"byte_end":14585723,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585728,"byte_end":14585731,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Events whose level is more verbose than `level` will be ignored, and no","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585736,"byte_end":14585811,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ output will be written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585816,"byte_end":14585843,"line_start":224,"line_end":224,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585848,"byte_end":14585851,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585856,"byte_end":14585870,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585875,"byte_end":14585878,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585883,"byte_end":14585890,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585895,"byte_end":14585918,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585923,"byte_end":14585978,"line_start":230,"line_end":230,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585983,"byte_end":14585986,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stderr` only if the span or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585991,"byte_end":14586068,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ // event's level is >= WARN (WARN and ERROR).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586073,"byte_end":14586122,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ let mk_writer = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586127,"byte_end":14586191,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586196,"byte_end":14586199,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586204,"byte_end":14586264,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586269,"byte_end":14586276,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586281,"byte_end":14586284,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Writing the `ERROR` and `WARN` levels to `stderr`, and everything else","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586289,"byte_end":14586363,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ to `stdout`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586368,"byte_end":14586384,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586389,"byte_end":14586392,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586397,"byte_end":14586404,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586409,"byte_end":14586434,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586439,"byte_end":14586496,"line_start":244,"line_end":244,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586501,"byte_end":14586504,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = std::io::stderr","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586509,"byte_end":14586544,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::WARN)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586549,"byte_end":14586585,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/     .or_else(std::io::stdout);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586590,"byte_end":14586624,"line_start":248,"line_end":248,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586629,"byte_end":14586632,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586637,"byte_end":14586697,"line_start":250,"line_end":250,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586702,"byte_end":14586709,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586714,"byte_end":14586717,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Writing the `ERROR` level to `stderr`, the `INFO` and `WARN` levels to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586722,"byte_end":14586796,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ `stdout`, and the `INFO` and DEBUG` levels to a file:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586801,"byte_end":14586858,"line_start":254,"line_end":254,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586863,"byte_end":14586866,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586871,"byte_end":14586878,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586883,"byte_end":14586908,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586913,"byte_end":14586970,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14586975,"byte_end":14587010,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587015,"byte_end":14587078,"line_start":260,"line_end":260,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587083,"byte_end":14587123,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let debug_log = Arc::new(File::create(\"debug.log\")?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587128,"byte_end":14587185,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587190,"byte_end":14587193,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = std::io::stderr","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587198,"byte_end":14587233,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::ERROR)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587238,"byte_end":14587275,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/     .or_else(std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587280,"byte_end":14587312,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/         .with_max_level(Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587317,"byte_end":14587357,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/         .and(debug_log.with_max_level(Level::DEBUG))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587362,"byte_end":14587418,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/     );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587423,"byte_end":14587433,"line_start":269,"line_end":269,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587438,"byte_end":14587441,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587446,"byte_end":14587506,"line_start":271,"line_end":271,"column_start":5,"column_end":65}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587511,"byte_end":14587525,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587530,"byte_end":14587537,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587542,"byte_end":14587545,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587550,"byte_end":14587584,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587589,"byte_end":14587622,"line_start":276,"line_end":276,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589191,"byte_end":14589205,"line_start":319,"line_end":319,"column_start":8,"column_end":22},"name":"with_min_level","qualname":"::fmt::writer::MakeWriterExt::with_min_level","value":"fn with_min_level(Self, tracing_core::Level) -> WithMinLevel<Self> where\nSelf: Sized","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Wraps `self` and returns a [`MakeWriter`] that will only write output\n for events at or above the provided verbosity [`Level`].","sig":null,"attributes":[{"value":"/ Wraps `self` and returns a [`MakeWriter`] that will only write output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587788,"byte_end":14587861,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ for events at or above the provided verbosity [`Level`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587866,"byte_end":14587926,"line_start":285,"line_end":285,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587931,"byte_end":14587934,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Events whose level is less verbose than `level` will be ignored, and no","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14587939,"byte_end":14588014,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ output will be written.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588019,"byte_end":14588046,"line_start":288,"line_end":288,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588051,"byte_end":14588054,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588059,"byte_end":14588073,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588078,"byte_end":14588081,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588086,"byte_end":14588093,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588098,"byte_end":14588121,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588126,"byte_end":14588181,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588186,"byte_end":14588189,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stdout` only if the span or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588194,"byte_end":14588271,"line_start":296,"line_end":296,"column_start":5,"column_end":82}},{"value":"/ // event's level is <= DEBUG (DEBUG and TRACE).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588276,"byte_end":14588327,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let mk_writer = std::io::stdout.with_min_level(Level::DEBUG);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588332,"byte_end":14588397,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588402,"byte_end":14588405,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588410,"byte_end":14588470,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588475,"byte_end":14588482,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ This can be combined with [`MakeWriterExt::with_max_level`] to write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588487,"byte_end":14588559,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ only within a range of levels:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588564,"byte_end":14588598,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588603,"byte_end":14588606,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588611,"byte_end":14588618,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588623,"byte_end":14588648,"line_start":306,"line_end":306,"column_start":5,"column_end":30}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588653,"byte_end":14588710,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ // Only write the `DEBUG` and `INFO` levels to stdout.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588715,"byte_end":14588773,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/ let mk_writer = std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588778,"byte_end":14588813,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/     .with_max_level(Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588818,"byte_end":14588855,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/     .with_min_level(Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588860,"byte_end":14588896,"line_start":311,"line_end":311,"column_start":5,"column_end":41}},{"value":"/     // Write the `WARN` and `ERROR` levels to stderr.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588901,"byte_end":14588958,"line_start":312,"line_end":312,"column_start":5,"column_end":62}},{"value":"/     .and(std::io::stderr.with_min_level(Level::WARN));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14588963,"byte_end":14589021,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589026,"byte_end":14589029,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589034,"byte_end":14589094,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589099,"byte_end":14589106,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589111,"byte_end":14589145,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589150,"byte_end":14589183,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592155,"byte_end":14592166,"line_start":398,"line_end":398,"column_start":8,"column_end":19},"name":"with_filter","qualname":"::fmt::writer::MakeWriterExt::with_filter","value":"fn with_filter<F>(Self, F) -> WithFilter<Self, F> where Self: Sized,\nF: Fn(&Metadata) -> bool","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Wraps `self` with a predicate that takes a span or event's [`Metadata`]\n and returns a `bool`. The returned [`MakeWriter`]'s\n [`MakeWriter::make_writer_for`][mwf] method will check the predicate to\n determine if  a writer should be produced for a given span or event.","sig":null,"attributes":[{"value":"/ Wraps `self` with a predicate that takes a span or event's [`Metadata`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589349,"byte_end":14589424,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ and returns a `bool`. The returned [`MakeWriter`]'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589429,"byte_end":14589484,"line_start":327,"line_end":327,"column_start":5,"column_end":60}},{"value":"/ [`MakeWriter::make_writer_for`][mwf] method will check the predicate to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589489,"byte_end":14589564,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/ determine if  a writer should be produced for a given span or event.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589569,"byte_end":14589641,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589646,"byte_end":14589649,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the predicate returns `false`, the wrapped [`MakeWriter`]'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589654,"byte_end":14589720,"line_start":331,"line_end":331,"column_start":5,"column_end":71}},{"value":"/ [`make_writer_for`][mwf] will return [`OptionalWriter::none`][own].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589725,"byte_end":14589796,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ Otherwise, it calls the wrapped [`MakeWriter`]'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589801,"byte_end":14589853,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ [`make_writer_for`][mwf] method, and returns the produced writer.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589858,"byte_end":14589927,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589932,"byte_end":14589935,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This can be used to filter an output based on arbitrary [`Metadata`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14589940,"byte_end":14590012,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ parameters.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590017,"byte_end":14590032,"line_start":337,"line_end":337,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590037,"byte_end":14590040,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590045,"byte_end":14590059,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590064,"byte_end":14590067,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Writing events with a specific target to an HTTP access log, and other","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590072,"byte_end":14590146,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ events to stdout:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590151,"byte_end":14590172,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590177,"byte_end":14590180,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590185,"byte_end":14590192,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590197,"byte_end":14590252,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590257,"byte_end":14590292,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590297,"byte_end":14590360,"line_start":347,"line_end":347,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590365,"byte_end":14590405,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/ let access_log = Arc::new(File::create(\"access.log\")?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590410,"byte_end":14590469,"line_start":349,"line_end":349,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590474,"byte_end":14590477,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mk_writer = access_log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590482,"byte_end":14590512,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/     // Only write events with the target \"http::access_log\" to the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590517,"byte_end":14590587,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/     // access log file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590592,"byte_end":14590619,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/     .with_filter(|meta| meta.target() == \"http::access_log\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590624,"byte_end":14590688,"line_start":354,"line_end":354,"column_start":5,"column_end":69}},{"value":"/     // Write events with all other targets to stdout.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590693,"byte_end":14590750,"line_start":355,"line_end":355,"column_start":5,"column_end":62}},{"value":"/     .or_else(std::io::stdout);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590755,"byte_end":14590789,"line_start":356,"line_end":356,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590794,"byte_end":14590797,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590802,"byte_end":14590862,"line_start":358,"line_end":358,"column_start":5,"column_end":65}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590867,"byte_end":14590879,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590884,"byte_end":14590891,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590896,"byte_end":14590903,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590908,"byte_end":14590911,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Conditionally enabling or disabling a log file:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590916,"byte_end":14590967,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590972,"byte_end":14590979,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14590984,"byte_end":14591039,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/ use std::{","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591044,"byte_end":14591058,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/     sync::{Arc, atomic::{AtomicBool, Ordering}},","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591063,"byte_end":14591115,"line_start":367,"line_end":367,"column_start":5,"column_end":57}},{"value":"/     fs::File,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591120,"byte_end":14591137,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/ };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591142,"byte_end":14591148,"line_start":369,"line_end":369,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591153,"byte_end":14591156,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ static DEBUG_LOG_ENABLED: AtomicBool = AtomicBool::new(false);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591161,"byte_end":14591227,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591232,"byte_end":14591235,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591240,"byte_end":14591303,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591308,"byte_end":14591348,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ // Create the debug log file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591353,"byte_end":14591385,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ let debug_file = Arc::new(File::create(\"debug.log\")?)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591390,"byte_end":14591447,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"/     // Enable the debug log only if the flag is enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591452,"byte_end":14591512,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/     .with_filter(|_| DEBUG_LOG_ENABLED.load(Ordering::Acquire));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591517,"byte_end":14591585,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591590,"byte_end":14591593,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // Always write to stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591598,"byte_end":14591627,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/ let mk_writer = std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591632,"byte_end":14591667,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/     // Write to the debug file if it's enabled","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591672,"byte_end":14591722,"line_start":382,"line_end":382,"column_start":5,"column_end":55}},{"value":"/     .and(debug_file);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591727,"byte_end":14591752,"line_start":383,"line_end":383,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591757,"byte_end":14591760,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591765,"byte_end":14591825,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591830,"byte_end":14591833,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591838,"byte_end":14591848,"line_start":387,"line_end":387,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591853,"byte_end":14591856,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ // Later, we can toggle on or off the debug log file.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591861,"byte_end":14591918,"line_start":389,"line_end":389,"column_start":5,"column_end":62}},{"value":"/ DEBUG_LOG_ENABLED.store(true, Ordering::Release);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591923,"byte_end":14591976,"line_start":390,"line_end":390,"column_start":5,"column_end":58}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591981,"byte_end":14591993,"line_start":391,"line_end":391,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14591998,"byte_end":14592005,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592010,"byte_end":14592017,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592022,"byte_end":14592025,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592030,"byte_end":14592070,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/ [mwf]: MakeWriter::make_writer_for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592075,"byte_end":14592113,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592118,"byte_end":14592147,"line_start":397,"line_end":397,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594204,"byte_end":14594207,"line_start":453,"line_end":453,"column_start":8,"column_end":11},"name":"and","qualname":"::fmt::writer::MakeWriterExt::and","value":"fn and<B>(Self, B) -> Tee<Self, B> where Self: Sized, B: MakeWriter + Sized","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Combines `self` with another type implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that produces [writers] that write to *both*\n outputs.","sig":null,"attributes":[{"value":"/ Combines `self` with another type implementing [`MakeWriter`], returning","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592334,"byte_end":14592410,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ a new [`MakeWriter`] that produces [writers] that write to *both*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592415,"byte_end":14592484,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ outputs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592489,"byte_end":14592501,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592506,"byte_end":14592509,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If writing to either writer returns an error, the returned writer will","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592514,"byte_end":14592588,"line_start":410,"line_end":410,"column_start":5,"column_end":79}},{"value":"/ return that error. However, both writers will still be written to before","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592593,"byte_end":14592669,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ the error is returned, so it is possible for one writer to fail while","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592674,"byte_end":14592747,"line_start":412,"line_end":412,"column_start":5,"column_end":78}},{"value":"/ the other is written to successfully.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592752,"byte_end":14592793,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592798,"byte_end":14592801,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592806,"byte_end":14592820,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592825,"byte_end":14592828,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592833,"byte_end":14592840,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592845,"byte_end":14592900,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592905,"byte_end":14592908,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ // Construct a writer that outputs events to `stdout` *and* `stderr`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592913,"byte_end":14592986,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ let mk_writer = std::io::stdout.and(std::io::stderr);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14592991,"byte_end":14593048,"line_start":421,"line_end":421,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593053,"byte_end":14593056,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593061,"byte_end":14593121,"line_start":423,"line_end":423,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593126,"byte_end":14593133,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593138,"byte_end":14593141,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `and` can be used in conjunction with filtering combinators. For","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593146,"byte_end":14593214,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/ example, if we want to write to a number of outputs depending on the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593219,"byte_end":14593291,"line_start":427,"line_end":427,"column_start":5,"column_end":77}},{"value":"/ level of an event, we could write:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593296,"byte_end":14593334,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593339,"byte_end":14593342,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593347,"byte_end":14593354,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593359,"byte_end":14593382,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/ # use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593387,"byte_end":14593444,"line_start":432,"line_end":432,"column_start":5,"column_end":62}},{"value":"/ use std::{sync::Arc, fs::File};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593449,"byte_end":14593484,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/ # // don't actually create the file when running the tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593489,"byte_end":14593552,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ # fn docs() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593557,"byte_end":14593597,"line_start":435,"line_end":435,"column_start":5,"column_end":45}},{"value":"/ let debug_log = Arc::new(File::create(\"debug.log\")?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593602,"byte_end":14593659,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593664,"byte_end":14593667,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ // Write everything to the debug log.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593672,"byte_end":14593713,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ let mk_writer = debug_log","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593718,"byte_end":14593747,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/     // Write the `ERROR` and `WARN` levels to stderr.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593752,"byte_end":14593809,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/     .and(std::io::stderr.with_max_level(Level::WARN))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593814,"byte_end":14593871,"line_start":441,"line_end":441,"column_start":5,"column_end":62}},{"value":"/     // Write `INFO` to `stdout`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593876,"byte_end":14593912,"line_start":442,"line_end":442,"column_start":5,"column_end":41}},{"value":"/     .and(std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593917,"byte_end":14593945,"line_start":443,"line_end":443,"column_start":5,"column_end":33}},{"value":"/         .with_max_level(Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593950,"byte_end":14593990,"line_start":444,"line_end":444,"column_start":5,"column_end":45}},{"value":"/         .with_min_level(Level::INFO)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14593995,"byte_end":14594035,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/     );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594040,"byte_end":14594050,"line_start":446,"line_end":446,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594055,"byte_end":14594058,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594063,"byte_end":14594123,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594128,"byte_end":14594142,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594147,"byte_end":14594154,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594159,"byte_end":14594162,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [writers]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594167,"byte_end":14594196,"line_start":452,"line_end":452,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595278,"byte_end":14595285,"line_start":484,"line_end":484,"column_start":8,"column_end":15},"name":"or_else","qualname":"::fmt::writer::MakeWriterExt::or_else","value":"fn or_else<W, B>(Self, B) -> OrElse<Self, B> where Self: MakeWriter<Writer =\nOptionalWriter<W>> + Sized, B: MakeWriter + Sized, W: Write","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Combines `self` with another type implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that calls `other`'s [`make_writer`] if `self`'s\n `make_writer` returns [`OptionalWriter::none`][own].","sig":null,"attributes":[{"value":"/ Combines `self` with another type implementing [`MakeWriter`], returning","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594356,"byte_end":14594432,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a new [`MakeWriter`] that calls `other`'s [`make_writer`] if `self`'s","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594437,"byte_end":14594510,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ `make_writer` returns [`OptionalWriter::none`][own].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594515,"byte_end":14594571,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594576,"byte_end":14594579,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594584,"byte_end":14594598,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594603,"byte_end":14594606,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594611,"byte_end":14594618,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594623,"byte_end":14594646,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::writer::MakeWriterExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594651,"byte_end":14594706,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594711,"byte_end":14594714,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // Produces a writer that writes to `stderr` if the level is >= WARN,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594719,"byte_end":14594792,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ // or returns `OptionalWriter::none()` otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594797,"byte_end":14594850,"line_start":472,"line_end":472,"column_start":5,"column_end":58}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594855,"byte_end":14594916,"line_start":473,"line_end":473,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594921,"byte_end":14594924,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ // If the `stderr` `MakeWriter` is disabled by the max level filter,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14594929,"byte_end":14595001,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ // write to stdout instead:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595006,"byte_end":14595037,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/ let mk_writer = stderr.or_else(std::io::stdout);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595042,"byte_end":14595094,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595099,"byte_end":14595102,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ tracing_subscriber::fmt().with_writer(mk_writer).init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595107,"byte_end":14595167,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595172,"byte_end":14595179,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595184,"byte_end":14595187,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ [`make_writer`]: MakeWriter::make_writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595192,"byte_end":14595236,"line_start":482,"line_end":482,"column_start":5,"column_end":49}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595241,"byte_end":14595270,"line_start":483,"line_end":483,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596455,"byte_end":14596465,"line_start":512,"line_end":512,"column_start":12,"column_end":22},"name":"TestWriter","qualname":"::fmt::writer::TestWriter","value":"TestWriter {  }","parent":null,"children":[{"krate":0,"index":4037}],"decl_id":null,"docs":" A writer intended to support [`libtest`'s output capturing][capturing] for use in unit tests.","sig":null,"attributes":[{"value":"/ A writer intended to support [`libtest`'s output capturing][capturing] for use in unit tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595504,"byte_end":14595601,"line_start":494,"line_end":494,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595602,"byte_end":14595605,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ `TestWriter` is used by [`fmt::Subscriber`] or [`fmt::Layer`] to enable capturing support.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595606,"byte_end":14595700,"line_start":496,"line_end":496,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595701,"byte_end":14595704,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ `cargo test` can only capture output from the standard library's [`print!`] macro. See","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595705,"byte_end":14595795,"line_start":498,"line_end":498,"column_start":1,"column_end":91}},{"value":"/ [`libtest`'s output capturing][capturing] for more details about output capturing.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595796,"byte_end":14595882,"line_start":499,"line_end":499,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595883,"byte_end":14595886,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ Writing to [`io::stdout`] and [`io::stderr`] produces the same results as using","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595887,"byte_end":14595970,"line_start":501,"line_end":501,"column_start":1,"column_end":84}},{"value":"/ [`libtest`'s `--nocapture` option][nocapture] which may make the results look unreadable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14595971,"byte_end":14596064,"line_start":502,"line_end":502,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596065,"byte_end":14596068,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ [`fmt::Subscriber`]: super::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596069,"byte_end":14596111,"line_start":504,"line_end":504,"column_start":1,"column_end":43}},{"value":"/ [`fmt::Layer`]: super::Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596112,"byte_end":14596144,"line_start":505,"line_end":505,"column_start":1,"column_end":33}},{"value":"/ [capturing]: https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596145,"byte_end":14596243,"line_start":506,"line_end":506,"column_start":1,"column_end":99}},{"value":"/ [nocapture]: https://doc.rust-lang.org/cargo/commands/cargo-test.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596244,"byte_end":14596317,"line_start":507,"line_end":507,"column_start":1,"column_end":74}},{"value":"/ [`io::stdout`]: std::io::stdout","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596318,"byte_end":14596353,"line_start":508,"line_end":508,"column_start":1,"column_end":36}},{"value":"/ [`io::stderr`]: std::io::stderr","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596354,"byte_end":14596389,"line_start":509,"line_end":509,"column_start":1,"column_end":36}},{"value":"/ [`print!`]: std::print!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596390,"byte_end":14596417,"line_start":510,"line_end":510,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597290,"byte_end":14597303,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"BoxMakeWriter","qualname":"::fmt::writer::BoxMakeWriter","value":"BoxMakeWriter {  }","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":3562}],"decl_id":null,"docs":" A writer that erases the specific [`io::Write`] and [`MakeWriter`] types being used.","sig":null,"attributes":[{"value":"/ A writer that erases the specific [`io::Write`] and [`MakeWriter`] types being used.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596483,"byte_end":14596571,"line_start":516,"line_end":516,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596572,"byte_end":14596575,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ This is useful in cases where the concrete type of the writer cannot be known","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596576,"byte_end":14596657,"line_start":518,"line_end":518,"column_start":1,"column_end":82}},{"value":"/ until runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596658,"byte_end":14596676,"line_start":519,"line_end":519,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596677,"byte_end":14596680,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596681,"byte_end":14596695,"line_start":521,"line_end":521,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596696,"byte_end":14596699,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ A function that returns a [`Subscriber`] that will write to either stdout or stderr:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596700,"byte_end":14596788,"line_start":523,"line_end":523,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596789,"byte_end":14596792,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596793,"byte_end":14596804,"line_start":525,"line_end":525,"column_start":1,"column_end":12}},{"value":"/ # use tracing::Subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596805,"byte_end":14596835,"line_start":526,"line_end":526,"column_start":1,"column_end":31}},{"value":"/ # use tracing_subscriber::fmt::writer::BoxMakeWriter;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596836,"byte_end":14596893,"line_start":527,"line_end":527,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596894,"byte_end":14596897,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ fn dynamic_writer(use_stderr: bool) -> impl Subscriber {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596898,"byte_end":14596958,"line_start":529,"line_end":529,"column_start":1,"column_end":61}},{"value":"/     let writer = if use_stderr {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596959,"byte_end":14596995,"line_start":530,"line_end":530,"column_start":1,"column_end":37}},{"value":"/         BoxMakeWriter::new(std::io::stderr)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14596996,"byte_end":14597043,"line_start":531,"line_end":531,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597044,"byte_end":14597060,"line_start":532,"line_end":532,"column_start":1,"column_end":17}},{"value":"/         BoxMakeWriter::new(std::io::stdout)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597061,"byte_end":14597108,"line_start":533,"line_end":533,"column_start":1,"column_end":48}},{"value":"/     };","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597109,"byte_end":14597119,"line_start":534,"line_end":534,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597120,"byte_end":14597123,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/     tracing_subscriber::fmt().with_writer(writer).finish()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597124,"byte_end":14597186,"line_start":536,"line_end":536,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597187,"byte_end":14597192,"line_start":537,"line_end":537,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597193,"byte_end":14597200,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597201,"byte_end":14597204,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: tracing::Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597205,"byte_end":14597244,"line_start":540,"line_end":540,"column_start":1,"column_end":40}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597245,"byte_end":14597278,"line_start":541,"line_end":541,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4045},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597752,"byte_end":14597753,"line_start":556,"line_end":556,"column_start":5,"column_end":6},"name":"A","qualname":"::fmt::writer::EitherWriter::A","value":"EitherWriter::A(A)","parent":{"krate":0,"index":4042},"children":[],"decl_id":null,"docs":" A writer of type `A`.\n","sig":null,"attributes":[{"value":"/ A writer of type `A`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597722,"byte_end":14597747,"line_start":555,"line_end":555,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597754,"byte_end":14597755,"line_start":556,"line_end":556,"column_start":7,"column_end":8},"name":"0","qualname":"::fmt::writer::EitherWriter::A::0","value":"A","parent":{"krate":0,"index":4045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4048},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597792,"byte_end":14597793,"line_start":558,"line_end":558,"column_start":5,"column_end":6},"name":"B","qualname":"::fmt::writer::EitherWriter::B","value":"EitherWriter::B(B)","parent":{"krate":0,"index":4042},"children":[],"decl_id":null,"docs":" A writer of type `B`.\n","sig":null,"attributes":[{"value":"/ A writer of type `B`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597762,"byte_end":14597787,"line_start":557,"line_end":557,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597794,"byte_end":14597795,"line_start":558,"line_end":558,"column_start":7,"column_end":8},"name":"0","qualname":"::fmt::writer::EitherWriter::B::0","value":"B","parent":{"krate":0,"index":4048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597697,"byte_end":14597709,"line_start":554,"line_end":554,"column_start":10,"column_end":22},"name":"EitherWriter","qualname":"::fmt::writer::EitherWriter","value":"enum EitherWriter<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4048}],"decl_id":null,"docs":" A [writer] that is one of two types implementing [`io::Write`][writer].","sig":null,"attributes":[{"value":"/ A [writer] that is one of two types implementing [`io::Write`][writer].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597421,"byte_end":14597496,"line_start":547,"line_end":547,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597497,"byte_end":14597500,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ This may be used by [`MakeWriter`] implementations that may conditionally","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597501,"byte_end":14597578,"line_start":549,"line_end":549,"column_start":1,"column_end":78}},{"value":"/ return one of two writers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597579,"byte_end":14597609,"line_start":550,"line_end":550,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597610,"byte_end":14597613,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597614,"byte_end":14597642,"line_start":552,"line_end":552,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598064,"byte_end":14598078,"line_start":568,"line_end":568,"column_start":10,"column_end":24},"name":"OptionalWriter","qualname":"::fmt::writer::OptionalWriter","value":"EitherWriter<T, std::io::Sink>","parent":null,"children":[],"decl_id":null,"docs":" A [writer] which may or may not be enabled.","sig":null,"attributes":[{"value":"/ A [writer] which may or may not be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597801,"byte_end":14597848,"line_start":561,"line_end":561,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597849,"byte_end":14597852,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ This may be used by [`MakeWriter`] implementations that wish to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597853,"byte_end":14597920,"line_start":563,"line_end":563,"column_start":1,"column_end":68}},{"value":"/ conditionally enable or disable the returned writer based on a span or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597921,"byte_end":14597995,"line_start":564,"line_end":564,"column_start":1,"column_end":75}},{"value":"/ event's [`Metadata`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14597996,"byte_end":14598021,"line_start":565,"line_end":565,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598022,"byte_end":14598025,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598026,"byte_end":14598054,"line_start":567,"line_end":567,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598515,"byte_end":14598527,"line_start":579,"line_end":579,"column_start":12,"column_end":24},"name":"WithMaxLevel","qualname":"::fmt::writer::WithMaxLevel","value":"WithMaxLevel {  }","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that only returns an enabled [writer] for spans\n and events with metadata at or below a specified verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that only returns an enabled [writer] for spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598117,"byte_end":14598196,"line_start":570,"line_end":570,"column_start":1,"column_end":80}},{"value":"/ and events with metadata at or below a specified verbosity [`Level`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598197,"byte_end":14598270,"line_start":571,"line_end":571,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598271,"byte_end":14598274,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_max_level`] method. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598275,"byte_end":14598352,"line_start":573,"line_end":573,"column_start":1,"column_end":78}},{"value":"/ method documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598353,"byte_end":14598390,"line_start":574,"line_end":574,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598391,"byte_end":14598394,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598395,"byte_end":14598423,"line_start":576,"line_end":576,"column_start":1,"column_end":29}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598424,"byte_end":14598458,"line_start":577,"line_end":577,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598979,"byte_end":14598991,"line_start":593,"line_end":593,"column_start":12,"column_end":24},"name":"WithMinLevel","qualname":"::fmt::writer::WithMinLevel","value":"WithMinLevel {  }","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that only returns an enabled [writer] for spans\n and events with metadata at or above a specified verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that only returns an enabled [writer] for spans","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598581,"byte_end":14598660,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/ and events with metadata at or above a specified verbosity [`Level`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598661,"byte_end":14598734,"line_start":585,"line_end":585,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598735,"byte_end":14598738,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_min_level`] method. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598739,"byte_end":14598816,"line_start":587,"line_end":587,"column_start":1,"column_end":78}},{"value":"/ method documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598817,"byte_end":14598854,"line_start":588,"line_end":588,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598855,"byte_end":14598858,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ [writer]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598859,"byte_end":14598887,"line_start":590,"line_end":590,"column_start":1,"column_end":29}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14598888,"byte_end":14598922,"line_start":591,"line_end":591,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599639,"byte_end":14599649,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"WithFilter","qualname":"::fmt::writer::WithFilter","value":"WithFilter {  }","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127}],"decl_id":null,"docs":" A [`MakeWriter`] combinator that wraps a [`MakeWriter`] with a predicate for\n span and event [`Metadata`], so that the [`MakeWriter::make_writer_for`]\n method returns [`OptionalWriter::some`][ows] when the predicate returns `true`,\n and [`OptionalWriter::none`][own] when the predicate returns `false`.","sig":null,"attributes":[{"value":"/ A [`MakeWriter`] combinator that wraps a [`MakeWriter`] with a predicate for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599045,"byte_end":14599125,"line_start":598,"line_end":598,"column_start":1,"column_end":81}},{"value":"/ span and event [`Metadata`], so that the [`MakeWriter::make_writer_for`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599126,"byte_end":14599202,"line_start":599,"line_end":599,"column_start":1,"column_end":77}},{"value":"/ method returns [`OptionalWriter::some`][ows] when the predicate returns `true`,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599203,"byte_end":14599286,"line_start":600,"line_end":600,"column_start":1,"column_end":84}},{"value":"/ and [`OptionalWriter::none`][own] when the predicate returns `false`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599287,"byte_end":14599360,"line_start":601,"line_end":601,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599361,"byte_end":14599364,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::with_filter`] method. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599365,"byte_end":14599439,"line_start":603,"line_end":603,"column_start":1,"column_end":75}},{"value":"/ method documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599440,"byte_end":14599477,"line_start":604,"line_end":604,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599478,"byte_end":14599481,"line_start":605,"line_end":605,"column_start":1,"column_end":4}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599482,"byte_end":14599522,"line_start":606,"line_end":606,"column_start":1,"column_end":41}},{"value":"/ [ows]: EitherWriter::some","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599523,"byte_end":14599552,"line_start":607,"line_end":607,"column_start":1,"column_end":30}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599553,"byte_end":14599582,"line_start":608,"line_end":608,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":4154},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600104,"byte_end":14600110,"line_start":624,"line_end":624,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::fmt::writer::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"decl_id":null,"docs":" Combines a [`MakeWriter`] that returns an [`OptionalWriter`] with another\n [`MakeWriter`], so that the second [`MakeWriter`] is used when the first\n [`MakeWriter`] returns [`OptionalWriter::none`][own].","sig":null,"attributes":[{"value":"/ Combines a [`MakeWriter`] that returns an [`OptionalWriter`] with another","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599689,"byte_end":14599766,"line_start":615,"line_end":615,"column_start":1,"column_end":78}},{"value":"/ [`MakeWriter`], so that the second [`MakeWriter`] is used when the first","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599767,"byte_end":14599843,"line_start":616,"line_end":616,"column_start":1,"column_end":77}},{"value":"/ [`MakeWriter`] returns [`OptionalWriter::none`][own].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599844,"byte_end":14599901,"line_start":617,"line_end":617,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599902,"byte_end":14599905,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::or_else] method. See the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599906,"byte_end":14599975,"line_start":619,"line_end":619,"column_start":1,"column_end":70}},{"value":"/ method documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14599976,"byte_end":14600013,"line_start":620,"line_end":620,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600014,"byte_end":14600017,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [own]: EitherWriter::none","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600018,"byte_end":14600047,"line_start":622,"line_end":622,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":4185},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600471,"byte_end":14600474,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"Tee","qualname":"::fmt::writer::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":" Combines two types implementing [`MakeWriter`] (or [`std::io::Write`]) to\n produce a writer that writes to both [`MakeWriter`]'s returned writers.","sig":null,"attributes":[{"value":"/ Combines two types implementing [`MakeWriter`] (or [`std::io::Write`]) to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600152,"byte_end":14600229,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ produce a writer that writes to both [`MakeWriter`]'s returned writers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600230,"byte_end":14600305,"line_start":630,"line_end":630,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600306,"byte_end":14600309,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`MakeWriterExt::and`] method. See the method","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600310,"byte_end":14600383,"line_start":632,"line_end":632,"column_start":1,"column_end":74}},{"value":"/ documentation for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600384,"byte_end":14600414,"line_start":633,"line_end":633,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4216},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601142,"byte_end":14601158,"line_start":653,"line_end":653,"column_start":12,"column_end":28},"name":"MutexGuardWriter","qualname":"::fmt::writer::MutexGuardWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type implementing [`io::Write`] for a [`MutexGuard`] where the type\n inside the [`Mutex`] implements [`io::Write`].","sig":null,"attributes":[{"value":"/ A type implementing [`io::Write`] for a [`MutexGuard`] where the type","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600506,"byte_end":14600579,"line_start":640,"line_end":640,"column_start":1,"column_end":74}},{"value":"/ inside the [`Mutex`] implements [`io::Write`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600580,"byte_end":14600630,"line_start":641,"line_end":641,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600631,"byte_end":14600634,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ This is used by the [`MakeWriter`] implementation for [`Mutex`], because","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600635,"byte_end":14600711,"line_start":643,"line_end":643,"column_start":1,"column_end":77}},{"value":"/ [`MutexGuard`] itself will not implement [`io::Write`] — instead, it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600712,"byte_end":14600786,"line_start":644,"line_end":644,"column_start":1,"column_end":73}},{"value":"/ _dereferences_ to a type implementing [`io::Write`]. Because [`MakeWriter`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600787,"byte_end":14600866,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ requires the `Writer` type to implement [`io::Write`], it's necessary to add","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600867,"byte_end":14600947,"line_start":646,"line_end":646,"column_start":1,"column_end":81}},{"value":"/ a newtype that forwards the trait implementation.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14600948,"byte_end":14601001,"line_start":647,"line_end":647,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601002,"byte_end":14601005,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ [`io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601006,"byte_end":14601039,"line_start":649,"line_end":649,"column_start":1,"column_end":34}},{"value":"/ [`MutexGuard`]: std::sync::MutexGuard","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601040,"byte_end":14601081,"line_start":650,"line_end":650,"column_start":1,"column_end":42}},{"value":"/ [`Mutex`]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601082,"byte_end":14601113,"line_start":651,"line_end":651,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4225},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601374,"byte_end":14601383,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"ArcWriter","qualname":"::fmt::writer::ArcWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implements [`std::io::Write`] for an [`Arc`]<W> where `&W: Write`.","sig":null,"attributes":[{"value":"/ Implements [`std::io::Write`] for an [`Arc`]<W> where `&W: Write`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601187,"byte_end":14601257,"line_start":655,"line_end":655,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601258,"byte_end":14601261,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ This is an implementation detail of the [`MakeWriter`] impl for [`Arc`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601262,"byte_end":14601338,"line_start":657,"line_end":657,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602042,"byte_end":14602053,"line_start":680,"line_end":680,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<F as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602213,"byte_end":14602224,"line_start":690,"line_end":690,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<Arc<W> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602365,"byte_end":14602376,"line_start":697,"line_end":697,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<std::fs::File as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602551,"byte_end":14602554,"line_start":706,"line_end":706,"column_start":12,"column_end":15},"name":"new","qualname":"<TestWriter>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `TestWriter` with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new `TestWriter` with the default configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602477,"byte_end":14602539,"line_start":705,"line_end":705,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602639,"byte_end":14602644,"line_start":712,"line_end":712,"column_start":8,"column_end":13},"name":"write","qualname":"<TestWriter as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602810,"byte_end":14602815,"line_start":718,"line_end":718,"column_start":8,"column_end":13},"name":"flush","qualname":"<TestWriter as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602944,"byte_end":14602955,"line_start":726,"line_end":726,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<TestWriter as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603170,"byte_end":14603173,"line_start":736,"line_end":736,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxMakeWriter>::new","value":"fn new<M>(M) -> Self where M: for<'a> MakeWriter + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BoxMakeWriter` wrapping a type implementing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Constructs a `BoxMakeWriter` wrapping a type implementing [`MakeWriter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603073,"byte_end":14603150,"line_start":734,"line_end":734,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603155,"byte_end":14603158,"line_start":735,"line_end":735,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603448,"byte_end":14603451,"line_start":748,"line_end":748,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BoxMakeWriter as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603732,"byte_end":14603743,"line_start":759,"line_end":759,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<BoxMakeWriter as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603715,"byte_end":14603724,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603833,"byte_end":14603848,"line_start":764,"line_end":764,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<BoxMakeWriter as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603816,"byte_end":14603825,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604501,"byte_end":14604512,"line_start":796,"line_end":796,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<Mutex<W> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604709,"byte_end":14604714,"line_start":806,"line_end":806,"column_start":8,"column_end":13},"name":"write","qualname":"<MutexGuardWriter as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604692,"byte_end":14604701,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604815,"byte_end":14604820,"line_start":811,"line_end":811,"column_start":8,"column_end":13},"name":"flush","qualname":"<MutexGuardWriter as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604798,"byte_end":14604807,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604903,"byte_end":14604917,"line_start":816,"line_end":816,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<MutexGuardWriter as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[io::IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4568},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604886,"byte_end":14604895,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605042,"byte_end":14605051,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"write_all","qualname":"<MutexGuardWriter as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4572},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605025,"byte_end":14605034,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605153,"byte_end":14605162,"line_start":826,"line_end":826,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<MutexGuardWriter as std::io::Write>::write_fmt","value":"fn write_fmt(&mut Self, std::fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4574},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605136,"byte_end":14605145,"line_start":825,"line_end":825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605402,"byte_end":14605407,"line_start":839,"line_end":839,"column_start":8,"column_end":13},"name":"write","qualname":"<EitherWriter<A, B> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605385,"byte_end":14605394,"line_start":838,"line_end":838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605609,"byte_end":14605614,"line_start":847,"line_end":847,"column_start":8,"column_end":13},"name":"flush","qualname":"<EitherWriter<A, B> as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605592,"byte_end":14605601,"line_start":846,"line_end":846,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605795,"byte_end":14605809,"line_start":855,"line_end":855,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<EitherWriter<A, B> as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[io::IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4568},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605778,"byte_end":14605787,"line_start":854,"line_end":854,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606045,"byte_end":14606054,"line_start":863,"line_end":863,"column_start":8,"column_end":17},"name":"write_all","qualname":"<EitherWriter<A, B> as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4572},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606028,"byte_end":14606037,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606261,"byte_end":14606270,"line_start":871,"line_end":871,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<EitherWriter<A, B> as std::io::Write>::write_fmt","value":"fn write_fmt(&mut Self, std::fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4574},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606244,"byte_end":14606253,"line_start":870,"line_end":870,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606753,"byte_end":14606757,"line_start":888,"line_end":888,"column_start":12,"column_end":16},"name":"none","qualname":"<OptionalWriter<T>>::none","value":"fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a [disabled writer].","sig":null,"attributes":[{"value":"/ Returns a [disabled writer].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606508,"byte_end":14606540,"line_start":880,"line_end":880,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606545,"byte_end":14606548,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Any bytes written to the returned writer are discarded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606553,"byte_end":14606612,"line_start":882,"line_end":882,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606617,"byte_end":14606620,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to returning [`Option::None`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606625,"byte_end":14606678,"line_start":884,"line_end":884,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606683,"byte_end":14606686,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ [disabled writer]: std::io::sink","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606691,"byte_end":14606727,"line_start":886,"line_end":886,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606732,"byte_end":14606741,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606956,"byte_end":14606960,"line_start":896,"line_end":896,"column_start":12,"column_end":16},"name":"some","qualname":"<OptionalWriter<T>>::some","value":"fn some(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an enabled writer of type `T`.","sig":null,"attributes":[{"value":"/ Returns an enabled writer of type `T`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606822,"byte_end":14606864,"line_start":892,"line_end":892,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606869,"byte_end":14606872,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to returning [`Option::Some`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606877,"byte_end":14606930,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606935,"byte_end":14606944,"line_start":895,"line_end":895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607082,"byte_end":14607086,"line_start":903,"line_end":903,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionalWriter<T> as std::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607065,"byte_end":14607074,"line_start":902,"line_end":902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607616,"byte_end":14607619,"line_start":921,"line_end":921,"column_start":12,"column_end":15},"name":"new","qualname":"<WithMaxLevel<M>>::new","value":"fn new(M, tracing_core::Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`MakeWriter`] with a maximum [`Level`], so that it\n returns [`OptionalWriter::none`] for spans and events whose level is\n more verbose than the maximum level.","sig":null,"attributes":[{"value":"/ Wraps the provided [`MakeWriter`] with a maximum [`Level`], so that it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607294,"byte_end":14607368,"line_start":914,"line_end":914,"column_start":5,"column_end":79}},{"value":"/ returns [`OptionalWriter::none`] for spans and events whose level is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607373,"byte_end":14607445,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/ more verbose than the maximum level.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607450,"byte_end":14607490,"line_start":916,"line_end":916,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607495,"byte_end":14607498,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_max_level`] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607503,"byte_end":14607557,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607562,"byte_end":14607565,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607570,"byte_end":14607604,"line_start":920,"line_end":920,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607837,"byte_end":14607848,"line_start":930,"line_end":930,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<WithMaxLevel<M> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607820,"byte_end":14607829,"line_start":929,"line_end":929,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607997,"byte_end":14608012,"line_start":936,"line_end":936,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<WithMaxLevel<M> as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607980,"byte_end":14607989,"line_start":935,"line_end":935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608609,"byte_end":14608612,"line_start":954,"line_end":954,"column_start":12,"column_end":15},"name":"new","qualname":"<WithMinLevel<M>>::new","value":"fn new(M, tracing_core::Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the provided [`MakeWriter`] with a minimum [`Level`], so that it\n returns [`OptionalWriter::none`] for spans and events whose level is\n less verbose than the maximum level.","sig":null,"attributes":[{"value":"/ Wraps the provided [`MakeWriter`] with a minimum [`Level`], so that it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608287,"byte_end":14608361,"line_start":947,"line_end":947,"column_start":5,"column_end":79}},{"value":"/ returns [`OptionalWriter::none`] for spans and events whose level is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608366,"byte_end":14608438,"line_start":948,"line_end":948,"column_start":5,"column_end":77}},{"value":"/ less verbose than the maximum level.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608443,"byte_end":14608483,"line_start":949,"line_end":949,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608488,"byte_end":14608491,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_min_level`] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608496,"byte_end":14608550,"line_start":951,"line_end":951,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608555,"byte_end":14608558,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608563,"byte_end":14608597,"line_start":953,"line_end":953,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608830,"byte_end":14608841,"line_start":963,"line_end":963,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<WithMinLevel<M> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608813,"byte_end":14608822,"line_start":962,"line_end":962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608990,"byte_end":14609005,"line_start":969,"line_end":969,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<WithMinLevel<M> as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608973,"byte_end":14608982,"line_start":968,"line_end":968,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609670,"byte_end":14609673,"line_start":988,"line_end":988,"column_start":12,"column_end":15},"name":"new","qualname":"<WithFilter<M, F>>::new","value":"fn new(M, F) -> Self where F: Fn(&Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wraps `make` with the provided `filter`, returning a [`MakeWriter`] that\n will call `make.make_writer_for()` when `filter` returns `true` for a\n span or event's [`Metadata`], and returns a [`sink`] otherwise.","sig":null,"attributes":[{"value":"/ Wraps `make` with the provided `filter`, returning a [`MakeWriter`] that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609283,"byte_end":14609359,"line_start":980,"line_end":980,"column_start":5,"column_end":81}},{"value":"/ will call `make.make_writer_for()` when `filter` returns `true` for a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609364,"byte_end":14609437,"line_start":981,"line_end":981,"column_start":5,"column_end":78}},{"value":"/ span or event's [`Metadata`], and returns a [`sink`] otherwise.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609442,"byte_end":14609509,"line_start":982,"line_end":982,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609514,"byte_end":14609517,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ See [`MakeWriterExt::with_filter`] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609522,"byte_end":14609573,"line_start":984,"line_end":984,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609578,"byte_end":14609581,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ [`Metadata`]: tracing_core::Metadata","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609586,"byte_end":14609626,"line_start":986,"line_end":986,"column_start":5,"column_end":45}},{"value":"/ [`sink`]: std::io::sink","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609631,"byte_end":14609658,"line_start":987,"line_end":987,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609978,"byte_end":14609989,"line_start":1004,"line_end":1004,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<WithFilter<M, F> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609961,"byte_end":14609970,"line_start":1003,"line_end":1003,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610100,"byte_end":14610115,"line_start":1009,"line_end":1009,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<WithFilter<M, F> as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610083,"byte_end":14610092,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610667,"byte_end":14610670,"line_start":1028,"line_end":1028,"column_start":12,"column_end":15},"name":"new","qualname":"<Tee<A, B>>::new","value":"fn new(A, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combines two types implementing [`MakeWriter`], returning\n a new [`MakeWriter`] that produces [writers] that write to *both*\n outputs.","sig":null,"attributes":[{"value":"/ Combines two types implementing [`MakeWriter`], returning","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610383,"byte_end":14610444,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/ a new [`MakeWriter`] that produces [writers] that write to *both*","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610449,"byte_end":14610518,"line_start":1022,"line_end":1022,"column_start":5,"column_end":74}},{"value":"/ outputs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610523,"byte_end":14610535,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610540,"byte_end":14610543,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`MakeWriterExt::and`] for details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610548,"byte_end":14610613,"line_start":1025,"line_end":1025,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610618,"byte_end":14610621,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ [writers]: std::io::Write","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610626,"byte_end":14610655,"line_start":1027,"line_end":1027,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610889,"byte_end":14610900,"line_start":1041,"line_end":1041,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<Tee<A, B> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610872,"byte_end":14610881,"line_start":1040,"line_end":1040,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611018,"byte_end":14611033,"line_start":1046,"line_end":1046,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<Tee<A, B> as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611001,"byte_end":14611010,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611497,"byte_end":14611502,"line_start":1067,"line_end":1067,"column_start":8,"column_end":13},"name":"write","qualname":"<Tee<A, B> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611480,"byte_end":14611489,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3683},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611658,"byte_end":14611663,"line_start":1073,"line_end":1073,"column_start":8,"column_end":13},"name":"flush","qualname":"<Tee<A, B> as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611641,"byte_end":14611650,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611771,"byte_end":14611785,"line_start":1079,"line_end":1079,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<Tee<A, B> as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[io::IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4568},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611754,"byte_end":14611763,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3685},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611965,"byte_end":14611974,"line_start":1085,"line_end":1085,"column_start":8,"column_end":17},"name":"write_all","qualname":"<Tee<A, B> as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4572},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611948,"byte_end":14611957,"line_start":1084,"line_end":1084,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612101,"byte_end":14612110,"line_start":1091,"line_end":1091,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<Tee<A, B> as std::io::Write>::write_fmt","value":"fn write_fmt(&mut Self, std::fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4574},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612084,"byte_end":14612093,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3690},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612314,"byte_end":14612317,"line_start":1101,"line_end":1101,"column_start":12,"column_end":15},"name":"new","qualname":"<OrElse<A, B>>::new","value":"fn new<'a, W>(A, B) -> Self where A: MakeWriter<Writer = OptionalWriter<W>>,\nB: MakeWriter, W: Write","parent":null,"children":[],"decl_id":null,"docs":" Combines\n","sig":null,"attributes":[{"value":"/ Combines","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612290,"byte_end":14612302,"line_start":1100,"line_end":1100,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612730,"byte_end":14612741,"line_start":1120,"line_end":1120,"column_start":8,"column_end":19},"name":"make_writer","qualname":"<OrElse<A, B> as fmt::writer::MakeWriter>::make_writer","value":"fn make_writer(&'a Self) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3546},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612713,"byte_end":14612722,"line_start":1119,"line_end":1119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612992,"byte_end":14613007,"line_start":1128,"line_end":1128,"column_start":8,"column_end":23},"name":"make_writer_for","qualname":"<OrElse<A, B> as fmt::writer::MakeWriter>::make_writer_for","value":"fn make_writer_for(&'a Self, &Metadata) -> Self::Writer","parent":{"krate":0,"index":3543},"children":[],"decl_id":{"krate":0,"index":3547},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612975,"byte_end":14612984,"line_start":1127,"line_end":1127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613397,"byte_end":14613402,"line_start":1143,"line_end":1143,"column_start":8,"column_end":13},"name":"write","qualname":"<ArcWriter<W> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613380,"byte_end":14613389,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613507,"byte_end":14613512,"line_start":1148,"line_end":1148,"column_start":8,"column_end":13},"name":"flush","qualname":"<ArcWriter<W> as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613490,"byte_end":14613499,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613599,"byte_end":14613613,"line_start":1153,"line_end":1153,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<ArcWriter<W> as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[io::IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4568},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613582,"byte_end":14613591,"line_start":1152,"line_end":1152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613742,"byte_end":14613751,"line_start":1158,"line_end":1158,"column_start":8,"column_end":17},"name":"write_all","qualname":"<ArcWriter<W> as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4572},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613725,"byte_end":14613734,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613857,"byte_end":14613866,"line_start":1163,"line_end":1163,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<ArcWriter<W> as std::io::Write>::write_fmt","value":"fn write_fmt(&mut Self, std::fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4574},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613840,"byte_end":14613849,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374085,"byte_end":14374095,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"Subscriber","qualname":"::fmt::Subscriber","value":"Subscriber {  }","parent":null,"children":[{"krate":0,"index":4240}],"decl_id":null,"docs":" A `Subscriber` that logs formatted representations of `tracing` events.","sig":null,"attributes":[{"value":"/ A `Subscriber` that logs formatted representations of `tracing` events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373822,"byte_end":14373897,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373898,"byte_end":14373901,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This consists of an inner `Formatter` wrapped in a layer that performs filtering.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373902,"byte_end":14373987,"line_start":222,"line_end":222,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374503,"byte_end":14374512,"line_start":237,"line_end":237,"column_start":10,"column_end":19},"name":"Formatter","qualname":"::fmt::Formatter","value":"layer::Layered<fmt_layer::Layer<Registry, N, E, W>, Registry>","parent":null,"children":[],"decl_id":null,"docs":" A `Subscriber` that logs formatted representations of `tracing` events.\n This type only logs formatted events; it does not perform any filtering.\n","sig":null,"attributes":[{"value":"/ A `Subscriber` that logs formatted representations of `tracing` events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374272,"byte_end":14374347,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/ This type only logs formatted events; it does not perform any filtering.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374348,"byte_end":14374424,"line_start":235,"line_end":235,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374821,"byte_end":14374838,"line_start":246,"line_end":246,"column_start":12,"column_end":29},"name":"SubscriberBuilder","qualname":"::fmt::SubscriberBuilder","value":"SubscriberBuilder {  }","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253}],"decl_id":null,"docs":" Configures and constructs `Subscriber`s.\n","sig":null,"attributes":[{"value":"/ Configures and constructs `Subscriber`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14374679,"byte_end":14374723,"line_start":243,"line_end":243,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":3767},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377017,"byte_end":14377020,"line_start":320,"line_end":320,"column_start":8,"column_end":11},"name":"fmt","qualname":"::fmt::fmt","value":"fn fmt() -> SubscriberBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`SubscriberBuilder`] for configuring a [formatting subscriber].","sig":null,"attributes":[{"value":"/ Returns a new [`SubscriberBuilder`] for configuring a [formatting subscriber].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375017,"byte_end":14375099,"line_start":256,"line_end":256,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375100,"byte_end":14375103,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ This is essentially shorthand for [`SubscriberBuilder::default()]`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375104,"byte_end":14375175,"line_start":258,"line_end":258,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375176,"byte_end":14375179,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375180,"byte_end":14375194,"line_start":260,"line_end":260,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375195,"byte_end":14375198,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Using [`init`] to set the default subscriber:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375199,"byte_end":14375248,"line_start":262,"line_end":262,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375249,"byte_end":14375252,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375253,"byte_end":14375264,"line_start":264,"line_end":264,"column_start":1,"column_end":12}},{"value":"/ tracing_subscriber::fmt().init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375265,"byte_end":14375302,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375303,"byte_end":14375310,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375311,"byte_end":14375314,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Configuring the output format:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375315,"byte_end":14375349,"line_start":268,"line_end":268,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375350,"byte_end":14375353,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375354,"byte_end":14375365,"line_start":270,"line_end":270,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375366,"byte_end":14375369,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375370,"byte_end":14375399,"line_start":272,"line_end":272,"column_start":1,"column_end":30}},{"value":"/     // Configure formatting settings.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375400,"byte_end":14375441,"line_start":273,"line_end":273,"column_start":1,"column_end":42}},{"value":"/     .with_target(false)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375442,"byte_end":14375469,"line_start":274,"line_end":274,"column_start":1,"column_end":28}},{"value":"/     .with_timer(tracing_subscriber::fmt::time::uptime())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375470,"byte_end":14375530,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"/     .with_level(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375531,"byte_end":14375556,"line_start":276,"line_end":276,"column_start":1,"column_end":26}},{"value":"/     // Set the subscriber as the default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375557,"byte_end":14375602,"line_start":277,"line_end":277,"column_start":1,"column_end":46}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375603,"byte_end":14375619,"line_start":278,"line_end":278,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375620,"byte_end":14375627,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375628,"byte_end":14375631,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`try_init`] returns an error if the default subscriber could not be set:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375632,"byte_end":14375709,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375710,"byte_end":14375713,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375714,"byte_end":14375725,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375726,"byte_end":14375752,"line_start":284,"line_end":284,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375753,"byte_end":14375756,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ fn init_subscriber() -> Result<(), Box<dyn Error + Send + Sync + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375757,"byte_end":14375837,"line_start":286,"line_end":286,"column_start":1,"column_end":81}},{"value":"/     tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375838,"byte_end":14375871,"line_start":287,"line_end":287,"column_start":1,"column_end":34}},{"value":"/         // Configure the subscriber to emit logs in JSON format.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375872,"byte_end":14375940,"line_start":288,"line_end":288,"column_start":1,"column_end":69}},{"value":"/         .json()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375941,"byte_end":14375960,"line_start":289,"line_end":289,"column_start":1,"column_end":20}},{"value":"/         // Configure the subscriber to flatten event fields in the output JSON objects.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14375961,"byte_end":14376052,"line_start":290,"line_end":290,"column_start":1,"column_end":92}},{"value":"/         .flatten_event(true)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376053,"byte_end":14376085,"line_start":291,"line_end":291,"column_start":1,"column_end":33}},{"value":"/         // Set the subscriber as the default, returning an error if this fails.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376086,"byte_end":14376169,"line_start":292,"line_end":292,"column_start":1,"column_end":84}},{"value":"/         .try_init()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376170,"byte_end":14376195,"line_start":293,"line_end":293,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376196,"byte_end":14376199,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376200,"byte_end":14376214,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376215,"byte_end":14376220,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376221,"byte_end":14376228,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376229,"byte_end":14376232,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Rather than setting the subscriber as the default, [`finish`] _returns_ the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376233,"byte_end":14376312,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"/ constructed subscriber, which may then be passed to other functions:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376313,"byte_end":14376385,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376386,"byte_end":14376389,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376390,"byte_end":14376401,"line_start":302,"line_end":302,"column_start":1,"column_end":12}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376402,"byte_end":14376448,"line_start":303,"line_end":303,"column_start":1,"column_end":47}},{"value":"/     .with_max_level(tracing::Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376449,"byte_end":14376495,"line_start":304,"line_end":304,"column_start":1,"column_end":47}},{"value":"/     .compact()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376496,"byte_end":14376514,"line_start":305,"line_end":305,"column_start":1,"column_end":19}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376515,"byte_end":14376533,"line_start":306,"line_end":306,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376534,"byte_end":14376537,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ tracing::subscriber::with_default(subscriber, || {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376538,"byte_end":14376592,"line_start":308,"line_end":308,"column_start":1,"column_end":55}},{"value":"/     // the subscriber will only be set as the default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376593,"byte_end":14376650,"line_start":309,"line_end":309,"column_start":1,"column_end":58}},{"value":"/     // inside this closure...","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376651,"byte_end":14376684,"line_start":310,"line_end":310,"column_start":1,"column_end":34}},{"value":"/ })","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376685,"byte_end":14376691,"line_start":311,"line_end":311,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376692,"byte_end":14376699,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376700,"byte_end":14376703,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ [formatting subscriber]: Subscriber","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376704,"byte_end":14376743,"line_start":314,"line_end":314,"column_start":1,"column_end":40}},{"value":"/ [`SubscriberBuilder::default()`]: SubscriberBuilder::default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376744,"byte_end":14376808,"line_start":315,"line_end":315,"column_start":1,"column_end":65}},{"value":"/ [`init`]: SubscriberBuilder::init()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376809,"byte_end":14376848,"line_start":316,"line_end":316,"column_start":1,"column_end":40}},{"value":"/ [`try_init`]: SubscriberBuilder::try_init()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376849,"byte_end":14376896,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/ [`finish`]: SubscriberBuilder::finish()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14376897,"byte_end":14376940,"line_start":318,"line_end":318,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377453,"byte_end":14377458,"line_start":333,"line_end":333,"column_start":8,"column_end":13},"name":"layer","qualname":"::fmt::layer","value":"fn layer<S>() -> Layer<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [formatting layer] that can be [composed] with other layers to\n construct a [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a new [formatting layer] that can be [composed] with other layers to","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377082,"byte_end":14377162,"line_start":324,"line_end":324,"column_start":1,"column_end":81}},{"value":"/ construct a [`Subscriber`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377163,"byte_end":14377194,"line_start":325,"line_end":325,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377195,"byte_end":14377198,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ This is a shorthand for the equivalent [`Layer::default()`] function.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377199,"byte_end":14377272,"line_start":327,"line_end":327,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377273,"byte_end":14377276,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ [formatting layer]: Layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377277,"byte_end":14377306,"line_start":329,"line_end":329,"column_start":1,"column_end":30}},{"value":"/ [composed]: crate::layer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377307,"byte_end":14377335,"line_start":330,"line_end":330,"column_start":1,"column_end":29}},{"value":"/ [`Layer::default()`]: Layer::default","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377336,"byte_end":14377376,"line_start":331,"line_end":331,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377856,"byte_end":14377873,"line_start":345,"line_end":345,"column_start":15,"column_end":32},"name":"DEFAULT_MAX_LEVEL","qualname":"::fmt::Subscriber::DEFAULT_MAX_LEVEL","value":"LevelFilter","parent":{"krate":0,"index":3770},"children":[],"decl_id":null,"docs":" The maximum [verbosity level] that is enabled by a `Subscriber` by\n default.","sig":null,"attributes":[{"value":"/ The maximum [verbosity level] that is enabled by a `Subscriber` by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377524,"byte_end":14377594,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377599,"byte_end":14377611,"line_start":339,"line_end":339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377616,"byte_end":14377619,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This can be overridden with the [`SubscriberBuilder::with_max_level`] method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377624,"byte_end":14377705,"line_start":341,"line_end":341,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377710,"byte_end":14377713,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [verbosity level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377718,"byte_end":14377760,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ [`SubscriberBuilder::with_max_level`]: SubscriberBuilder::with_max_level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377765,"byte_end":14377841,"line_start":344,"line_end":344,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377999,"byte_end":14378006,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"builder","qualname":"<Subscriber>::builder","value":"fn builder() -> SubscriberBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SubscriberBuilder` for configuring a format subscriber.\n","sig":null,"attributes":[{"value":"/ Returns a new `SubscriberBuilder` for configuring a format subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377913,"byte_end":14377987,"line_start":347,"line_end":347,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378159,"byte_end":14378162,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Subscriber>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new format subscriber with the default configuration.\n","sig":null,"attributes":[{"value":"/ Returns a new format subscriber with the default configuration.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378080,"byte_end":14378147,"line_start":352,"line_end":352,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378248,"byte_end":14378255,"line_start":359,"line_end":359,"column_start":8,"column_end":15},"name":"default","qualname":"<Subscriber as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378781,"byte_end":14378798,"line_start":376,"line_end":376,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::register_callsite","value":"fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":829},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378764,"byte_end":14378773,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378925,"byte_end":14378932,"line_start":381,"line_end":381,"column_start":8,"column_end":15},"name":"enabled","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::enabled","value":"fn enabled(&Self, &Metadata) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":830},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378908,"byte_end":14378917,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379032,"byte_end":14379040,"line_start":386,"line_end":386,"column_start":8,"column_end":16},"name":"new_span","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::new_span","value":"fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":832},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379015,"byte_end":14379024,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379155,"byte_end":14379161,"line_start":391,"line_end":391,"column_start":8,"column_end":14},"name":"record","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::record","value":"fn record(&Self, &span::Id, &span::Record)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":833},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379138,"byte_end":14379147,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379283,"byte_end":14379302,"line_start":396,"line_end":396,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::record_follows_from","value":"fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":834},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379266,"byte_end":14379275,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379431,"byte_end":14379444,"line_start":401,"line_end":401,"column_start":8,"column_end":21},"name":"event_enabled","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::event_enabled","value":"fn event_enabled(&Self, &Event) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":835},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379414,"byte_end":14379423,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379549,"byte_end":14379554,"line_start":406,"line_end":406,"column_start":8,"column_end":13},"name":"event","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::event","value":"fn event(&Self, &Event)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":836},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379532,"byte_end":14379541,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379644,"byte_end":14379649,"line_start":411,"line_end":411,"column_start":8,"column_end":13},"name":"enter","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::enter","value":"fn enter(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":837},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379627,"byte_end":14379636,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379767,"byte_end":14379771,"line_start":417,"line_end":417,"column_start":8,"column_end":12},"name":"exit","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::exit","value":"fn exit(&Self, &span::Id)","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":838},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379750,"byte_end":14379759,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379853,"byte_end":14379865,"line_start":422,"line_end":422,"column_start":8,"column_end":20},"name":"current_span","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::current_span","value":"fn current_span(&Self) -> span::Current","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":842},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379836,"byte_end":14379845,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379954,"byte_end":14379964,"line_start":427,"line_end":427,"column_start":8,"column_end":18},"name":"clone_span","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::clone_span","value":"fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":839},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14379937,"byte_end":14379946,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380063,"byte_end":14380072,"line_start":432,"line_end":432,"column_start":8,"column_end":17},"name":"try_close","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::try_close","value":"fn try_close(&Self, span::Id) -> bool","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":841},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380046,"byte_end":14380055,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380165,"byte_end":14380179,"line_start":437,"line_end":437,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::max_level_hint","value":"fn max_level_hint(&Self) -> Option<tracing_core::LevelFilter>","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":831},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380148,"byte_end":14380157,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380283,"byte_end":14380295,"line_start":441,"line_end":441,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"<Subscriber<N, E, F, W> as tracing_core::Subscriber>::downcast_raw","value":"unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":16,"index":828},"children":[],"decl_id":{"krate":16,"index":843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380724,"byte_end":14380733,"line_start":456,"line_end":456,"column_start":8,"column_end":17},"name":"span_data","qualname":"<Subscriber<N, E, F, W> as registry::LookupSpan>::span_data","value":"fn span_data(&'a Self, &span::Id) -> Option<Self::Data>","parent":{"krate":0,"index":407},"children":[],"decl_id":{"krate":0,"index":410},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380908,"byte_end":14380915,"line_start":464,"line_end":464,"column_start":8,"column_end":15},"name":"default","qualname":"<SubscriberBuilder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381493,"byte_end":14381499,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"finish","qualname":"<SubscriberBuilder<N, E, F, W>>::finish","value":"fn finish(Self) -> Subscriber<N, E, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Finish the builder, returning a new `FmtSubscriber`.\n","sig":null,"attributes":[{"value":"/ Finish the builder, returning a new `FmtSubscriber`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381425,"byte_end":14381481,"line_start":480,"line_end":480,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382152,"byte_end":14382160,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"try_init","qualname":"<SubscriberBuilder<N, E, F, W>>::try_init","value":"fn try_init(Self) -> Result<(), Box<dyn Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Install this Subscriber as the global default if one is\n not already set.","sig":null,"attributes":[{"value":"/ Install this Subscriber as the global default if one is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381710,"byte_end":14381769,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/ not already set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381774,"byte_end":14381794,"line_start":489,"line_end":489,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381799,"byte_end":14381802,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381807,"byte_end":14381874,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381879,"byte_end":14381946,"line_start":492,"line_end":492,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381951,"byte_end":14381954,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381959,"byte_end":14381971,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/ Returns an Error if the initialization was unsuccessful, likely","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381976,"byte_end":14382043,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ because a global subscriber was already installed by another","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382048,"byte_end":14382112,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/ call to `try_init`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382117,"byte_end":14382140,"line_start":497,"line_end":497,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382719,"byte_end":14382723,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"init","qualname":"<SubscriberBuilder<N, E, F, W>>::init","value":"fn init(Self)","parent":null,"children":[],"decl_id":null,"docs":" Install this Subscriber as the global default.","sig":null,"attributes":[{"value":"/ Install this Subscriber as the global default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382329,"byte_end":14382379,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382384,"byte_end":14382387,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382392,"byte_end":14382459,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382464,"byte_end":14382531,"line_start":508,"line_end":508,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382536,"byte_end":14382539,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382544,"byte_end":14382556,"line_start":510,"line_end":510,"column_start":5,"column_end":17}},{"value":"/ Panics if the initialization was unsuccessful, likely because a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382561,"byte_end":14382628,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ global subscriber was already installed by another call to `try_init`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382633,"byte_end":14382707,"line_start":512,"line_end":512,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383220,"byte_end":14383224,"line_start":527,"line_end":527,"column_start":8,"column_end":12},"name":"from","qualname":"<tracing_core::Dispatch as std::convert::From>::from","value":"fn from(SubscriberBuilder<N, E, F, W>) -> tracing_core::Dispatch","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384080,"byte_end":14384090,"line_start":550,"line_end":550,"column_start":12,"column_end":22},"name":"with_timer","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_timer","value":"fn with_timer<T2>(Self, T2)\n-> SubscriberBuilder<N, format::Format<L, T2>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Use the given [`timer`] for log message timestamps.","sig":null,"attributes":[{"value":"/ Use the given [`timer`] for log message timestamps.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383490,"byte_end":14383545,"line_start":536,"line_end":536,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383550,"byte_end":14383553,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ See the [`time` module] for the provided timer implementations.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383558,"byte_end":14383625,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383630,"byte_end":14383633,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Note that using the `\"time`\"\" feature flag enables the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383638,"byte_end":14383696,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/ additional time formatters [`UtcTime`] and [`LocalTime`], which use the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383701,"byte_end":14383776,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ [`time` crate] to provide more sophisticated timestamp formatting","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383781,"byte_end":14383850,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ options.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383855,"byte_end":14383867,"line_start":543,"line_end":543,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383872,"byte_end":14383875,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`timer`]: time::FormatTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383880,"byte_end":14383911,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/ [`time` module]: mod@time","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383916,"byte_end":14383945,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/ [`UtcTime`]: time::UtcTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383950,"byte_end":14383980,"line_start":547,"line_end":547,"column_start":5,"column_end":35}},{"value":"/ [`LocalTime`]: time::LocalTime","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383985,"byte_end":14384019,"line_start":548,"line_end":548,"column_start":5,"column_end":39}},{"value":"/ [`time` crate]: https://docs.rs/time/0.3","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384024,"byte_end":14384068,"line_start":549,"line_end":549,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384355,"byte_end":14384367,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"without_time","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::without_time","value":"fn without_time(Self) -> SubscriberBuilder<N, format::Format<L, ()>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Do not emit timestamps with log messages.\n","sig":null,"attributes":[{"value":"/ Do not emit timestamps with log messages.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384298,"byte_end":14384343,"line_start":557,"line_end":557,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386686,"byte_end":14386702,"line_start":606,"line_end":606,"column_start":12,"column_end":28},"name":"with_span_events","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_span_events","value":"fn with_span_events(Self, format::FmtSpan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures how synthesized events are emitted at points in the [span\n lifecycle][lifecycle].","sig":null,"attributes":[{"value":"/ Configures how synthesized events are emitted at points in the [span","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384557,"byte_end":14384629,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ lifecycle][lifecycle].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384634,"byte_end":14384660,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384665,"byte_end":14384668,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The following options are available:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384673,"byte_end":14384713,"line_start":568,"line_end":568,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384718,"byte_end":14384721,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ - `FmtSpan::NONE`: No events will be synthesized when spans are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384726,"byte_end":14384793,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/    created, entered, exited, or closed. Data from spans will still be","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384798,"byte_end":14384871,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/    included as the context for formatted events. This is the default.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384876,"byte_end":14384949,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ - `FmtSpan::NEW`: An event will be synthesized when spans are created.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14384954,"byte_end":14385028,"line_start":573,"line_end":573,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::ENTER`: An event will be synthesized when spans are entered.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385033,"byte_end":14385109,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ - `FmtSpan::EXIT`: An event will be synthesized when spans are exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385114,"byte_end":14385188,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/ - `FmtSpan::CLOSE`: An event will be synthesized when a span closes. If","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385193,"byte_end":14385268,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/    [timestamps are enabled][time] for this formatter, the generated","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385273,"byte_end":14385344,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/    event will contain fields with the span's _busy time_ (the total","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385349,"byte_end":14385420,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/    time for which it was entered) and _idle time_ (the total time that","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385425,"byte_end":14385499,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/    the span existed but was not entered).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385504,"byte_end":14385549,"line_start":580,"line_end":580,"column_start":5,"column_end":50}},{"value":"/ - `FmtSpan::ACTIVE`: An event will be synthesized when spans are entered","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385554,"byte_end":14385630,"line_start":581,"line_end":581,"column_start":5,"column_end":81}},{"value":"/    or exited.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385635,"byte_end":14385652,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/ - `FmtSpan::FULL`: Events will be synthesized whenever a span is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385657,"byte_end":14385725,"line_start":583,"line_end":583,"column_start":5,"column_end":73}},{"value":"/    created, entered, exited, or closed. If timestamps are enabled, the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385730,"byte_end":14385804,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/    close event will contain the span's busy and idle time, as","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385809,"byte_end":14385874,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/    described above.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385879,"byte_end":14385902,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385907,"byte_end":14385910,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The options can be enabled in any combination. For instance, the following","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385915,"byte_end":14385993,"line_start":588,"line_end":588,"column_start":5,"column_end":83}},{"value":"/ will synthesize events whenever spans are created and closed:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14385998,"byte_end":14386063,"line_start":589,"line_end":589,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386068,"byte_end":14386071,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386076,"byte_end":14386087,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format::FmtSpan;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386092,"byte_end":14386141,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386146,"byte_end":14386178,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386183,"byte_end":14386186,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386191,"byte_end":14386217,"line_start":595,"line_end":595,"column_start":5,"column_end":31}},{"value":"/     .with_span_events(FmtSpan::NEW | FmtSpan::CLOSE)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386222,"byte_end":14386278,"line_start":596,"line_end":596,"column_start":5,"column_end":61}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386283,"byte_end":14386301,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386306,"byte_end":14386313,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386318,"byte_end":14386321,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Note that the generated events will only be part of the log output by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386326,"byte_end":14386399,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/ this formatter; they will not be recorded by other `Subscriber`s or by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386404,"byte_end":14386478,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ `Layer`s added to this subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386483,"byte_end":14386521,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386526,"byte_end":14386529,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ [lifecycle]: https://docs.rs/tracing/latest/tracing/span/index.html#the-span-lifecycle","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386534,"byte_end":14386624,"line_start":604,"line_end":604,"column_start":5,"column_end":95}},{"value":"/ [time]: SubscriberBuilder::without_time()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386629,"byte_end":14386674,"line_start":605,"line_end":605,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387003,"byte_end":14387012,"line_start":616,"line_end":616,"column_start":12,"column_end":21},"name":"with_ansi","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_ansi","value":"fn with_ansi(Self, bool) -> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Enable ANSI encoding for formatted events.\n","sig":null,"attributes":[{"value":"/ Enable ANSI encoding for formatted events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386864,"byte_end":14386910,"line_start":613,"line_end":613,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14386915,"byte_end":14386939,"line_start":614,"line_end":614,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387267,"byte_end":14387278,"line_start":624,"line_end":624,"column_start":12,"column_end":23},"name":"with_target","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_target","value":"fn with_target(Self, bool) -> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's target is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's target is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387200,"byte_end":14387255,"line_start":623,"line_end":623,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387662,"byte_end":14387671,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"with_file","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_file","value":"fn with_file(Self, bool) -> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code file path][file] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code file path][file] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387511,"byte_end":14387578,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387583,"byte_end":14387597,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387602,"byte_end":14387605,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ [file]: tracing_core::Metadata::file","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387610,"byte_end":14387650,"line_start":637,"line_end":637,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388059,"byte_end":14388075,"line_start":652,"line_end":652,"column_start":12,"column_end":28},"name":"with_line_number","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_line_number","value":"fn with_line_number(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's [source code line number][line] is\n displayed.","sig":null,"attributes":[{"value":"/ Sets whether or not an event's [source code line number][line] is","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387906,"byte_end":14387975,"line_start":648,"line_end":648,"column_start":5,"column_end":74}},{"value":"/ displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387980,"byte_end":14387994,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14387999,"byte_end":14388002,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [line]: tracing_core::Metadata::line","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388007,"byte_end":14388047,"line_start":651,"line_end":651,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388389,"byte_end":14388399,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"with_level","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_level","value":"fn with_level(Self, bool) -> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not an event's level is displayed.\n","sig":null,"attributes":[{"value":"/ Sets whether or not an event's level is displayed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388323,"byte_end":14388377,"line_start":662,"line_end":662,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388793,"byte_end":14388810,"line_start":677,"line_end":677,"column_start":12,"column_end":29},"name":"with_thread_names","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_thread_names","value":"fn with_thread_names(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [name] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [name] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388629,"byte_end":14388698,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388703,"byte_end":14388730,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388735,"byte_end":14388738,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ [name]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14388743,"byte_end":14388781,"line_start":676,"line_end":676,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389230,"byte_end":14389245,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"with_thread_ids","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::with_thread_ids","value":"fn with_thread_ids(Self, bool)\n-> SubscriberBuilder<N, format::Format<L, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the [thread ID] of the current thread is displayed\n when formatting events.","sig":null,"attributes":[{"value":"/ Sets whether or not the [thread ID] of the current thread is displayed","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389061,"byte_end":14389135,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ when formatting events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389140,"byte_end":14389167,"line_start":688,"line_end":688,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389172,"byte_end":14389175,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ [thread ID]: std::thread::ThreadId","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389180,"byte_end":14389218,"line_start":690,"line_end":690,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389611,"byte_end":14389618,"line_start":704,"line_end":704,"column_start":12,"column_end":19},"name":"compact","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::compact","value":"fn compact(Self)\n-> SubscriberBuilder<N, format::Format<format::Compact, T>, F, W> where\nN: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber being built to use a less verbose formatter.","sig":null,"attributes":[{"value":"/ Sets the subscriber being built to use a less verbose formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389490,"byte_end":14389558,"line_start":701,"line_end":701,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389563,"byte_end":14389566,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ See [`format::Compact`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389571,"byte_end":14389599,"line_start":703,"line_end":703,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14390101,"byte_end":14390107,"line_start":717,"line_end":717,"column_start":12,"column_end":18},"name":"pretty","qualname":"<SubscriberBuilder<N, format::Format<L, T>, F, W>>::pretty","value":"fn pretty(Self)\n-> SubscriberBuilder<format::Pretty, format::Format<format::Pretty, T>, F, W>","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber being built to use an [excessively pretty, human-readable formatter](crate::fmt::format::Pretty).\n","sig":null,"attributes":[{"value":"/ Sets the subscriber being built to use an [excessively pretty, human-readable formatter](crate::fmt::format::Pretty).","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14389887,"byte_end":14390008,"line_start":714,"line_end":714,"column_start":5,"column_end":126}},{"value":"cfg(feature = \"ansi\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14390013,"byte_end":14390037,"line_start":715,"line_end":715,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14392784,"byte_end":14392805,"line_start":797,"line_end":797,"column_start":12,"column_end":33},"name":"with_filter_reloading","qualname":"<SubscriberBuilder<N, E, crate::EnvFilter, W>>::with_filter_reloading","value":"fn with_filter_reloading(Self)\n->\n    SubscriberBuilder<N, E,\n    crate::reload::Layer<crate::EnvFilter, Formatter<N, E, W>>, W>","parent":null,"children":[],"decl_id":null,"docs":" Configures the subscriber being built to allow filter reloading at\n runtime.\n","sig":null,"attributes":[{"value":"/ Configures the subscriber being built to allow filter reloading at","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14392685,"byte_end":14392755,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/ runtime.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14392760,"byte_end":14392772,"line_start":796,"line_end":796,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393451,"byte_end":14393464,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"reload_handle","qualname":"<SubscriberBuilder<N, E,\ncrate::reload::Layer<crate::EnvFilter, Formatter<N, E, W>>, W>>::reload_handle","value":"fn reload_handle(&Self)\n-> crate::reload::Handle<crate::EnvFilter, Formatter<N, E, W>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` that may be used to reload the constructed subscriber's\n filter.\n","sig":null,"attributes":[{"value":"/ Returns a `Handle` that may be used to reload the constructed subscriber's","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393345,"byte_end":14393423,"line_start":815,"line_end":815,"column_start":5,"column_end":83}},{"value":"/ filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393428,"byte_end":14393439,"line_start":816,"line_end":816,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394400,"byte_end":14394410,"line_start":843,"line_end":843,"column_start":12,"column_end":22},"name":"fmt_fields","qualname":"<SubscriberBuilder<N, E, F, W>>::fmt_fields","value":"fn fmt_fields<N2>(Self, N2) -> SubscriberBuilder<N2, E, F, W> where\nN2: for<'writer> FormatFields + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the field formatter that the subscriber being built will use to record\n fields.","sig":null,"attributes":[{"value":"/ Sets the field formatter that the subscriber being built will use to record","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393628,"byte_end":14393707,"line_start":823,"line_end":823,"column_start":5,"column_end":84}},{"value":"/ fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393712,"byte_end":14393723,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393728,"byte_end":14393731,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393736,"byte_end":14393752,"line_start":826,"line_end":826,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393757,"byte_end":14393768,"line_start":827,"line_end":827,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393773,"byte_end":14393813,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/ use tracing_subscriber::prelude::*;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393818,"byte_end":14393857,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393862,"byte_end":14393865,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let formatter =","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393870,"byte_end":14393889,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     // Construct a custom formatter for `Debug` fields","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393894,"byte_end":14393952,"line_start":832,"line_end":832,"column_start":5,"column_end":63}},{"value":"/     format::debug_fn(|writer, field, value| write!(writer, \"{}: {:?}\", field, value))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393957,"byte_end":14394046,"line_start":833,"line_end":833,"column_start":5,"column_end":94}},{"value":"/         // Use the `tracing_subscriber::MakeFmtExt` trait to wrap the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394051,"byte_end":14394124,"line_start":834,"line_end":834,"column_start":5,"column_end":78}},{"value":"/         // formatter so that a delimiter is added between fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394129,"byte_end":14394198,"line_start":835,"line_end":835,"column_start":5,"column_end":74}},{"value":"/         .delimited(\", \");","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394203,"byte_end":14394232,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394237,"byte_end":14394240,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394245,"byte_end":14394291,"line_start":838,"line_end":838,"column_start":5,"column_end":51}},{"value":"/     .fmt_fields(formatter)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394296,"byte_end":14394326,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394331,"byte_end":14394349,"line_start":840,"line_end":840,"column_start":5,"column_end":23}},{"value":"/ # drop(subscriber)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394354,"byte_end":14394376,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394381,"byte_end":14394388,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396629,"byte_end":14396644,"line_start":903,"line_end":903,"column_start":12,"column_end":27},"name":"with_env_filter","qualname":"<SubscriberBuilder<N, E, F, W>>::with_env_filter","value":"fn with_env_filter<impl Into<crate::EnvFilter>>(Self,\nimpl Into<crate::EnvFilter>) -> SubscriberBuilder<N, E, crate::EnvFilter, W>\nwhere Formatter<N, E, W>: tracing_core::Subscriber + 'static,\nimpl Into<crate::EnvFilter>: Into<crate::EnvFilter>","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`EnvFilter`] that the subscriber will use to determine if\n a span or event is enabled.","sig":null,"attributes":[{"value":"/ Sets the [`EnvFilter`] that the subscriber will use to determine if","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394681,"byte_end":14394752,"line_start":853,"line_end":853,"column_start":5,"column_end":76}},{"value":"/ a span or event is enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394757,"byte_end":14394788,"line_start":854,"line_end":854,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394793,"byte_end":14394796,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the \"env-filter\" feature flag to be enabled.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394801,"byte_end":14394880,"line_start":856,"line_end":856,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394885,"byte_end":14394888,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ If a filter was previously set, or a maximum level was set by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394893,"byte_end":14394962,"line_start":858,"line_end":858,"column_start":5,"column_end":74}},{"value":"/ [`with_max_level`] method, that value is replaced by the new filter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14394967,"byte_end":14395039,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395044,"byte_end":14395047,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395052,"byte_end":14395066,"line_start":861,"line_end":861,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395071,"byte_end":14395074,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ Setting a filter based on the value of the `RUST_LOG` environment","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395079,"byte_end":14395148,"line_start":863,"line_end":863,"column_start":5,"column_end":74}},{"value":"/ variable:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395153,"byte_end":14395166,"line_start":864,"line_end":864,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395171,"byte_end":14395182,"line_start":865,"line_end":865,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::{fmt, EnvFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395187,"byte_end":14395232,"line_start":866,"line_end":866,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395237,"byte_end":14395240,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395245,"byte_end":14395254,"line_start":868,"line_end":868,"column_start":5,"column_end":14}},{"value":"/     .with_env_filter(EnvFilter::from_default_env())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395259,"byte_end":14395314,"line_start":869,"line_end":869,"column_start":5,"column_end":60}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395319,"byte_end":14395335,"line_start":870,"line_end":870,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395340,"byte_end":14395347,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395352,"byte_end":14395355,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Setting a filter based on a pre-set filter directive string:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395360,"byte_end":14395424,"line_start":873,"line_end":873,"column_start":5,"column_end":69}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395429,"byte_end":14395440,"line_start":874,"line_end":874,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395445,"byte_end":14395477,"line_start":875,"line_end":875,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395482,"byte_end":14395485,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395490,"byte_end":14395499,"line_start":877,"line_end":877,"column_start":5,"column_end":14}},{"value":"/     .with_env_filter(\"my_crate=info,my_crate::my_mod=debug,[my_span]=trace\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395504,"byte_end":14395584,"line_start":878,"line_end":878,"column_start":5,"column_end":85}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395589,"byte_end":14395605,"line_start":879,"line_end":879,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395610,"byte_end":14395617,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395622,"byte_end":14395625,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Adding additional directives to a filter constructed from an env var:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395630,"byte_end":14395703,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395708,"byte_end":14395719,"line_start":883,"line_end":883,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::{fmt, filter::{EnvFilter, LevelFilter}};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395724,"byte_end":14395792,"line_start":884,"line_end":884,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395797,"byte_end":14395800,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # fn filter() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395805,"byte_end":14395890,"line_start":886,"line_end":886,"column_start":5,"column_end":90}},{"value":"/ let filter = EnvFilter::try_from_env(\"MY_CUSTOM_FILTER_ENV_VAR\")?","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395895,"byte_end":14395964,"line_start":887,"line_end":887,"column_start":5,"column_end":74}},{"value":"/     // Set the base level when not matched by other directives to WARN.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14395969,"byte_end":14396044,"line_start":888,"line_end":888,"column_start":5,"column_end":80}},{"value":"/     .add_directive(LevelFilter::WARN.into())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396049,"byte_end":14396097,"line_start":889,"line_end":889,"column_start":5,"column_end":53}},{"value":"/     // Set the max level for `my_crate::my_mod` to DEBUG, overriding","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396102,"byte_end":14396174,"line_start":890,"line_end":890,"column_start":5,"column_end":77}},{"value":"/     // any directives parsed from the env variable.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396179,"byte_end":14396234,"line_start":891,"line_end":891,"column_start":5,"column_end":60}},{"value":"/     .add_directive(\"my_crate::my_mod=debug\".parse()?);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396239,"byte_end":14396297,"line_start":892,"line_end":892,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396302,"byte_end":14396305,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396310,"byte_end":14396319,"line_start":894,"line_end":894,"column_start":5,"column_end":14}},{"value":"/     .with_env_filter(filter)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396324,"byte_end":14396356,"line_start":895,"line_end":895,"column_start":5,"column_end":37}},{"value":"/     .try_init()?;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396361,"byte_end":14396382,"line_start":896,"line_end":896,"column_start":5,"column_end":26}},{"value":"/ # Ok(())}","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396387,"byte_end":14396400,"line_start":897,"line_end":897,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396405,"byte_end":14396412,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ [`EnvFilter`]: super::filter::EnvFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396417,"byte_end":14396460,"line_start":899,"line_end":899,"column_start":5,"column_end":48}},{"value":"/ [`with_max_level`]: SubscriberBuilder::with_max_level()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396465,"byte_end":14396524,"line_start":900,"line_end":900,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"env-filter\")","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396529,"byte_end":14396559,"line_start":901,"line_end":901,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397931,"byte_end":14397945,"line_start":946,"line_end":946,"column_start":12,"column_end":26},"name":"with_max_level","qualname":"<SubscriberBuilder<N, E, F, W>>::with_max_level","value":"fn with_max_level<impl Into<LevelFilter>>(Self, impl Into<LevelFilter>)\n-> SubscriberBuilder<N, E, LevelFilter, W> where\nimpl Into<LevelFilter>: Into<LevelFilter>","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum [verbosity level] that will be enabled by the\n subscriber.","sig":null,"attributes":[{"value":"/ Sets the maximum [verbosity level] that will be enabled by the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14396975,"byte_end":14397041,"line_start":917,"line_end":917,"column_start":5,"column_end":71}},{"value":"/ subscriber.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397046,"byte_end":14397061,"line_start":918,"line_end":918,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397066,"byte_end":14397069,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ If the max level has already been set, or a [`EnvFilter`] was added by","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397074,"byte_end":14397148,"line_start":920,"line_end":920,"column_start":5,"column_end":79}},{"value":"/ [`with_env_filter`], this replaces that configuration with the new","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397153,"byte_end":14397223,"line_start":921,"line_end":921,"column_start":5,"column_end":75}},{"value":"/ maximum level.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397228,"byte_end":14397246,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397251,"byte_end":14397254,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397259,"byte_end":14397273,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397278,"byte_end":14397281,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Enable up to the `DEBUG` verbosity level:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397286,"byte_end":14397331,"line_start":926,"line_end":926,"column_start":5,"column_end":50}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397336,"byte_end":14397347,"line_start":927,"line_end":927,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397352,"byte_end":14397384,"line_start":928,"line_end":928,"column_start":5,"column_end":37}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397389,"byte_end":14397412,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397417,"byte_end":14397420,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397425,"byte_end":14397434,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/     .with_max_level(Level::DEBUG)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397439,"byte_end":14397476,"line_start":932,"line_end":932,"column_start":5,"column_end":42}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397481,"byte_end":14397497,"line_start":933,"line_end":933,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397502,"byte_end":14397509,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ This subscriber won't record any spans or events!","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397514,"byte_end":14397567,"line_start":935,"line_end":935,"column_start":5,"column_end":58}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397572,"byte_end":14397583,"line_start":936,"line_end":936,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::{fmt, filter::LevelFilter};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397588,"byte_end":14397643,"line_start":937,"line_end":937,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397648,"byte_end":14397651,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let subscriber = fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397656,"byte_end":14397682,"line_start":939,"line_end":939,"column_start":5,"column_end":31}},{"value":"/     .with_max_level(LevelFilter::OFF)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397687,"byte_end":14397728,"line_start":940,"line_end":940,"column_start":5,"column_end":46}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397733,"byte_end":14397751,"line_start":941,"line_end":941,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397756,"byte_end":14397763,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ [verbosity level]: tracing_core::Level","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397768,"byte_end":14397810,"line_start":943,"line_end":943,"column_start":5,"column_end":47}},{"value":"/ [`EnvFilter`]: struct@crate::filter::EnvFilter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397815,"byte_end":14397865,"line_start":944,"line_end":944,"column_start":5,"column_end":55}},{"value":"/ [`with_env_filter`]: fn@Self::with_env_filter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14397870,"byte_end":14397919,"line_start":945,"line_end":945,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398897,"byte_end":14398909,"line_start":977,"line_end":977,"column_start":12,"column_end":24},"name":"event_format","qualname":"<SubscriberBuilder<N, E, F, W>>::event_format","value":"fn event_format<E2>(Self, E2) -> SubscriberBuilder<N, E2, F, W> where\nE2: FormatEvent<Registry, N> + 'static, N: for<'writer> FormatFields +\n'static, W: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [event formatter][`FormatEvent`] that the subscriber being built\n will use to format events that occur.","sig":null,"attributes":[{"value":"/ Sets the [event formatter][`FormatEvent`] that the subscriber being built","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398188,"byte_end":14398265,"line_start":957,"line_end":957,"column_start":5,"column_end":82}},{"value":"/ will use to format events that occur.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398270,"byte_end":14398311,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398316,"byte_end":14398319,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The event formatter may be any type implementing the [`FormatEvent`]","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398324,"byte_end":14398396,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/ trait, which is implemented for all functions taking a [`FmtContext`], a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398401,"byte_end":14398477,"line_start":961,"line_end":961,"column_start":5,"column_end":81}},{"value":"/ [`Writer`], and an [`Event`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398482,"byte_end":14398515,"line_start":962,"line_end":962,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398520,"byte_end":14398523,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398528,"byte_end":14398542,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398547,"byte_end":14398550,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Setting a type implementing [`FormatEvent`] as the formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398555,"byte_end":14398620,"line_start":966,"line_end":966,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398625,"byte_end":14398628,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398633,"byte_end":14398644,"line_start":968,"line_end":968,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt::format;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398649,"byte_end":14398689,"line_start":969,"line_end":969,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398694,"byte_end":14398697,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398702,"byte_end":14398748,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/     .event_format(format().compact())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398753,"byte_end":14398794,"line_start":972,"line_end":972,"column_start":5,"column_end":46}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398799,"byte_end":14398817,"line_start":973,"line_end":973,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398822,"byte_end":14398829,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398834,"byte_end":14398837,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ [`Writer`]: struct@self::format::Writer","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14398842,"byte_end":14398885,"line_start":976,"line_end":976,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399633,"byte_end":14399644,"line_start":1003,"line_end":1003,"column_start":12,"column_end":23},"name":"with_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::with_writer","value":"fn with_writer<W2>(Self, W2) -> SubscriberBuilder<N, E, F, W2> where\nW2: for<'writer> MakeWriter + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`MakeWriter`] that the subscriber being built will use to write events.","sig":null,"attributes":[{"value":"/ Sets the [`MakeWriter`] that the subscriber being built will use to write events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399282,"byte_end":14399367,"line_start":989,"line_end":989,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399372,"byte_end":14399375,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399380,"byte_end":14399394,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399399,"byte_end":14399402,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ Using `stderr` rather than `stdout`:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399407,"byte_end":14399447,"line_start":993,"line_end":993,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399452,"byte_end":14399455,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399460,"byte_end":14399471,"line_start":995,"line_end":995,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399476,"byte_end":14399508,"line_start":996,"line_end":996,"column_start":5,"column_end":37}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399513,"byte_end":14399529,"line_start":997,"line_end":997,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399534,"byte_end":14399537,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399542,"byte_end":14399551,"line_start":999,"line_end":999,"column_start":5,"column_end":14}},{"value":"/     .with_writer(io::stderr)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399556,"byte_end":14399588,"line_start":1000,"line_end":1000,"column_start":5,"column_end":37}},{"value":"/     .init();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399593,"byte_end":14399609,"line_start":1001,"line_end":1001,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399614,"byte_end":14399621,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400682,"byte_end":14400698,"line_start":1037,"line_end":1037,"column_start":12,"column_end":28},"name":"with_test_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::with_test_writer","value":"fn with_test_writer(Self) -> SubscriberBuilder<N, E, F, TestWriter>","parent":null,"children":[],"decl_id":null,"docs":" Configures the subscriber to support [`libtest`'s output capturing][capturing] when used in\n unit tests.","sig":null,"attributes":[{"value":"/ Configures the subscriber to support [`libtest`'s output capturing][capturing] when used in","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14399916,"byte_end":14400011,"line_start":1013,"line_end":1013,"column_start":5,"column_end":100}},{"value":"/ unit tests.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400016,"byte_end":14400031,"line_start":1014,"line_end":1014,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400036,"byte_end":14400039,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ See [`TestWriter`] for additional details.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400044,"byte_end":14400090,"line_start":1016,"line_end":1016,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400095,"byte_end":14400098,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400103,"byte_end":14400117,"line_start":1018,"line_end":1018,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400122,"byte_end":14400125,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Using [`TestWriter`] to let `cargo test` capture test output. Note that we do not install it","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400130,"byte_end":14400226,"line_start":1020,"line_end":1020,"column_start":5,"column_end":101}},{"value":"/ globally as it may cause conflicts.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400231,"byte_end":14400270,"line_start":1021,"line_end":1021,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400275,"byte_end":14400278,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400283,"byte_end":14400294,"line_start":1023,"line_end":1023,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::fmt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400299,"byte_end":14400331,"line_start":1024,"line_end":1024,"column_start":5,"column_end":37}},{"value":"/ use tracing::subscriber;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400336,"byte_end":14400364,"line_start":1025,"line_end":1025,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400369,"byte_end":14400372,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ subscriber::set_default(","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400377,"byte_end":14400405,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/     fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400410,"byte_end":14400423,"line_start":1028,"line_end":1028,"column_start":5,"column_end":18}},{"value":"/         .with_test_writer()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400428,"byte_end":14400459,"line_start":1029,"line_end":1029,"column_start":5,"column_end":36}},{"value":"/         .finish()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400464,"byte_end":14400485,"line_start":1030,"line_end":1030,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400490,"byte_end":14400496,"line_start":1031,"line_end":1031,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400501,"byte_end":14400508,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400513,"byte_end":14400516,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ [capturing]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400521,"byte_end":14400537,"line_start":1034,"line_end":1034,"column_start":5,"column_end":21}},{"value":"/ https://doc.rust-lang.org/book/ch11-02-running-tests.html#showing-function-output","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400542,"byte_end":14400627,"line_start":1035,"line_end":1035,"column_start":5,"column_end":90}},{"value":"/ [`TestWriter`]: writer::TestWriter","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400632,"byte_end":14400670,"line_start":1036,"line_end":1036,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401330,"byte_end":14401346,"line_start":1057,"line_end":1057,"column_start":12,"column_end":28},"name":"map_event_format","qualname":"<SubscriberBuilder<N, E, F, W>>::map_event_format","value":"fn map_event_format<E2, impl FnOnce(E) -> E2>(Self, impl FnOnce(E) -> E2)\n-> SubscriberBuilder<N, E2, F, W> where E2: FormatEvent<Registry, N> +\n'static, N: for<'writer> FormatFields + 'static, W: for<'writer> MakeWriter +\n'static, impl FnOnce(E) -> E2: FnOnce(E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Updates the event formatter by applying a function to the existing event formatter.","sig":null,"attributes":[{"value":"/ Updates the event formatter by applying a function to the existing event formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400897,"byte_end":14400984,"line_start":1044,"line_end":1044,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400989,"byte_end":14400992,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ This sets the event formatter that the subscriber being built will use to record fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14400997,"byte_end":14401089,"line_start":1046,"line_end":1046,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401094,"byte_end":14401097,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401102,"byte_end":14401116,"line_start":1048,"line_end":1048,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401121,"byte_end":14401124,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ Updating an event formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401129,"byte_end":14401161,"line_start":1050,"line_end":1050,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401166,"byte_end":14401169,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401174,"byte_end":14401185,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401190,"byte_end":14401236,"line_start":1053,"line_end":1053,"column_start":5,"column_end":51}},{"value":"/     .map_event_format(|e| e.compact())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401241,"byte_end":14401283,"line_start":1054,"line_end":1054,"column_start":5,"column_end":47}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401288,"byte_end":14401306,"line_start":1055,"line_end":1055,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401311,"byte_end":14401318,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402205,"byte_end":14402219,"line_start":1083,"line_end":1083,"column_start":12,"column_end":26},"name":"map_fmt_fields","qualname":"<SubscriberBuilder<N, E, F, W>>::map_fmt_fields","value":"fn map_fmt_fields<N2, impl FnOnce(N) -> N2>(Self, impl FnOnce(N) -> N2)\n-> SubscriberBuilder<N2, E, F, W> where N2: for<'writer> FormatFields +\n'static, impl FnOnce(N) -> N2: FnOnce(N) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Updates the field formatter by applying a function to the existing field formatter.","sig":null,"attributes":[{"value":"/ Updates the field formatter by applying a function to the existing field formatter.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401725,"byte_end":14401812,"line_start":1069,"line_end":1069,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401817,"byte_end":14401820,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ This sets the field formatter that the subscriber being built will use to record fields.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401825,"byte_end":14401917,"line_start":1071,"line_end":1071,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401922,"byte_end":14401925,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401930,"byte_end":14401944,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401949,"byte_end":14401952,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Updating a field formatter:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401957,"byte_end":14401988,"line_start":1075,"line_end":1075,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14401993,"byte_end":14401996,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402001,"byte_end":14402012,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}},{"value":"/ use tracing_subscriber::field::MakeExt;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402017,"byte_end":14402060,"line_start":1078,"line_end":1078,"column_start":5,"column_end":48}},{"value":"/ let subscriber = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402065,"byte_end":14402111,"line_start":1079,"line_end":1079,"column_start":5,"column_end":51}},{"value":"/     .map_fmt_fields(|f| f.debug_alt())","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402116,"byte_end":14402158,"line_start":1080,"line_end":1080,"column_start":5,"column_end":47}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402163,"byte_end":14402181,"line_start":1081,"line_end":1081,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402186,"byte_end":14402193,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403111,"byte_end":14403121,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"map_writer","qualname":"<SubscriberBuilder<N, E, F, W>>::map_writer","value":"fn map_writer<W2, impl FnOnce(W) -> W2>(Self, impl FnOnce(W) -> W2)\n-> SubscriberBuilder<N, E, F, W2> where W2: for<'writer> MakeWriter + 'static,\nimpl FnOnce(W) -> W2: FnOnce(W) -> W2","parent":null,"children":[],"decl_id":null,"docs":" Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","sig":null,"attributes":[{"value":"/ Updates the [`MakeWriter`] by applying a function to the existing [`MakeWriter`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402494,"byte_end":14402579,"line_start":1093,"line_end":1093,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402584,"byte_end":14402587,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ This sets the [`MakeWriter`] that the subscriber being built will use to write events.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402592,"byte_end":14402682,"line_start":1095,"line_end":1095,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402687,"byte_end":14402690,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402695,"byte_end":14402709,"line_start":1097,"line_end":1097,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402714,"byte_end":14402717,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Redirect output to stderr if level is <= WARN:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402722,"byte_end":14402772,"line_start":1099,"line_end":1099,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402777,"byte_end":14402780,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402785,"byte_end":14402796,"line_start":1101,"line_end":1101,"column_start":5,"column_end":16}},{"value":"/ use tracing::Level;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402801,"byte_end":14402824,"line_start":1102,"line_end":1102,"column_start":5,"column_end":28}},{"value":"/ use tracing_subscriber::fmt::{self, writer::MakeWriterExt};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402829,"byte_end":14402892,"line_start":1103,"line_end":1103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402897,"byte_end":14402900,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ let stderr = std::io::stderr.with_max_level(Level::WARN);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402905,"byte_end":14402966,"line_start":1105,"line_end":1105,"column_start":5,"column_end":66}},{"value":"/ let layer = tracing_subscriber::fmt()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14402971,"byte_end":14403012,"line_start":1106,"line_end":1106,"column_start":5,"column_end":46}},{"value":"/     .map_writer(move |w| stderr.or_else(w))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403017,"byte_end":14403064,"line_start":1107,"line_end":1107,"column_start":5,"column_end":52}},{"value":"/     .finish();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403069,"byte_end":14403087,"line_start":1108,"line_end":1108,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403092,"byte_end":14403099,"line_start":1109,"line_end":1109,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404255,"byte_end":14404263,"line_start":1146,"line_end":1146,"column_start":8,"column_end":16},"name":"try_init","qualname":"::fmt::try_init","value":"fn try_init() -> Result<(), Box<dyn Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Install a global tracing subscriber that listens for events and\n filters based on the value of the [`RUST_LOG` environment variable],\n if one is not already set.","sig":null,"attributes":[{"value":"/ Install a global tracing subscriber that listens for events and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403388,"byte_end":14403455,"line_start":1121,"line_end":1121,"column_start":1,"column_end":68}},{"value":"/ filters based on the value of the [`RUST_LOG` environment variable],","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403456,"byte_end":14403528,"line_start":1122,"line_end":1122,"column_start":1,"column_end":73}},{"value":"/ if one is not already set.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403529,"byte_end":14403559,"line_start":1123,"line_end":1123,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403560,"byte_end":14403563,"line_start":1124,"line_end":1124,"column_start":1,"column_end":4}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403564,"byte_end":14403631,"line_start":1125,"line_end":1125,"column_start":1,"column_end":68}},{"value":"/ the [`LogTracer`] to convert `log` records into `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403632,"byte_end":14403703,"line_start":1126,"line_end":1126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403704,"byte_end":14403707,"line_start":1127,"line_end":1127,"column_start":1,"column_end":4}},{"value":"/ This is shorthand for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403708,"byte_end":14403733,"line_start":1128,"line_end":1128,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403734,"byte_end":14403737,"line_start":1129,"line_end":1129,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403738,"byte_end":14403749,"line_start":1130,"line_end":1130,"column_start":1,"column_end":12}},{"value":"/ # fn doc() -> Result<(), Box<dyn std::error::Error + Send + Sync + 'static>> {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403750,"byte_end":14403832,"line_start":1131,"line_end":1131,"column_start":1,"column_end":83}},{"value":"/ tracing_subscriber::fmt().try_init()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403833,"byte_end":14403873,"line_start":1132,"line_end":1132,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403874,"byte_end":14403881,"line_start":1133,"line_end":1133,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403882,"byte_end":14403889,"line_start":1134,"line_end":1134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403890,"byte_end":14403893,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403894,"byte_end":14403897,"line_start":1136,"line_end":1136,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403898,"byte_end":14403910,"line_start":1137,"line_end":1137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403911,"byte_end":14403914,"line_start":1138,"line_end":1138,"column_start":1,"column_end":4}},{"value":"/ Returns an Error if the initialization was unsuccessful,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403915,"byte_end":14403975,"line_start":1139,"line_end":1139,"column_start":1,"column_end":61}},{"value":"/ likely because a global subscriber was already installed by another","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14403976,"byte_end":14404047,"line_start":1140,"line_end":1140,"column_start":1,"column_end":72}},{"value":"/ call to `try_init`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404048,"byte_end":14404071,"line_start":1141,"line_end":1141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404072,"byte_end":14404075,"line_start":1142,"line_end":1142,"column_start":1,"column_end":4}},{"value":"/ [`LogTracer`]:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404076,"byte_end":14404094,"line_start":1143,"line_end":1143,"column_start":1,"column_end":19}},{"value":"/     https://docs.rs/tracing-log/0.1.0/tracing_log/struct.LogTracer.html","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404095,"byte_end":14404170,"line_start":1144,"line_end":1144,"column_start":1,"column_end":76}},{"value":"/ [`RUST_LOG` environment variable]: crate::filter::EnvFilter::DEFAULT_ENV","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14404171,"byte_end":14404247,"line_start":1145,"line_end":1145,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406419,"byte_end":14406423,"line_start":1202,"line_end":1202,"column_start":8,"column_end":12},"name":"init","qualname":"::fmt::init","value":"fn init()","parent":null,"children":[],"decl_id":null,"docs":" Install a global tracing subscriber that listens for events and\n filters based on the value of the [`RUST_LOG` environment variable].","sig":null,"attributes":[{"value":"/ Install a global tracing subscriber that listens for events and","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14405799,"byte_end":14405866,"line_start":1185,"line_end":1185,"column_start":1,"column_end":68}},{"value":"/ filters based on the value of the [`RUST_LOG` environment variable].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14405867,"byte_end":14405939,"line_start":1186,"line_end":1186,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14405940,"byte_end":14405943,"line_start":1187,"line_end":1187,"column_start":1,"column_end":4}},{"value":"/ If the `tracing-log` feature is enabled, this will also install","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14405944,"byte_end":14406011,"line_start":1188,"line_end":1188,"column_start":1,"column_end":68}},{"value":"/ the LogTracer to convert `Log` records into `tracing` `Event`s.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406012,"byte_end":14406079,"line_start":1189,"line_end":1189,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406080,"byte_end":14406083,"line_start":1190,"line_end":1190,"column_start":1,"column_end":4}},{"value":"/ This is shorthand for","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406084,"byte_end":14406109,"line_start":1191,"line_end":1191,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406110,"byte_end":14406113,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406114,"byte_end":14406125,"line_start":1193,"line_end":1193,"column_start":1,"column_end":12}},{"value":"/ tracing_subscriber::fmt().init()","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406126,"byte_end":14406162,"line_start":1194,"line_end":1194,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406163,"byte_end":14406170,"line_start":1195,"line_end":1195,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406171,"byte_end":14406174,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406175,"byte_end":14406187,"line_start":1197,"line_end":1197,"column_start":1,"column_end":13}},{"value":"/ Panics if the initialization was unsuccessful, likely because a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406188,"byte_end":14406255,"line_start":1198,"line_end":1198,"column_start":1,"column_end":68}},{"value":"/ global subscriber was already installed by another call to `try_init`.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406256,"byte_end":14406330,"line_start":1199,"line_end":1199,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406331,"byte_end":14406334,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ [`RUST_LOG` environment variable]: crate::filter::EnvFilter::DEFAULT_ENV","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14406335,"byte_end":14406411,"line_start":1201,"line_end":1201,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9322,"byte_end":9330,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"registry","qualname":"::registry","value":"fn registry() -> Registry","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"registry\", feature = \"std\"))","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\macros.rs","byte_start":9874,"byte_end":9887,"line_start":23,"line_end":23,"column_start":13,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9411,"byte_end":9417,"line_start":251,"line_end":251,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed<A = ()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21338,"byte_end":21341,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21569,"byte_end":21572,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21783,"byte_end":21786,"line_start":37,"line_end":37,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22834,"byte_end":22837,"line_start":77,"line_end":77,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23053,"byte_end":23056,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23238,"byte_end":23241,"line_start":103,"line_end":103,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24078,"byte_end":24087,"line_start":27,"line_end":27,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24417,"byte_end":24426,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24783,"byte_end":24797,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25495,"byte_end":25509,"line_start":83,"line_end":83,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26292,"byte_end":26306,"line_start":114,"line_end":114,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26474,"byte_end":26488,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28487,"byte_end":28495,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28807,"byte_end":28815,"line_start":27,"line_end":27,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29036,"byte_end":29044,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30205,"byte_end":30213,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30429,"byte_end":30437,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30619,"byte_end":30627,"line_start":109,"line_end":109,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15264,"byte_end":15269,"line_start":161,"line_end":161,"column_start":56,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15303,"byte_end":15308,"line_start":162,"line_end":162,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15464,"byte_end":15474,"line_start":168,"line_end":168,"column_start":56,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15508,"byte_end":15518,"line_start":169,"line_end":169,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15679,"byte_end":15685,"line_start":175,"line_end":175,"column_start":56,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15719,"byte_end":15725,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16130,"byte_end":16131,"line_start":194,"line_end":194,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16336,"byte_end":16337,"line_start":205,"line_end":205,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16445,"byte_end":16446,"line_start":212,"line_end":212,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16570,"byte_end":16571,"line_start":219,"line_end":219,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16634,"byte_end":16635,"line_start":221,"line_end":221,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38626,"byte_end":38634,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43490,"byte_end":43498,"line_start":324,"line_end":324,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43935,"byte_end":43943,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44082,"byte_end":44090,"line_start":351,"line_end":351,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44392,"byte_end":44403,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46837,"byte_end":46848,"line_start":434,"line_end":434,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":53137,"byte_end":53148,"line_start":600,"line_end":600,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":54629,"byte_end":54640,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55176,"byte_end":55187,"line_start":662,"line_end":662,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55751,"byte_end":55762,"line_start":679,"line_end":679,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56079,"byte_end":56090,"line_start":694,"line_end":694,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56358,"byte_end":56366,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56838,"byte_end":56849,"line_start":726,"line_end":726,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159472,"byte_end":14159479,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":912},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14171168,"byte_end":14171175,"line_start":316,"line_end":316,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14172493,"byte_end":14172502,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14178301,"byte_end":14178310,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179379,"byte_end":14179388,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179538,"byte_end":14179547,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179758,"byte_end":14179767,"line_start":265,"line_end":265,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179889,"byte_end":14179898,"line_start":271,"line_end":271,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14182053,"byte_end":14182062,"line_start":323,"line_end":323,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183009,"byte_end":14183018,"line_start":359,"line_end":359,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183167,"byte_end":14183176,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183301,"byte_end":14183309,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14184521,"byte_end":14184536,"line_start":417,"line_end":417,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14185069,"byte_end":14185080,"line_start":436,"line_end":436,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202093,"byte_end":14202103,"line_start":58,"line_end":58,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202127,"byte_end":14202137,"line_start":60,"line_end":60,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202653,"byte_end":14202663,"line_start":80,"line_end":80,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14203934,"byte_end":14203944,"line_start":116,"line_end":116,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14204849,"byte_end":14204854,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14205702,"byte_end":14205707,"line_start":180,"line_end":180,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14205947,"byte_end":14205952,"line_start":190,"line_end":190,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14207017,"byte_end":14207022,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14207295,"byte_end":14207305,"line_start":230,"line_end":230,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14208726,"byte_end":14208736,"line_start":265,"line_end":265,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209387,"byte_end":14209399,"line_start":281,"line_end":281,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209656,"byte_end":14209668,"line_start":292,"line_end":292,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209822,"byte_end":14209834,"line_start":299,"line_end":299,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209926,"byte_end":14209938,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210320,"byte_end":14210332,"line_start":324,"line_end":324,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210449,"byte_end":14210461,"line_start":331,"line_end":331,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210486,"byte_end":14210498,"line_start":333,"line_end":333,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210646,"byte_end":14210658,"line_start":340,"line_end":340,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210804,"byte_end":14210814,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14211684,"byte_end":14211691,"line_start":371,"line_end":371,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213132,"byte_end":14213142,"line_start":406,"line_end":406,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213296,"byte_end":14213306,"line_start":413,"line_end":413,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213412,"byte_end":14213422,"line_start":420,"line_end":420,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213539,"byte_end":14213549,"line_start":427,"line_end":427,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213574,"byte_end":14213584,"line_start":429,"line_end":429,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213732,"byte_end":14213742,"line_start":436,"line_end":436,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213895,"byte_end":14213902,"line_start":445,"line_end":445,"column_start":16,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213929,"byte_end":14213936,"line_start":447,"line_end":447,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14214072,"byte_end":14214085,"line_start":453,"line_end":453,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14214452,"byte_end":14214461,"line_start":468,"line_end":468,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14215234,"byte_end":14215246,"line_start":503,"line_end":503,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133251,"byte_end":14133260,"line_start":223,"line_end":223,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149287,"byte_end":14149296,"line_start":642,"line_end":642,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150474,"byte_end":14150483,"line_start":688,"line_end":688,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151673,"byte_end":14151682,"line_start":731,"line_end":731,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151838,"byte_end":14151847,"line_start":739,"line_end":739,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151950,"byte_end":14151959,"line_start":748,"line_end":748,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152083,"byte_end":14152092,"line_start":754,"line_end":754,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152895,"byte_end":14152907,"line_start":783,"line_end":783,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153060,"byte_end":14153072,"line_start":791,"line_end":791,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153208,"byte_end":14153220,"line_start":799,"line_end":799,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153442,"byte_end":14153454,"line_start":808,"line_end":808,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261760,"byte_end":14261763,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14263528,"byte_end":14263531,"line_start":110,"line_end":110,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265148,"byte_end":14265151,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265381,"byte_end":14265384,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265664,"byte_end":14265666,"line_start":200,"line_end":200,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14268716,"byte_end":14268718,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270831,"byte_end":14270833,"line_start":358,"line_end":358,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271063,"byte_end":14271065,"line_start":372,"line_end":372,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271342,"byte_end":14271345,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271749,"byte_end":14271752,"line_start":402,"line_end":402,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272965,"byte_end":14272968,"line_start":450,"line_end":450,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14273147,"byte_end":14273150,"line_start":462,"line_end":462,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233477,"byte_end":14233488,"line_start":390,"line_end":390,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234493,"byte_end":14234496,"line_start":429,"line_end":429,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234683,"byte_end":14234686,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234803,"byte_end":14234811,"line_start":441,"line_end":441,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238541,"byte_end":14238549,"line_start":547,"line_end":547,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14244801,"byte_end":14244809,"line_start":695,"line_end":695,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14245144,"byte_end":14245152,"line_start":711,"line_end":711,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14249345,"byte_end":14249353,"line_start":819,"line_end":819,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250053,"byte_end":14250061,"line_start":840,"line_end":840,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250297,"byte_end":14250298,"line_start":850,"line_end":850,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250361,"byte_end":14250370,"line_start":854,"line_end":854,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250973,"byte_end":14250982,"line_start":882,"line_end":882,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14251349,"byte_end":14251358,"line_start":896,"line_end":896,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14251586,"byte_end":14251597,"line_start":906,"line_end":906,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14258552,"byte_end":14258574,"line_start":1085,"line_end":1085,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14259892,"byte_end":14259901,"line_start":1124,"line_end":1124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":57859,"byte_end":57870,"line_start":11,"line_end":11,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279633,"byte_end":14279640,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285727,"byte_end":14285734,"line_start":347,"line_end":347,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286092,"byte_end":14286099,"line_start":360,"line_end":360,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286329,"byte_end":14286336,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286584,"byte_end":14286591,"line_start":382,"line_end":382,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287071,"byte_end":14287078,"line_start":401,"line_end":401,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287445,"byte_end":14287452,"line_start":415,"line_end":415,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288739,"byte_end":14288747,"line_start":465,"line_end":465,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288988,"byte_end":14288996,"line_start":474,"line_end":474,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289703,"byte_end":14289707,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289986,"byte_end":14289990,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14297821,"byte_end":14297833,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14298079,"byte_end":14298091,"line_start":62,"line_end":62,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14298262,"byte_end":14298274,"line_start":71,"line_end":71,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299517,"byte_end":14299529,"line_start":106,"line_end":106,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299722,"byte_end":14299734,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299924,"byte_end":14299936,"line_start":122,"line_end":122,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14300238,"byte_end":14300250,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14301074,"byte_end":14301089,"line_start":165,"line_end":165,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14301787,"byte_end":14301802,"line_start":195,"line_end":195,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14303584,"byte_end":14303599,"line_start":239,"line_end":239,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14303718,"byte_end":14303733,"line_start":245,"line_end":245,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14304434,"byte_end":14304449,"line_start":272,"line_end":272,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14304648,"byte_end":14304663,"line_start":282,"line_end":282,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14305473,"byte_end":14305488,"line_start":314,"line_end":314,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14308240,"byte_end":14308250,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14308568,"byte_end":14308578,"line_start":414,"line_end":414,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309090,"byte_end":14309100,"line_start":427,"line_end":427,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309536,"byte_end":14309546,"line_start":442,"line_end":442,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309727,"byte_end":14309737,"line_start":450,"line_end":450,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310507,"byte_end":14310515,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310973,"byte_end":14310983,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311502,"byte_end":14311515,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313640,"byte_end":14313655,"line_start":121,"line_end":121,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14315972,"byte_end":14315987,"line_start":190,"line_end":190,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14324210,"byte_end":14324218,"line_start":135,"line_end":135,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14325800,"byte_end":14325808,"line_start":182,"line_end":182,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14326909,"byte_end":14326917,"line_start":220,"line_end":220,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331989,"byte_end":14331997,"line_start":362,"line_end":362,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332350,"byte_end":14332360,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332469,"byte_end":14332479,"line_start":385,"line_end":385,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333542,"byte_end":14333546,"line_start":412,"line_end":412,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334240,"byte_end":14334249,"line_start":441,"line_end":441,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334668,"byte_end":14334680,"line_start":448,"line_end":448,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14335981,"byte_end":14335990,"line_start":486,"line_end":486,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\stack.rs","byte_start":14350805,"byte_end":14350814,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":67249,"byte_end":67254,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68340,"byte_end":68353,"line_start":280,"line_end":280,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68708,"byte_end":68721,"line_start":297,"line_end":297,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68925,"byte_end":68930,"line_start":307,"line_end":307,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69802,"byte_end":69809,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":150682,"byte_end":150689,"line_start":51,"line_end":51,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165293,"byte_end":165300,"line_start":412,"line_end":412,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165511,"byte_end":165518,"line_start":423,"line_end":423,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":167849,"byte_end":167856,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168487,"byte_end":168494,"line_start":94,"line_end":94,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":173751,"byte_end":173758,"line_start":242,"line_end":242,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":178884,"byte_end":178891,"line_start":377,"line_end":377,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179234,"byte_end":179241,"line_start":393,"line_end":393,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179370,"byte_end":179377,"line_start":402,"line_end":402,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":182651,"byte_end":182658,"line_start":494,"line_end":494,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138520,"byte_end":138526,"line_start":1455,"line_end":1455,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144176,"byte_end":144179,"line_start":1649,"line_end":1649,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144303,"byte_end":144306,"line_start":1657,"line_end":1657,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144439,"byte_end":144442,"line_start":1666,"line_end":1666,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148735,"byte_end":148736,"line_start":1786,"line_end":1786,"column_start":47,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148778,"byte_end":148779,"line_start":1787,"line_end":1787,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148843,"byte_end":148851,"line_start":1791,"line_end":1791,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148861,"byte_end":148869,"line_start":1793,"line_end":1793,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187931,"byte_end":187932,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188273,"byte_end":188285,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188547,"byte_end":188559,"line_start":120,"line_end":120,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188854,"byte_end":188866,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":189203,"byte_end":189215,"line_start":149,"line_end":149,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356010,"byte_end":14356015,"line_start":113,"line_end":113,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358449,"byte_end":14358454,"line_start":187,"line_end":187,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359880,"byte_end":14359885,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360744,"byte_end":14360750,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362911,"byte_end":14362917,"line_start":319,"line_end":319,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363092,"byte_end":14363097,"line_start":330,"line_end":330,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363659,"byte_end":14363664,"line_start":350,"line_end":350,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363951,"byte_end":14363956,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412227,"byte_end":14412232,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412494,"byte_end":14412499,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415046,"byte_end":14415051,"line_start":157,"line_end":157,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420304,"byte_end":14420309,"line_start":315,"line_end":315,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14429973,"byte_end":14429978,"line_start":577,"line_end":577,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431556,"byte_end":14431561,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431925,"byte_end":14431930,"line_start":638,"line_end":638,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433033,"byte_end":14433048,"line_start":672,"line_end":672,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433622,"byte_end":14433637,"line_start":691,"line_end":691,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433983,"byte_end":14433998,"line_start":701,"line_end":701,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434145,"byte_end":14434160,"line_start":707,"line_end":707,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434869,"byte_end":14434874,"line_start":732,"line_end":732,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14441889,"byte_end":14441899,"line_start":927,"line_end":927,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442081,"byte_end":14442091,"line_start":933,"line_end":933,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442420,"byte_end":14442430,"line_start":947,"line_end":947,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448751,"byte_end":14448758,"line_start":1118,"line_end":1118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548316,"byte_end":14548322,"line_start":135,"line_end":135,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548427,"byte_end":14548433,"line_start":143,"line_end":143,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14549285,"byte_end":14549291,"line_start":169,"line_end":169,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14554470,"byte_end":14554476,"line_start":337,"line_end":337,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3206},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555076,"byte_end":14555088,"line_start":359,"line_end":359,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555152,"byte_end":14555164,"line_start":365,"line_end":365,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555836,"byte_end":14555848,"line_start":387,"line_end":387,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556159,"byte_end":14556172,"line_start":401,"line_end":401,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14557190,"byte_end":14557203,"line_start":440,"line_end":440,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559152,"byte_end":14559165,"line_start":500,"line_end":500,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559326,"byte_end":14559339,"line_start":507,"line_end":507,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482045,"byte_end":14482051,"line_start":414,"line_end":414,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486667,"byte_end":14486673,"line_start":547,"line_end":547,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487054,"byte_end":14487060,"line_start":564,"line_end":564,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487349,"byte_end":14487355,"line_start":575,"line_end":575,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487790,"byte_end":14487796,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14497644,"byte_end":14497650,"line_start":884,"line_end":884,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3311}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14501523,"byte_end":14501529,"line_start":1012,"line_end":1012,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505556,"byte_end":14505557,"line_start":1141,"line_end":1141,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506403,"byte_end":14506416,"line_start":1173,"line_end":1173,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506573,"byte_end":14506586,"line_start":1181,"line_end":1181,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506682,"byte_end":14506695,"line_start":1187,"line_end":1187,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506910,"byte_end":14506924,"line_start":1198,"line_end":1198,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507553,"byte_end":14507567,"line_start":1222,"line_end":1222,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509538,"byte_end":14509552,"line_start":1283,"line_end":1283,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509661,"byte_end":14509675,"line_start":1289,"line_end":1289,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509922,"byte_end":14509937,"line_start":1298,"line_end":1298,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14510419,"byte_end":14510425,"line_start":1317,"line_end":1317,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14511148,"byte_end":14511154,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3377}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14512297,"byte_end":14512310,"line_start":1406,"line_end":1406,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14512421,"byte_end":14512434,"line_start":1412,"line_end":1412,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14513858,"byte_end":14513866,"line_start":1451,"line_end":1451,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14514738,"byte_end":14514746,"line_start":1483,"line_end":1483,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14515678,"byte_end":14515685,"line_start":1507,"line_end":1507,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3424}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516027,"byte_end":14516041,"line_start":1522,"line_end":1522,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516357,"byte_end":14516371,"line_start":1533,"line_end":1533,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516546,"byte_end":14516560,"line_start":1542,"line_end":1542,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516755,"byte_end":14516769,"line_start":1551,"line_end":1551,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517354,"byte_end":14517361,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14519150,"byte_end":14519157,"line_start":1623,"line_end":1623,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520066,"byte_end":14520079,"line_start":1657,"line_end":1657,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520765,"byte_end":14520778,"line_start":1684,"line_end":1684,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520895,"byte_end":14520908,"line_start":1690,"line_end":1690,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14521101,"byte_end":14521114,"line_start":1700,"line_end":1700,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\datetime.rs","byte_start":14571174,"byte_end":14571182,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\datetime.rs","byte_start":14571760,"byte_end":14571768,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562685,"byte_end":14562691,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562815,"byte_end":14562821,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562916,"byte_end":14562926,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14563147,"byte_end":14563153,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601967,"byte_end":14601968,"line_start":673,"line_end":673,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602139,"byte_end":14602142,"line_start":685,"line_end":685,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602314,"byte_end":14602318,"line_start":695,"line_end":695,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602460,"byte_end":14602470,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3581}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602619,"byte_end":14602629,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602899,"byte_end":14602909,"line_start":723,"line_end":723,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603053,"byte_end":14603066,"line_start":733,"line_end":733,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603425,"byte_end":14603438,"line_start":747,"line_end":747,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603655,"byte_end":14603668,"line_start":755,"line_end":755,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604000,"byte_end":14604005,"line_start":771,"line_end":771,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604410,"byte_end":14604415,"line_start":790,"line_end":790,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604638,"byte_end":14604654,"line_start":801,"line_end":801,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605318,"byte_end":14605330,"line_start":833,"line_end":833,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606484,"byte_end":14606498,"line_start":879,"line_end":879,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607041,"byte_end":14607055,"line_start":901,"line_end":901,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607272,"byte_end":14607284,"line_start":913,"line_end":913,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607752,"byte_end":14607764,"line_start":926,"line_end":926,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608265,"byte_end":14608277,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608745,"byte_end":14608757,"line_start":959,"line_end":959,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609260,"byte_end":14609270,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609829,"byte_end":14609839,"line_start":996,"line_end":996,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610367,"byte_end":14610370,"line_start":1020,"line_end":1020,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610758,"byte_end":14610761,"line_start":1033,"line_end":1033,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611422,"byte_end":14611425,"line_start":1061,"line_end":1061,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612271,"byte_end":14612277,"line_start":1099,"line_end":1099,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612549,"byte_end":14612555,"line_start":1111,"line_end":1111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613325,"byte_end":14613334,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14614934,"byte_end":14614935,"line_start":1202,"line_end":1202,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377507,"byte_end":14377517,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378228,"byte_end":14378238,"line_start":358,"line_end":358,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378397,"byte_end":14378407,"line_start":366,"line_end":366,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380545,"byte_end":14380555,"line_start":450,"line_end":450,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380881,"byte_end":14380898,"line_start":463,"line_end":463,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381082,"byte_end":14381099,"line_start":472,"line_end":472,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382895,"byte_end":14382903,"line_start":519,"line_end":519,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383376,"byte_end":14383393,"line_start":532,"line_end":532,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14392568,"byte_end":14392585,"line_start":791,"line_end":791,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393186,"byte_end":14393203,"line_start":811,"line_end":811,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393592,"byte_end":14393609,"line_start":822,"line_end":822,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3864},{"krate":0,"index":3867},{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3884},{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8770,"byte_end":8775,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10272,"byte_end":10277,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10287,"byte_end":10296,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":10306,"byte_end":10313,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":125}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8785,"byte_end":8791,"line_start":213,"line_end":213,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":235}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14220799,"byte_end":14220809,"line_start":49,"line_end":49,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1550}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\mod.rs","byte_start":31735,"byte_end":31742,"line_start":35,"line_end":35,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1848}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8801,"byte_end":8808,"line_start":214,"line_end":214,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":378}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8818,"byte_end":8826,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":396}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8837,"byte_end":8842,"line_start":217,"line_end":217,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":440}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8852,"byte_end":8856,"line_start":218,"line_end":218,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":725}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":8906,"byte_end":8912,"line_start":222,"line_end":222,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":2630}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\lib.rs","byte_start":9011,"byte_end":9014,"line_start":228,"line_end":228,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2782}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373292,"byte_end":14373298,"line_start":197,"line_end":197,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3058}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373377,"byte_end":14373381,"line_start":199,"line_end":199,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3474}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14373460,"byte_end":14373466,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3518}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21338,"byte_end":21341,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21569,"byte_end":21572,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":21783,"byte_end":21786,"line_start":37,"line_end":37,"column_start":19,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":765},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":22834,"byte_end":22837,"line_start":77,"line_end":77,"column_start":31,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23053,"byte_end":23056,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":830}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\debug.rs","byte_start":23238,"byte_end":23241,"line_start":103,"line_end":103,"column_start":22,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24078,"byte_end":24087,"line_start":27,"line_end":27,"column_start":34,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":784},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24417,"byte_end":24426,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":24783,"byte_end":24797,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":25495,"byte_end":25509,"line_start":83,"line_end":83,"column_start":22,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":797},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26292,"byte_end":26306,"line_start":114,"line_end":114,"column_start":41,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":797},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\delimited.rs","byte_start":26474,"byte_end":26488,"line_start":125,"line_end":125,"column_start":25,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":797},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28487,"byte_end":28495,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":28807,"byte_end":28815,"line_start":27,"line_end":27,"column_start":31,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":29036,"byte_end":29044,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":808},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30205,"byte_end":30213,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30429,"byte_end":30437,"line_start":98,"line_end":98,"column_start":28,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":830}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\display.rs","byte_start":30619,"byte_end":30627,"line_start":109,"line_end":109,"column_start":22,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":808},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":11301,"byte_end":11306,"line_start":37,"line_end":37,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":16,"index":387},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":12933,"byte_end":12939,"line_start":89,"line_end":89,"column_start":40,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":763},"to":{"krate":0,"index":178}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":13812,"byte_end":13823,"line_start":117,"line_end":117,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":830}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":14127,"byte_end":14138,"line_start":125,"line_end":125,"column_start":21,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15264,"byte_end":15269,"line_start":161,"line_end":161,"column_start":56,"column_end":61},"kind":{"Impl":{"id":18}},"from":{"krate":16,"index":976},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15303,"byte_end":15308,"line_start":162,"line_end":162,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":16,"index":976},"to":{"krate":0,"index":178}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15464,"byte_end":15474,"line_start":168,"line_end":168,"column_start":56,"column_end":66},"kind":{"Impl":{"id":20}},"from":{"krate":16,"index":1351},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15508,"byte_end":15518,"line_start":169,"line_end":169,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":16,"index":1351},"to":{"krate":0,"index":178}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15679,"byte_end":15685,"line_start":175,"line_end":175,"column_start":56,"column_end":62},"kind":{"Impl":{"id":22}},"from":{"krate":16,"index":1359},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":15719,"byte_end":15725,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":16,"index":1359},"to":{"krate":0,"index":178}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16130,"byte_end":16131,"line_start":194,"line_end":194,"column_start":34,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":218},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16336,"byte_end":16337,"line_start":205,"line_end":205,"column_start":53,"column_end":54},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":224},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16445,"byte_end":16446,"line_start":212,"line_end":212,"column_start":40,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":180}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16570,"byte_end":16571,"line_start":219,"line_end":219,"column_start":56,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\field\\mod.rs","byte_start":16634,"byte_end":16635,"line_start":221,"line_end":221,"column_start":27,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":187}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":38626,"byte_end":38634,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43490,"byte_end":43498,"line_start":324,"line_end":324,"column_start":25,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":842},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":43935,"byte_end":43943,"line_start":342,"line_end":342,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44082,"byte_end":44090,"line_start":351,"line_end":351,"column_start":24,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":44392,"byte_end":44403,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":46837,"byte_end":46848,"line_start":434,"line_end":434,"column_start":15,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":53137,"byte_end":53148,"line_start":600,"line_end":600,"column_start":15,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":54629,"byte_end":54640,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":268},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55176,"byte_end":55187,"line_start":662,"line_end":662,"column_start":30,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":55751,"byte_end":55762,"line_start":679,"line_end":679,"column_start":25,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56079,"byte_end":56090,"line_start":694,"line_end":694,"column_start":24,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56358,"byte_end":56366,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":842},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\filter_fn.rs","byte_start":56838,"byte_end":56849,"line_start":726,"line_end":726,"column_start":33,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":268},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14159472,"byte_end":14159479,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\builder.rs","byte_start":14171168,"byte_end":14171175,"line_start":316,"line_end":316,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14172493,"byte_end":14172502,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14178301,"byte_end":14178310,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1343},"to":{"krate":0,"index":1999}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179379,"byte_end":14179388,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179538,"byte_end":14179547,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179758,"byte_end":14179767,"line_start":265,"line_end":265,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14179889,"byte_end":14179898,"line_start":271,"line_end":271,"column_start":14,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14182053,"byte_end":14182062,"line_start":323,"line_end":323,"column_start":23,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183009,"byte_end":14183018,"line_start":359,"line_end":359,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183167,"byte_end":14183176,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14183301,"byte_end":14183309,"line_start":376,"line_end":376,"column_start":6,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14184521,"byte_end":14184536,"line_start":417,"line_end":417,"column_start":6,"column_end":21},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\directive.rs","byte_start":14185069,"byte_end":14185080,"line_start":436,"line_end":436,"column_start":6,"column_end":17},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202093,"byte_end":14202103,"line_start":58,"line_end":58,"column_start":13,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2807}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202127,"byte_end":14202137,"line_start":60,"line_end":60,"column_start":20,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14202653,"byte_end":14202663,"line_start":80,"line_end":80,"column_start":14,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14203934,"byte_end":14203944,"line_start":116,"line_end":116,"column_start":21,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14204849,"byte_end":14204854,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14205702,"byte_end":14205707,"line_start":180,"line_end":180,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14205947,"byte_end":14205952,"line_start":190,"line_end":190,"column_start":14,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14207017,"byte_end":14207022,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14207295,"byte_end":14207305,"line_start":230,"line_end":230,"column_start":6,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14208726,"byte_end":14208736,"line_start":265,"line_end":265,"column_start":23,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1409},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209387,"byte_end":14209399,"line_start":281,"line_end":281,"column_start":18,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209656,"byte_end":14209668,"line_start":292,"line_end":292,"column_start":23,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209822,"byte_end":14209834,"line_start":299,"line_end":299,"column_start":21,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14209926,"byte_end":14209938,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210320,"byte_end":14210332,"line_start":324,"line_end":324,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210449,"byte_end":14210461,"line_start":331,"line_end":331,"column_start":13,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2807}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210486,"byte_end":14210498,"line_start":333,"line_end":333,"column_start":21,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210646,"byte_end":14210658,"line_start":340,"line_end":340,"column_start":14,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14210804,"byte_end":14210814,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14211684,"byte_end":14211691,"line_start":371,"line_end":371,"column_start":29,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":9857}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213132,"byte_end":14213142,"line_start":406,"line_end":406,"column_start":23,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213296,"byte_end":14213306,"line_start":413,"line_end":413,"column_start":21,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":3047}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213412,"byte_end":14213422,"line_start":420,"line_end":420,"column_start":20,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":2802}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213539,"byte_end":14213549,"line_start":427,"line_end":427,"column_start":13,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":2807}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213574,"byte_end":14213584,"line_start":429,"line_end":429,"column_start":21,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213732,"byte_end":14213742,"line_start":436,"line_end":436,"column_start":14,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213895,"byte_end":14213902,"line_start":445,"line_end":445,"column_start":16,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14213929,"byte_end":14213936,"line_start":447,"line_end":447,"column_start":23,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1447},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14214072,"byte_end":14214085,"line_start":453,"line_end":453,"column_start":6,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14214452,"byte_end":14214461,"line_start":468,"line_end":468,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\field.rs","byte_start":14215234,"byte_end":14215246,"line_start":503,"line_end":503,"column_start":20,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1110},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14133251,"byte_end":14133260,"line_start":223,"line_end":223,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14149287,"byte_end":14149296,"line_start":642,"line_end":642,"column_start":34,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1453},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14150474,"byte_end":14150483,"line_start":688,"line_end":688,"column_start":27,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1453},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151673,"byte_end":14151682,"line_start":731,"line_end":731,"column_start":18,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1453},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151838,"byte_end":14151847,"line_start":739,"line_end":739,"column_start":21,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1453},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14151950,"byte_end":14151959,"line_start":748,"line_end":748,"column_start":18,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1453},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152083,"byte_end":14152092,"line_start":754,"line_end":754,"column_start":23,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1453},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14152895,"byte_end":14152907,"line_start":783,"line_end":783,"column_start":38,"column_end":50},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1463},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153060,"byte_end":14153072,"line_start":791,"line_end":791,"column_start":30,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1463},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153208,"byte_end":14153220,"line_start":799,"line_end":799,"column_start":23,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1463},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\env\\mod.rs","byte_start":14153442,"byte_end":14153454,"line_start":808,"line_end":808,"column_start":16,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1463},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14261760,"byte_end":14261763,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14263528,"byte_end":14263531,"line_start":110,"line_end":110,"column_start":29,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265148,"byte_end":14265151,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265381,"byte_end":14265384,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14265664,"byte_end":14265666,"line_start":200,"line_end":200,"column_start":15,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14268716,"byte_end":14268718,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1595},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14270831,"byte_end":14270833,"line_start":358,"line_end":358,"column_start":25,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271063,"byte_end":14271065,"line_start":372,"line_end":372,"column_start":30,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271342,"byte_end":14271345,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14271749,"byte_end":14271752,"line_start":402,"line_end":402,"column_start":26,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1602},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14272965,"byte_end":14272968,"line_start":450,"line_end":450,"column_start":22,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1602},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\combinator.rs","byte_start":14273147,"byte_end":14273150,"line_start":462,"line_end":462,"column_start":27,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1602},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14225616,"byte_end":14225622,"line_start":167,"line_end":167,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2558},"to":{"krate":0,"index":1684}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14233477,"byte_end":14233488,"line_start":390,"line_end":390,"column_start":30,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":16,"index":1267},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234493,"byte_end":14234496,"line_start":429,"line_end":429,"column_start":30,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":6312},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234683,"byte_end":14234686,"line_start":435,"line_end":435,"column_start":30,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":421},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14234803,"byte_end":14234811,"line_start":441,"line_end":441,"column_start":15,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14238541,"byte_end":14238549,"line_start":547,"line_end":547,"column_start":28,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1790},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14244801,"byte_end":14244809,"line_start":695,"line_end":695,"column_start":30,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1790},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14245144,"byte_end":14245152,"line_start":711,"line_end":711,"column_start":6,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14249345,"byte_end":14249353,"line_start":819,"line_end":819,"column_start":21,"column_end":29},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1803},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250053,"byte_end":14250061,"line_start":840,"line_end":840,"column_start":22,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1803},"to":{"krate":2,"index":9918}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250297,"byte_end":14250298,"line_start":850,"line_end":850,"column_start":29,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1753},"to":{"krate":0,"index":1684}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250361,"byte_end":14250370,"line_start":854,"line_end":854,"column_start":6,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14250973,"byte_end":14250982,"line_start":882,"line_end":882,"column_start":21,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1809},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14251349,"byte_end":14251358,"line_start":896,"line_end":896,"column_start":22,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1809},"to":{"krate":2,"index":9918}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14251586,"byte_end":14251597,"line_start":906,"line_end":906,"column_start":6,"column_end":17},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14258552,"byte_end":14258574,"line_start":1085,"line_end":1085,"column_start":21,"column_end":43},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\layer_filters\\mod.rs","byte_start":14259892,"byte_end":14259901,"line_start":1124,"line_end":1124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1784},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\level.rs","byte_start":57859,"byte_end":57870,"line_start":11,"line_end":11,"column_start":41,"column_end":52},"kind":{"Impl":{"id":126}},"from":{"krate":16,"index":1267},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14279633,"byte_end":14279640,"line_start":174,"line_end":174,"column_start":6,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14285727,"byte_end":14285734,"line_start":347,"line_end":347,"column_start":31,"column_end":38},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":8007}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286092,"byte_end":14286099,"line_start":360,"line_end":360,"column_start":37,"column_end":44},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":7994}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286329,"byte_end":14286336,"line_start":372,"line_end":372,"column_start":18,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14286584,"byte_end":14286591,"line_start":382,"line_end":382,"column_start":29,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2076},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287071,"byte_end":14287078,"line_start":401,"line_end":401,"column_start":30,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2076},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14287445,"byte_end":14287452,"line_start":415,"line_end":415,"column_start":23,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2076},"to":{"krate":2,"index":7998}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288739,"byte_end":14288747,"line_start":465,"line_end":465,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14288988,"byte_end":14288996,"line_start":474,"line_end":474,"column_start":19,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2089},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289703,"byte_end":14289707,"line_start":502,"line_end":502,"column_start":10,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\targets.rs","byte_start":14289986,"byte_end":14289990,"line_start":513,"line_end":513,"column_start":23,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14297821,"byte_end":14297833,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14298079,"byte_end":14298091,"line_start":62,"line_end":62,"column_start":26,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14298262,"byte_end":14298274,"line_start":71,"line_end":71,"column_start":22,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299517,"byte_end":14299529,"line_start":106,"line_end":106,"column_start":42,"column_end":54},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":7994}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299722,"byte_end":14299734,"line_start":114,"line_end":114,"column_start":36,"column_end":48},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":8007}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14299924,"byte_end":14299936,"line_start":122,"line_end":122,"column_start":26,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2120},"to":{"krate":2,"index":7998}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14300238,"byte_end":14300250,"line_start":137,"line_end":137,"column_start":6,"column_end":18},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14301074,"byte_end":14301089,"line_start":165,"line_end":165,"column_start":6,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14301787,"byte_end":14301802,"line_start":195,"line_end":195,"column_start":14,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":2838}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14303584,"byte_end":14303599,"line_start":239,"line_end":239,"column_start":21,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":2848}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14303718,"byte_end":14303733,"line_start":245,"line_end":245,"column_start":16,"column_end":31},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":1999}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14304434,"byte_end":14304449,"line_start":272,"line_end":272,"column_start":18,"column_end":33},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14304648,"byte_end":14304663,"line_start":282,"line_end":282,"column_start":23,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14305473,"byte_end":14305488,"line_start":314,"line_end":314,"column_start":18,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":12561}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14308240,"byte_end":14308250,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14308568,"byte_end":14308578,"line_start":414,"line_end":414,"column_start":23,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309090,"byte_end":14309100,"line_start":427,"line_end":427,"column_start":28,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2101},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309536,"byte_end":14309546,"line_start":442,"line_end":442,"column_start":57,"column_end":67},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\filter\\directive.rs","byte_start":14309727,"byte_end":14309737,"line_start":450,"line_end":450,"column_start":34,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310507,"byte_end":14310515,"line_start":20,"line_end":20,"column_start":17,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2227},"to":{"krate":2,"index":10130}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14310973,"byte_end":14310983,"line_start":43,"line_end":43,"column_start":10,"column_end":20},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14311502,"byte_end":14311515,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14313640,"byte_end":14313655,"line_start":121,"line_end":121,"column_start":6,"column_end":21},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\extensions.rs","byte_start":14315972,"byte_end":14315987,"line_start":190,"line_end":190,"column_start":21,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2246},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14324210,"byte_end":14324218,"line_start":135,"line_end":135,"column_start":18,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2437},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14325800,"byte_end":14325808,"line_start":182,"line_end":182,"column_start":6,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14326909,"byte_end":14326917,"line_start":220,"line_end":220,"column_start":21,"column_end":29},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2437},"to":{"krate":16,"index":828}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14331989,"byte_end":14331997,"line_start":362,"line_end":362,"column_start":29,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2437},"to":{"krate":0,"index":407}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332350,"byte_end":14332360,"line_start":379,"line_end":379,"column_start":10,"column_end":20},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14332469,"byte_end":14332479,"line_start":385,"line_end":385,"column_start":19,"column_end":29},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2353},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14333542,"byte_end":14333546,"line_start":412,"line_end":412,"column_start":27,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2443},"to":{"krate":0,"index":413}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334240,"byte_end":14334249,"line_start":441,"line_end":441,"column_start":18,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2449},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14334668,"byte_end":14334680,"line_start":448,"line_end":448,"column_start":51,"column_end":63},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2405},"to":{"krate":16,"index":70}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\sharded.rs","byte_start":14335981,"byte_end":14335990,"line_start":486,"line_end":486,"column_start":16,"column_end":25},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2449},"to":{"krate":36,"index":344}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\stack.rs","byte_start":14350805,"byte_end":14350814,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":67249,"byte_end":67254,"line_start":254,"line_end":254,"column_start":17,"column_end":22},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68340,"byte_end":68353,"line_start":280,"line_end":280,"column_start":30,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68708,"byte_end":68721,"line_start":297,"line_end":297,"column_start":32,"column_end":45},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":68925,"byte_end":68930,"line_start":307,"line_end":307,"column_start":26,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2483},"to":{"krate":2,"index":8193}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\registry\\mod.rs","byte_start":69802,"byte_end":69809,"line_start":338,"line_end":338,"column_start":13,"column_end":20},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":150682,"byte_end":150689,"line_start":51,"line_end":51,"column_start":13,"column_end":20},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165293,"byte_end":165300,"line_start":412,"line_end":412,"column_start":13,"column_end":20},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\context.rs","byte_start":165511,"byte_end":165518,"line_start":423,"line_end":423,"column_start":23,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":167849,"byte_end":167856,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":168487,"byte_end":168494,"line_start":94,"line_end":94,"column_start":27,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2543},"to":{"krate":16,"index":828}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":173751,"byte_end":173758,"line_start":242,"line_end":242,"column_start":28,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2543},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":178884,"byte_end":178891,"line_start":377,"line_end":377,"column_start":35,"column_end":42},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2543},"to":{"krate":0,"index":407}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179234,"byte_end":179241,"line_start":393,"line_end":393,"column_start":12,"column_end":19},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":179370,"byte_end":179377,"line_start":402,"line_end":402,"column_start":15,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\layered.rs","byte_start":182651,"byte_end":182658,"line_start":494,"line_end":494,"column_start":30,"column_end":37},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2543},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138130,"byte_end":138140,"line_start":1436,"line_end":1436,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":828},"to":{"krate":0,"index":696}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138158,"byte_end":138164,"line_start":1436,"line_end":1436,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":763},"to":{"krate":0,"index":696}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":138520,"byte_end":138526,"line_start":1455,"line_end":1455,"column_start":25,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":2,"index":46936},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144176,"byte_end":144179,"line_start":1649,"line_end":1649,"column_start":29,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":5,"index":421},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144303,"byte_end":144306,"line_start":1657,"line_end":1657,"column_start":26,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":5,"index":421},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":144439,"byte_end":144442,"line_start":1666,"line_end":1666,"column_start":29,"column_end":32},"kind":{"Impl":{"id":191}},"from":{"krate":5,"index":7429},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148735,"byte_end":148736,"line_start":1786,"line_end":1786,"column_start":47,"column_end":48},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":718},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148778,"byte_end":148779,"line_start":1787,"line_end":1787,"column_start":39,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":720},"to":{"krate":0,"index":696}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148843,"byte_end":148851,"line_start":1791,"line_end":1791,"column_start":34,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2568},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\layer\\mod.rs","byte_start":148861,"byte_end":148869,"line_start":1793,"line_end":1793,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":187931,"byte_end":187932,"line_start":95,"line_end":95,"column_start":31,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":747},"to":{"krate":0,"index":742}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188273,"byte_end":188285,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188547,"byte_end":188559,"line_start":120,"line_end":120,"column_start":21,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":188854,"byte_end":188866,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\util.rs","byte_start":189203,"byte_end":189215,"line_start":149,"line_end":149,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":748},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14356010,"byte_end":14356015,"line_start":113,"line_end":113,"column_start":32,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2753},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14358449,"byte_end":14358454,"line_start":187,"line_end":187,"column_start":40,"column_end":45},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2753},"to":{"krate":0,"index":2558}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14359880,"byte_end":14359885,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14360744,"byte_end":14360750,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14362911,"byte_end":14362917,"line_start":319,"line_end":319,"column_start":22,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2762},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363092,"byte_end":14363097,"line_start":330,"line_end":330,"column_start":6,"column_end":11},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363659,"byte_end":14363664,"line_start":350,"line_end":350,"column_start":23,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\reload.rs","byte_start":14363951,"byte_end":14363956,"line_start":360,"line_end":360,"column_start":23,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2771},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412227,"byte_end":14412232,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14412494,"byte_end":14412499,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14415046,"byte_end":14415051,"line_start":157,"line_end":157,"column_start":18,"column_end":23},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14420304,"byte_end":14420309,"line_start":315,"line_end":315,"column_start":21,"column_end":26},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14429973,"byte_end":14429978,"line_start":577,"line_end":577,"column_start":18,"column_end":23},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431556,"byte_end":14431561,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14431925,"byte_end":14431930,"line_start":638,"line_end":638,"column_start":18,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433033,"byte_end":14433048,"line_start":672,"line_end":672,"column_start":17,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433622,"byte_end":14433637,"line_start":691,"line_end":691,"column_start":32,"column_end":47},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3917},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14433983,"byte_end":14433998,"line_start":701,"line_end":701,"column_start":34,"column_end":49},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3917},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434145,"byte_end":14434160,"line_start":707,"line_end":707,"column_start":27,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3917},"to":{"krate":2,"index":3369}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14434869,"byte_end":14434874,"line_start":732,"line_end":732,"column_start":38,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3900},"to":{"krate":0,"index":674}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14441889,"byte_end":14441899,"line_start":927,"line_end":927,"column_start":31,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442081,"byte_end":14442091,"line_start":933,"line_end":933,"column_start":52,"column_end":62},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3008},"to":{"krate":0,"index":3249}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14442420,"byte_end":14442430,"line_start":947,"line_end":947,"column_start":16,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\fmt_layer.rs","byte_start":14448751,"byte_end":14448758,"line_start":1118,"line_end":1118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548316,"byte_end":14548322,"line_start":135,"line_end":135,"column_start":18,"column_end":24},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3930},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14548427,"byte_end":14548433,"line_start":143,"line_end":143,"column_start":6,"column_end":12},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14549285,"byte_end":14549291,"line_start":169,"line_end":169,"column_start":37,"column_end":43},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4279},"to":{"krate":0,"index":3237}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14554470,"byte_end":14554476,"line_start":337,"line_end":337,"column_start":41,"column_end":47},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3930},"to":{"krate":0,"index":3249}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555076,"byte_end":14555088,"line_start":359,"line_end":359,"column_start":18,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3952},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555152,"byte_end":14555164,"line_start":365,"line_end":365,"column_start":6,"column_end":18},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14555836,"byte_end":14555848,"line_start":387,"line_end":387,"column_start":38,"column_end":50},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3952},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14556159,"byte_end":14556172,"line_start":401,"line_end":401,"column_start":10,"column_end":23},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14557190,"byte_end":14557203,"line_start":440,"line_end":440,"column_start":27,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3943},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559152,"byte_end":14559165,"line_start":500,"line_end":500,"column_start":39,"column_end":52},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3943},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\pretty.rs","byte_start":14559326,"byte_end":14559339,"line_start":507,"line_end":507,"column_start":23,"column_end":36},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3943},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14482045,"byte_end":14482051,"line_start":414,"line_end":414,"column_start":15,"column_end":21},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14486667,"byte_end":14486673,"line_start":547,"line_end":547,"column_start":21,"column_end":27},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":9857}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487054,"byte_end":14487060,"line_start":564,"line_end":564,"column_start":21,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3257},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487349,"byte_end":14487355,"line_start":575,"line_end":575,"column_start":18,"column_end":24},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4279},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14487790,"byte_end":14487796,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14497644,"byte_end":14497650,"line_start":884,"line_end":884,"column_start":37,"column_end":43},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4279},"to":{"krate":0,"index":3237}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14501523,"byte_end":14501529,"line_start":1012,"line_end":1012,"column_start":37,"column_end":43},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4279},"to":{"krate":0,"index":3237}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14505556,"byte_end":14505557,"line_start":1141,"line_end":1141,"column_start":44,"column_end":45},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":3249}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506403,"byte_end":14506416,"line_start":1173,"line_end":1173,"column_start":6,"column_end":19},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506573,"byte_end":14506586,"line_start":1181,"line_end":1181,"column_start":18,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4275},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506682,"byte_end":14506695,"line_start":1187,"line_end":1187,"column_start":38,"column_end":51},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4275},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14506910,"byte_end":14506924,"line_start":1198,"line_end":1198,"column_start":10,"column_end":24},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14507553,"byte_end":14507567,"line_start":1222,"line_end":1222,"column_start":27,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4267},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509538,"byte_end":14509552,"line_start":1283,"line_end":1283,"column_start":53,"column_end":67},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4267},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509661,"byte_end":14509675,"line_start":1289,"line_end":1289,"column_start":37,"column_end":51},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4267},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14509922,"byte_end":14509937,"line_start":1298,"line_end":1298,"column_start":22,"column_end":37},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14510419,"byte_end":14510425,"line_start":1317,"line_end":1317,"column_start":20,"column_end":26},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14511148,"byte_end":14511154,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14512297,"byte_end":14512310,"line_start":1406,"line_end":1406,"column_start":10,"column_end":23},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14512421,"byte_end":14512434,"line_start":1412,"line_end":1412,"column_start":27,"column_end":40},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14513858,"byte_end":14513866,"line_start":1451,"line_end":1451,"column_start":10,"column_end":18},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14514738,"byte_end":14514746,"line_start":1483,"line_end":1483,"column_start":27,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3405},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14515678,"byte_end":14515685,"line_start":1507,"line_end":1507,"column_start":41,"column_end":48},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4330},"to":{"krate":0,"index":169}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516027,"byte_end":14516041,"line_start":1522,"line_end":1522,"column_start":23,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3261},"to":{"krate":16,"index":387}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516357,"byte_end":14516371,"line_start":1533,"line_end":1533,"column_start":42,"column_end":56},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":173}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516546,"byte_end":14516560,"line_start":1542,"line_end":1542,"column_start":26,"column_end":40},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14516755,"byte_end":14516769,"line_start":1551,"line_end":1551,"column_start":28,"column_end":42},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14517354,"byte_end":14517361,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14519150,"byte_end":14519157,"line_start":1623,"line_end":1623,"column_start":16,"column_end":23},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3956},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520066,"byte_end":14520079,"line_start":1657,"line_end":1657,"column_start":6,"column_end":19},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520765,"byte_end":14520778,"line_start":1684,"line_end":1684,"column_start":16,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3455},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14520895,"byte_end":14520908,"line_start":1690,"line_end":1690,"column_start":18,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3455},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\format\\mod.rs","byte_start":14521101,"byte_end":14521114,"line_start":1700,"line_end":1700,"column_start":18,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\datetime.rs","byte_start":14571174,"byte_end":14571182,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3987},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\datetime.rs","byte_start":14571760,"byte_end":14571768,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3987},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562685,"byte_end":14562691,"line_start":109,"line_end":109,"column_start":18,"column_end":24},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562815,"byte_end":14562821,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14562916,"byte_end":14562926,"line_start":123,"line_end":123,"column_start":21,"column_end":31},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4007},"to":{"krate":0,"index":3498}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\time\\mod.rs","byte_start":14563147,"byte_end":14563153,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4022},"to":{"krate":0,"index":3498}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14585472,"byte_end":14585482,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3543},"to":{"krate":0,"index":3548}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14601967,"byte_end":14601968,"line_start":673,"line_end":673,"column_start":35,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3567},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602139,"byte_end":14602142,"line_start":685,"line_end":685,"column_start":32,"column_end":35},"kind":{"Impl":{"id":276}},"from":{"krate":5,"index":6312},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602314,"byte_end":14602318,"line_start":695,"line_end":695,"column_start":38,"column_end":42},"kind":{"Impl":{"id":277}},"from":{"krate":1,"index":3093},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602460,"byte_end":14602470,"line_start":704,"line_end":704,"column_start":6,"column_end":16},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602619,"byte_end":14602629,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4036},"to":{"krate":1,"index":4566}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14602899,"byte_end":14602909,"line_start":723,"line_end":723,"column_start":29,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4036},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603053,"byte_end":14603066,"line_start":733,"line_end":733,"column_start":6,"column_end":19},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603425,"byte_end":14603438,"line_start":747,"line_end":747,"column_start":21,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3559},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14603655,"byte_end":14603668,"line_start":755,"line_end":755,"column_start":29,"column_end":42},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3559},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604000,"byte_end":14604005,"line_start":771,"line_end":771,"column_start":32,"column_end":37},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604410,"byte_end":14604415,"line_start":790,"line_end":790,"column_start":32,"column_end":37},"kind":{"Impl":{"id":285}},"from":{"krate":1,"index":7822},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14604638,"byte_end":14604654,"line_start":801,"line_end":801,"column_start":27,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4216},"to":{"krate":1,"index":4566}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14605318,"byte_end":14605330,"line_start":833,"line_end":833,"column_start":26,"column_end":38},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4042},"to":{"krate":1,"index":4566}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14606484,"byte_end":14606498,"line_start":879,"line_end":879,"column_start":9,"column_end":23},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607041,"byte_end":14607055,"line_start":901,"line_end":901,"column_start":29,"column_end":43},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3563},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607272,"byte_end":14607284,"line_start":913,"line_end":913,"column_start":9,"column_end":21},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14607752,"byte_end":14607764,"line_start":926,"line_end":926,"column_start":48,"column_end":60},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4077},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608265,"byte_end":14608277,"line_start":946,"line_end":946,"column_start":9,"column_end":21},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14608745,"byte_end":14608757,"line_start":959,"line_end":959,"column_start":48,"column_end":60},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4100},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609260,"byte_end":14609270,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14609829,"byte_end":14609839,"line_start":996,"line_end":996,"column_start":35,"column_end":45},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4123},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610367,"byte_end":14610370,"line_start":1020,"line_end":1020,"column_start":12,"column_end":15},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14610758,"byte_end":14610761,"line_start":1033,"line_end":1033,"column_start":35,"column_end":38},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4185},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14611422,"byte_end":14611425,"line_start":1061,"line_end":1061,"column_start":26,"column_end":29},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4185},"to":{"krate":1,"index":4566}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612271,"byte_end":14612277,"line_start":1099,"line_end":1099,"column_start":12,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14612549,"byte_end":14612555,"line_start":1111,"line_end":1111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":3543}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14613325,"byte_end":14613334,"line_start":1138,"line_end":1138,"column_start":23,"column_end":32},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4225},"to":{"krate":1,"index":4566}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\writer.rs","byte_start":14614934,"byte_end":14614935,"line_start":1202,"line_end":1202,"column_start":35,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3711},"to":{"krate":0,"index":3548}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14377507,"byte_end":14377517,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378228,"byte_end":14378238,"line_start":358,"line_end":358,"column_start":18,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4235},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14378397,"byte_end":14378407,"line_start":366,"line_end":366,"column_start":47,"column_end":57},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4235},"to":{"krate":16,"index":828}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380545,"byte_end":14380555,"line_start":450,"line_end":450,"column_start":41,"column_end":51},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4235},"to":{"krate":0,"index":407}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14380881,"byte_end":14380898,"line_start":463,"line_end":463,"column_start":18,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":3128}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14381082,"byte_end":14381099,"line_start":472,"line_end":472,"column_start":18,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14382895,"byte_end":14382903,"line_start":519,"line_end":519,"column_start":72,"column_end":80},"kind":{"Impl":{"id":309}},"from":{"krate":16,"index":962},"to":{"krate":2,"index":3056}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14383376,"byte_end":14383393,"line_start":532,"line_end":532,"column_start":21,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14392568,"byte_end":14392585,"line_start":791,"line_end":791,"column_start":15,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393186,"byte_end":14393203,"line_start":811,"line_end":811,"column_start":15,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tracing-subscriber-0.3.15\\src\\fmt\\mod.rs","byte_start":14393592,"byte_end":14393609,"line_start":822,"line_end":822,"column_start":18,"column_end":35},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}}]}