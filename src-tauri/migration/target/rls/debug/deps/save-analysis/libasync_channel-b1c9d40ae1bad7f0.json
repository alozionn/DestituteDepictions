{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_channel","--edition=2018","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b1c9d40ae1bad7f0","-C","extra-filename=-b1c9d40ae1bad7f0","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--extern","concurrent_queue=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libconcurrent_queue-cfb9a7fdf5052c8c.rmeta","--extern","event_listener=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libevent_listener-cb4c3fc75f948b05.rmeta","--extern","futures_core=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libfutures_core-a4de0f13e4c5bd89.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libasync_channel-b1c9d40ae1bad7f0.rmeta"},"prelude":{"crate_id":{"name":"async_channel","disambiguator":[14681050470317218993,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":16,"id":{"name":"concurrent_queue","disambiguator":[4202749932227842576,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":17,"id":{"name":"cache_padded","disambiguator":[352611526439087220,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":18,"id":{"name":"event_listener","disambiguator":[217965115064713488,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","num":19,"id":{"name":"futures_core","disambiguator":[2748732991061193384,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":0,"byte_end":32184,"line_start":1,"line_end":1120,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":0,"byte_end":32184,"line_start":1,"line_end":1120,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":228},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":142},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":265},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":281},{"krate":0,"index":287},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":205}],"decl_id":null,"docs":" An async multi-producer multi-consumer channel, where each message can be received by only\n one of all existing consumers.","sig":null,"attributes":[{"value":"/ An async multi-producer multi-consumer channel, where each message can be received by only","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ one of all existing consumers.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":95,"byte_end":129,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":130,"byte_end":133,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ There are two kinds of channels:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":134,"byte_end":170,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":171,"byte_end":174,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ 1. [Bounded][`bounded()`] channel with limited capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":175,"byte_end":235,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ 2. [Unbounded][`unbounded()`] channel with unlimited capacity.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":236,"byte_end":302,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":303,"byte_end":306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A channel has the [`Sender`] and [`Receiver`] side. Both sides are cloneable and can be shared","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":307,"byte_end":405,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ among multiple threads.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":406,"byte_end":433,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":434,"byte_end":437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`]s or all [`Receiver`]s are dropped, the channel becomes closed. When a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":438,"byte_end":531,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ channel is closed, no more messages can be sent, but remaining messages can still be received.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":532,"byte_end":630,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":631,"byte_end":634,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Sender::close()`] or","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":635,"byte_end":712,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ [`Receiver::close()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":713,"byte_end":739,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":740,"byte_end":743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":744,"byte_end":758,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":759,"byte_end":762,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":763,"byte_end":770,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":771,"byte_end":815,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ let (s, r) = async_channel::unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":816,"byte_end":860,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":861,"byte_end":864,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(\"Hello\").await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":865,"byte_end":911,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(r.recv().await, Ok(\"Hello\"));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":912,"byte_end":956,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":957,"byte_end":966,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":967,"byte_end":974,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":976,"byte_end":999,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":1000,"byte_end":1071,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3126,"byte_end":3133,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"bounded","qualname":"::bounded","value":"fn bounded<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded channel.","sig":null,"attributes":[{"value":"/ Creates a bounded channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2507,"byte_end":2537,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2538,"byte_end":2541,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The created channel has space to hold at most `cap` messages at a time.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2542,"byte_end":2617,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2618,"byte_end":2621,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2622,"byte_end":2634,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Capacity must be a positive number. If `cap` is zero, this function will panic.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2639,"byte_end":2722,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2723,"byte_end":2726,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2727,"byte_end":2741,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2742,"byte_end":2745,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2746,"byte_end":2753,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2754,"byte_end":2798,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/ use async_channel::{bounded, TryRecvError, TrySendError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2799,"byte_end":2860,"line_start":98,"line_end":98,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2861,"byte_end":2864,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2865,"byte_end":2893,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2894,"byte_end":2897,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(10).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2898,"byte_end":2939,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.try_send(20), Err(TrySendError::Full(20)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":2940,"byte_end":3000,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3001,"byte_end":3004,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await, Ok(10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3005,"byte_end":3044,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3045,"byte_end":3100,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3101,"byte_end":3110,"line_start":107,"line_end":107,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3111,"byte_end":3118,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4171,"byte_end":4180,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::unbounded","value":"fn unbounded<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded channel.","sig":null,"attributes":[{"value":"/ Creates an unbounded channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3654,"byte_end":3687,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3688,"byte_end":3691,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The created channel can hold an unlimited number of messages.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3692,"byte_end":3757,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3758,"byte_end":3761,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3762,"byte_end":3776,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3777,"byte_end":3780,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3781,"byte_end":3788,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3789,"byte_end":3833,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ use async_channel::{unbounded, TryRecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3834,"byte_end":3883,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3884,"byte_end":3887,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3888,"byte_end":3917,"line_start":141,"line_end":141,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3918,"byte_end":3921,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.send(10).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3922,"byte_end":3963,"line_start":143,"line_end":143,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.send(20).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":3964,"byte_end":4005,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4006,"byte_end":4009,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await, Ok(10));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4010,"byte_end":4049,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.recv().await, Ok(20));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4050,"byte_end":4089,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4090,"byte_end":4145,"line_start":148,"line_end":148,"column_start":1,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4146,"byte_end":4155,"line_start":149,"line_end":149,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4156,"byte_end":4163,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4910,"byte_end":4916,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"Sender","qualname":"::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":75}],"decl_id":null,"docs":" The sending side of a channel.","sig":null,"attributes":[{"value":"/ The sending side of a channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4640,"byte_end":4674,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4675,"byte_end":4678,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Senders can be cloned and shared among threads. When all senders associated with a channel are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4679,"byte_end":4777,"line_start":173,"line_end":173,"column_start":1,"column_end":99}},{"value":"/ dropped, the channel becomes closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4778,"byte_end":4818,"line_start":174,"line_end":174,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4819,"byte_end":4822,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Sender::close()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4823,"byte_end":4898,"line_start":176,"line_end":176,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5504,"byte_end":5512,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message into the channel.","sig":null,"attributes":[{"value":"/ Attempts to send a message into the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5008,"byte_end":5056,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5061,"byte_end":5064,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ If the channel is full or closed, this method returns an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5069,"byte_end":5136,"line_start":185,"line_end":185,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5141,"byte_end":5144,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5149,"byte_end":5163,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5168,"byte_end":5171,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5176,"byte_end":5183,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, TrySendError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5188,"byte_end":5235,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5240,"byte_end":5243,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5248,"byte_end":5276,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5281,"byte_end":5284,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.try_send(1), Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5289,"byte_end":5327,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(s.try_send(2), Err(TrySendError::Full(2)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5332,"byte_end":5390,"line_start":195,"line_end":195,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5395,"byte_end":5398,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5403,"byte_end":5415,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.try_send(3), Err(TrySendError::Closed(3)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5420,"byte_end":5480,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":5485,"byte_end":5492,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6766,"byte_end":6770,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send(&Self, T) -> Send<, T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into the channel.","sig":null,"attributes":[{"value":"/ Sends a message into the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6210,"byte_end":6247,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6252,"byte_end":6255,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method waits until there is space for a message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6260,"byte_end":6341,"line_start":220,"line_end":220,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6346,"byte_end":6349,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6354,"byte_end":6413,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6418,"byte_end":6421,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6426,"byte_end":6440,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6445,"byte_end":6448,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6453,"byte_end":6460,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6465,"byte_end":6509,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, SendError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6514,"byte_end":6560,"line_start":228,"line_end":228,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6565,"byte_end":6568,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6573,"byte_end":6602,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6607,"byte_end":6610,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6615,"byte_end":6655,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6660,"byte_end":6672,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.send(2).await, Err(SendError(2)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6677,"byte_end":6728,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6733,"byte_end":6742,"line_start":235,"line_end":235,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6747,"byte_end":6754,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7897,"byte_end":7910,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"send_blocking","qualname":"<Sender<T>>::send_blocking","value":"fn send_blocking(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into this channel using the blocking strategy.","sig":null,"attributes":[{"value":"/ Sends a message into this channel using the blocking strategy.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6921,"byte_end":6987,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":6992,"byte_end":6995,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will block until there is room.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7000,"byte_end":7071,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ If the channel is closed, this method returns an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7076,"byte_end":7135,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7140,"byte_end":7143,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7148,"byte_end":7162,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7167,"byte_end":7170,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Rather than using asynchronous waiting, like the [`send`](Self::send) method,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7175,"byte_end":7256,"line_start":252,"line_end":252,"column_start":5,"column_end":86}},{"value":"/ this method will block the current thread until the message is sent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7261,"byte_end":7333,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7338,"byte_end":7341,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7346,"byte_end":7423,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/ to be used such that a channel can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7428,"byte_end":7521,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7526,"byte_end":7601,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7606,"byte_end":7609,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7614,"byte_end":7628,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7633,"byte_end":7636,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7641,"byte_end":7648,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{unbounded, SendError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7653,"byte_end":7699,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7704,"byte_end":7707,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7712,"byte_end":7741,"line_start":264,"line_end":264,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7746,"byte_end":7749,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send_blocking(1), Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7754,"byte_end":7797,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7802,"byte_end":7814,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(s.send_blocking(2), Err(SendError(2)));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7819,"byte_end":7873,"line_start":268,"line_end":268,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7878,"byte_end":7885,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8583,"byte_end":8588,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"close","qualname":"<Sender<T>>::close","value":"fn close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":7997,"byte_end":8020,"line_start":274,"line_end":274,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8025,"byte_end":8028,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this call has closed the channel and it was not closed already.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8033,"byte_end":8118,"line_start":276,"line_end":276,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8123,"byte_end":8126,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The remaining messages can still be received.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8131,"byte_end":8180,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8185,"byte_end":8188,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8193,"byte_end":8207,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8212,"byte_end":8215,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8220,"byte_end":8227,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8232,"byte_end":8276,"line_start":283,"line_end":283,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8281,"byte_end":8327,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8332,"byte_end":8335,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8340,"byte_end":8369,"line_start":286,"line_end":286,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8374,"byte_end":8414,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert!(s.close());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8419,"byte_end":8442,"line_start":288,"line_end":288,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8447,"byte_end":8450,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8455,"byte_end":8493,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8498,"byte_end":8545,"line_start":291,"line_end":291,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8550,"byte_end":8559,"line_start":292,"line_end":292,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8564,"byte_end":8571,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9013,"byte_end":9022,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8646,"byte_end":8690,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8695,"byte_end":8698,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8703,"byte_end":8717,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8722,"byte_end":8725,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8730,"byte_end":8737,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8742,"byte_end":8786,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8791,"byte_end":8837,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8842,"byte_end":8845,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8850,"byte_end":8885,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/ assert!(!s.is_closed());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8890,"byte_end":8918,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8923,"byte_end":8926,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ drop(r);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8931,"byte_end":8943,"line_start":309,"line_end":309,"column_start":5,"column_end":17}},{"value":"/ assert!(s.is_closed());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8948,"byte_end":8975,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8980,"byte_end":8989,"line_start":311,"line_end":311,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":8994,"byte_end":9001,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9443,"byte_end":9451,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Sender<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9090,"byte_end":9133,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9138,"byte_end":9141,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9146,"byte_end":9160,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9165,"byte_end":9168,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9173,"byte_end":9180,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9185,"byte_end":9229,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9234,"byte_end":9267,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9272,"byte_end":9275,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9280,"byte_end":9309,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9314,"byte_end":9317,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9322,"byte_end":9348,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9353,"byte_end":9373,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9378,"byte_end":9405,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9410,"byte_end":9419,"line_start":330,"line_end":330,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9424,"byte_end":9431,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9916,"byte_end":9923,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Sender<T>>::is_full","value":"fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9518,"byte_end":9560,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9565,"byte_end":9568,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Unbounded channels are never full.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9573,"byte_end":9611,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9616,"byte_end":9619,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9624,"byte_end":9638,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9643,"byte_end":9646,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9651,"byte_end":9658,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9663,"byte_end":9707,"line_start":343,"line_end":343,"column_start":5,"column_end":49}},{"value":"/ use async_channel::bounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9712,"byte_end":9743,"line_start":344,"line_end":344,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9748,"byte_end":9751,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9756,"byte_end":9784,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9789,"byte_end":9792,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert!(!s.is_full());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9797,"byte_end":9823,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9828,"byte_end":9848,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ assert!(s.is_full());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9853,"byte_end":9878,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9883,"byte_end":9892,"line_start":351,"line_end":351,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9897,"byte_end":9904,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10375,"byte_end":10378,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"len","qualname":"<Sender<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":9989,"byte_end":10039,"line_start":357,"line_end":357,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10044,"byte_end":10047,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10052,"byte_end":10066,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10071,"byte_end":10074,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10079,"byte_end":10086,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10091,"byte_end":10135,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10140,"byte_end":10173,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10178,"byte_end":10181,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10186,"byte_end":10215,"line_start":365,"line_end":365,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.len(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10220,"byte_end":10247,"line_start":366,"line_end":366,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10252,"byte_end":10255,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10260,"byte_end":10280,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10285,"byte_end":10305,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(s.len(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10310,"byte_end":10337,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10342,"byte_end":10351,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10356,"byte_end":10363,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10790,"byte_end":10798,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"fn capacity(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity if it's bounded.","sig":null,"attributes":[{"value":"/ Returns the channel capacity if it's bounded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10441,"byte_end":10490,"line_start":377,"line_end":377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10495,"byte_end":10498,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10503,"byte_end":10517,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10522,"byte_end":10525,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10530,"byte_end":10537,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, unbounded};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10542,"byte_end":10586,"line_start":382,"line_end":382,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10591,"byte_end":10594,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded::<i32>(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10599,"byte_end":10634,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.capacity(), Some(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10639,"byte_end":10677,"line_start":385,"line_end":385,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10682,"byte_end":10685,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<i32>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10690,"byte_end":10726,"line_start":387,"line_end":387,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s.capacity(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10731,"byte_end":10766,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10771,"byte_end":10778,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11268,"byte_end":11282,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of receivers for the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10874,"byte_end":10926,"line_start":394,"line_end":394,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10931,"byte_end":10934,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10939,"byte_end":10953,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10958,"byte_end":10961,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10966,"byte_end":10973,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":10978,"byte_end":11022,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11027,"byte_end":11060,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11065,"byte_end":11068,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11073,"byte_end":11108,"line_start":402,"line_end":402,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.receiver_count(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11113,"byte_end":11151,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11156,"byte_end":11159,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let r2 = r.clone();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11164,"byte_end":11187,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(s.receiver_count(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11192,"byte_end":11230,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11235,"byte_end":11244,"line_start":407,"line_end":407,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11249,"byte_end":11256,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11759,"byte_end":11771,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"sender_count","qualname":"<Sender<T>>::sender_count","value":"fn sender_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of senders for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of senders for the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11371,"byte_end":11421,"line_start":413,"line_end":413,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11426,"byte_end":11429,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11434,"byte_end":11448,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11453,"byte_end":11456,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11461,"byte_end":11468,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11473,"byte_end":11517,"line_start":418,"line_end":418,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11522,"byte_end":11555,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11560,"byte_end":11563,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11568,"byte_end":11603,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.sender_count(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11608,"byte_end":11644,"line_start":422,"line_end":422,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11649,"byte_end":11652,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let s2 = s.clone();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11657,"byte_end":11680,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(s.sender_count(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11685,"byte_end":11721,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11726,"byte_end":11735,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11740,"byte_end":11747,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11892,"byte_end":11896,"line_start":434,"line_end":434,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12166,"byte_end":12169,"line_start":443,"line_end":443,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12305,"byte_end":12310,"line_start":449,"line_end":449,"column_start":8,"column_end":13},"name":"clone","qualname":"<Sender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Sender<T>","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12987,"byte_end":12995,"line_start":471,"line_end":471,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" The receiving side of a channel.","sig":null,"attributes":[{"value":"/ The receiving side of a channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12659,"byte_end":12695,"line_start":463,"line_end":463,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12696,"byte_end":12699,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ Receivers can be cloned and shared among threads. When all receivers associated with a channel","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12700,"byte_end":12798,"line_start":465,"line_end":465,"column_start":1,"column_end":99}},{"value":"/ are dropped, the channel becomes closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12799,"byte_end":12843,"line_start":466,"line_end":466,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12844,"byte_end":12847,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ The channel can also be closed manually by calling [`Receiver::close()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12848,"byte_end":12925,"line_start":468,"line_end":468,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12926,"byte_end":12929,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ Receivers implement the [`Stream`] trait.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12930,"byte_end":12975,"line_start":470,"line_end":470,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13806,"byte_end":13814,"line_start":500,"line_end":500,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv(&Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message from the channel.","sig":null,"attributes":[{"value":"/ Attempts to receive a message from the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13193,"byte_end":13244,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13249,"byte_end":13252,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, or empty and closed, this method returns an error.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13257,"byte_end":13336,"line_start":482,"line_end":482,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13341,"byte_end":13344,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13349,"byte_end":13363,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13368,"byte_end":13371,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13376,"byte_end":13383,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13388,"byte_end":13432,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, TryRecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13437,"byte_end":13486,"line_start":488,"line_end":488,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13491,"byte_end":13494,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13499,"byte_end":13528,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13533,"byte_end":13573,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13578,"byte_end":13581,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.try_recv(), Ok(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13586,"byte_end":13622,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Empty));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13627,"byte_end":13682,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13687,"byte_end":13690,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13695,"byte_end":13707,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(r.try_recv(), Err(TryRecvError::Closed));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13712,"byte_end":13768,"line_start":497,"line_end":497,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13773,"byte_end":13782,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13787,"byte_end":13794,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14999,"byte_end":15003,"line_start":536,"line_end":536,"column_start":12,"column_end":16},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn recv(&Self) -> Recv<, T>","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel.","sig":null,"attributes":[{"value":"/ Receives a message from the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14342,"byte_end":14382,"line_start":514,"line_end":514,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14387,"byte_end":14390,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method waits until there is a message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14395,"byte_end":14467,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14472,"byte_end":14475,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method receives a message or returns an error if there are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14480,"byte_end":14573,"line_start":518,"line_end":518,"column_start":5,"column_end":98}},{"value":"/ no more messages.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14578,"byte_end":14599,"line_start":519,"line_end":519,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14604,"byte_end":14607,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14612,"byte_end":14626,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14631,"byte_end":14634,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14639,"byte_end":14646,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14651,"byte_end":14695,"line_start":524,"line_end":524,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14700,"byte_end":14746,"line_start":525,"line_end":525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14751,"byte_end":14754,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14759,"byte_end":14788,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14793,"byte_end":14796,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14801,"byte_end":14841,"line_start":529,"line_end":529,"column_start":5,"column_end":45}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14846,"byte_end":14858,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14863,"byte_end":14866,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14871,"byte_end":14909,"line_start":532,"line_end":532,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14914,"byte_end":14961,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14966,"byte_end":14975,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":14980,"byte_end":14987,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16209,"byte_end":16222,"line_start":571,"line_end":571,"column_start":12,"column_end":25},"name":"recv_blocking","qualname":"<Receiver<T>>::recv_blocking","value":"fn recv_blocking(&Self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel using the blocking strategy.","sig":null,"attributes":[{"value":"/ Receives a message from the channel using the blocking strategy.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15120,"byte_end":15188,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15193,"byte_end":15196,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method waits until there is a message.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15201,"byte_end":15273,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ If the channel is closed, this method receives a message or returns an error if there are","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15278,"byte_end":15371,"line_start":546,"line_end":546,"column_start":5,"column_end":98}},{"value":"/ no more messages.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15376,"byte_end":15397,"line_start":547,"line_end":547,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15402,"byte_end":15405,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Blocking","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15410,"byte_end":15424,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15429,"byte_end":15432,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Rather than using asynchronous waiting, like the [`recv`](Self::recv) method,","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15437,"byte_end":15518,"line_start":551,"line_end":551,"column_start":5,"column_end":86}},{"value":"/ this method will block the current thread until the message is sent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15523,"byte_end":15595,"line_start":552,"line_end":552,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15600,"byte_end":15603,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This method should not be used in an asynchronous context. It is intended","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15608,"byte_end":15685,"line_start":554,"line_end":554,"column_start":5,"column_end":82}},{"value":"/ to be used such that a channel can be used in both asynchronous and synchronous contexts.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15690,"byte_end":15783,"line_start":555,"line_end":555,"column_start":5,"column_end":98}},{"value":"/ Calling this method in an asynchronous context may result in deadlocks.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15788,"byte_end":15863,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15868,"byte_end":15871,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15876,"byte_end":15890,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15895,"byte_end":15898,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15903,"byte_end":15910,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15915,"byte_end":15961,"line_start":561,"line_end":561,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15966,"byte_end":15969,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":15974,"byte_end":16003,"line_start":563,"line_end":563,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16008,"byte_end":16011,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.send_blocking(1), Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16016,"byte_end":16059,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16064,"byte_end":16076,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16081,"byte_end":16084,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv_blocking(), Ok(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16089,"byte_end":16130,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(r.recv_blocking(), Err(RecvError));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16135,"byte_end":16185,"line_start":569,"line_end":569,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16190,"byte_end":16197,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16880,"byte_end":16885,"line_start":595,"line_end":595,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Closes the channel.","sig":null,"attributes":[{"value":"/ Closes the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16294,"byte_end":16317,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16322,"byte_end":16325,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if this call has closed the channel and it was not closed already.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16330,"byte_end":16415,"line_start":577,"line_end":577,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16420,"byte_end":16423,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The remaining messages can still be received.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16428,"byte_end":16477,"line_start":579,"line_end":579,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16482,"byte_end":16485,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16490,"byte_end":16504,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16509,"byte_end":16512,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16517,"byte_end":16524,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16529,"byte_end":16573,"line_start":584,"line_end":584,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16578,"byte_end":16624,"line_start":585,"line_end":585,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16629,"byte_end":16632,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16637,"byte_end":16666,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(s.send(1).await, Ok(()));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16671,"byte_end":16711,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16716,"byte_end":16719,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ assert!(r.close());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16724,"byte_end":16747,"line_start":590,"line_end":590,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.recv().await, Ok(1));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16752,"byte_end":16790,"line_start":591,"line_end":591,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(r.recv().await, Err(RecvError));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16795,"byte_end":16842,"line_start":592,"line_end":592,"column_start":5,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16847,"byte_end":16856,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16861,"byte_end":16868,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17310,"byte_end":17319,"line_start":614,"line_end":614,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Receiver<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16943,"byte_end":16987,"line_start":599,"line_end":599,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":16992,"byte_end":16995,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17000,"byte_end":17014,"line_start":601,"line_end":601,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17019,"byte_end":17022,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17027,"byte_end":17034,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17039,"byte_end":17083,"line_start":604,"line_end":604,"column_start":5,"column_end":49}},{"value":"/ use async_channel::{unbounded, RecvError};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17088,"byte_end":17134,"line_start":605,"line_end":605,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17139,"byte_end":17142,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17147,"byte_end":17182,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ assert!(!r.is_closed());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17187,"byte_end":17215,"line_start":608,"line_end":608,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17220,"byte_end":17223,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ drop(s);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17228,"byte_end":17240,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/ assert!(r.is_closed());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17245,"byte_end":17272,"line_start":611,"line_end":611,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17277,"byte_end":17286,"line_start":612,"line_end":612,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17291,"byte_end":17298,"line_start":613,"line_end":613,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17740,"byte_end":17748,"line_start":633,"line_end":633,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Receiver<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17387,"byte_end":17430,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17435,"byte_end":17438,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17443,"byte_end":17457,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17462,"byte_end":17465,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17470,"byte_end":17477,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17482,"byte_end":17526,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17531,"byte_end":17564,"line_start":624,"line_end":624,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17569,"byte_end":17572,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17577,"byte_end":17606,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17611,"byte_end":17614,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17619,"byte_end":17645,"line_start":628,"line_end":628,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17650,"byte_end":17670,"line_start":629,"line_end":629,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17675,"byte_end":17702,"line_start":630,"line_end":630,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17707,"byte_end":17716,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17721,"byte_end":17728,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18213,"byte_end":18220,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Receiver<T>>::is_full","value":"fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17815,"byte_end":17857,"line_start":637,"line_end":637,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17862,"byte_end":17865,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Unbounded channels are never full.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17870,"byte_end":17908,"line_start":639,"line_end":639,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17913,"byte_end":17916,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17921,"byte_end":17935,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17940,"byte_end":17943,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17948,"byte_end":17955,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":17960,"byte_end":18004,"line_start":644,"line_end":644,"column_start":5,"column_end":49}},{"value":"/ use async_channel::bounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18009,"byte_end":18040,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18045,"byte_end":18048,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded(1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18053,"byte_end":18081,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18086,"byte_end":18089,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ assert!(!r.is_full());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18094,"byte_end":18120,"line_start":649,"line_end":649,"column_start":5,"column_end":31}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18125,"byte_end":18145,"line_start":650,"line_end":650,"column_start":5,"column_end":25}},{"value":"/ assert!(r.is_full());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18150,"byte_end":18175,"line_start":651,"line_end":651,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18180,"byte_end":18189,"line_start":652,"line_end":652,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18194,"byte_end":18201,"line_start":653,"line_end":653,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18672,"byte_end":18675,"line_start":674,"line_end":674,"column_start":12,"column_end":15},"name":"len","qualname":"<Receiver<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18286,"byte_end":18336,"line_start":658,"line_end":658,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18341,"byte_end":18344,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18349,"byte_end":18363,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18368,"byte_end":18371,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18376,"byte_end":18383,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18388,"byte_end":18432,"line_start":663,"line_end":663,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18437,"byte_end":18470,"line_start":664,"line_end":664,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18475,"byte_end":18478,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18483,"byte_end":18512,"line_start":666,"line_end":666,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18517,"byte_end":18544,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18549,"byte_end":18552,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18557,"byte_end":18577,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18582,"byte_end":18602,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(r.len(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18607,"byte_end":18634,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18639,"byte_end":18648,"line_start":672,"line_end":672,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18653,"byte_end":18660,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19087,"byte_end":19095,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Receiver<T>>::capacity","value":"fn capacity(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity if it's bounded.","sig":null,"attributes":[{"value":"/ Returns the channel capacity if it's bounded.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18738,"byte_end":18787,"line_start":678,"line_end":678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18792,"byte_end":18795,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18800,"byte_end":18814,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18819,"byte_end":18822,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18827,"byte_end":18834,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ use async_channel::{bounded, unbounded};","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18839,"byte_end":18883,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18888,"byte_end":18891,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = bounded::<i32>(5);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18896,"byte_end":18931,"line_start":685,"line_end":685,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.capacity(), Some(5));","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18936,"byte_end":18974,"line_start":686,"line_end":686,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18979,"byte_end":18982,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<i32>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":18987,"byte_end":19023,"line_start":688,"line_end":688,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(r.capacity(), None);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19028,"byte_end":19063,"line_start":689,"line_end":689,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19068,"byte_end":19075,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19565,"byte_end":19579,"line_start":710,"line_end":710,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Receiver<T>>::receiver_count","value":"fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of receivers for the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19171,"byte_end":19223,"line_start":695,"line_end":695,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19228,"byte_end":19231,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19236,"byte_end":19250,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19255,"byte_end":19258,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19263,"byte_end":19270,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19275,"byte_end":19319,"line_start":700,"line_end":700,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19324,"byte_end":19357,"line_start":701,"line_end":701,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19362,"byte_end":19365,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19370,"byte_end":19405,"line_start":703,"line_end":703,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.receiver_count(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19410,"byte_end":19448,"line_start":704,"line_end":704,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19453,"byte_end":19456,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ let r2 = r.clone();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19461,"byte_end":19484,"line_start":706,"line_end":706,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.receiver_count(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19489,"byte_end":19527,"line_start":707,"line_end":707,"column_start":5,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19532,"byte_end":19541,"line_start":708,"line_end":708,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19546,"byte_end":19553,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20056,"byte_end":20068,"line_start":729,"line_end":729,"column_start":12,"column_end":24},"name":"sender_count","qualname":"<Receiver<T>>::sender_count","value":"fn sender_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of senders for the channel.","sig":null,"attributes":[{"value":"/ Returns the number of senders for the channel.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19668,"byte_end":19718,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19723,"byte_end":19726,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19731,"byte_end":19745,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19750,"byte_end":19753,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19758,"byte_end":19765,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures_lite::future::block_on(async {","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19770,"byte_end":19814,"line_start":719,"line_end":719,"column_start":5,"column_end":49}},{"value":"/ use async_channel::unbounded;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19819,"byte_end":19852,"line_start":720,"line_end":720,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19857,"byte_end":19860,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = unbounded::<()>();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19865,"byte_end":19900,"line_start":722,"line_end":722,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.sender_count(), 1);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19905,"byte_end":19941,"line_start":723,"line_end":723,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19946,"byte_end":19949,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ let s2 = s.clone();","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19954,"byte_end":19977,"line_start":725,"line_end":725,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(r.sender_count(), 2);","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":19982,"byte_end":20018,"line_start":726,"line_end":726,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20023,"byte_end":20032,"line_start":727,"line_end":727,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20037,"byte_end":20044,"line_start":728,"line_end":728,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20191,"byte_end":20195,"line_start":735,"line_end":735,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20471,"byte_end":20474,"line_start":744,"line_end":744,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20614,"byte_end":20619,"line_start":750,"line_end":750,"column_start":8,"column_end":13},"name":"clone","qualname":"<Receiver<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Receiver<T>","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":21064,"byte_end":21073,"line_start":768,"line_end":768,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Receiver<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":19,"index":96},"children":[],"decl_id":{"krate":19,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22740,"byte_end":22753,"line_start":809,"line_end":809,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Receiver<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":19,"index":110},"children":[],"decl_id":{"krate":19,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22996,"byte_end":23005,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"SendError","qualname":"::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from [`Sender::send()`].","sig":null,"attributes":[{"value":"/ An error returned from [`Sender::send()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22852,"byte_end":22898,"line_start":814,"line_end":814,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22899,"byte_end":22902,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ Received because the channel is closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22903,"byte_end":22946,"line_start":816,"line_end":816,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23009,"byte_end":23014,"line_start":818,"line_end":818,"column_start":25,"column_end":30},"name":"0","qualname":"::SendError::0","value":"T","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23103,"byte_end":23113,"line_start":822,"line_end":822,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the message that couldn't be sent.\n","sig":null,"attributes":[{"value":"/ Unwraps the message that couldn't be sent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23045,"byte_end":23091,"line_start":821,"line_end":821,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23238,"byte_end":23241,"line_start":830,"line_end":830,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23385,"byte_end":23388,"line_start":836,"line_end":836,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23665,"byte_end":23669,"line_start":845,"line_end":845,"column_start":5,"column_end":9},"name":"Full","qualname":"::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" The channel is full but not closed.\n","sig":null,"attributes":[{"value":"/ The channel is full but not closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23621,"byte_end":23660,"line_start":844,"line_end":844,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23670,"byte_end":23671,"line_start":845,"line_end":845,"column_start":10,"column_end":11},"name":"0","qualname":"::TrySendError::Full::0","value":"T","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23710,"byte_end":23716,"line_start":848,"line_end":848,"column_start":5,"column_end":11},"name":"Closed","qualname":"::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" The channel is closed.\n","sig":null,"attributes":[{"value":"/ The channel is closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23679,"byte_end":23705,"line_start":847,"line_end":847,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23717,"byte_end":23718,"line_start":848,"line_end":848,"column_start":12,"column_end":13},"name":"0","qualname":"::TrySendError::Closed::0","value":"T","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23599,"byte_end":23611,"line_start":843,"line_end":843,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::TrySendError","value":"enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233}],"decl_id":null,"docs":" An error returned from [`Sender::try_send()`].\n","sig":null,"attributes":[{"value":"/ An error returned from [`Sender::try_send()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23501,"byte_end":23551,"line_start":841,"line_end":841,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23812,"byte_end":23822,"line_start":853,"line_end":853,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the message that couldn't be sent.\n","sig":null,"attributes":[{"value":"/ Unwraps the message that couldn't be sent.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23754,"byte_end":23800,"line_start":852,"line_end":852,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24029,"byte_end":24036,"line_start":861,"line_end":861,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full but not closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23960,"byte_end":24017,"line_start":860,"line_end":860,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24241,"byte_end":24250,"line_start":869,"line_end":869,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TrySendError<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24185,"byte_end":24229,"line_start":868,"line_end":868,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24490,"byte_end":24493,"line_start":880,"line_end":880,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24763,"byte_end":24766,"line_start":889,"line_end":889,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25187,"byte_end":25196,"line_start":901,"line_end":901,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from [`Receiver::recv()`].","sig":null,"attributes":[{"value":"/ An error returned from [`Receiver::recv()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25024,"byte_end":25072,"line_start":897,"line_end":897,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25073,"byte_end":25076,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/ Received because the channel is empty and closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25077,"byte_end":25130,"line_start":899,"line_end":899,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25276,"byte_end":25279,"line_start":906,"line_end":906,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25576,"byte_end":25581,"line_start":915,"line_end":915,"column_start":5,"column_end":10},"name":"Empty","qualname":"::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The channel is empty but not closed.\n","sig":null,"attributes":[{"value":"/ The channel is empty but not closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25531,"byte_end":25571,"line_start":914,"line_end":914,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25629,"byte_end":25635,"line_start":918,"line_end":918,"column_start":5,"column_end":11},"name":"Closed","qualname":"::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" The channel is empty and closed.\n","sig":null,"attributes":[{"value":"/ The channel is empty and closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25588,"byte_end":25624,"line_start":917,"line_end":917,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25512,"byte_end":25524,"line_start":913,"line_end":913,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::TryRecvError","value":"enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":268}],"decl_id":null,"docs":" An error returned from [`Receiver::try_recv()`].\n","sig":null,"attributes":[{"value":"/ An error returned from [`Receiver::try_recv()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25405,"byte_end":25457,"line_start":911,"line_end":911,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25734,"byte_end":25742,"line_start":923,"line_end":923,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TryRecvError>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty but not closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty but not closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25664,"byte_end":25722,"line_start":922,"line_end":922,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25952,"byte_end":25961,"line_start":931,"line_end":931,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<TryRecvError>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty and closed.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty and closed.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25886,"byte_end":25940,"line_start":930,"line_end":930,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26186,"byte_end":26189,"line_start":942,"line_end":942,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9914},"children":[],"decl_id":{"krate":2,"index":9915},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26598,"byte_end":26602,"line_start":953,"line_end":953,"column_start":12,"column_end":16},"name":"Send","qualname":"::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"decl_id":null,"docs":" A future returned by [`Sender::send()`].\n","sig":null,"attributes":[{"value":"/ A future returned by [`Sender::send()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26457,"byte_end":26501,"line_start":950,"line_end":950,"column_start":1,"column_end":45}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26519,"byte_end":26586,"line_start":952,"line_end":952,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28627,"byte_end":28631,"line_start":1012,"line_end":1012,"column_start":8,"column_end":12},"name":"poll","qualname":"<Send as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28910,"byte_end":28914,"line_start":1020,"line_end":1020,"column_start":12,"column_end":16},"name":"Recv","qualname":"::Recv","value":"Recv {  }","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" A future returned by [`Receiver::recv()`].\n","sig":null,"attributes":[{"value":"/ A future returned by [`Receiver::recv()`].","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28767,"byte_end":28813,"line_start":1017,"line_end":1017,"column_start":1,"column_end":47}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28831,"byte_end":28898,"line_start":1019,"line_end":1019,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":31022,"byte_end":31026,"line_start":1079,"line_end":1079,"column_start":8,"column_end":12},"name":"poll","qualname":"<Recv as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13335},"children":[],"decl_id":{"krate":2,"index":13337},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":31296,"byte_end":31303,"line_start":1087,"line_end":1087,"column_start":10,"column_end":17},"name":"Context","qualname":"::Strategy::Context","value":"type Context;","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Context needed to be provided to the `poll` method.\n","sig":null,"attributes":[{"value":"/ Context needed to be provided to the `poll` method.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":31231,"byte_end":31286,"line_start":1086,"line_end":1086,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":1957,"byte_end":1964,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4992,"byte_end":4998,"line_start":182,"line_end":182,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11873,"byte_end":11879,"line_start":433,"line_end":433,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12147,"byte_end":12153,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12286,"byte_end":12292,"line_start":448,"line_end":448,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13175,"byte_end":13183,"line_start":479,"line_end":479,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20170,"byte_end":20178,"line_start":734,"line_end":734,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20450,"byte_end":20458,"line_start":743,"line_end":743,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20593,"byte_end":20601,"line_start":749,"line_end":749,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":21023,"byte_end":21031,"line_start":765,"line_end":765,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22719,"byte_end":22727,"line_start":808,"line_end":808,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23026,"byte_end":23035,"line_start":820,"line_end":820,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23176,"byte_end":23185,"line_start":827,"line_end":827,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23216,"byte_end":23225,"line_start":829,"line_end":829,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23363,"byte_end":23372,"line_start":835,"line_end":835,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23732,"byte_end":23744,"line_start":851,"line_end":851,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24422,"byte_end":24434,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24465,"byte_end":24477,"line_start":879,"line_end":879,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24738,"byte_end":24750,"line_start":888,"line_end":888,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25221,"byte_end":25230,"line_start":903,"line_end":903,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25257,"byte_end":25266,"line_start":905,"line_end":905,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25645,"byte_end":25657,"line_start":921,"line_end":921,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26125,"byte_end":26137,"line_start":939,"line_end":939,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26164,"byte_end":26176,"line_start":941,"line_end":941,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26711,"byte_end":26715,"line_start":959,"line_end":959,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28522,"byte_end":28526,"line_start":1007,"line_end":1007,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28561,"byte_end":28565,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":29017,"byte_end":29021,"line_start":1025,"line_end":1025,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":29045,"byte_end":29049,"line_start":1027,"line_end":1027,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":30960,"byte_end":30964,"line_start":1076,"line_end":1076,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":31662,"byte_end":31673,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":32030,"byte_end":32038,"line_start":1113,"line_end":1113,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":1957,"byte_end":1964,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":4992,"byte_end":4998,"line_start":182,"line_end":182,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":11873,"byte_end":11879,"line_start":433,"line_end":433,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12147,"byte_end":12153,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":12286,"byte_end":12292,"line_start":448,"line_end":448,"column_start":19,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":13175,"byte_end":13183,"line_start":479,"line_end":479,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20170,"byte_end":20178,"line_start":734,"line_end":734,"column_start":18,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3393}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20450,"byte_end":20458,"line_start":743,"line_end":743,"column_start":24,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":20593,"byte_end":20601,"line_start":749,"line_end":749,"column_start":19,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2772}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":21023,"byte_end":21031,"line_start":765,"line_end":765,"column_start":20,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":19,"index":96}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":22719,"byte_end":22727,"line_start":808,"line_end":808,"column_start":47,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":19,"index":110}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23026,"byte_end":23035,"line_start":820,"line_end":820,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23176,"byte_end":23185,"line_start":827,"line_end":827,"column_start":26,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23216,"byte_end":23225,"line_start":829,"line_end":829,"column_start":24,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23363,"byte_end":23372,"line_start":835,"line_end":835,"column_start":26,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":208},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":23732,"byte_end":23744,"line_start":851,"line_end":851,"column_start":9,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24422,"byte_end":24434,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24465,"byte_end":24477,"line_start":879,"line_end":879,"column_start":24,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":9907}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":24738,"byte_end":24750,"line_start":888,"line_end":888,"column_start":26,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25221,"byte_end":25230,"line_start":903,"line_end":903,"column_start":23,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":252},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25257,"byte_end":25266,"line_start":905,"line_end":905,"column_start":23,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":252},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":25645,"byte_end":25657,"line_start":921,"line_end":921,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26125,"byte_end":26137,"line_start":939,"line_end":939,"column_start":23,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":265},"to":{"krate":1,"index":2555}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26164,"byte_end":26176,"line_start":941,"line_end":941,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":265},"to":{"krate":2,"index":9914}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":26711,"byte_end":26715,"line_start":959,"line_end":959,"column_start":13,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28522,"byte_end":28526,"line_start":1007,"line_end":1007,"column_start":23,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":28561,"byte_end":28565,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":29017,"byte_end":29021,"line_start":1025,"line_end":1025,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":3191}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":29045,"byte_end":29049,"line_start":1027,"line_end":1027,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":30960,"byte_end":30964,"line_start":1076,"line_end":1076,"column_start":24,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":13335}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":31662,"byte_end":31673,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-channel-1.7.1\\src\\lib.rs","byte_start":32030,"byte_end":32038,"line_start":1113,"line_end":1113,"column_start":19,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":203},"to":{"krate":0,"index":192}}]}