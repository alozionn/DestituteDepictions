{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1","program":"C:\\Users\\Andrei\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","unicode_categories","C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6960efaa85cf5618","-C","extra-filename=-6960efaa85cf5618","--out-dir","d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","-L","dependency=d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Andrei\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Programming\\DestituteDepictions\\src-tauri\\migration\\target\\rls\\debug\\deps\\libunicode_categories-6960efaa85cf5618.rmeta"},"prelude":{"crate_id":{"name":"unicode_categories","disambiguator":[10582009910110358403,0]},"crate_root":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src","external_crates":[{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8526938853280630398,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5339428516588690145,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[263601903543822771,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7343628043363739070,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14796848713614703829,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2248661955232720858,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6100837883140397065,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6763488366047601591,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[79841370634592438,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14720684392801985393,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":11,"id":{"name":"adler","disambiguator":[1205045013435031913,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9970316023349964410,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[17496692589544781456,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17700294896468204783,0]}},{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8939469696884238691,0]}}],"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":12477,"line_start":1,"line_end":421,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":12477,"line_start":1,"line_end":421,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":32},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" `unicode_categories` is a crate that adds extensions to the\n `char` primitive type that allow for a char to be queried\n about whether or not it belongs to a particular Unicode category.","sig":null,"attributes":[{"value":"/ `unicode_categories` is a crate that adds extensions to the","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ `char` primitive type that allow for a char to be queried","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":64,"byte_end":125,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"/ about whether or not it belongs to a particular Unicode category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":126,"byte_end":195,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":196,"byte_end":199,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ These extensions exist on the `UnicodeCategories` trait, so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":200,"byte_end":263,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ by importing it the extensions will be active on all chars:","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":264,"byte_end":327,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":328,"byte_end":331,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":332,"byte_end":339,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use unicode_categories::UnicodeCategories;","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":340,"byte_end":386,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":387,"byte_end":390,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ assert!('a'.is_letter_lowercase());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":391,"byte_end":430,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ assert!('A'.is_letter_uppercase());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":431,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ assert!('\\n'.is_other_control());","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":471,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":509,"byte_end":516,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":517,"byte_end":520,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `UnicodeCategories` is the only item contained exported","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":521,"byte_end":580,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ by this crate and contains all of methods that allow","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":581,"byte_end":637,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/ for category queries.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":638,"byte_end":663,"line_start":18,"line_end":18,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":688,"byte_end":705,"line_start":22,"line_end":22,"column_start":11,"column_end":28},"name":"UnicodeCategories","qualname":"::UnicodeCategories","value":"UnicodeCategories: Sized + Copy","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":827,"byte_end":843,"line_start":26,"line_end":26,"column_start":8,"column_end":24},"name":"is_other_control","qualname":"::UnicodeCategories::is_other_control","value":"fn is_other_control(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns `true` if this value is a member\n of the \"Other, Control\" (Cc) category.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this value is a member","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":728,"byte_end":772,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ of the \"Other, Control\" (Cc) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":777,"byte_end":819,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":962,"byte_end":977,"line_start":30,"line_end":30,"column_start":8,"column_end":23},"name":"is_other_format","qualname":"::UnicodeCategories::is_other_format","value":"fn is_other_format(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns `true` if this value is a member\n of the \"Other, Format\" (Cf) category.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this value is a member","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":864,"byte_end":908,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/ of the \"Other, Format\" (Cf) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":913,"byte_end":954,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1099,"byte_end":1119,"line_start":34,"line_end":34,"column_start":8,"column_end":28},"name":"is_other_private_use","qualname":"::UnicodeCategories::is_other_private_use","value":"fn is_other_private_use(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member\n of the \"Other, Private Use\" (Co) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":998,"byte_end":1040,"line_start":32,"line_end":32,"column_start":5,"column_end":47}},{"value":"/ of the \"Other, Private Use\" (Co) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1045,"byte_end":1091,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1240,"byte_end":1259,"line_start":38,"line_end":38,"column_start":8,"column_end":27},"name":"is_letter_lowercase","qualname":"::UnicodeCategories::is_letter_lowercase","value":"fn is_letter_lowercase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member\n of the \"Letter, Lowercase\" (Ll) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1140,"byte_end":1182,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ of the \"Letter, Lowercase\" (Ll) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1187,"byte_end":1232,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1379,"byte_end":1397,"line_start":42,"line_end":42,"column_start":8,"column_end":26},"name":"is_letter_modifier","qualname":"::UnicodeCategories::is_letter_modifier","value":"fn is_letter_modifier(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Letter, Modifier\" (Lm) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1280,"byte_end":1325,"line_start":40,"line_end":40,"column_start":5,"column_end":50}},{"value":"/ the \"Letter, Modifier\" (Lm) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1330,"byte_end":1371,"line_start":41,"line_end":41,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1514,"byte_end":1529,"line_start":46,"line_end":46,"column_start":8,"column_end":23},"name":"is_letter_other","qualname":"::UnicodeCategories::is_letter_other","value":"fn is_letter_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Letter, Other\" (Lo) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1418,"byte_end":1463,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/ the \"Letter, Other\" (Lo) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1468,"byte_end":1506,"line_start":45,"line_end":45,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1650,"byte_end":1669,"line_start":50,"line_end":50,"column_start":8,"column_end":27},"name":"is_letter_titlecase","qualname":"::UnicodeCategories::is_letter_titlecase","value":"fn is_letter_titlecase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Letter, Titlecase\" (Lt) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1550,"byte_end":1595,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/ the \"Letter, Titlecase\" (Lt) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1600,"byte_end":1642,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1790,"byte_end":1809,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"is_letter_uppercase","qualname":"::UnicodeCategories::is_letter_uppercase","value":"fn is_letter_uppercase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Letter, Uppercase\" (Lu) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1690,"byte_end":1735,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/ the \"Letter, Uppercase\" (Lu) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1740,"byte_end":1782,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1936,"byte_end":1961,"line_start":58,"line_end":58,"column_start":8,"column_end":33},"name":"is_mark_spacing_combining","qualname":"::UnicodeCategories::is_mark_spacing_combining","value":"fn is_mark_spacing_combining(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Mark, Spacing Combining\" (Mc) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1830,"byte_end":1875,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/ the \"Mark, Spacing Combining\" (Mc) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1880,"byte_end":1928,"line_start":57,"line_end":57,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2080,"byte_end":2097,"line_start":62,"line_end":62,"column_start":8,"column_end":25},"name":"is_mark_enclosing","qualname":"::UnicodeCategories::is_mark_enclosing","value":"fn is_mark_enclosing(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Mark, Enclosing\" (Me) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":1982,"byte_end":2027,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/ the \"Mark, Enclosing\" (Me) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2032,"byte_end":2072,"line_start":61,"line_end":61,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2217,"byte_end":2235,"line_start":66,"line_end":66,"column_start":8,"column_end":26},"name":"is_mark_nonspacing","qualname":"::UnicodeCategories::is_mark_nonspacing","value":"fn is_mark_nonspacing(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Mark, Nonspacing\" (Mn) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2118,"byte_end":2163,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/ the \"Mark, Nonspacing\" (Mn) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2168,"byte_end":2209,"line_start":65,"line_end":65,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2360,"byte_end":2383,"line_start":70,"line_end":70,"column_start":8,"column_end":31},"name":"is_number_decimal_digit","qualname":"::UnicodeCategories::is_number_decimal_digit","value":"fn is_number_decimal_digit(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Number, Decimal Digit\" (Nd) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2256,"byte_end":2301,"line_start":68,"line_end":68,"column_start":5,"column_end":50}},{"value":"/ the \"Number, Decimal Digit\" (Nd) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2306,"byte_end":2352,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2501,"byte_end":2517,"line_start":74,"line_end":74,"column_start":8,"column_end":24},"name":"is_number_letter","qualname":"::UnicodeCategories::is_number_letter","value":"fn is_number_letter(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Number, Letter\" (Nl) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2404,"byte_end":2449,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/ the \"Number, Letter\" (Nl) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2454,"byte_end":2493,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2634,"byte_end":2649,"line_start":78,"line_end":78,"column_start":8,"column_end":23},"name":"is_number_other","qualname":"::UnicodeCategories::is_number_other","value":"fn is_number_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Number, Other\" (No) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2538,"byte_end":2583,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/ the \"Number, Other\" (No) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2588,"byte_end":2626,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2775,"byte_end":2799,"line_start":82,"line_end":82,"column_start":8,"column_end":32},"name":"is_punctuation_connector","qualname":"::UnicodeCategories::is_punctuation_connector","value":"fn is_punctuation_connector(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Connector\" (Pc) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2670,"byte_end":2715,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Connector\" (Pc) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2720,"byte_end":2767,"line_start":81,"line_end":81,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2920,"byte_end":2939,"line_start":86,"line_end":86,"column_start":8,"column_end":27},"name":"is_punctuation_dash","qualname":"::UnicodeCategories::is_punctuation_dash","value":"fn is_punctuation_dash(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Dash\" (Pd) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2820,"byte_end":2865,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Dash\" (Pd) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2870,"byte_end":2912,"line_start":85,"line_end":85,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3061,"byte_end":3081,"line_start":90,"line_end":90,"column_start":8,"column_end":28},"name":"is_punctuation_close","qualname":"::UnicodeCategories::is_punctuation_close","value":"fn is_punctuation_close(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Close\" (Pe) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":2960,"byte_end":3005,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Close\" (Pe) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3010,"byte_end":3053,"line_start":89,"line_end":89,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3209,"byte_end":3235,"line_start":94,"line_end":94,"column_start":8,"column_end":34},"name":"is_punctuation_final_quote","qualname":"::UnicodeCategories::is_punctuation_final_quote","value":"fn is_punctuation_final_quote(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Final Quote\" (Pf) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3102,"byte_end":3147,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Final Quote\" (Pf) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3152,"byte_end":3201,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3365,"byte_end":3393,"line_start":98,"line_end":98,"column_start":8,"column_end":36},"name":"is_punctuation_initial_quote","qualname":"::UnicodeCategories::is_punctuation_initial_quote","value":"fn is_punctuation_initial_quote(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Initial Quote\" (Pi) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3256,"byte_end":3301,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Initial Quote\" (Pi) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3306,"byte_end":3357,"line_start":97,"line_end":97,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3515,"byte_end":3535,"line_start":102,"line_end":102,"column_start":8,"column_end":28},"name":"is_punctuation_other","qualname":"::UnicodeCategories::is_punctuation_other","value":"fn is_punctuation_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Other\" (Po) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3414,"byte_end":3459,"line_start":100,"line_end":100,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Other\" (Po) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3464,"byte_end":3507,"line_start":101,"line_end":101,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3656,"byte_end":3675,"line_start":106,"line_end":106,"column_start":8,"column_end":27},"name":"is_punctuation_open","qualname":"::UnicodeCategories::is_punctuation_open","value":"fn is_punctuation_open(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Punctuation, Open\" (Ps) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3556,"byte_end":3601,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/ the \"Punctuation, Open\" (Ps) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3606,"byte_end":3648,"line_start":105,"line_end":105,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3795,"byte_end":3813,"line_start":110,"line_end":110,"column_start":8,"column_end":26},"name":"is_symbol_currency","qualname":"::UnicodeCategories::is_symbol_currency","value":"fn is_symbol_currency(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Symbol, Currency\" (Sc) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3696,"byte_end":3741,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ the \"Symbol, Currency\" (Sc) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3746,"byte_end":3787,"line_start":109,"line_end":109,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3933,"byte_end":3951,"line_start":114,"line_end":114,"column_start":8,"column_end":26},"name":"is_symbol_modifier","qualname":"::UnicodeCategories::is_symbol_modifier","value":"fn is_symbol_modifier(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Symbol, Modifier\" (Sk) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3834,"byte_end":3879,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/ the \"Symbol, Modifier\" (Sk) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3884,"byte_end":3925,"line_start":113,"line_end":113,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4067,"byte_end":4081,"line_start":118,"line_end":118,"column_start":8,"column_end":22},"name":"is_symbol_math","qualname":"::UnicodeCategories::is_symbol_math","value":"fn is_symbol_math(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Symbol, Math\" (Sm) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":3972,"byte_end":4017,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/ the \"Symbol, Math\" (Sm) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4022,"byte_end":4059,"line_start":117,"line_end":117,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4198,"byte_end":4213,"line_start":122,"line_end":122,"column_start":8,"column_end":23},"name":"is_symbol_other","qualname":"::UnicodeCategories::is_symbol_other","value":"fn is_symbol_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Symbol, Other\" (So) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4102,"byte_end":4147,"line_start":120,"line_end":120,"column_start":5,"column_end":50}},{"value":"/ the \"Symbol, Other\" (So) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4152,"byte_end":4190,"line_start":121,"line_end":121,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4332,"byte_end":4349,"line_start":126,"line_end":126,"column_start":8,"column_end":25},"name":"is_separator_line","qualname":"::UnicodeCategories::is_separator_line","value":"fn is_separator_line(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Separator, Line\" (Zl) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4234,"byte_end":4279,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ the \"Separator, Line\" (Zl) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4284,"byte_end":4324,"line_start":125,"line_end":125,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4473,"byte_end":4495,"line_start":130,"line_end":130,"column_start":8,"column_end":30},"name":"is_separator_paragraph","qualname":"::UnicodeCategories::is_separator_paragraph","value":"fn is_separator_paragraph(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Separator, Paragraph\" (Zp) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4370,"byte_end":4415,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ the \"Separator, Paragraph\" (Zp) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4420,"byte_end":4465,"line_start":129,"line_end":129,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4615,"byte_end":4633,"line_start":134,"line_end":134,"column_start":8,"column_end":26},"name":"is_separator_space","qualname":"::UnicodeCategories::is_separator_space","value":"fn is_separator_space(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n the \"Separator, Space\" (Zs) category.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4516,"byte_end":4561,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/ the \"Separator, Space\" (Zs) category.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4566,"byte_end":4607,"line_start":133,"line_end":133,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4848,"byte_end":4856,"line_start":141,"line_end":141,"column_start":8,"column_end":16},"name":"is_other","qualname":"::UnicodeCategories::is_other","value":"fn is_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n a \"Other\" category: Cc, Cf, Cn, or Co.\n Surrogates cannot be `chars` in Rust, so\n they are not included.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4654,"byte_end":4699,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"/ a \"Other\" category: Cc, Cf, Cn, or Co.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4704,"byte_end":4746,"line_start":137,"line_end":137,"column_start":5,"column_end":47}},{"value":"/ Surrogates cannot be `chars` in Rust, so","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4751,"byte_end":4795,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ they are not included.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4800,"byte_end":4826,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4831,"byte_end":4840,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5120,"byte_end":5129,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"is_letter","qualname":"::UnicodeCategories::is_letter","value":"fn is_letter(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of\n a \"Letter\" category: Lc, Ll, Lm, Lo, Lt, or Lu.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":4997,"byte_end":5042,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/ a \"Letter\" category: Lc, Ll, Lm, Lo, Lt, or Lu.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5047,"byte_end":5098,"line_start":148,"line_end":148,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5103,"byte_end":5112,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5464,"byte_end":5471,"line_start":161,"line_end":161,"column_start":8,"column_end":15},"name":"is_mark","qualname":"::UnicodeCategories::is_mark","value":"fn is_mark(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of a\n \"Mark\" category: Mc, Me, or Mn.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5355,"byte_end":5402,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/ \"Mark\" category: Mc, Me, or Mn.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5407,"byte_end":5442,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5447,"byte_end":5456,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5732,"byte_end":5741,"line_start":170,"line_end":170,"column_start":8,"column_end":17},"name":"is_number","qualname":"::UnicodeCategories::is_number","value":"fn is_number(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of a\n \"Number\" category: Nd, Nl, or No.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5621,"byte_end":5668,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ \"Number\" category: Nd, Nl, or No.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5673,"byte_end":5710,"line_start":168,"line_end":168,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5715,"byte_end":5724,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6017,"byte_end":6031,"line_start":179,"line_end":179,"column_start":8,"column_end":22},"name":"is_punctuation","qualname":"::UnicodeCategories::is_punctuation","value":"fn is_punctuation(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of a\n \"Punctuation\" category: Pc, Pd, Pe, Pf, Pi, Po, or Ps.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5885,"byte_end":5932,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ \"Punctuation\" category: Pc, Pd, Pe, Pf, Pi, Po, or Ps.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":5937,"byte_end":5995,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6000,"byte_end":6009,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6527,"byte_end":6536,"line_start":193,"line_end":193,"column_start":8,"column_end":17},"name":"is_symbol","qualname":"::UnicodeCategories::is_symbol","value":"fn is_symbol(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of a\n \"Symbol\" category: Sc, Sk, Sm, or So.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6412,"byte_end":6459,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/ \"Symbol\" category: Sc, Sk, Sm, or So.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6464,"byte_end":6505,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6510,"byte_end":6519,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6828,"byte_end":6840,"line_start":203,"line_end":203,"column_start":8,"column_end":20},"name":"is_separator","qualname":"::UnicodeCategories::is_separator","value":"fn is_separator(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns true if this value is a member of a\n \"Separator\" category: Zl, Zp, or Zs.\n","sig":null,"attributes":[{"value":"/ Returns true if this value is a member of a","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6714,"byte_end":6761,"line_start":200,"line_end":200,"column_start":5,"column_end":52}},{"value":"/ \"Separator\" category: Zl, Zp, or Zs.","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6766,"byte_end":6806,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":6811,"byte_end":6820,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7155,"byte_end":7171,"line_start":216,"line_end":216,"column_start":8,"column_end":24},"name":"is_other_control","qualname":"<char as UnicodeCategories>::is_other_control","value":"fn is_other_control(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":33},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7138,"byte_end":7147,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7273,"byte_end":7288,"line_start":221,"line_end":221,"column_start":8,"column_end":23},"name":"is_other_format","qualname":"<char as UnicodeCategories>::is_other_format","value":"fn is_other_format(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":34},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7256,"byte_end":7265,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7389,"byte_end":7409,"line_start":226,"line_end":226,"column_start":8,"column_end":28},"name":"is_other_private_use","qualname":"<char as UnicodeCategories>::is_other_private_use","value":"fn is_other_private_use(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":35},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7372,"byte_end":7381,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7797,"byte_end":7816,"line_start":239,"line_end":239,"column_start":8,"column_end":27},"name":"is_letter_lowercase","qualname":"<char as UnicodeCategories>::is_letter_lowercase","value":"fn is_letter_lowercase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":36},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7780,"byte_end":7789,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7922,"byte_end":7940,"line_start":244,"line_end":244,"column_start":8,"column_end":26},"name":"is_letter_modifier","qualname":"<char as UnicodeCategories>::is_letter_modifier","value":"fn is_letter_modifier(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":37},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":7905,"byte_end":7914,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8044,"byte_end":8059,"line_start":249,"line_end":249,"column_start":8,"column_end":23},"name":"is_letter_other","qualname":"<char as UnicodeCategories>::is_letter_other","value":"fn is_letter_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":38},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8027,"byte_end":8036,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8867,"byte_end":8886,"line_start":272,"line_end":272,"column_start":8,"column_end":27},"name":"is_letter_titlecase","qualname":"<char as UnicodeCategories>::is_letter_titlecase","value":"fn is_letter_titlecase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":39},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8850,"byte_end":8859,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8991,"byte_end":9010,"line_start":277,"line_end":277,"column_start":8,"column_end":27},"name":"is_letter_uppercase","qualname":"<char as UnicodeCategories>::is_letter_uppercase","value":"fn is_letter_uppercase(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":8974,"byte_end":8983,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9115,"byte_end":9140,"line_start":282,"line_end":282,"column_start":8,"column_end":33},"name":"is_mark_spacing_combining","qualname":"<char as UnicodeCategories>::is_mark_spacing_combining","value":"fn is_mark_spacing_combining(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":41},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9098,"byte_end":9107,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9249,"byte_end":9266,"line_start":287,"line_end":287,"column_start":8,"column_end":25},"name":"is_mark_enclosing","qualname":"<char as UnicodeCategories>::is_mark_enclosing","value":"fn is_mark_enclosing(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":42},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9232,"byte_end":9241,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9369,"byte_end":9387,"line_start":292,"line_end":292,"column_start":8,"column_end":26},"name":"is_mark_nonspacing","qualname":"<char as UnicodeCategories>::is_mark_nonspacing","value":"fn is_mark_nonspacing(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9352,"byte_end":9361,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9491,"byte_end":9514,"line_start":297,"line_end":297,"column_start":8,"column_end":31},"name":"is_number_decimal_digit","qualname":"<char as UnicodeCategories>::is_number_decimal_digit","value":"fn is_number_decimal_digit(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":44},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9474,"byte_end":9483,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9623,"byte_end":9639,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"is_number_letter","qualname":"<char as UnicodeCategories>::is_number_letter","value":"fn is_number_letter(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9606,"byte_end":9615,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9741,"byte_end":9756,"line_start":307,"line_end":307,"column_start":8,"column_end":23},"name":"is_number_other","qualname":"<char as UnicodeCategories>::is_number_other","value":"fn is_number_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9724,"byte_end":9733,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9857,"byte_end":9881,"line_start":312,"line_end":312,"column_start":8,"column_end":32},"name":"is_punctuation_connector","qualname":"<char as UnicodeCategories>::is_punctuation_connector","value":"fn is_punctuation_connector(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":47},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9840,"byte_end":9849,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9991,"byte_end":10010,"line_start":317,"line_end":317,"column_start":8,"column_end":27},"name":"is_punctuation_dash","qualname":"<char as UnicodeCategories>::is_punctuation_dash","value":"fn is_punctuation_dash(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":48},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":9974,"byte_end":9983,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10115,"byte_end":10135,"line_start":322,"line_end":322,"column_start":8,"column_end":28},"name":"is_punctuation_close","qualname":"<char as UnicodeCategories>::is_punctuation_close","value":"fn is_punctuation_close(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":49},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10098,"byte_end":10107,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10241,"byte_end":10267,"line_start":327,"line_end":327,"column_start":8,"column_end":34},"name":"is_punctuation_final_quote","qualname":"<char as UnicodeCategories>::is_punctuation_final_quote","value":"fn is_punctuation_final_quote(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10224,"byte_end":10233,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10379,"byte_end":10407,"line_start":332,"line_end":332,"column_start":8,"column_end":36},"name":"is_punctuation_initial_quote","qualname":"<char as UnicodeCategories>::is_punctuation_initial_quote","value":"fn is_punctuation_initial_quote(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10362,"byte_end":10371,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10521,"byte_end":10541,"line_start":337,"line_end":337,"column_start":8,"column_end":28},"name":"is_punctuation_other","qualname":"<char as UnicodeCategories>::is_punctuation_other","value":"fn is_punctuation_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":52},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10504,"byte_end":10513,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10647,"byte_end":10666,"line_start":342,"line_end":342,"column_start":8,"column_end":27},"name":"is_punctuation_open","qualname":"<char as UnicodeCategories>::is_punctuation_open","value":"fn is_punctuation_open(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":53},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10630,"byte_end":10639,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10771,"byte_end":10789,"line_start":347,"line_end":347,"column_start":8,"column_end":26},"name":"is_symbol_currency","qualname":"<char as UnicodeCategories>::is_symbol_currency","value":"fn is_symbol_currency(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":54},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10754,"byte_end":10763,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10893,"byte_end":10911,"line_start":352,"line_end":352,"column_start":8,"column_end":26},"name":"is_symbol_modifier","qualname":"<char as UnicodeCategories>::is_symbol_modifier","value":"fn is_symbol_modifier(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":55},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10876,"byte_end":10885,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11015,"byte_end":11029,"line_start":357,"line_end":357,"column_start":8,"column_end":22},"name":"is_symbol_math","qualname":"<char as UnicodeCategories>::is_symbol_math","value":"fn is_symbol_math(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":56},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":10998,"byte_end":11007,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11129,"byte_end":11144,"line_start":362,"line_end":362,"column_start":8,"column_end":23},"name":"is_symbol_other","qualname":"<char as UnicodeCategories>::is_symbol_other","value":"fn is_symbol_other(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":57},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11112,"byte_end":11121,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11245,"byte_end":11262,"line_start":367,"line_end":367,"column_start":8,"column_end":25},"name":"is_separator_line","qualname":"<char as UnicodeCategories>::is_separator_line","value":"fn is_separator_line(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":58},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11228,"byte_end":11237,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11365,"byte_end":11387,"line_start":372,"line_end":372,"column_start":8,"column_end":30},"name":"is_separator_paragraph","qualname":"<char as UnicodeCategories>::is_separator_paragraph","value":"fn is_separator_paragraph(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":59},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11348,"byte_end":11357,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11495,"byte_end":11513,"line_start":377,"line_end":377,"column_start":8,"column_end":26},"name":"is_separator_space","qualname":"<char as UnicodeCategories>::is_separator_space","value":"fn is_separator_space(Self) -> bool","parent":{"krate":0,"index":32},"children":[],"decl_id":{"krate":0,"index":60},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":11478,"byte_end":11487,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":708,"byte_end":713,"line_start":22,"line_end":22,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":32}},{"span":{"file_name":"C:\\Users\\Andrei\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\unicode_categories-0.1.1\\src\\lib.rs","byte_start":716,"byte_end":720,"line_start":22,"line_end":22,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3160},"to":{"krate":0,"index":32}}]}